-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity quant_top_do_quant is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    i_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    i_stream_V_empty_n : IN STD_LOGIC;
    i_stream_V_read : OUT STD_LOGIC;
    o_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_stream_V_full_n : IN STD_LOGIC;
    o_stream_V_write : OUT STD_LOGIC;
    this_b_read : IN STD_LOGIC_VECTOR (31 downto 0);
    this_table_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    this_table_ce0 : OUT STD_LOGIC;
    this_table_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    this_table_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    this_table_ce1 : OUT STD_LOGIC;
    this_table_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of quant_top_do_quant is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_24C0 : STD_LOGIC_VECTOR (13 downto 0) := "10010011000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln54_reg_953 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln54_reg_953_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_154 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln54_reg_953_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_185 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln54_fu_189_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln54_reg_948 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln54_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_reg_953_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_reg_953_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_reg_953_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_2_reg_957 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln145_3_reg_962 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln67_fu_239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_reg_967 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_1_fu_248_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_1_reg_972 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_2_fu_256_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_2_reg_977 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_3_fu_264_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln67_3_reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv7_reg_987 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv7_s_reg_992 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv7_1_reg_997 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal conv7_1_1_reg_1002 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_table_load_reg_1017 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_table_load_1_reg_1022 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_158_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln69_fu_429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln69_1_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln69_2_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln69_3_fu_924_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_165_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_170_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_175_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_178_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln145_fu_201_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln67_fu_235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln145_1_fu_205_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln67_1_fu_244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_2_fu_253_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_3_fu_261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_291_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_fu_295_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_24_fu_281_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln341_fu_309_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln341_fu_313_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_fu_327_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_319_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1311_fu_333_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_337_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_prom_i_i_i_i_i_cast_cast_cast_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_305_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_353_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_fu_365_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_359_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln662_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_377_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fu_387_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_273_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_2_fu_395_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_12_fu_401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln58_fu_409_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cursor_fu_421_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_V_1_fu_434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_456_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_1_fu_460_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_26_fu_446_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln341_1_fu_474_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln341_1_fu_478_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_1_fu_492_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_484_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1311_1_fu_498_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_1_fu_502_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_prom_i_i_i_i_i14_cast_cast_cast_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_470_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_2_fu_518_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_8_fu_530_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_3_fu_524_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln662_1_fu_538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_542_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_1_fu_552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_fu_438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_5_fu_560_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_13_fu_566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_578_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln58_1_fu_574_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cursor_3_fu_586_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_V_2_fu_599_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_621_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_2_fu_625_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_28_fu_611_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln341_2_fu_639_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln341_2_fu_643_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_2_fu_657_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_2_fu_649_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1311_2_fu_663_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_2_fu_667_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_prom_i_i_i_i_i35_cast_cast_cast_fu_675_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_635_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_4_fu_683_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_15_fu_695_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_5_fu_689_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln662_2_fu_703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_707_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_2_fu_717_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_fu_603_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_9_fu_725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_14_fu_731_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_743_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln58_2_fu_739_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cursor_5_fu_751_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_V_3_fu_764_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_786_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_3_fu_790_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_30_fu_776_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln341_3_fu_804_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln341_3_fu_808_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_3_fu_822_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_3_fu_814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1311_3_fu_828_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_3_fu_832_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_prom_i_i_i_i_i56_cast_cast_cast_fu_840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_3_fu_800_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_6_fu_848_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_22_fu_860_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_7_fu_854_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln662_3_fu_868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_872_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_3_fu_882_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_3_fu_768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_10_fu_890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_fu_896_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_908_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln58_3_fu_904_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal cursor_7_fu_916_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_165_ce : STD_LOGIC;
    signal grp_fu_170_ce : STD_LOGIC;
    signal grp_fu_175_ce : STD_LOGIC;
    signal grp_fu_178_ce : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component quant_top_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quant_top_sitofp_32ns_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fmul_32ns_32ns_32_4_max_dsp_1_U1 : component quant_top_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_165_p0,
        din1 => ap_const_lv32_0,
        ce => grp_fu_165_ce,
        dout => grp_fu_165_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U2 : component quant_top_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_170_p0,
        din1 => ap_const_lv32_0,
        ce => grp_fu_170_ce,
        dout => grp_fu_170_p2);

    sitofp_32ns_32_4_no_dsp_1_U3 : component quant_top_sitofp_32ns_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_175_p0,
        ce => grp_fu_175_ce,
        dout => grp_fu_175_p1);

    sitofp_32ns_32_4_no_dsp_1_U4 : component quant_top_sitofp_32ns_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_178_p0,
        ce => grp_fu_178_ce,
        dout => grp_fu_178_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_154 <= add_ln54_reg_948;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_154 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln54_reg_948 <= add_ln54_fu_189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln67_1_reg_972 <= add_ln67_1_fu_248_p2;
                add_ln67_reg_967 <= add_ln67_fu_239_p2;
                trunc_ln145_2_reg_957 <= i_stream_V_dout(23 downto 16);
                trunc_ln145_3_reg_962 <= i_stream_V_dout(31 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln67_2_reg_977 <= add_ln67_2_fu_256_p2;
                add_ln67_3_reg_982 <= add_ln67_3_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln54_reg_953_pp0_iter2_reg = ap_const_lv1_0))) then
                conv7_1_1_reg_1002 <= grp_fu_178_p1;
                conv7_1_reg_997 <= grp_fu_175_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln54_reg_953_pp0_iter2_reg = ap_const_lv1_0))) then
                conv7_reg_987 <= grp_fu_175_p1;
                conv7_s_reg_992 <= grp_fu_178_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln54_reg_953 <= icmp_ln54_fu_195_p2;
                icmp_ln54_reg_953_pp0_iter1_reg <= icmp_ln54_reg_953;
                icmp_ln54_reg_953_pp0_iter2_reg <= icmp_ln54_reg_953_pp0_iter1_reg;
                icmp_ln54_reg_953_pp0_iter3_reg <= icmp_ln54_reg_953_pp0_iter2_reg;
                icmp_ln54_reg_953_pp0_iter4_reg <= icmp_ln54_reg_953_pp0_iter3_reg;
                icmp_ln54_reg_953_pp0_iter5_reg <= icmp_ln54_reg_953_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln54_reg_953_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln54_reg_953_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_181 <= grp_fu_165_p2;
                reg_185 <= grp_fu_170_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln54_reg_953_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                this_table_load_1_reg_1022 <= this_table_q0;
                this_table_load_reg_1017 <= this_table_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter5, icmp_ln54_fu_195_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln54_fu_195_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln54_fu_195_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln341_1_fu_478_p2 <= std_logic_vector(unsigned(zext_ln341_1_fu_474_p1) + unsigned(ap_const_lv9_181));
    add_ln341_2_fu_643_p2 <= std_logic_vector(unsigned(zext_ln341_2_fu_639_p1) + unsigned(ap_const_lv9_181));
    add_ln341_3_fu_808_p2 <= std_logic_vector(unsigned(zext_ln341_3_fu_804_p1) + unsigned(ap_const_lv9_181));
    add_ln341_fu_313_p2 <= std_logic_vector(unsigned(zext_ln341_fu_309_p1) + unsigned(ap_const_lv9_181));
    add_ln54_fu_189_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_158_p4) + unsigned(ap_const_lv14_1));
    add_ln67_1_fu_248_p2 <= std_logic_vector(signed(sext_ln67_1_fu_244_p1) + signed(this_b_read));
    add_ln67_2_fu_256_p2 <= std_logic_vector(signed(sext_ln67_2_fu_253_p1) + signed(this_b_read));
    add_ln67_3_fu_264_p2 <= std_logic_vector(signed(sext_ln67_3_fu_261_p1) + signed(this_b_read));
    add_ln67_fu_239_p2 <= std_logic_vector(signed(sext_ln67_fu_235_p1) + signed(this_b_read));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(o_stream_V_full_n, ap_enable_reg_pp0_iter6, icmp_ln54_reg_953_pp0_iter5_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((icmp_ln54_reg_953_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (o_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(o_stream_V_full_n, ap_enable_reg_pp0_iter6, icmp_ln54_reg_953_pp0_iter5_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln54_reg_953_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (o_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(o_stream_V_full_n, ap_enable_reg_pp0_iter6, icmp_ln54_reg_953_pp0_iter5_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln54_reg_953_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (o_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(i_stream_V_empty_n, ap_enable_reg_pp0_iter0, icmp_ln54_reg_953)
    begin
                ap_block_pp0_stage1_11001 <= ((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (i_stream_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(i_stream_V_empty_n, ap_enable_reg_pp0_iter0, icmp_ln54_reg_953)
    begin
                ap_block_pp0_stage1_subdone <= ((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (i_stream_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state10_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage0_iter6_assign_proc : process(o_stream_V_full_n, icmp_ln54_reg_953_pp0_iter5_reg)
    begin
                ap_block_state14_pp0_stage0_iter6 <= ((icmp_ln54_reg_953_pp0_iter5_reg = ap_const_lv1_0) and (o_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage1_iter0_assign_proc : process(i_stream_V_empty_n, icmp_ln54_reg_953)
    begin
                ap_block_state3_pp0_stage1_iter0 <= ((icmp_ln54_reg_953 = ap_const_lv1_0) and (i_stream_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln54_fu_195_p2)
    begin
        if ((icmp_ln54_fu_195_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_158_p4_assign_proc : process(icmp_ln54_reg_953, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_reg_154, add_ln54_reg_948, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_158_p4 <= add_ln54_reg_948;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_158_p4 <= indvar_flatten_reg_154;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cursor_3_fu_586_p3 <= 
        ap_const_lv6_0 when (tmp_9_fu_578_p3(0) = '1') else 
        trunc_ln58_1_fu_574_p1;
    cursor_5_fu_751_p3 <= 
        ap_const_lv6_0 when (tmp_17_fu_743_p3(0) = '1') else 
        trunc_ln58_2_fu_739_p1;
    cursor_7_fu_916_p3 <= 
        ap_const_lv6_0 when (tmp_23_fu_908_p3(0) = '1') else 
        trunc_ln58_3_fu_904_p1;
    cursor_fu_421_p3 <= 
        ap_const_lv6_0 when (tmp_2_fu_413_p3(0) = '1') else 
        trunc_ln58_fu_409_p1;
    data_V_1_fu_434_p1 <= reg_185;
    data_V_2_fu_599_p1 <= reg_181;
    data_V_3_fu_764_p1 <= reg_185;
    data_V_fu_269_p1 <= reg_181;

    grp_fu_165_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_165_ce <= ap_const_logic_1;
        else 
            grp_fu_165_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_165_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, conv7_reg_987, conv7_1_reg_997, ap_enable_reg_pp0_iter3)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_165_p0 <= conv7_1_reg_997;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_165_p0 <= conv7_reg_987;
            else 
                grp_fu_165_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_165_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_170_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_170_ce <= ap_const_logic_1;
        else 
            grp_fu_170_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_170_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, conv7_s_reg_992, ap_enable_reg_pp0_iter3, conv7_1_1_reg_1002)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_170_p0 <= conv7_1_1_reg_1002;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_170_p0 <= conv7_s_reg_992;
            else 
                grp_fu_170_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_170_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_175_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_175_ce <= ap_const_logic_1;
        else 
            grp_fu_175_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_175_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, add_ln67_reg_967, add_ln67_2_reg_977, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_175_p0 <= add_ln67_2_reg_977;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_175_p0 <= add_ln67_reg_967;
            else 
                grp_fu_175_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_175_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_178_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_178_ce <= ap_const_logic_1;
        else 
            grp_fu_178_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_178_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, add_ln67_1_reg_972, add_ln67_3_reg_982, ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_178_p0 <= add_ln67_3_reg_982;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_178_p0 <= add_ln67_1_reg_972;
            else 
                grp_fu_178_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_178_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    i_stream_V_blk_n_assign_proc : process(i_stream_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln54_reg_953)
    begin
        if (((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            i_stream_V_blk_n <= i_stream_V_empty_n;
        else 
            i_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, icmp_ln54_reg_953, ap_block_pp0_stage1_11001)
    begin
        if (((icmp_ln54_reg_953 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            i_stream_V_read <= ap_const_logic_1;
        else 
            i_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln54_fu_195_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_158_p4 = ap_const_lv14_24C0) else "0";
    isNeg_1_fu_484_p3 <= add_ln341_1_fu_478_p2(8 downto 8);
    isNeg_2_fu_649_p3 <= add_ln341_2_fu_643_p2(8 downto 8);
    isNeg_3_fu_814_p3 <= add_ln341_3_fu_808_p2(8 downto 8);
    isNeg_fu_319_p3 <= add_ln341_fu_313_p2(8 downto 8);
    mantissa_1_fu_460_p4 <= ((ap_const_lv1_1 & tmp_27_fu_456_p1) & ap_const_lv1_0);
    mantissa_2_fu_625_p4 <= ((ap_const_lv1_1 & tmp_29_fu_621_p1) & ap_const_lv1_0);
    mantissa_3_fu_790_p4 <= ((ap_const_lv1_1 & tmp_31_fu_786_p1) & ap_const_lv1_0);
    mantissa_fu_295_p4 <= ((ap_const_lv1_1 & tmp_25_fu_291_p1) & ap_const_lv1_0);

    o_stream_V_blk_n_assign_proc : process(o_stream_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, icmp_ln54_reg_953_pp0_iter5_reg)
    begin
        if (((icmp_ln54_reg_953_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o_stream_V_blk_n <= o_stream_V_full_n;
        else 
            o_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    o_stream_V_din <= (((this_table_q0 & this_table_q1) & this_table_load_1_reg_1022) & this_table_load_reg_1017);

    o_stream_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter6, icmp_ln54_reg_953_pp0_iter5_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln54_reg_953_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            o_stream_V_write <= ap_const_logic_1;
        else 
            o_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_438_p3 <= data_V_1_fu_434_p1(31 downto 31);
    p_Result_2_fu_603_p3 <= data_V_2_fu_599_p1(31 downto 31);
    p_Result_3_fu_768_p3 <= data_V_3_fu_764_p1(31 downto 31);
    p_Result_s_fu_273_p3 <= data_V_fu_269_p1(31 downto 31);
    r_V_1_fu_359_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_305_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1(31-1 downto 0)))));
    r_V_2_fu_518_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_470_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1(31-1 downto 0)))));
    r_V_3_fu_524_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_470_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1(31-1 downto 0)))));
    r_V_4_fu_683_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_635_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1(31-1 downto 0)))));
    r_V_5_fu_689_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_635_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1(31-1 downto 0)))));
    r_V_6_fu_848_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_3_fu_800_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1(31-1 downto 0)))));
    r_V_7_fu_854_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_3_fu_800_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1(31-1 downto 0)))));
    r_V_fu_353_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_305_p1),to_integer(unsigned('0' & sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1(31-1 downto 0)))));
    result_V_10_fu_890_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_3_fu_882_p3));
    result_V_12_fu_401_p3 <= 
        result_V_2_fu_395_p2 when (p_Result_s_fu_273_p3(0) = '1') else 
        val_fu_387_p3;
    result_V_13_fu_566_p3 <= 
        result_V_5_fu_560_p2 when (p_Result_1_fu_438_p3(0) = '1') else 
        val_1_fu_552_p3;
    result_V_14_fu_731_p3 <= 
        result_V_9_fu_725_p2 when (p_Result_2_fu_603_p3(0) = '1') else 
        val_2_fu_717_p3;
    result_V_2_fu_395_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_387_p3));
    result_V_5_fu_560_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_1_fu_552_p3));
    result_V_9_fu_725_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_2_fu_717_p3));
    result_V_fu_896_p3 <= 
        result_V_10_fu_890_p2 when (p_Result_3_fu_768_p3(0) = '1') else 
        val_3_fu_882_p3;
        sext_ln1311_1_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_1_fu_492_p2),9));

        sext_ln1311_2_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_2_fu_657_p2),9));

        sext_ln1311_3_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_3_fu_822_p2),9));

        sext_ln1311_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_327_p2),9));

        sext_ln67_1_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln145_1_fu_205_p4),32));

        sext_ln67_2_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln145_2_reg_957),32));

        sext_ln67_3_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln145_3_reg_962),32));

        sext_ln67_fu_235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln145_fu_201_p1),32));

    sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_i_i_i14_cast_cast_cast_fu_510_p1),79));
        sh_prom_i_i_i_i_i14_cast_cast_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_fu_502_p3),32));

    sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_i_i_i35_cast_cast_cast_fu_675_p1),79));
        sh_prom_i_i_i_i_i35_cast_cast_cast_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_fu_667_p3),32));

    sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_i_i_i56_cast_cast_cast_fu_840_p1),79));
        sh_prom_i_i_i_i_i56_cast_cast_cast_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_3_fu_832_p3),32));

    sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_345_p1),79));
        sh_prom_i_i_i_i_i_cast_cast_cast_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_337_p3),32));

    sub_ln1311_1_fu_492_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_26_fu_446_p4));
    sub_ln1311_2_fu_657_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_28_fu_611_p4));
    sub_ln1311_3_fu_822_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_30_fu_776_p4));
    sub_ln1311_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_24_fu_281_p4));

    this_table_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, zext_ln69_1_fu_594_p1, zext_ln69_3_fu_924_p1)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                this_table_address0 <= zext_ln69_3_fu_924_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                this_table_address0 <= zext_ln69_1_fu_594_p1(6 - 1 downto 0);
            else 
                this_table_address0 <= "XXXXXX";
            end if;
        else 
            this_table_address0 <= "XXXXXX";
        end if; 
    end process;


    this_table_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, zext_ln69_fu_429_p1, zext_ln69_2_fu_759_p1)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                this_table_address1 <= zext_ln69_2_fu_759_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                this_table_address1 <= zext_ln69_fu_429_p1(6 - 1 downto 0);
            else 
                this_table_address1 <= "XXXXXX";
            end if;
        else 
            this_table_address1 <= "XXXXXX";
        end if; 
    end process;


    this_table_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            this_table_ce0 <= ap_const_logic_1;
        else 
            this_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    this_table_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            this_table_ce1 <= ap_const_logic_1;
        else 
            this_table_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_15_fu_695_p3 <= r_V_4_fu_683_p2(24 downto 24);
    tmp_17_fu_743_p3 <= result_V_14_fu_731_p3(31 downto 31);
    tmp_1_fu_377_p4 <= r_V_1_fu_359_p2(55 downto 24);
    tmp_22_fu_860_p3 <= r_V_6_fu_848_p2(24 downto 24);
    tmp_23_fu_908_p3 <= result_V_fu_896_p3(31 downto 31);
    tmp_24_fu_281_p4 <= data_V_fu_269_p1(30 downto 23);
    tmp_25_fu_291_p1 <= data_V_fu_269_p1(23 - 1 downto 0);
    tmp_26_fu_446_p4 <= data_V_1_fu_434_p1(30 downto 23);
    tmp_27_fu_456_p1 <= data_V_1_fu_434_p1(23 - 1 downto 0);
    tmp_28_fu_611_p4 <= data_V_2_fu_599_p1(30 downto 23);
    tmp_29_fu_621_p1 <= data_V_2_fu_599_p1(23 - 1 downto 0);
    tmp_2_fu_413_p3 <= result_V_12_fu_401_p3(31 downto 31);
    tmp_30_fu_776_p4 <= data_V_3_fu_764_p1(30 downto 23);
    tmp_31_fu_786_p1 <= data_V_3_fu_764_p1(23 - 1 downto 0);
    tmp_4_fu_707_p4 <= r_V_5_fu_689_p2(55 downto 24);
    tmp_6_fu_872_p4 <= r_V_7_fu_854_p2(55 downto 24);
    tmp_8_fu_530_p3 <= r_V_2_fu_518_p2(24 downto 24);
    tmp_9_fu_578_p3 <= result_V_13_fu_566_p3(31 downto 31);
    tmp_fu_365_p3 <= r_V_fu_353_p2(24 downto 24);
    tmp_s_fu_542_p4 <= r_V_3_fu_524_p2(55 downto 24);
    trunc_ln145_1_fu_205_p4 <= i_stream_V_dout(15 downto 8);
    trunc_ln145_fu_201_p1 <= i_stream_V_dout(8 - 1 downto 0);
    trunc_ln58_1_fu_574_p1 <= result_V_13_fu_566_p3(6 - 1 downto 0);
    trunc_ln58_2_fu_739_p1 <= result_V_14_fu_731_p3(6 - 1 downto 0);
    trunc_ln58_3_fu_904_p1 <= result_V_fu_896_p3(6 - 1 downto 0);
    trunc_ln58_fu_409_p1 <= result_V_12_fu_401_p3(6 - 1 downto 0);
    ush_1_fu_502_p3 <= 
        sext_ln1311_1_fu_498_p1 when (isNeg_1_fu_484_p3(0) = '1') else 
        add_ln341_1_fu_478_p2;
    ush_2_fu_667_p3 <= 
        sext_ln1311_2_fu_663_p1 when (isNeg_2_fu_649_p3(0) = '1') else 
        add_ln341_2_fu_643_p2;
    ush_3_fu_832_p3 <= 
        sext_ln1311_3_fu_828_p1 when (isNeg_3_fu_814_p3(0) = '1') else 
        add_ln341_3_fu_808_p2;
    ush_fu_337_p3 <= 
        sext_ln1311_fu_333_p1 when (isNeg_fu_319_p3(0) = '1') else 
        add_ln341_fu_313_p2;
    val_1_fu_552_p3 <= 
        zext_ln662_1_fu_538_p1 when (isNeg_1_fu_484_p3(0) = '1') else 
        tmp_s_fu_542_p4;
    val_2_fu_717_p3 <= 
        zext_ln662_2_fu_703_p1 when (isNeg_2_fu_649_p3(0) = '1') else 
        tmp_4_fu_707_p4;
    val_3_fu_882_p3 <= 
        zext_ln662_3_fu_868_p1 when (isNeg_3_fu_814_p3(0) = '1') else 
        tmp_6_fu_872_p4;
    val_fu_387_p3 <= 
        zext_ln662_fu_373_p1 when (isNeg_fu_319_p3(0) = '1') else 
        tmp_1_fu_377_p4;
    zext_ln15_1_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_460_p4),79));
    zext_ln15_2_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_625_p4),79));
    zext_ln15_3_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_790_p4),79));
    zext_ln15_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_295_p4),79));
    zext_ln341_1_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_446_p4),9));
    zext_ln341_2_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_611_p4),9));
    zext_ln341_3_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_776_p4),9));
    zext_ln341_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_281_p4),9));
    zext_ln662_1_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_530_p3),32));
    zext_ln662_2_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_695_p3),32));
    zext_ln662_3_fu_868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_860_p3),32));
    zext_ln662_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_365_p3),32));
    zext_ln69_1_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cursor_3_fu_586_p3),64));
    zext_ln69_2_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cursor_5_fu_751_p3),64));
    zext_ln69_3_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cursor_7_fu_916_p3),64));
    zext_ln69_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cursor_fu_421_p3),64));
end behav;
