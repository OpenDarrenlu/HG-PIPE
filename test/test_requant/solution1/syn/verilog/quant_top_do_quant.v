// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module quant_top_do_quant (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        i_stream_V_dout,
        i_stream_V_empty_n,
        i_stream_V_read,
        o_stream_V_din,
        o_stream_V_full_n,
        o_stream_V_write,
        this_b_read,
        this_table_address0,
        this_table_ce0,
        this_table_q0,
        this_table_address1,
        this_table_ce1,
        this_table_q1
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state15 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] i_stream_V_dout;
input   i_stream_V_empty_n;
output   i_stream_V_read;
output  [31:0] o_stream_V_din;
input   o_stream_V_full_n;
output   o_stream_V_write;
input  [31:0] this_b_read;
output  [5:0] this_table_address0;
output   this_table_ce0;
input  [7:0] this_table_q0;
output  [5:0] this_table_address1;
output   this_table_ce1;
input  [7:0] this_table_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg i_stream_V_read;
reg o_stream_V_write;
reg[5:0] this_table_address0;
reg this_table_ce0;
reg[5:0] this_table_address1;
reg this_table_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    i_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln54_reg_953;
reg    o_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter6;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln54_reg_953_pp0_iter5_reg;
reg   [13:0] indvar_flatten_reg_154;
wire   [31:0] grp_fu_165_p2;
reg   [31:0] reg_181;
reg    ap_enable_reg_pp0_iter4;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    ap_block_state11_pp0_stage1_iter4;
wire    ap_block_state13_pp0_stage1_iter5;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln54_reg_953_pp0_iter4_reg;
reg    ap_enable_reg_pp0_iter5;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
reg    ap_block_state14_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_170_p2;
reg   [31:0] reg_185;
wire   [13:0] add_ln54_fu_189_p2;
reg   [13:0] add_ln54_reg_948;
wire   [0:0] icmp_ln54_fu_195_p2;
reg   [0:0] icmp_ln54_reg_953_pp0_iter1_reg;
reg   [0:0] icmp_ln54_reg_953_pp0_iter2_reg;
reg   [0:0] icmp_ln54_reg_953_pp0_iter3_reg;
reg   [7:0] trunc_ln145_2_reg_957;
reg   [7:0] trunc_ln145_3_reg_962;
wire   [31:0] add_ln67_fu_239_p2;
reg   [31:0] add_ln67_reg_967;
wire   [31:0] add_ln67_1_fu_248_p2;
reg   [31:0] add_ln67_1_reg_972;
wire   [31:0] add_ln67_2_fu_256_p2;
reg   [31:0] add_ln67_2_reg_977;
wire   [31:0] add_ln67_3_fu_264_p2;
reg   [31:0] add_ln67_3_reg_982;
wire   [31:0] grp_fu_175_p1;
reg   [31:0] conv7_reg_987;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_178_p1;
reg   [31:0] conv7_s_reg_992;
reg   [31:0] conv7_1_reg_997;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] conv7_1_1_reg_1002;
reg   [7:0] this_table_load_reg_1017;
reg   [7:0] this_table_load_1_reg_1022;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_158_p4;
wire   [63:0] zext_ln69_fu_429_p1;
wire   [63:0] zext_ln69_1_fu_594_p1;
wire   [63:0] zext_ln69_2_fu_759_p1;
wire   [63:0] zext_ln69_3_fu_924_p1;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_165_p0;
reg   [31:0] grp_fu_170_p0;
reg   [31:0] grp_fu_175_p0;
reg   [31:0] grp_fu_178_p0;
wire   [7:0] trunc_ln145_fu_201_p1;
wire  signed [31:0] sext_ln67_fu_235_p1;
wire   [7:0] trunc_ln145_1_fu_205_p4;
wire  signed [31:0] sext_ln67_1_fu_244_p1;
wire  signed [31:0] sext_ln67_2_fu_253_p1;
wire  signed [31:0] sext_ln67_3_fu_261_p1;
wire   [31:0] data_V_fu_269_p1;
wire   [22:0] tmp_25_fu_291_p1;
wire   [24:0] mantissa_fu_295_p4;
wire   [7:0] tmp_24_fu_281_p4;
wire   [8:0] zext_ln341_fu_309_p1;
wire   [8:0] add_ln341_fu_313_p2;
wire   [7:0] sub_ln1311_fu_327_p2;
wire   [0:0] isNeg_fu_319_p3;
wire  signed [8:0] sext_ln1311_fu_333_p1;
wire   [8:0] ush_fu_337_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i_cast_cast_cast_fu_345_p1;
wire   [78:0] zext_ln15_fu_305_p1;
wire   [78:0] sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1;
wire   [78:0] r_V_fu_353_p2;
wire   [0:0] tmp_fu_365_p3;
wire   [78:0] r_V_1_fu_359_p2;
wire   [31:0] zext_ln662_fu_373_p1;
wire   [31:0] tmp_1_fu_377_p4;
wire   [31:0] val_fu_387_p3;
wire   [0:0] p_Result_s_fu_273_p3;
wire   [31:0] result_V_2_fu_395_p2;
wire   [31:0] result_V_12_fu_401_p3;
wire   [0:0] tmp_2_fu_413_p3;
wire   [5:0] trunc_ln58_fu_409_p1;
wire   [5:0] cursor_fu_421_p3;
wire   [31:0] data_V_1_fu_434_p1;
wire   [22:0] tmp_27_fu_456_p1;
wire   [24:0] mantissa_1_fu_460_p4;
wire   [7:0] tmp_26_fu_446_p4;
wire   [8:0] zext_ln341_1_fu_474_p1;
wire   [8:0] add_ln341_1_fu_478_p2;
wire   [7:0] sub_ln1311_1_fu_492_p2;
wire   [0:0] isNeg_1_fu_484_p3;
wire  signed [8:0] sext_ln1311_1_fu_498_p1;
wire   [8:0] ush_1_fu_502_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i14_cast_cast_cast_fu_510_p1;
wire   [78:0] zext_ln15_1_fu_470_p1;
wire   [78:0] sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1;
wire   [78:0] r_V_2_fu_518_p2;
wire   [0:0] tmp_8_fu_530_p3;
wire   [78:0] r_V_3_fu_524_p2;
wire   [31:0] zext_ln662_1_fu_538_p1;
wire   [31:0] tmp_s_fu_542_p4;
wire   [31:0] val_1_fu_552_p3;
wire   [0:0] p_Result_1_fu_438_p3;
wire   [31:0] result_V_5_fu_560_p2;
wire   [31:0] result_V_13_fu_566_p3;
wire   [0:0] tmp_9_fu_578_p3;
wire   [5:0] trunc_ln58_1_fu_574_p1;
wire   [5:0] cursor_3_fu_586_p3;
wire   [31:0] data_V_2_fu_599_p1;
wire   [22:0] tmp_29_fu_621_p1;
wire   [24:0] mantissa_2_fu_625_p4;
wire   [7:0] tmp_28_fu_611_p4;
wire   [8:0] zext_ln341_2_fu_639_p1;
wire   [8:0] add_ln341_2_fu_643_p2;
wire   [7:0] sub_ln1311_2_fu_657_p2;
wire   [0:0] isNeg_2_fu_649_p3;
wire  signed [8:0] sext_ln1311_2_fu_663_p1;
wire   [8:0] ush_2_fu_667_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i35_cast_cast_cast_fu_675_p1;
wire   [78:0] zext_ln15_2_fu_635_p1;
wire   [78:0] sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1;
wire   [78:0] r_V_4_fu_683_p2;
wire   [0:0] tmp_15_fu_695_p3;
wire   [78:0] r_V_5_fu_689_p2;
wire   [31:0] zext_ln662_2_fu_703_p1;
wire   [31:0] tmp_4_fu_707_p4;
wire   [31:0] val_2_fu_717_p3;
wire   [0:0] p_Result_2_fu_603_p3;
wire   [31:0] result_V_9_fu_725_p2;
wire   [31:0] result_V_14_fu_731_p3;
wire   [0:0] tmp_17_fu_743_p3;
wire   [5:0] trunc_ln58_2_fu_739_p1;
wire   [5:0] cursor_5_fu_751_p3;
wire   [31:0] data_V_3_fu_764_p1;
wire   [22:0] tmp_31_fu_786_p1;
wire   [24:0] mantissa_3_fu_790_p4;
wire   [7:0] tmp_30_fu_776_p4;
wire   [8:0] zext_ln341_3_fu_804_p1;
wire   [8:0] add_ln341_3_fu_808_p2;
wire   [7:0] sub_ln1311_3_fu_822_p2;
wire   [0:0] isNeg_3_fu_814_p3;
wire  signed [8:0] sext_ln1311_3_fu_828_p1;
wire   [8:0] ush_3_fu_832_p3;
wire  signed [31:0] sh_prom_i_i_i_i_i56_cast_cast_cast_fu_840_p1;
wire   [78:0] zext_ln15_3_fu_800_p1;
wire   [78:0] sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1;
wire   [78:0] r_V_6_fu_848_p2;
wire   [0:0] tmp_22_fu_860_p3;
wire   [78:0] r_V_7_fu_854_p2;
wire   [31:0] zext_ln662_3_fu_868_p1;
wire   [31:0] tmp_6_fu_872_p4;
wire   [31:0] val_3_fu_882_p3;
wire   [0:0] p_Result_3_fu_768_p3;
wire   [31:0] result_V_10_fu_890_p2;
wire   [31:0] result_V_fu_896_p3;
wire   [0:0] tmp_23_fu_908_p3;
wire   [5:0] trunc_ln58_3_fu_904_p1;
wire   [5:0] cursor_7_fu_916_p3;
reg    grp_fu_165_ce;
reg    grp_fu_170_ce;
reg    grp_fu_175_ce;
reg    grp_fu_178_ce;
wire    ap_CS_fsm_state15;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

quant_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_165_p0),
    .din1(32'd0),
    .ce(grp_fu_165_ce),
    .dout(grp_fu_165_p2)
);

quant_top_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_170_p0),
    .din1(32'd0),
    .ce(grp_fu_170_ce),
    .dout(grp_fu_170_p2)
);

quant_top_sitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_4_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_175_p0),
    .ce(grp_fu_175_ce),
    .dout(grp_fu_175_p1)
);

quant_top_sitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_4_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .ce(grp_fu_178_ce),
    .dout(grp_fu_178_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_953 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_154 <= add_ln54_reg_948;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_154 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln54_reg_948 <= add_ln54_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_953 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln67_1_reg_972 <= add_ln67_1_fu_248_p2;
        add_ln67_reg_967 <= add_ln67_fu_239_p2;
        trunc_ln145_2_reg_957 <= {{i_stream_V_dout[23:16]}};
        trunc_ln145_3_reg_962 <= {{i_stream_V_dout[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_953 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln67_2_reg_977 <= add_ln67_2_fu_256_p2;
        add_ln67_3_reg_982 <= add_ln67_3_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln54_reg_953_pp0_iter2_reg == 1'd0))) begin
        conv7_1_1_reg_1002 <= grp_fu_178_p1;
        conv7_1_reg_997 <= grp_fu_175_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln54_reg_953_pp0_iter2_reg == 1'd0))) begin
        conv7_reg_987 <= grp_fu_175_p1;
        conv7_s_reg_992 <= grp_fu_178_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln54_reg_953 <= icmp_ln54_fu_195_p2;
        icmp_ln54_reg_953_pp0_iter1_reg <= icmp_ln54_reg_953;
        icmp_ln54_reg_953_pp0_iter2_reg <= icmp_ln54_reg_953_pp0_iter1_reg;
        icmp_ln54_reg_953_pp0_iter3_reg <= icmp_ln54_reg_953_pp0_iter2_reg;
        icmp_ln54_reg_953_pp0_iter4_reg <= icmp_ln54_reg_953_pp0_iter3_reg;
        icmp_ln54_reg_953_pp0_iter5_reg <= icmp_ln54_reg_953_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln54_reg_953_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln54_reg_953_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_181 <= grp_fu_165_p2;
        reg_185 <= grp_fu_170_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln54_reg_953_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        this_table_load_1_reg_1022 <= this_table_q0;
        this_table_load_reg_1017 <= this_table_q1;
    end
end

always @ (*) begin
    if ((icmp_ln54_fu_195_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_953 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_158_p4 = add_ln54_reg_948;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_158_p4 = indvar_flatten_reg_154;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_165_ce = 1'b1;
    end else begin
        grp_fu_165_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_165_p0 = conv7_1_reg_997;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_165_p0 = conv7_reg_987;
        end else begin
            grp_fu_165_p0 = 'bx;
        end
    end else begin
        grp_fu_165_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_170_ce = 1'b1;
    end else begin
        grp_fu_170_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_170_p0 = conv7_1_1_reg_1002;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_170_p0 = conv7_s_reg_992;
        end else begin
            grp_fu_170_p0 = 'bx;
        end
    end else begin
        grp_fu_170_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_175_ce = 1'b1;
    end else begin
        grp_fu_175_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_175_p0 = add_ln67_2_reg_977;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_175_p0 = add_ln67_reg_967;
        end else begin
            grp_fu_175_p0 = 'bx;
        end
    end else begin
        grp_fu_175_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_178_ce = 1'b1;
    end else begin
        grp_fu_178_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_178_p0 = add_ln67_3_reg_982;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_178_p0 = add_ln67_1_reg_972;
        end else begin
            grp_fu_178_p0 = 'bx;
        end
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_953 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_stream_V_blk_n = i_stream_V_empty_n;
    end else begin
        i_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_953 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_stream_V_read = 1'b1;
    end else begin
        i_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_953_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_stream_V_blk_n = o_stream_V_full_n;
    end else begin
        o_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_953_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_stream_V_write = 1'b1;
    end else begin
        o_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            this_table_address0 = zext_ln69_3_fu_924_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_table_address0 = zext_ln69_1_fu_594_p1;
        end else begin
            this_table_address0 = 'bx;
        end
    end else begin
        this_table_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            this_table_address1 = zext_ln69_2_fu_759_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            this_table_address1 = zext_ln69_fu_429_p1;
        end else begin
            this_table_address1 = 'bx;
        end
    end else begin
        this_table_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        this_table_ce0 = 1'b1;
    end else begin
        this_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        this_table_ce1 = 1'b1;
    end else begin
        this_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln54_fu_195_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln54_fu_195_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln341_1_fu_478_p2 = ($signed(zext_ln341_1_fu_474_p1) + $signed(9'd385));

assign add_ln341_2_fu_643_p2 = ($signed(zext_ln341_2_fu_639_p1) + $signed(9'd385));

assign add_ln341_3_fu_808_p2 = ($signed(zext_ln341_3_fu_804_p1) + $signed(9'd385));

assign add_ln341_fu_313_p2 = ($signed(zext_ln341_fu_309_p1) + $signed(9'd385));

assign add_ln54_fu_189_p2 = (ap_phi_mux_indvar_flatten_phi_fu_158_p4 + 14'd1);

assign add_ln67_1_fu_248_p2 = ($signed(sext_ln67_1_fu_244_p1) + $signed(this_b_read));

assign add_ln67_2_fu_256_p2 = ($signed(sext_ln67_2_fu_253_p1) + $signed(this_b_read));

assign add_ln67_3_fu_264_p2 = ($signed(sext_ln67_3_fu_261_p1) + $signed(this_b_read));

assign add_ln67_fu_239_p2 = ($signed(sext_ln67_fu_235_p1) + $signed(this_b_read));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln54_reg_953_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (o_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln54_reg_953_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (o_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln54_reg_953_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (o_stream_V_full_n == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln54_reg_953 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (i_stream_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln54_reg_953 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (i_stream_V_empty_n == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter6 = ((icmp_ln54_reg_953_pp0_iter5_reg == 1'd0) & (o_stream_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln54_reg_953 == 1'd0) & (i_stream_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cursor_3_fu_586_p3 = ((tmp_9_fu_578_p3[0:0] == 1'b1) ? 6'd0 : trunc_ln58_1_fu_574_p1);

assign cursor_5_fu_751_p3 = ((tmp_17_fu_743_p3[0:0] == 1'b1) ? 6'd0 : trunc_ln58_2_fu_739_p1);

assign cursor_7_fu_916_p3 = ((tmp_23_fu_908_p3[0:0] == 1'b1) ? 6'd0 : trunc_ln58_3_fu_904_p1);

assign cursor_fu_421_p3 = ((tmp_2_fu_413_p3[0:0] == 1'b1) ? 6'd0 : trunc_ln58_fu_409_p1);

assign data_V_1_fu_434_p1 = reg_185;

assign data_V_2_fu_599_p1 = reg_181;

assign data_V_3_fu_764_p1 = reg_185;

assign data_V_fu_269_p1 = reg_181;

assign icmp_ln54_fu_195_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_158_p4 == 14'd9408) ? 1'b1 : 1'b0);

assign isNeg_1_fu_484_p3 = add_ln341_1_fu_478_p2[32'd8];

assign isNeg_2_fu_649_p3 = add_ln341_2_fu_643_p2[32'd8];

assign isNeg_3_fu_814_p3 = add_ln341_3_fu_808_p2[32'd8];

assign isNeg_fu_319_p3 = add_ln341_fu_313_p2[32'd8];

assign mantissa_1_fu_460_p4 = {{{{1'd1}, {tmp_27_fu_456_p1}}}, {1'd0}};

assign mantissa_2_fu_625_p4 = {{{{1'd1}, {tmp_29_fu_621_p1}}}, {1'd0}};

assign mantissa_3_fu_790_p4 = {{{{1'd1}, {tmp_31_fu_786_p1}}}, {1'd0}};

assign mantissa_fu_295_p4 = {{{{1'd1}, {tmp_25_fu_291_p1}}}, {1'd0}};

assign o_stream_V_din = {{{{this_table_q0}, {this_table_q1}}, {this_table_load_1_reg_1022}}, {this_table_load_reg_1017}};

assign p_Result_1_fu_438_p3 = data_V_1_fu_434_p1[32'd31];

assign p_Result_2_fu_603_p3 = data_V_2_fu_599_p1[32'd31];

assign p_Result_3_fu_768_p3 = data_V_3_fu_764_p1[32'd31];

assign p_Result_s_fu_273_p3 = data_V_fu_269_p1[32'd31];

assign r_V_1_fu_359_p2 = zext_ln15_fu_305_p1 << sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1;

assign r_V_2_fu_518_p2 = zext_ln15_1_fu_470_p1 >> sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1;

assign r_V_3_fu_524_p2 = zext_ln15_1_fu_470_p1 << sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1;

assign r_V_4_fu_683_p2 = zext_ln15_2_fu_635_p1 >> sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1;

assign r_V_5_fu_689_p2 = zext_ln15_2_fu_635_p1 << sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1;

assign r_V_6_fu_848_p2 = zext_ln15_3_fu_800_p1 >> sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1;

assign r_V_7_fu_854_p2 = zext_ln15_3_fu_800_p1 << sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1;

assign r_V_fu_353_p2 = zext_ln15_fu_305_p1 >> sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1;

assign result_V_10_fu_890_p2 = (32'd0 - val_3_fu_882_p3);

assign result_V_12_fu_401_p3 = ((p_Result_s_fu_273_p3[0:0] == 1'b1) ? result_V_2_fu_395_p2 : val_fu_387_p3);

assign result_V_13_fu_566_p3 = ((p_Result_1_fu_438_p3[0:0] == 1'b1) ? result_V_5_fu_560_p2 : val_1_fu_552_p3);

assign result_V_14_fu_731_p3 = ((p_Result_2_fu_603_p3[0:0] == 1'b1) ? result_V_9_fu_725_p2 : val_2_fu_717_p3);

assign result_V_2_fu_395_p2 = (32'd0 - val_fu_387_p3);

assign result_V_5_fu_560_p2 = (32'd0 - val_1_fu_552_p3);

assign result_V_9_fu_725_p2 = (32'd0 - val_2_fu_717_p3);

assign result_V_fu_896_p3 = ((p_Result_3_fu_768_p3[0:0] == 1'b1) ? result_V_10_fu_890_p2 : val_3_fu_882_p3);

assign sext_ln1311_1_fu_498_p1 = $signed(sub_ln1311_1_fu_492_p2);

assign sext_ln1311_2_fu_663_p1 = $signed(sub_ln1311_2_fu_657_p2);

assign sext_ln1311_3_fu_828_p1 = $signed(sub_ln1311_3_fu_822_p2);

assign sext_ln1311_fu_333_p1 = $signed(sub_ln1311_fu_327_p2);

assign sext_ln67_1_fu_244_p1 = $signed(trunc_ln145_1_fu_205_p4);

assign sext_ln67_2_fu_253_p1 = $signed(trunc_ln145_2_reg_957);

assign sext_ln67_3_fu_261_p1 = $signed(trunc_ln145_3_reg_962);

assign sext_ln67_fu_235_p1 = $signed(trunc_ln145_fu_201_p1);

assign sh_prom_i_i_i_i_i14_cast_cast_cast_cast_fu_514_p1 = $unsigned(sh_prom_i_i_i_i_i14_cast_cast_cast_fu_510_p1);

assign sh_prom_i_i_i_i_i14_cast_cast_cast_fu_510_p1 = $signed(ush_1_fu_502_p3);

assign sh_prom_i_i_i_i_i35_cast_cast_cast_cast_fu_679_p1 = $unsigned(sh_prom_i_i_i_i_i35_cast_cast_cast_fu_675_p1);

assign sh_prom_i_i_i_i_i35_cast_cast_cast_fu_675_p1 = $signed(ush_2_fu_667_p3);

assign sh_prom_i_i_i_i_i56_cast_cast_cast_cast_fu_844_p1 = $unsigned(sh_prom_i_i_i_i_i56_cast_cast_cast_fu_840_p1);

assign sh_prom_i_i_i_i_i56_cast_cast_cast_fu_840_p1 = $signed(ush_3_fu_832_p3);

assign sh_prom_i_i_i_i_i_cast_cast_cast_cast_fu_349_p1 = $unsigned(sh_prom_i_i_i_i_i_cast_cast_cast_fu_345_p1);

assign sh_prom_i_i_i_i_i_cast_cast_cast_fu_345_p1 = $signed(ush_fu_337_p3);

assign sub_ln1311_1_fu_492_p2 = (8'd127 - tmp_26_fu_446_p4);

assign sub_ln1311_2_fu_657_p2 = (8'd127 - tmp_28_fu_611_p4);

assign sub_ln1311_3_fu_822_p2 = (8'd127 - tmp_30_fu_776_p4);

assign sub_ln1311_fu_327_p2 = (8'd127 - tmp_24_fu_281_p4);

assign tmp_15_fu_695_p3 = r_V_4_fu_683_p2[32'd24];

assign tmp_17_fu_743_p3 = result_V_14_fu_731_p3[32'd31];

assign tmp_1_fu_377_p4 = {{r_V_1_fu_359_p2[55:24]}};

assign tmp_22_fu_860_p3 = r_V_6_fu_848_p2[32'd24];

assign tmp_23_fu_908_p3 = result_V_fu_896_p3[32'd31];

assign tmp_24_fu_281_p4 = {{data_V_fu_269_p1[30:23]}};

assign tmp_25_fu_291_p1 = data_V_fu_269_p1[22:0];

assign tmp_26_fu_446_p4 = {{data_V_1_fu_434_p1[30:23]}};

assign tmp_27_fu_456_p1 = data_V_1_fu_434_p1[22:0];

assign tmp_28_fu_611_p4 = {{data_V_2_fu_599_p1[30:23]}};

assign tmp_29_fu_621_p1 = data_V_2_fu_599_p1[22:0];

assign tmp_2_fu_413_p3 = result_V_12_fu_401_p3[32'd31];

assign tmp_30_fu_776_p4 = {{data_V_3_fu_764_p1[30:23]}};

assign tmp_31_fu_786_p1 = data_V_3_fu_764_p1[22:0];

assign tmp_4_fu_707_p4 = {{r_V_5_fu_689_p2[55:24]}};

assign tmp_6_fu_872_p4 = {{r_V_7_fu_854_p2[55:24]}};

assign tmp_8_fu_530_p3 = r_V_2_fu_518_p2[32'd24];

assign tmp_9_fu_578_p3 = result_V_13_fu_566_p3[32'd31];

assign tmp_fu_365_p3 = r_V_fu_353_p2[32'd24];

assign tmp_s_fu_542_p4 = {{r_V_3_fu_524_p2[55:24]}};

assign trunc_ln145_1_fu_205_p4 = {{i_stream_V_dout[15:8]}};

assign trunc_ln145_fu_201_p1 = i_stream_V_dout[7:0];

assign trunc_ln58_1_fu_574_p1 = result_V_13_fu_566_p3[5:0];

assign trunc_ln58_2_fu_739_p1 = result_V_14_fu_731_p3[5:0];

assign trunc_ln58_3_fu_904_p1 = result_V_fu_896_p3[5:0];

assign trunc_ln58_fu_409_p1 = result_V_12_fu_401_p3[5:0];

assign ush_1_fu_502_p3 = ((isNeg_1_fu_484_p3[0:0] == 1'b1) ? sext_ln1311_1_fu_498_p1 : add_ln341_1_fu_478_p2);

assign ush_2_fu_667_p3 = ((isNeg_2_fu_649_p3[0:0] == 1'b1) ? sext_ln1311_2_fu_663_p1 : add_ln341_2_fu_643_p2);

assign ush_3_fu_832_p3 = ((isNeg_3_fu_814_p3[0:0] == 1'b1) ? sext_ln1311_3_fu_828_p1 : add_ln341_3_fu_808_p2);

assign ush_fu_337_p3 = ((isNeg_fu_319_p3[0:0] == 1'b1) ? sext_ln1311_fu_333_p1 : add_ln341_fu_313_p2);

assign val_1_fu_552_p3 = ((isNeg_1_fu_484_p3[0:0] == 1'b1) ? zext_ln662_1_fu_538_p1 : tmp_s_fu_542_p4);

assign val_2_fu_717_p3 = ((isNeg_2_fu_649_p3[0:0] == 1'b1) ? zext_ln662_2_fu_703_p1 : tmp_4_fu_707_p4);

assign val_3_fu_882_p3 = ((isNeg_3_fu_814_p3[0:0] == 1'b1) ? zext_ln662_3_fu_868_p1 : tmp_6_fu_872_p4);

assign val_fu_387_p3 = ((isNeg_fu_319_p3[0:0] == 1'b1) ? zext_ln662_fu_373_p1 : tmp_1_fu_377_p4);

assign zext_ln15_1_fu_470_p1 = mantissa_1_fu_460_p4;

assign zext_ln15_2_fu_635_p1 = mantissa_2_fu_625_p4;

assign zext_ln15_3_fu_800_p1 = mantissa_3_fu_790_p4;

assign zext_ln15_fu_305_p1 = mantissa_fu_295_p4;

assign zext_ln341_1_fu_474_p1 = tmp_26_fu_446_p4;

assign zext_ln341_2_fu_639_p1 = tmp_28_fu_611_p4;

assign zext_ln341_3_fu_804_p1 = tmp_30_fu_776_p4;

assign zext_ln341_fu_309_p1 = tmp_24_fu_281_p4;

assign zext_ln662_1_fu_538_p1 = tmp_8_fu_530_p3;

assign zext_ln662_2_fu_703_p1 = tmp_15_fu_695_p3;

assign zext_ln662_3_fu_868_p1 = tmp_22_fu_860_p3;

assign zext_ln662_fu_373_p1 = tmp_fu_365_p3;

assign zext_ln69_1_fu_594_p1 = cursor_3_fu_586_p3;

assign zext_ln69_2_fu_759_p1 = cursor_5_fu_751_p3;

assign zext_ln69_3_fu_924_p1 = cursor_7_fu_916_p3;

assign zext_ln69_fu_429_p1 = cursor_fu_421_p3;

endmodule //quant_top_do_quant
