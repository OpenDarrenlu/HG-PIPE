/* verilator lint_off PINMISSING */
/* verilator lint_off CASEX */
/* verilator lint_off CASEOVERLAP */
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MLP0_MLP0,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu5ev-sfvc784-1-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.602250,HLS_SYN_LAT=100400,HLS_SYN_TPT=100359,HLS_SYN_MEM=85,HLS_SYN_DSP=0,HLS_SYN_FF=19776,HLS_SYN_LUT=38090,HLS_VERSION=2020_2}" *)

module MLP0 (
        i_stream_V_TDATA,
        o_stream_V_TDATA,
        ap_clk,
        ap_rst_n,
        i_stream_V_TVALID,
        i_stream_V_TREADY,
        o_stream_V_TVALID,
        o_stream_V_TREADY,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] i_stream_V_TDATA;
output  [31:0] o_stream_V_TDATA;
input   ap_clk;
input   ap_rst_n;
input   i_stream_V_TVALID;
output   i_stream_V_TREADY;
output   o_stream_V_TVALID;
input   o_stream_V_TREADY;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [31:0] do_mlp_U0_o_stream_V_TDATA;
 reg    ap_rst_n_inv;
wire    do_mlp_U0_i_stream_V_TREADY;
wire    do_mlp_U0_ap_start;
wire    do_mlp_U0_o_stream_V_TVALID;
wire    do_mlp_U0_ap_done;
wire    do_mlp_U0_ap_ready;
wire    do_mlp_U0_ap_idle;
wire    do_mlp_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    do_mlp_U0_start_full_n;
wire    do_mlp_U0_start_write;

MLP0_do_mlp do_mlp_U0(
    .i_stream_V_TDATA(i_stream_V_TDATA),
    .o_stream_V_TDATA(do_mlp_U0_o_stream_V_TDATA),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .i_stream_V_TVALID(i_stream_V_TVALID),
    .i_stream_V_TREADY(do_mlp_U0_i_stream_V_TREADY),
    .ap_start(do_mlp_U0_ap_start),
    .o_stream_V_TVALID(do_mlp_U0_o_stream_V_TVALID),
    .o_stream_V_TREADY(o_stream_V_TREADY),
    .ap_done(do_mlp_U0_ap_done),
    .ap_ready(do_mlp_U0_ap_ready),
    .ap_idle(do_mlp_U0_ap_idle),
    .ap_continue(do_mlp_U0_ap_continue)
);

assign ap_done = do_mlp_U0_ap_done;

assign ap_idle = do_mlp_U0_ap_idle;

assign ap_ready = do_mlp_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = ap_continue;

assign ap_sync_done = do_mlp_U0_ap_done;

assign ap_sync_ready = do_mlp_U0_ap_ready;

assign do_mlp_U0_ap_continue = ap_continue;

assign do_mlp_U0_ap_start = ap_start;

assign do_mlp_U0_start_full_n = 1'b1;

assign do_mlp_U0_start_write = 1'b0;

assign i_stream_V_TREADY = do_mlp_U0_i_stream_V_TREADY;

assign o_stream_V_TDATA = do_mlp_U0_o_stream_V_TDATA;

assign o_stream_V_TVALID = do_mlp_U0_o_stream_V_TVALID;

endmodule //MLP0
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_adapt (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        ge_sm_dout,
        ge_sm_empty_n,
        ge_sm_read,
        adpt_sm_din,
        adpt_sm_full_n,
        adpt_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] ge_sm_dout;
input   ge_sm_empty_n;
output   ge_sm_read;
output  [383:0] adpt_sm_din;
input   adpt_sm_full_n;
output   adpt_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg ge_sm_read;
reg adpt_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    ge_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln78_reg_1189;
reg    adpt_sm_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln83_3_reg_1444;
reg   [15:0] indvar_flatten189_reg_259;
reg   [9:0] indvar_flatten_reg_270;
reg   [3:0] t_reg_281;
wire   [15:0] add_ln78_fu_292_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln78_fu_298_p2;
wire   [3:0] t_6_fu_340_p3;
reg   [3:0] t_6_reg_1193;
wire   [9:0] select_ln79_fu_354_p3;
reg   [2:0] p_load242_reg_1204;
reg   [2:0] p_load241_reg_1209;
reg   [2:0] p_load240_reg_1214;
reg   [2:0] p_load239_reg_1219;
reg   [2:0] p_load238_reg_1224;
reg   [2:0] p_load237_reg_1229;
reg   [2:0] p_load236_reg_1234;
reg   [2:0] p_load235_reg_1239;
reg   [2:0] p_load234_reg_1244;
reg   [2:0] p_load233_reg_1249;
reg   [2:0] p_load232_reg_1254;
reg   [2:0] p_load231_reg_1259;
reg   [2:0] p_load230_reg_1264;
reg   [2:0] p_load229_reg_1269;
reg   [2:0] p_load228_reg_1274;
reg   [2:0] p_load227_reg_1279;
reg   [2:0] p_load226_reg_1284;
reg   [2:0] p_load225_reg_1289;
reg   [2:0] p_load224_reg_1294;
reg   [2:0] p_load223_reg_1299;
reg   [2:0] p_load218_reg_1304;
reg   [2:0] p_load217_reg_1309;
reg   [2:0] p_load216_reg_1314;
reg   [2:0] p_load215_reg_1319;
reg   [2:0] p_load214_reg_1324;
reg   [2:0] p_load213_reg_1329;
reg   [2:0] p_load212_reg_1334;
reg   [2:0] p_load211_reg_1339;
reg   [2:0] p_load210_reg_1344;
reg   [2:0] p_load209_reg_1349;
reg   [2:0] p_load208_reg_1354;
reg   [2:0] p_load207_reg_1359;
reg   [2:0] p_load206_reg_1364;
reg   [2:0] p_load205_reg_1369;
reg   [2:0] p_load204_reg_1374;
reg   [2:0] p_load203_reg_1379;
reg   [2:0] p_load202_reg_1384;
reg   [2:0] p_load201_reg_1389;
reg   [2:0] p_load200_reg_1394;
reg   [2:0] p_load199_reg_1399;
reg   [2:0] p_load221_reg_1404;
reg   [2:0] p_load219_reg_1409;
reg   [2:0] p_load197_reg_1414;
reg   [2:0] p_load_reg_1419;
wire   [2:0] trunc_ln145_fu_706_p1;
reg   [2:0] trunc_ln145_reg_1424;
reg   [2:0] trunc_ln145_s_reg_1429;
reg   [2:0] trunc_ln145_25_reg_1434;
reg   [2:0] trunc_ln145_26_reg_1439;
wire   [0:0] icmp_ln83_3_fu_740_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter1_state3;
reg   [3:0] ap_phi_mux_t_phi_fu_285_p4;
reg   [2:0] empty_fu_70;
reg   [2:0] empty_108_fu_74;
reg   [2:0] empty_109_fu_78;
reg   [2:0] empty_110_fu_82;
reg   [2:0] empty_111_fu_86;
reg   [2:0] empty_112_fu_90;
reg   [2:0] empty_113_fu_94;
reg   [2:0] empty_114_fu_98;
reg   [2:0] empty_115_fu_102;
reg   [2:0] empty_116_fu_106;
reg   [2:0] empty_117_fu_110;
reg   [2:0] empty_118_fu_114;
reg   [2:0] empty_119_fu_118;
reg   [2:0] empty_120_fu_122;
reg   [2:0] empty_121_fu_126;
reg   [2:0] empty_122_fu_130;
reg   [2:0] empty_123_fu_134;
reg   [2:0] empty_124_fu_138;
reg   [2:0] empty_125_fu_142;
reg   [2:0] empty_126_fu_146;
reg   [2:0] empty_127_fu_150;
reg   [2:0] empty_128_fu_154;
reg   [2:0] empty_129_fu_158;
reg   [2:0] empty_130_fu_162;
reg   [2:0] empty_131_fu_166;
reg   [2:0] empty_132_fu_170;
reg   [2:0] empty_133_fu_174;
reg   [2:0] empty_134_fu_178;
reg   [2:0] empty_135_fu_182;
reg   [2:0] empty_136_fu_186;
reg   [2:0] empty_137_fu_190;
reg   [2:0] empty_138_fu_194;
reg   [2:0] empty_139_fu_198;
reg   [2:0] empty_140_fu_202;
reg   [2:0] empty_141_fu_206;
reg   [2:0] empty_142_fu_210;
reg   [2:0] empty_143_fu_214;
reg   [2:0] empty_144_fu_218;
reg   [2:0] empty_145_fu_222;
reg   [2:0] empty_146_fu_226;
reg   [2:0] empty_147_fu_230;
reg   [2:0] empty_148_fu_234;
reg   [2:0] empty_149_fu_238;
reg   [2:0] empty_150_fu_242;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln79_fu_304_p2;
wire   [0:0] icmp_ln83_fu_316_p2;
wire   [0:0] xor_ln78_fu_310_p2;
wire   [0:0] and_ln78_fu_322_p2;
wire   [0:0] or_ln83_fu_334_p2;
wire   [3:0] add_ln83_fu_328_p2;
wire   [9:0] add_ln79_fu_348_p2;
wire   [378:0] tmp_168_fu_765_p96;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state3)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten189_reg_259 <= add_ln78_fu_292_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten189_reg_259 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_270 <= select_ln79_fu_354_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_270 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1189 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_reg_281 <= t_6_reg_1193;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_281 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_108_fu_74 <= empty_110_fu_82;
        empty_109_fu_78 <= empty_111_fu_86;
        empty_110_fu_82 <= empty_112_fu_90;
        empty_111_fu_86 <= empty_113_fu_94;
        empty_112_fu_90 <= empty_114_fu_98;
        empty_113_fu_94 <= empty_115_fu_102;
        empty_114_fu_98 <= empty_116_fu_106;
        empty_115_fu_102 <= empty_117_fu_110;
        empty_116_fu_106 <= empty_118_fu_114;
        empty_117_fu_110 <= empty_119_fu_118;
        empty_118_fu_114 <= empty_120_fu_122;
        empty_119_fu_118 <= empty_121_fu_126;
        empty_120_fu_122 <= empty_122_fu_130;
        empty_121_fu_126 <= empty_123_fu_134;
        empty_122_fu_130 <= empty_124_fu_138;
        empty_123_fu_134 <= empty_125_fu_142;
        empty_124_fu_138 <= empty_126_fu_146;
        empty_125_fu_142 <= empty_127_fu_150;
        empty_126_fu_146 <= empty_128_fu_154;
        empty_129_fu_158 <= empty_131_fu_166;
        empty_130_fu_162 <= empty_132_fu_170;
        empty_131_fu_166 <= empty_133_fu_174;
        empty_132_fu_170 <= empty_134_fu_178;
        empty_133_fu_174 <= empty_135_fu_182;
        empty_134_fu_178 <= empty_136_fu_186;
        empty_135_fu_182 <= empty_137_fu_190;
        empty_136_fu_186 <= empty_138_fu_194;
        empty_137_fu_190 <= empty_139_fu_198;
        empty_138_fu_194 <= empty_140_fu_202;
        empty_139_fu_198 <= empty_141_fu_206;
        empty_140_fu_202 <= empty_142_fu_210;
        empty_141_fu_206 <= empty_143_fu_214;
        empty_142_fu_210 <= empty_144_fu_218;
        empty_143_fu_214 <= empty_145_fu_222;
        empty_144_fu_218 <= empty_146_fu_226;
        empty_145_fu_222 <= empty_147_fu_230;
        empty_146_fu_226 <= empty_148_fu_234;
        empty_147_fu_230 <= empty_149_fu_238;
        empty_148_fu_234 <= empty_150_fu_242;
        empty_fu_70 <= empty_109_fu_78;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1189 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_127_fu_150 <= trunc_ln145_fu_706_p1;
        empty_128_fu_154 <= {{ge_sm_dout[10:8]}};
        empty_149_fu_238 <= {{ge_sm_dout[18:16]}};
        empty_150_fu_242 <= {{ge_sm_dout[26:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_reg_1189 <= icmp_ln78_fu_298_p2;
        p_load199_reg_1399 <= empty_148_fu_234;
        p_load200_reg_1394 <= empty_147_fu_230;
        p_load201_reg_1389 <= empty_146_fu_226;
        p_load202_reg_1384 <= empty_145_fu_222;
        p_load203_reg_1379 <= empty_144_fu_218;
        p_load204_reg_1374 <= empty_143_fu_214;
        p_load205_reg_1369 <= empty_142_fu_210;
        p_load206_reg_1364 <= empty_141_fu_206;
        p_load207_reg_1359 <= empty_140_fu_202;
        p_load208_reg_1354 <= empty_139_fu_198;
        p_load209_reg_1349 <= empty_138_fu_194;
        p_load210_reg_1344 <= empty_137_fu_190;
        p_load211_reg_1339 <= empty_136_fu_186;
        p_load212_reg_1334 <= empty_135_fu_182;
        p_load213_reg_1329 <= empty_134_fu_178;
        p_load214_reg_1324 <= empty_133_fu_174;
        p_load215_reg_1319 <= empty_132_fu_170;
        p_load216_reg_1314 <= empty_131_fu_166;
        p_load217_reg_1309 <= empty_130_fu_162;
        p_load218_reg_1304 <= empty_129_fu_158;
        p_load223_reg_1299 <= empty_126_fu_146;
        p_load224_reg_1294 <= empty_125_fu_142;
        p_load225_reg_1289 <= empty_124_fu_138;
        p_load226_reg_1284 <= empty_123_fu_134;
        p_load227_reg_1279 <= empty_122_fu_130;
        p_load228_reg_1274 <= empty_121_fu_126;
        p_load229_reg_1269 <= empty_120_fu_122;
        p_load230_reg_1264 <= empty_119_fu_118;
        p_load231_reg_1259 <= empty_118_fu_114;
        p_load232_reg_1254 <= empty_117_fu_110;
        p_load233_reg_1249 <= empty_116_fu_106;
        p_load234_reg_1244 <= empty_115_fu_102;
        p_load235_reg_1239 <= empty_114_fu_98;
        p_load236_reg_1234 <= empty_113_fu_94;
        p_load237_reg_1229 <= empty_112_fu_90;
        p_load238_reg_1224 <= empty_111_fu_86;
        p_load239_reg_1219 <= empty_110_fu_82;
        p_load240_reg_1214 <= empty_109_fu_78;
        p_load241_reg_1209 <= empty_108_fu_74;
        p_load242_reg_1204 <= empty_fu_70;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1189 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln83_3_reg_1444 <= icmp_ln83_3_fu_740_p2;
        p_load197_reg_1414 <= empty_149_fu_238;
        p_load219_reg_1409 <= empty_128_fu_154;
        p_load221_reg_1404 <= empty_127_fu_150;
        p_load_reg_1419 <= empty_150_fu_242;
        trunc_ln145_25_reg_1434 <= {{ge_sm_dout[18:16]}};
        trunc_ln145_26_reg_1439 <= {{ge_sm_dout[26:24]}};
        trunc_ln145_reg_1424 <= trunc_ln145_fu_706_p1;
        trunc_ln145_s_reg_1429 <= {{ge_sm_dout[10:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_6_reg_1193 <= t_6_fu_340_p3;
    end
end

always @ (*) begin
    if (((icmp_ln83_3_reg_1444 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        adpt_sm_blk_n = adpt_sm_full_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln83_3_reg_1444 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        adpt_sm_write = 1'b1;
    end else begin
        adpt_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_fu_298_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1189 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_t_phi_fu_285_p4 = t_6_reg_1193;
    end else begin
        ap_phi_mux_t_phi_fu_285_p4 = t_reg_281;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1189 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ge_sm_blk_n = ge_sm_empty_n;
    end else begin
        ge_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1189 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ge_sm_read = 1'b1;
    end else begin
        ge_sm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_292_p2 = (indvar_flatten189_reg_259 + 16'd1);

assign add_ln79_fu_348_p2 = (indvar_flatten_reg_270 + 10'd1);

assign add_ln83_fu_328_p2 = (ap_phi_mux_t_phi_fu_285_p4 + 4'd1);

assign adpt_sm_din = tmp_168_fu_765_p96;

assign and_ln78_fu_322_p2 = (xor_ln78_fu_310_p2 & icmp_ln83_fu_316_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln83_3_reg_1444 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == adpt_sm_full_n)) | ((icmp_ln78_reg_1189 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ge_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln83_3_reg_1444 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == adpt_sm_full_n)) | ((icmp_ln78_reg_1189 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ge_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln83_3_reg_1444 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == adpt_sm_full_n)) | ((icmp_ln78_reg_1189 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ge_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln78_reg_1189 == 1'd0) & (ge_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((icmp_ln83_3_reg_1444 == 1'd1) & (1'b0 == adpt_sm_full_n));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign icmp_ln78_fu_298_p2 = ((indvar_flatten189_reg_259 == 16'd37632) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_304_p2 = ((indvar_flatten_reg_270 == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln83_3_fu_740_p2 = ((t_6_reg_1193 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_316_p2 = ((ap_phi_mux_t_phi_fu_285_p4 == 4'd12) ? 1'b1 : 1'b0);

assign or_ln83_fu_334_p2 = (icmp_ln79_fu_304_p2 | and_ln78_fu_322_p2);

assign select_ln79_fu_354_p3 = ((icmp_ln79_fu_304_p2[0:0] == 1'b1) ? 10'd1 : add_ln79_fu_348_p2);

assign start_out = real_start;

assign t_6_fu_340_p3 = ((or_ln83_fu_334_p2[0:0] == 1'b1) ? 4'd1 : add_ln83_fu_328_p2);

assign tmp_168_fu_765_p96 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln145_26_reg_1439}, {5'd0}}, {trunc_ln145_25_reg_1434}}, {5'd0}}, {p_load_reg_1419}}, {5'd0}}, {p_load197_reg_1414}}, {5'd0}}, {p_load199_reg_1399}}, {5'd0}}, {p_load200_reg_1394}}, {5'd0}}, {p_load201_reg_1389}}, {5'd0}}, {p_load202_reg_1384}}, {5'd0}}, {p_load203_reg_1379}}, {5'd0}}, {p_load204_reg_1374}}, {5'd0}}, {p_load205_reg_1369}}, {5'd0}}, {p_load206_reg_1364}}, {5'd0}}, {p_load207_reg_1359}}, {5'd0}}, {p_load208_reg_1354}}, {5'd0}}, {p_load209_reg_1349}}, {5'd0}}, {p_load210_reg_1344}}, {5'd0}}, {p_load211_reg_1339}}, {5'd0}}, {p_load212_reg_1334}}, {5'd0}}, {p_load213_reg_1329}}, {5'd0}}, {p_load214_reg_1324}}, {5'd0}}, {p_load215_reg_1319}}, {5'd0}}, {p_load216_reg_1314}}, {5'd0}}, {p_load217_reg_1309}}, {5'd0}}, {p_load218_reg_1304}}, {5'd0}}, {trunc_ln145_s_reg_1429}}, {5'd0}}, {trunc_ln145_reg_1424}}, {5'd0}}, {p_load219_reg_1409}}, {5'd0}}, {p_load221_reg_1404}}, {5'd0}}, {p_load223_reg_1299}}, {5'd0}}, {p_load224_reg_1294}}, {5'd0}}, {p_load225_reg_1289}}, {5'd0}}, {p_load226_reg_1284}}, {5'd0}}, {p_load227_reg_1279}}, {5'd0}}, {p_load228_reg_1274}}, {5'd0}}, {p_load229_reg_1269}}, {5'd0}}, {p_load230_reg_1264}}, {5'd0}}, {p_load231_reg_1259}}, {5'd0}}, {p_load232_reg_1254}}, {5'd0}}, {p_load233_reg_1249}}, {5'd0}}, {p_load234_reg_1244}}, {5'd0}}, {p_load235_reg_1239}}, {5'd0}}, {p_load236_reg_1234}}, {5'd0}}, {p_load237_reg_1229}}, {5'd0}}, {p_load238_reg_1224}}, {5'd0}}, {p_load239_reg_1219}}, {5'd0}}, {p_load240_reg_1214}}, {5'd0}}, {p_load241_reg_1209}}, {5'd0}}, {p_load242_reg_1204}};

assign trunc_ln145_fu_706_p1 = ge_sm_dout[2:0];

assign xor_ln78_fu_310_p2 = (icmp_ln79_fu_304_p2 ^ 1'd1);

endmodule //MLP0_do_adapt
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_adapt_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        ln_sm_dout,
        ln_sm_empty_n,
        ln_sm_read,
        adpt_sm_din,
        adpt_sm_full_n,
        adpt_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] ln_sm_dout;
input   ln_sm_empty_n;
output   ln_sm_read;
output  [191:0] adpt_sm_din;
input   adpt_sm_full_n;
output   adpt_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg ln_sm_read;
reg adpt_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    ln_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln78_reg_685;
reg    adpt_sm_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln83_2_reg_820;
reg   [14:0] indvar_flatten99_reg_163;
reg   [8:0] indvar_flatten_reg_174;
reg   [3:0] t_reg_185;
wire   [14:0] add_ln78_fu_196_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln78_fu_202_p2;
wire   [3:0] t_5_fu_244_p3;
reg   [3:0] t_5_reg_689;
wire   [8:0] select_ln79_fu_258_p3;
reg   [2:0] p_load128_reg_700;
reg   [2:0] p_load127_reg_705;
reg   [2:0] p_load126_reg_710;
reg   [2:0] p_load125_reg_715;
reg   [2:0] p_load124_reg_720;
reg   [2:0] p_load123_reg_725;
reg   [2:0] p_load122_reg_730;
reg   [2:0] p_load121_reg_735;
reg   [2:0] p_load120_reg_740;
reg   [2:0] p_load119_reg_745;
reg   [2:0] p_load116_reg_750;
reg   [2:0] p_load115_reg_755;
reg   [2:0] p_load114_reg_760;
reg   [2:0] p_load113_reg_765;
reg   [2:0] p_load112_reg_770;
reg   [2:0] p_load111_reg_775;
reg   [2:0] p_load110_reg_780;
reg   [2:0] p_load109_reg_785;
reg   [2:0] p_load108_reg_790;
reg   [2:0] p_load107_reg_795;
reg   [2:0] p_load117_reg_800;
reg   [2:0] p_load_reg_805;
wire   [2:0] trunc_ln145_fu_438_p1;
reg   [2:0] trunc_ln145_reg_810;
reg   [2:0] trunc_ln145_s_reg_815;
wire   [0:0] icmp_ln83_2_fu_452_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter1_state3;
reg   [3:0] ap_phi_mux_t_phi_fu_189_p4;
reg   [2:0] empty_fu_62;
reg   [2:0] empty_86_fu_66;
reg   [2:0] empty_87_fu_70;
reg   [2:0] empty_88_fu_74;
reg   [2:0] empty_89_fu_78;
reg   [2:0] empty_90_fu_82;
reg   [2:0] empty_91_fu_86;
reg   [2:0] empty_92_fu_90;
reg   [2:0] empty_93_fu_94;
reg   [2:0] empty_94_fu_98;
reg   [2:0] empty_95_fu_102;
reg   [2:0] empty_96_fu_106;
reg   [2:0] empty_97_fu_110;
reg   [2:0] empty_98_fu_114;
reg   [2:0] empty_99_fu_118;
reg   [2:0] empty_100_fu_122;
reg   [2:0] empty_101_fu_126;
reg   [2:0] empty_102_fu_130;
reg   [2:0] empty_103_fu_134;
reg   [2:0] empty_104_fu_138;
reg   [2:0] empty_105_fu_142;
reg   [2:0] empty_106_fu_146;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln79_fu_208_p2;
wire   [0:0] icmp_ln83_fu_220_p2;
wire   [0:0] xor_ln78_fu_214_p2;
wire   [0:0] and_ln78_fu_226_p2;
wire   [0:0] or_ln83_fu_238_p2;
wire   [3:0] add_ln83_fu_232_p2;
wire   [8:0] add_ln79_fu_252_p2;
wire   [186:0] tmp_199_fu_467_p48;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state3)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_202_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten99_reg_163 <= add_ln78_fu_196_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten99_reg_163 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_202_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_174 <= select_ln79_fu_258_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_174 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_685 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_reg_185 <= t_5_reg_689;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_185 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_100_fu_122 <= empty_101_fu_126;
        empty_101_fu_126 <= empty_102_fu_130;
        empty_102_fu_130 <= empty_103_fu_134;
        empty_103_fu_134 <= empty_104_fu_138;
        empty_104_fu_138 <= empty_105_fu_142;
        empty_105_fu_142 <= empty_106_fu_146;
        empty_86_fu_66 <= empty_87_fu_70;
        empty_87_fu_70 <= empty_88_fu_74;
        empty_88_fu_74 <= empty_89_fu_78;
        empty_89_fu_78 <= empty_90_fu_82;
        empty_90_fu_82 <= empty_91_fu_86;
        empty_91_fu_86 <= empty_92_fu_90;
        empty_92_fu_90 <= empty_93_fu_94;
        empty_93_fu_94 <= empty_94_fu_98;
        empty_94_fu_98 <= empty_95_fu_102;
        empty_96_fu_106 <= empty_97_fu_110;
        empty_97_fu_110 <= empty_98_fu_114;
        empty_98_fu_114 <= empty_99_fu_118;
        empty_99_fu_118 <= empty_100_fu_122;
        empty_fu_62 <= empty_86_fu_66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_685 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_106_fu_146 <= {{ln_sm_dout[10:8]}};
        empty_95_fu_102 <= trunc_ln145_fu_438_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_reg_685 <= icmp_ln78_fu_202_p2;
        p_load107_reg_795 <= empty_105_fu_142;
        p_load108_reg_790 <= empty_104_fu_138;
        p_load109_reg_785 <= empty_103_fu_134;
        p_load110_reg_780 <= empty_102_fu_130;
        p_load111_reg_775 <= empty_101_fu_126;
        p_load112_reg_770 <= empty_100_fu_122;
        p_load113_reg_765 <= empty_99_fu_118;
        p_load114_reg_760 <= empty_98_fu_114;
        p_load115_reg_755 <= empty_97_fu_110;
        p_load116_reg_750 <= empty_96_fu_106;
        p_load119_reg_745 <= empty_94_fu_98;
        p_load120_reg_740 <= empty_93_fu_94;
        p_load121_reg_735 <= empty_92_fu_90;
        p_load122_reg_730 <= empty_91_fu_86;
        p_load123_reg_725 <= empty_90_fu_82;
        p_load124_reg_720 <= empty_89_fu_78;
        p_load125_reg_715 <= empty_88_fu_74;
        p_load126_reg_710 <= empty_87_fu_70;
        p_load127_reg_705 <= empty_86_fu_66;
        p_load128_reg_700 <= empty_fu_62;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_685 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln83_2_reg_820 <= icmp_ln83_2_fu_452_p2;
        p_load117_reg_800 <= empty_95_fu_102;
        p_load_reg_805 <= empty_106_fu_146;
        trunc_ln145_reg_810 <= trunc_ln145_fu_438_p1;
        trunc_ln145_s_reg_815 <= {{ln_sm_dout[10:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_202_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_5_reg_689 <= t_5_fu_244_p3;
    end
end

always @ (*) begin
    if (((icmp_ln83_2_reg_820 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        adpt_sm_blk_n = adpt_sm_full_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln83_2_reg_820 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        adpt_sm_write = 1'b1;
    end else begin
        adpt_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_fu_202_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_685 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_t_phi_fu_189_p4 = t_5_reg_689;
    end else begin
        ap_phi_mux_t_phi_fu_189_p4 = t_reg_185;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_685 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ln_sm_blk_n = ln_sm_empty_n;
    end else begin
        ln_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_685 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ln_sm_read = 1'b1;
    end else begin
        ln_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_196_p2 = (indvar_flatten99_reg_163 + 15'd1);

assign add_ln79_fu_252_p2 = (indvar_flatten_reg_174 + 9'd1);

assign add_ln83_fu_232_p2 = (ap_phi_mux_t_phi_fu_189_p4 + 4'd1);

assign adpt_sm_din = tmp_199_fu_467_p48;

assign and_ln78_fu_226_p2 = (xor_ln78_fu_214_p2 & icmp_ln83_fu_220_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln83_2_reg_820 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == adpt_sm_full_n)) | ((icmp_ln78_reg_685 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ln_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln83_2_reg_820 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == adpt_sm_full_n)) | ((icmp_ln78_reg_685 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ln_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln83_2_reg_820 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == adpt_sm_full_n)) | ((icmp_ln78_reg_685 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ln_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln78_reg_685 == 1'd0) & (ln_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((icmp_ln83_2_reg_820 == 1'd1) & (1'b0 == adpt_sm_full_n));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign icmp_ln78_fu_202_p2 = ((indvar_flatten99_reg_163 == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_208_p2 = ((indvar_flatten_reg_174 == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln83_2_fu_452_p2 = ((t_5_reg_689 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_220_p2 = ((ap_phi_mux_t_phi_fu_189_p4 == 4'd12) ? 1'b1 : 1'b0);

assign or_ln83_fu_238_p2 = (icmp_ln79_fu_208_p2 | and_ln78_fu_226_p2);

assign select_ln79_fu_258_p3 = ((icmp_ln79_fu_208_p2[0:0] == 1'b1) ? 9'd1 : add_ln79_fu_252_p2);

assign start_out = real_start;

assign t_5_fu_244_p3 = ((or_ln83_fu_238_p2[0:0] == 1'b1) ? 4'd1 : add_ln83_fu_232_p2);

assign tmp_199_fu_467_p48 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln145_s_reg_815}, {5'd0}}, {p_load_reg_805}}, {5'd0}}, {p_load107_reg_795}}, {5'd0}}, {p_load108_reg_790}}, {5'd0}}, {p_load109_reg_785}}, {5'd0}}, {p_load110_reg_780}}, {5'd0}}, {p_load111_reg_775}}, {5'd0}}, {p_load112_reg_770}}, {5'd0}}, {p_load113_reg_765}}, {5'd0}}, {p_load114_reg_760}}, {5'd0}}, {p_load115_reg_755}}, {5'd0}}, {p_load116_reg_750}}, {5'd0}}, {trunc_ln145_reg_810}}, {5'd0}}, {p_load117_reg_800}}, {5'd0}}, {p_load119_reg_745}}, {5'd0}}, {p_load120_reg_740}}, {5'd0}}, {p_load121_reg_735}}, {5'd0}}, {p_load122_reg_730}}, {5'd0}}, {p_load123_reg_725}}, {5'd0}}, {p_load124_reg_720}}, {5'd0}}, {p_load125_reg_715}}, {5'd0}}, {p_load126_reg_710}}, {5'd0}}, {p_load127_reg_705}}, {5'd0}}, {p_load128_reg_700}};

assign trunc_ln145_fu_438_p1 = ln_sm_dout[2:0];

assign xor_ln78_fu_214_p2 = (icmp_ln79_fu_208_p2 ^ 1'd1);

endmodule //MLP0_do_adapt_1
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_adapt_2 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        resi_sm_dout,
        resi_sm_empty_n,
        resi_sm_read,
        resi_o_sm_din,
        resi_o_sm_full_n,
        resi_o_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [63:0] resi_sm_dout;
input   resi_sm_empty_n;
output   resi_sm_read;
output  [31:0] resi_o_sm_din;
input   resi_o_sm_full_n;
output   resi_o_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg resi_sm_read;
reg resi_o_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    resi_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln45_reg_378;
reg   [0:0] icmp_ln50_reg_382;
reg    resi_o_sm_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln45_reg_378_pp0_iter1_reg;
reg   [14:0] indvar_flatten15_reg_99;
reg   [8:0] indvar_flatten_reg_110;
reg   [1:0] t_reg_121;
reg   [59:0] vec_i_data_M_elems_V_2_reg_132;
reg   [14:0] p_fca_0_0_1_0_0_0_extract81_reg_165;
wire   [14:0] add_ln45_fu_187_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op33_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln45_fu_193_p2;
wire   [0:0] icmp_ln50_fu_237_p2;
wire   [1:0] t_4_fu_243_p2;
wire   [8:0] select_ln46_3_fu_255_p3;
wire   [14:0] trunc_ln50_fu_263_p1;
reg   [14:0] tmp_379_reg_401;
wire   [59:0] vec_i_data_M_elems_V_4_fu_347_p5;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter1_state3;
reg   [59:0] ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4;
wire   [59:0] vec_i_data_M_elems_V_fu_306_p5;
wire   [59:0] ap_phi_reg_pp0_iter1_vec_i_data_M_elems_V_3_reg_155;
wire   [14:0] ap_phi_reg_pp0_iter1_p_fca_0_0_1_0_0_0_extract81_reg_165;
wire   [14:0] ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract79_reg_177;
reg   [14:0] ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract79_reg_177;
reg   [14:0] ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract79_reg_177;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln46_fu_199_p2;
wire   [0:0] icmp_ln47_fu_211_p2;
wire   [0:0] xor_ln45_fu_205_p2;
wire   [0:0] and_ln45_fu_217_p2;
wire   [0:0] or_ln46_fu_223_p2;
wire   [1:0] select_ln46_fu_229_p3;
wire   [8:0] add_ln46_fu_249_p2;
wire   [14:0] trunc_ln50_3_fu_288_p4;
wire   [14:0] trunc_ln50_2_fu_278_p4;
wire   [29:0] tmp_s_fu_298_p3;
wire   [14:0] tmp_380_fu_329_p4;
wire   [29:0] tmp_381_fu_339_p3;
wire   [30:0] tmp_382_fu_359_p4;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_134;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state3)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_134)) begin
        if (((icmp_ln50_reg_382 == 1'd0) & (icmp_ln45_reg_378 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract79_reg_177 <= p_fca_0_0_1_0_0_0_extract81_reg_165;
        end else if (((icmp_ln50_reg_382 == 1'd1) & (icmp_ln45_reg_378 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract79_reg_177 <= trunc_ln50_fu_263_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract79_reg_177 <= ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract79_reg_177;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_193_p2 == 1'd0))) begin
        indvar_flatten15_reg_99 <= add_ln45_fu_187_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten15_reg_99 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_193_p2 == 1'd0))) begin
        indvar_flatten_reg_110 <= select_ln46_3_fu_255_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_110 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_134)) begin
        if (((icmp_ln50_reg_382 == 1'd0) & (icmp_ln45_reg_378 == 1'd0))) begin
            p_fca_0_0_1_0_0_0_extract81_reg_165 <= 15'd0;
        end else if (((icmp_ln50_reg_382 == 1'd1) & (icmp_ln45_reg_378 == 1'd0))) begin
            p_fca_0_0_1_0_0_0_extract81_reg_165 <= {{resi_sm_dout[30:16]}};
        end else if ((1'b1 == 1'b1)) begin
            p_fca_0_0_1_0_0_0_extract81_reg_165 <= ap_phi_reg_pp0_iter1_p_fca_0_0_1_0_0_0_extract81_reg_165;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_193_p2 == 1'd0))) begin
        t_reg_121 <= t_4_fu_243_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_121 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract79_reg_177 <= ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract79_reg_177;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln45_reg_378 <= icmp_ln45_fu_193_p2;
        icmp_ln45_reg_378_pp0_iter1_reg <= icmp_ln45_reg_378;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_193_p2 == 1'd0))) begin
        icmp_ln50_reg_382 <= icmp_ln50_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_378 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_379_reg_401 <= {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4[44:30]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_378 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vec_i_data_M_elems_V_2_reg_132 <= vec_i_data_M_elems_V_4_fu_347_p5;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_193_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_378 == 1'd0)) begin
        if ((icmp_ln50_reg_382 == 1'd0)) begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4 = vec_i_data_M_elems_V_2_reg_132;
        end else if ((icmp_ln50_reg_382 == 1'd1)) begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4 = vec_i_data_M_elems_V_fu_306_p5;
        end else begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4 = ap_phi_reg_pp0_iter1_vec_i_data_M_elems_V_3_reg_155;
        end
    end else begin
        ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4 = ap_phi_reg_pp0_iter1_vec_i_data_M_elems_V_3_reg_155;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_378_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        resi_o_sm_blk_n = resi_o_sm_full_n;
    end else begin
        resi_o_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_378_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        resi_o_sm_write = 1'b1;
    end else begin
        resi_o_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_382 == 1'd1) & (icmp_ln45_reg_378 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_sm_blk_n = resi_sm_empty_n;
    end else begin
        resi_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op33_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_sm_read = 1'b1;
    end else begin
        resi_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_187_p2 = (indvar_flatten15_reg_99 + 15'd1);

assign add_ln46_fu_249_p2 = (indvar_flatten_reg_110 + 9'd1);

assign and_ln45_fu_217_p2 = (xor_ln45_fu_205_p2 & icmp_ln47_fu_211_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln45_reg_378_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (resi_o_sm_full_n == 1'b0)) | ((ap_predicate_op33_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (resi_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln45_reg_378_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (resi_o_sm_full_n == 1'b0)) | ((ap_predicate_op33_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (resi_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln45_reg_378_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (resi_o_sm_full_n == 1'b0)) | ((ap_predicate_op33_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (resi_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((ap_predicate_op33_read_state3 == 1'b1) & (resi_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((icmp_ln45_reg_378_pp0_iter1_reg == 1'd0) & (resi_o_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_134 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract79_reg_177 = 'bx;

assign ap_phi_reg_pp0_iter1_p_fca_0_0_1_0_0_0_extract81_reg_165 = 'bx;

assign ap_phi_reg_pp0_iter1_vec_i_data_M_elems_V_3_reg_155 = 'bx;

always @ (*) begin
    ap_predicate_op33_read_state3 = ((icmp_ln50_reg_382 == 1'd1) & (icmp_ln45_reg_378 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln45_fu_193_p2 = ((indvar_flatten15_reg_99 == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_199_p2 = ((indvar_flatten_reg_110 == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_211_p2 = ((t_reg_121 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_237_p2 = ((select_ln46_fu_229_p3 == 2'd0) ? 1'b1 : 1'b0);

assign or_ln46_fu_223_p2 = (icmp_ln46_fu_199_p2 | and_ln45_fu_217_p2);

assign resi_o_sm_din = tmp_382_fu_359_p4;

assign select_ln46_3_fu_255_p3 = ((icmp_ln46_fu_199_p2[0:0] == 1'b1) ? 9'd1 : add_ln46_fu_249_p2);

assign select_ln46_fu_229_p3 = ((or_ln46_fu_223_p2[0:0] == 1'b1) ? 2'd0 : t_reg_121);

assign start_out = real_start;

assign t_4_fu_243_p2 = (select_ln46_fu_229_p3 + 2'd1);

assign tmp_380_fu_329_p4 = {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4[59:45]}};

assign tmp_381_fu_339_p3 = {{15'd0}, {tmp_380_fu_329_p4}};

assign tmp_382_fu_359_p4 = {{{tmp_379_reg_401}, {1'd0}}, {ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract79_reg_177}};

assign tmp_s_fu_298_p3 = {{trunc_ln50_3_fu_288_p4}, {trunc_ln50_2_fu_278_p4}};

assign trunc_ln50_2_fu_278_p4 = {{resi_sm_dout[46:32]}};

assign trunc_ln50_3_fu_288_p4 = {{resi_sm_dout[62:48]}};

assign trunc_ln50_fu_263_p1 = resi_sm_dout[14:0];

assign vec_i_data_M_elems_V_4_fu_347_p5 = {{tmp_381_fu_339_p3}, {ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_158_p4[29:0]}};

assign vec_i_data_M_elems_V_fu_306_p5 = {{tmp_s_fu_298_p3}, {vec_i_data_M_elems_V_2_reg_132[29:0]}};

assign xor_ln45_fu_205_p2 = (icmp_ln46_fu_199_p2 ^ 1'd1);

endmodule //MLP0_do_adapt_2
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_adapt_3 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        resi_i_sm_dout,
        resi_i_sm_empty_n,
        resi_i_sm_read,
        resi_sm_din,
        resi_sm_full_n,
        resi_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] resi_i_sm_dout;
input   resi_i_sm_empty_n;
output   resi_i_sm_read;
output  [63:0] resi_sm_din;
input   resi_sm_full_n;
output   resi_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg resi_i_sm_read;
reg resi_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    resi_i_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln78_reg_262;
reg    resi_sm_blk_n;
reg   [0:0] icmp_ln83_1_reg_271;
reg   [14:0] indvar_flatten19_reg_83;
reg   [8:0] indvar_flatten_reg_94;
reg   [1:0] t_reg_105;
wire   [14:0] add_ln78_fu_116_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln78_fu_122_p2;
wire   [1:0] t_3_fu_164_p3;
reg   [1:0] t_3_reg_266;
wire   [0:0] icmp_ln83_1_fu_172_p2;
wire   [8:0] select_ln79_fu_184_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [1:0] ap_phi_mux_t_phi_fu_109_p4;
reg   [14:0] empty_fu_62;
wire   [14:0] trunc_ln145_fu_198_p1;
reg   [14:0] empty_84_fu_66;
wire   [14:0] trunc_ln145_s_fu_202_p4;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln79_fu_128_p2;
wire   [0:0] icmp_ln83_fu_140_p2;
wire   [0:0] xor_ln78_fu_134_p2;
wire   [0:0] and_ln78_fu_146_p2;
wire   [0:0] or_ln83_fu_158_p2;
wire   [1:0] add_ln83_fu_152_p2;
wire   [8:0] add_ln79_fu_178_p2;
wire   [62:0] tmp_200_fu_222_p8;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_122_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten19_reg_83 <= add_ln78_fu_116_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten19_reg_83 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_122_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_94 <= select_ln79_fu_184_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_94 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_262 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_reg_105 <= t_3_reg_266;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_105 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_262 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_84_fu_66 <= {{resi_i_sm_dout[30:16]}};
        empty_fu_62 <= trunc_ln145_fu_198_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_reg_262 <= icmp_ln78_fu_122_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_122_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln83_1_reg_271 <= icmp_ln83_1_fu_172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_122_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_3_reg_266 <= t_3_fu_164_p3;
    end
end

always @ (*) begin
    if ((icmp_ln78_fu_122_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_262 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_t_phi_fu_109_p4 = t_3_reg_266;
    end else begin
        ap_phi_mux_t_phi_fu_109_p4 = t_reg_105;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_262 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_blk_n = resi_i_sm_empty_n;
    end else begin
        resi_i_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_262 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_read = 1'b1;
    end else begin
        resi_i_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln83_1_reg_271 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_sm_blk_n = resi_sm_full_n;
    end else begin
        resi_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln83_1_reg_271 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_sm_write = 1'b1;
    end else begin
        resi_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln78_fu_122_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln78_fu_122_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_116_p2 = (indvar_flatten19_reg_83 + 15'd1);

assign add_ln79_fu_178_p2 = (indvar_flatten_reg_94 + 9'd1);

assign add_ln83_fu_152_p2 = (ap_phi_mux_t_phi_fu_109_p4 + 2'd1);

assign and_ln78_fu_146_p2 = (xor_ln78_fu_134_p2 & icmp_ln83_fu_140_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln83_1_reg_271 == 1'd1) & (resi_sm_full_n == 1'b0)) | ((icmp_ln78_reg_262 == 1'd0) & (resi_i_sm_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln83_1_reg_271 == 1'd1) & (resi_sm_full_n == 1'b0)) | ((icmp_ln78_reg_262 == 1'd0) & (resi_i_sm_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln83_1_reg_271 == 1'd1) & (resi_sm_full_n == 1'b0)) | ((icmp_ln78_reg_262 == 1'd0) & (resi_i_sm_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln83_1_reg_271 == 1'd1) & (resi_sm_full_n == 1'b0)) | ((icmp_ln78_reg_262 == 1'd0) & (resi_i_sm_empty_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign icmp_ln78_fu_122_p2 = ((indvar_flatten19_reg_83 == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_128_p2 = ((indvar_flatten_reg_94 == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_172_p2 = ((t_3_fu_164_p3 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_140_p2 = ((ap_phi_mux_t_phi_fu_109_p4 == 2'd2) ? 1'b1 : 1'b0);

assign or_ln83_fu_158_p2 = (icmp_ln79_fu_128_p2 | and_ln78_fu_146_p2);

assign resi_sm_din = tmp_200_fu_222_p8;

assign select_ln79_fu_184_p3 = ((icmp_ln79_fu_128_p2[0:0] == 1'b1) ? 9'd1 : add_ln79_fu_178_p2);

assign start_out = real_start;

assign t_3_fu_164_p3 = ((or_ln83_fu_158_p2[0:0] == 1'b1) ? 2'd1 : add_ln83_fu_152_p2);

assign tmp_200_fu_222_p8 = {{{{{{{trunc_ln145_s_fu_202_p4}, {1'd0}}, {empty_84_fu_66}}, {1'd0}}, {trunc_ln145_fu_198_p1}}, {1'd0}}, {empty_fu_62}};

assign trunc_ln145_fu_198_p1 = resi_i_sm_dout[14:0];

assign trunc_ln145_s_fu_202_p4 = {{resi_i_sm_dout[30:16]}};

assign xor_ln78_fu_134_p2 = (icmp_ln79_fu_128_p2 ^ 1'd1);

endmodule //MLP0_do_adapt_3
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_adapt_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        mac_sm_dout,
        mac_sm_empty_n,
        mac_sm_read,
        m2_sm_din,
        m2_sm_full_n,
        m2_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [383:0] mac_sm_dout;
input   mac_sm_empty_n;
output   mac_sm_read;
output  [31:0] m2_sm_din;
input   m2_sm_full_n;
output   m2_sm_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mac_sm_read;
reg m2_sm_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    mac_sm_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln45_reg_748;
reg   [0:0] icmp_ln45_reg_748_pp0_iter1_reg;
reg   [0:0] icmp_ln50_reg_767;
reg    m2_sm_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln45_reg_748_pp0_iter2_reg;
reg   [14:0] indvar_flatten17_reg_195;
reg   [8:0] indvar_flatten_reg_206;
reg   [3:0] t_reg_217;
reg   [311:0] vec_i_data_M_elems_V_2_reg_228;
reg   [12:0] p_fca_0_0_1_0_0_0_extract282_reg_239;
reg   [12:0] p_fca_0_0_1_0_0_0_extract281_reg_272;
wire   [14:0] add_ln45_fu_294_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op35_read_state4;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln45_fu_300_p2;
wire   [3:0] select_ln46_fu_336_p3;
reg   [3:0] select_ln46_reg_752;
wire   [3:0] t_2_fu_344_p2;
wire   [8:0] select_ln46_2_fu_356_p3;
wire   [0:0] icmp_ln50_fu_364_p2;
wire   [12:0] trunc_ln50_fu_369_p1;
reg   [12:0] tmp_374_reg_781;
wire   [311:0] vec_i_data_M_elems_V_4_fu_717_p5;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_condition_pp0_exit_iter2_state4;
reg   [311:0] ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4;
wire   [311:0] vec_i_data_M_elems_V_fu_652_p5;
wire   [311:0] ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_262;
wire   [12:0] ap_phi_reg_pp0_iter2_p_fca_0_0_1_0_0_0_extract281_reg_272;
wire   [12:0] ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract279_reg_284;
reg   [12:0] ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract279_reg_284;
reg   [12:0] ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract279_reg_284;
reg   [12:0] ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract279_reg_284;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln46_fu_306_p2;
wire   [0:0] icmp_ln47_fu_318_p2;
wire   [0:0] xor_ln45_fu_312_p2;
wire   [0:0] and_ln45_fu_324_p2;
wire   [0:0] or_ln46_fu_330_p2;
wire   [8:0] add_ln46_fu_350_p2;
wire   [12:0] trunc_ln50_26_fu_594_p4;
wire   [12:0] trunc_ln50_25_fu_584_p4;
wire   [12:0] trunc_ln50_24_fu_574_p4;
wire   [12:0] trunc_ln50_23_fu_564_p4;
wire   [12:0] trunc_ln50_22_fu_554_p4;
wire   [12:0] trunc_ln50_21_fu_544_p4;
wire   [12:0] trunc_ln50_20_fu_534_p4;
wire   [12:0] trunc_ln50_19_fu_524_p4;
wire   [12:0] trunc_ln50_18_fu_514_p4;
wire   [12:0] trunc_ln50_17_fu_504_p4;
wire   [12:0] trunc_ln50_16_fu_494_p4;
wire   [12:0] trunc_ln50_15_fu_484_p4;
wire   [12:0] trunc_ln50_14_fu_474_p4;
wire   [12:0] trunc_ln50_13_fu_464_p4;
wire   [12:0] trunc_ln50_12_fu_454_p4;
wire   [12:0] trunc_ln50_11_fu_444_p4;
wire   [12:0] trunc_ln50_10_fu_434_p4;
wire   [12:0] trunc_ln50_9_fu_424_p4;
wire   [12:0] trunc_ln50_8_fu_414_p4;
wire   [12:0] trunc_ln50_7_fu_404_p4;
wire   [12:0] trunc_ln50_6_fu_394_p4;
wire   [12:0] trunc_ln50_5_fu_384_p4;
wire   [285:0] tmp_s_fu_604_p23;
wire   [142:0] tmp_375_fu_685_p4;
wire   [116:0] tmp_376_fu_695_p4;
wire   [285:0] tmp_377_fu_705_p5;
wire   [28:0] tmp_378_fu_729_p4;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state4) & (ap_enable_reg_pp0_iter1 == 1'b0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_767 == 1'd0) & (icmp_ln45_reg_748_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract279_reg_284 <= p_fca_0_0_1_0_0_0_extract281_reg_272;
        end else if (((icmp_ln50_reg_767 == 1'd1) & (icmp_ln45_reg_748_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract279_reg_284 <= trunc_ln50_fu_369_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract279_reg_284 <= ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract279_reg_284;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_300_p2 == 1'd0))) begin
        indvar_flatten17_reg_195 <= add_ln45_fu_294_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten17_reg_195 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_300_p2 == 1'd0))) begin
        indvar_flatten_reg_206 <= select_ln46_2_fu_356_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_206 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_767 == 1'd0) & (icmp_ln45_reg_748_pp0_iter1_reg == 1'd0))) begin
            p_fca_0_0_1_0_0_0_extract281_reg_272 <= p_fca_0_0_1_0_0_0_extract282_reg_239;
        end else if (((icmp_ln50_reg_767 == 1'd1) & (icmp_ln45_reg_748_pp0_iter1_reg == 1'd0))) begin
            p_fca_0_0_1_0_0_0_extract281_reg_272 <= {{mac_sm_dout[28:16]}};
        end else if ((1'b1 == 1'b1)) begin
            p_fca_0_0_1_0_0_0_extract281_reg_272 <= ap_phi_reg_pp0_iter2_p_fca_0_0_1_0_0_0_extract281_reg_272;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_300_p2 == 1'd0))) begin
        t_reg_217 <= t_2_fu_344_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_217 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract279_reg_284 <= ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract279_reg_284;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract279_reg_284 <= ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract279_reg_284;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln45_reg_748 <= icmp_ln45_fu_300_p2;
        icmp_ln45_reg_748_pp0_iter1_reg <= icmp_ln45_reg_748;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln45_reg_748_pp0_iter2_reg <= icmp_ln45_reg_748_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_748 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln50_reg_767 <= icmp_ln50_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_748_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_fca_0_0_1_0_0_0_extract282_reg_239 <= {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4[38:26]}};
        vec_i_data_M_elems_V_2_reg_228 <= vec_i_data_M_elems_V_4_fu_717_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_300_p2 == 1'd0))) begin
        select_ln46_reg_752 <= select_ln46_fu_336_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_748_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_374_reg_781 <= {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4[168:156]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_300_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_748_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_767 == 1'd0)) begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4 = vec_i_data_M_elems_V_2_reg_228;
        end else if ((icmp_ln50_reg_767 == 1'd1)) begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4 = vec_i_data_M_elems_V_fu_652_p5;
        end else begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4 = ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_262;
        end
    end else begin
        ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4 = ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_262;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_748_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m2_sm_blk_n = m2_sm_full_n;
    end else begin
        m2_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_748_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m2_sm_write = 1'b1;
    end else begin
        m2_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_767 == 1'd1) & (icmp_ln45_reg_748_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_blk_n = mac_sm_empty_n;
    end else begin
        mac_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op35_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_read = 1'b1;
    end else begin
        mac_sm_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_294_p2 = (indvar_flatten17_reg_195 + 15'd1);

assign add_ln46_fu_350_p2 = (indvar_flatten_reg_206 + 9'd1);

assign and_ln45_fu_324_p2 = (xor_ln45_fu_312_p2 & icmp_ln47_fu_318_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op35_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_empty_n == 1'b0)) | ((icmp_ln45_reg_748_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (m2_sm_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op35_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_empty_n == 1'b0)) | ((icmp_ln45_reg_748_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (m2_sm_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op35_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_empty_n == 1'b0)) | ((icmp_ln45_reg_748_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (m2_sm_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((ap_predicate_op35_read_state4 == 1'b1) & (mac_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((icmp_ln45_reg_748_pp0_iter2_reg == 1'd0) & (m2_sm_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract279_reg_284 = 'bx;

assign ap_phi_reg_pp0_iter2_p_fca_0_0_1_0_0_0_extract281_reg_272 = 'bx;

assign ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_262 = 'bx;

always @ (*) begin
    ap_predicate_op35_read_state4 = ((icmp_ln50_reg_767 == 1'd1) & (icmp_ln45_reg_748_pp0_iter1_reg == 1'd0));
end

assign icmp_ln45_fu_300_p2 = ((indvar_flatten17_reg_195 == 15'd18816) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_306_p2 = ((indvar_flatten_reg_206 == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_318_p2 = ((t_reg_217 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_364_p2 = ((select_ln46_reg_752 == 4'd0) ? 1'b1 : 1'b0);

assign m2_sm_din = tmp_378_fu_729_p4;

assign or_ln46_fu_330_p2 = (icmp_ln46_fu_306_p2 | and_ln45_fu_324_p2);

assign select_ln46_2_fu_356_p3 = ((icmp_ln46_fu_306_p2[0:0] == 1'b1) ? 9'd1 : add_ln46_fu_350_p2);

assign select_ln46_fu_336_p3 = ((or_ln46_fu_330_p2[0:0] == 1'b1) ? 4'd0 : t_reg_217);

assign t_2_fu_344_p2 = (select_ln46_fu_336_p3 + 4'd1);

assign tmp_375_fu_685_p4 = {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4[311:169]}};

assign tmp_376_fu_695_p4 = {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4[155:39]}};

assign tmp_377_fu_705_p5 = {{{{{{13'd0}, {tmp_375_fu_685_p4}}}, {13'd0}}}, {tmp_376_fu_695_p4}};

assign tmp_378_fu_729_p4 = {{{tmp_374_reg_781}, {3'd0}}, {ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract279_reg_284}};

assign tmp_s_fu_604_p23 = {{{{{{{{{{{{{{{{{{{{{{trunc_ln50_26_fu_594_p4}, {trunc_ln50_25_fu_584_p4}}, {trunc_ln50_24_fu_574_p4}}, {trunc_ln50_23_fu_564_p4}}, {trunc_ln50_22_fu_554_p4}}, {trunc_ln50_21_fu_544_p4}}, {trunc_ln50_20_fu_534_p4}}, {trunc_ln50_19_fu_524_p4}}, {trunc_ln50_18_fu_514_p4}}, {trunc_ln50_17_fu_504_p4}}, {trunc_ln50_16_fu_494_p4}}, {trunc_ln50_15_fu_484_p4}}, {trunc_ln50_14_fu_474_p4}}, {trunc_ln50_13_fu_464_p4}}, {trunc_ln50_12_fu_454_p4}}, {trunc_ln50_11_fu_444_p4}}, {trunc_ln50_10_fu_434_p4}}, {trunc_ln50_9_fu_424_p4}}, {trunc_ln50_8_fu_414_p4}}, {trunc_ln50_7_fu_404_p4}}, {trunc_ln50_6_fu_394_p4}}, {trunc_ln50_5_fu_384_p4}};

assign trunc_ln50_10_fu_434_p4 = {{mac_sm_dout[124:112]}};

assign trunc_ln50_11_fu_444_p4 = {{mac_sm_dout[140:128]}};

assign trunc_ln50_12_fu_454_p4 = {{mac_sm_dout[156:144]}};

assign trunc_ln50_13_fu_464_p4 = {{mac_sm_dout[172:160]}};

assign trunc_ln50_14_fu_474_p4 = {{mac_sm_dout[188:176]}};

assign trunc_ln50_15_fu_484_p4 = {{mac_sm_dout[204:192]}};

assign trunc_ln50_16_fu_494_p4 = {{mac_sm_dout[220:208]}};

assign trunc_ln50_17_fu_504_p4 = {{mac_sm_dout[236:224]}};

assign trunc_ln50_18_fu_514_p4 = {{mac_sm_dout[252:240]}};

assign trunc_ln50_19_fu_524_p4 = {{mac_sm_dout[268:256]}};

assign trunc_ln50_20_fu_534_p4 = {{mac_sm_dout[284:272]}};

assign trunc_ln50_21_fu_544_p4 = {{mac_sm_dout[300:288]}};

assign trunc_ln50_22_fu_554_p4 = {{mac_sm_dout[316:304]}};

assign trunc_ln50_23_fu_564_p4 = {{mac_sm_dout[332:320]}};

assign trunc_ln50_24_fu_574_p4 = {{mac_sm_dout[348:336]}};

assign trunc_ln50_25_fu_584_p4 = {{mac_sm_dout[364:352]}};

assign trunc_ln50_26_fu_594_p4 = {{mac_sm_dout[380:368]}};

assign trunc_ln50_5_fu_384_p4 = {{mac_sm_dout[44:32]}};

assign trunc_ln50_6_fu_394_p4 = {{mac_sm_dout[60:48]}};

assign trunc_ln50_7_fu_404_p4 = {{mac_sm_dout[76:64]}};

assign trunc_ln50_8_fu_414_p4 = {{mac_sm_dout[92:80]}};

assign trunc_ln50_9_fu_424_p4 = {{mac_sm_dout[108:96]}};

assign trunc_ln50_fu_369_p1 = mac_sm_dout[12:0];

assign vec_i_data_M_elems_V_4_fu_717_p5 = {{tmp_377_fu_705_p5}, {ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_265_p4[25:0]}};

assign vec_i_data_M_elems_V_fu_652_p5 = {{tmp_s_fu_604_p23}, {vec_i_data_M_elems_V_2_reg_228[25:0]}};

assign xor_ln45_fu_312_p2 = (icmp_ln46_fu_306_p2 ^ 1'd1);

endmodule //MLP0_do_adapt_4
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_adapt_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        mac_sm_dout,
        mac_sm_empty_n,
        mac_sm_read,
        m1_sm_din,
        m1_sm_full_n,
        m1_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [767:0] mac_sm_dout;
input   mac_sm_empty_n;
output   mac_sm_read;
output  [63:0] m1_sm_din;
input   m1_sm_full_n;
output   m1_sm_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mac_sm_read;
reg m1_sm_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    mac_sm_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln45_reg_1163;
reg   [0:0] icmp_ln45_reg_1163_pp0_iter1_reg;
reg   [0:0] icmp_ln50_reg_1182;
reg    m1_sm_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln45_reg_1163_pp0_iter2_reg;
reg   [15:0] indvar_flatten17_reg_299;
reg   [9:0] indvar_flatten_reg_310;
reg   [3:0] t_reg_321;
reg   [527:0] vec_i_data_M_elems_V_2_reg_332;
wire   [15:0] add_ln45_fu_397_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op35_read_state4;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln45_fu_403_p2;
wire   [3:0] select_ln46_fu_439_p3;
reg   [3:0] select_ln46_reg_1167;
wire   [3:0] t_1_fu_447_p2;
wire   [9:0] select_ln46_1_fu_459_p3;
wire   [0:0] icmp_ln50_fu_467_p2;
wire   [10:0] trunc_ln50_fu_472_p1;
reg   [10:0] tmp_367_reg_1196;
reg   [10:0] tmp_368_reg_1201;
wire   [527:0] vec_i_data_M_elems_V_1_fu_1107_p5;
reg   [10:0] tmp_397_reg_1211;
reg   [10:0] tmp_372_reg_1216;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_condition_pp0_exit_iter2_state4;
reg   [527:0] ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4;
wire   [527:0] vec_i_data_M_elems_V_fu_1042_p5;
wire   [527:0] ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_367;
wire   [10:0] ap_phi_reg_pp0_iter0_p_fca_0_0_1_0_0_0_extract535_reg_377;
reg   [10:0] ap_phi_reg_pp0_iter1_p_fca_0_0_1_0_0_0_extract535_reg_377;
reg   [10:0] ap_phi_reg_pp0_iter2_p_fca_0_0_1_0_0_0_extract535_reg_377;
reg   [10:0] ap_phi_reg_pp0_iter3_p_fca_0_0_1_0_0_0_extract535_reg_377;
wire   [10:0] ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract533_reg_387;
reg   [10:0] ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract533_reg_387;
reg   [10:0] ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract533_reg_387;
reg   [10:0] ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract533_reg_387;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln46_fu_409_p2;
wire   [0:0] icmp_ln47_fu_421_p2;
wire   [0:0] xor_ln45_fu_415_p2;
wire   [0:0] and_ln45_fu_427_p2;
wire   [0:0] or_ln46_fu_433_p2;
wire   [9:0] add_ln46_fu_453_p2;
wire   [10:0] trunc_ln50_46_fu_936_p4;
wire   [10:0] trunc_ln50_45_fu_926_p4;
wire   [10:0] trunc_ln50_44_fu_916_p4;
wire   [10:0] trunc_ln50_43_fu_906_p4;
wire   [10:0] trunc_ln50_42_fu_896_p4;
wire   [10:0] trunc_ln50_41_fu_886_p4;
wire   [10:0] trunc_ln50_40_fu_876_p4;
wire   [10:0] trunc_ln50_39_fu_866_p4;
wire   [10:0] trunc_ln50_38_fu_856_p4;
wire   [10:0] trunc_ln50_37_fu_846_p4;
wire   [10:0] trunc_ln50_36_fu_836_p4;
wire   [10:0] trunc_ln50_35_fu_826_p4;
wire   [10:0] trunc_ln50_34_fu_816_p4;
wire   [10:0] trunc_ln50_33_fu_806_p4;
wire   [10:0] trunc_ln50_32_fu_796_p4;
wire   [10:0] trunc_ln50_31_fu_786_p4;
wire   [10:0] trunc_ln50_30_fu_776_p4;
wire   [10:0] trunc_ln50_29_fu_766_p4;
wire   [10:0] trunc_ln50_28_fu_756_p4;
wire   [10:0] trunc_ln50_27_fu_746_p4;
wire   [10:0] trunc_ln50_26_fu_736_p4;
wire   [10:0] trunc_ln50_25_fu_726_p4;
wire   [10:0] trunc_ln50_24_fu_716_p4;
wire   [10:0] trunc_ln50_23_fu_706_p4;
wire   [10:0] trunc_ln50_22_fu_696_p4;
wire   [10:0] trunc_ln50_21_fu_686_p4;
wire   [10:0] trunc_ln50_20_fu_676_p4;
wire   [10:0] trunc_ln50_19_fu_666_p4;
wire   [10:0] trunc_ln50_18_fu_656_p4;
wire   [10:0] trunc_ln50_17_fu_646_p4;
wire   [10:0] trunc_ln50_16_fu_636_p4;
wire   [10:0] trunc_ln50_15_fu_626_p4;
wire   [10:0] trunc_ln50_14_fu_616_p4;
wire   [10:0] trunc_ln50_13_fu_606_p4;
wire   [10:0] trunc_ln50_12_fu_596_p4;
wire   [10:0] trunc_ln50_11_fu_586_p4;
wire   [10:0] trunc_ln50_10_fu_576_p4;
wire   [10:0] trunc_ln50_9_fu_566_p4;
wire   [10:0] trunc_ln50_8_fu_556_p4;
wire   [10:0] trunc_ln50_7_fu_546_p4;
wire   [10:0] trunc_ln50_6_fu_536_p4;
wire   [10:0] trunc_ln50_5_fu_526_p4;
wire   [10:0] trunc_ln50_4_fu_516_p4;
wire   [10:0] trunc_ln50_3_fu_506_p4;
wire   [10:0] trunc_ln50_2_fu_496_p4;
wire   [10:0] trunc_ln50_1_fu_486_p4;
wire   [505:0] tmp_s_fu_946_p47;
wire   [241:0] tmp_369_fu_1075_p4;
wire   [219:0] tmp_370_fu_1085_p4;
wire   [505:0] tmp_371_fu_1095_p5;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state4) & (ap_enable_reg_pp0_iter1 == 1'b0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_1182 == 1'd0) & (icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract533_reg_387 <= tmp_367_reg_1196;
        end else if (((icmp_ln50_reg_1182 == 1'd1) & (icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract533_reg_387 <= trunc_ln50_fu_472_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract533_reg_387 <= ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract533_reg_387;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln50_reg_1182 == 1'd0) & (icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_1_0_0_0_extract535_reg_377 <= tmp_368_reg_1201;
        end else if (((icmp_ln50_reg_1182 == 1'd1) & (icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_1_0_0_0_extract535_reg_377 <= {{mac_sm_dout[26:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_p_fca_0_0_1_0_0_0_extract535_reg_377 <= ap_phi_reg_pp0_iter2_p_fca_0_0_1_0_0_0_extract535_reg_377;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_403_p2 == 1'd0))) begin
        indvar_flatten17_reg_299 <= add_ln45_fu_397_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten17_reg_299 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_403_p2 == 1'd0))) begin
        indvar_flatten_reg_310 <= select_ln46_1_fu_459_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_310 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_403_p2 == 1'd0))) begin
        t_reg_321 <= t_1_fu_447_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_reg_321 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract533_reg_387 <= ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract533_reg_387;
        ap_phi_reg_pp0_iter1_p_fca_0_0_1_0_0_0_extract535_reg_377 <= ap_phi_reg_pp0_iter0_p_fca_0_0_1_0_0_0_extract535_reg_377;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter2_p_fca_0_0_0_0_0_0_extract533_reg_387 <= ap_phi_reg_pp0_iter1_p_fca_0_0_0_0_0_0_extract533_reg_387;
        ap_phi_reg_pp0_iter2_p_fca_0_0_1_0_0_0_extract535_reg_377 <= ap_phi_reg_pp0_iter1_p_fca_0_0_1_0_0_0_extract535_reg_377;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln45_reg_1163 <= icmp_ln45_fu_403_p2;
        icmp_ln45_reg_1163_pp0_iter1_reg <= icmp_ln45_reg_1163;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln45_reg_1163_pp0_iter2_reg <= icmp_ln45_reg_1163_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1163 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln50_reg_1182 <= icmp_ln50_fu_467_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_403_p2 == 1'd0))) begin
        select_ln46_reg_1167 <= select_ln46_fu_439_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_367_reg_1196 <= {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4[32:22]}};
        tmp_368_reg_1201 <= {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4[43:33]}};
        vec_i_data_M_elems_V_2_reg_332 <= vec_i_data_M_elems_V_1_fu_1107_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_372_reg_1216 <= {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4[285:275]}};
        tmp_397_reg_1211 <= {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4[274:264]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln45_fu_403_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln50_reg_1182 == 1'd0)) begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4 = vec_i_data_M_elems_V_2_reg_332;
        end else if ((icmp_ln50_reg_1182 == 1'd1)) begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4 = vec_i_data_M_elems_V_fu_1042_p5;
        end else begin
            ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4 = ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_367;
        end
    end else begin
        ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4 = ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_367;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_1163_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        m1_sm_blk_n = m1_sm_full_n;
    end else begin
        m1_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_1163_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m1_sm_write = 1'b1;
    end else begin
        m1_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_1182 == 1'd1) & (icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_blk_n = mac_sm_empty_n;
    end else begin
        mac_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op35_read_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mac_sm_read = 1'b1;
    end else begin
        mac_sm_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_397_p2 = (indvar_flatten17_reg_299 + 16'd1);

assign add_ln46_fu_453_p2 = (indvar_flatten_reg_310 + 10'd1);

assign and_ln45_fu_427_p2 = (xor_ln45_fu_415_p2 & icmp_ln47_fu_421_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op35_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_empty_n == 1'b0)) | ((icmp_ln45_reg_1163_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (m1_sm_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op35_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_empty_n == 1'b0)) | ((icmp_ln45_reg_1163_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (m1_sm_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op35_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_empty_n == 1'b0)) | ((icmp_ln45_reg_1163_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (m1_sm_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = ((ap_predicate_op35_read_state4 == 1'b1) & (mac_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((icmp_ln45_reg_1163_pp0_iter2_reg == 1'd0) & (m1_sm_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_fca_0_0_0_0_0_0_extract533_reg_387 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_1_0_0_0_extract535_reg_377 = 'bx;

assign ap_phi_reg_pp0_iter2_vec_i_data_M_elems_V_3_reg_367 = 'bx;

always @ (*) begin
    ap_predicate_op35_read_state4 = ((icmp_ln50_reg_1182 == 1'd1) & (icmp_ln45_reg_1163_pp0_iter1_reg == 1'd0));
end

assign icmp_ln45_fu_403_p2 = ((indvar_flatten17_reg_299 == 16'd37632) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_409_p2 = ((indvar_flatten_reg_310 == 10'd384) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_421_p2 = ((t_reg_321 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_467_p2 = ((select_ln46_reg_1167 == 4'd0) ? 1'b1 : 1'b0);

assign m1_sm_din = {{{{{{{{{{{{{{5'd0}, {tmp_372_reg_1216}}}, {5'd0}}}, {tmp_397_reg_1211}}}, {5'd0}}}, {ap_phi_reg_pp0_iter3_p_fca_0_0_1_0_0_0_extract535_reg_377}}}, {5'd0}}}, {ap_phi_reg_pp0_iter3_p_fca_0_0_0_0_0_0_extract533_reg_387}};

assign or_ln46_fu_433_p2 = (icmp_ln46_fu_409_p2 | and_ln45_fu_427_p2);

assign select_ln46_1_fu_459_p3 = ((icmp_ln46_fu_409_p2[0:0] == 1'b1) ? 10'd1 : add_ln46_fu_453_p2);

assign select_ln46_fu_439_p3 = ((or_ln46_fu_433_p2[0:0] == 1'b1) ? 4'd0 : t_reg_321);

assign t_1_fu_447_p2 = (select_ln46_fu_439_p3 + 4'd1);

assign tmp_369_fu_1075_p4 = {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4[527:286]}};

assign tmp_370_fu_1085_p4 = {{ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4[263:44]}};

assign tmp_371_fu_1095_p5 = {{{{{{22'd0}, {tmp_369_fu_1075_p4}}}, {22'd0}}}, {tmp_370_fu_1085_p4}};

assign tmp_s_fu_946_p47 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln50_46_fu_936_p4}, {trunc_ln50_45_fu_926_p4}}, {trunc_ln50_44_fu_916_p4}}, {trunc_ln50_43_fu_906_p4}}, {trunc_ln50_42_fu_896_p4}}, {trunc_ln50_41_fu_886_p4}}, {trunc_ln50_40_fu_876_p4}}, {trunc_ln50_39_fu_866_p4}}, {trunc_ln50_38_fu_856_p4}}, {trunc_ln50_37_fu_846_p4}}, {trunc_ln50_36_fu_836_p4}}, {trunc_ln50_35_fu_826_p4}}, {trunc_ln50_34_fu_816_p4}}, {trunc_ln50_33_fu_806_p4}}, {trunc_ln50_32_fu_796_p4}}, {trunc_ln50_31_fu_786_p4}}, {trunc_ln50_30_fu_776_p4}}, {trunc_ln50_29_fu_766_p4}}, {trunc_ln50_28_fu_756_p4}}, {trunc_ln50_27_fu_746_p4}}, {trunc_ln50_26_fu_736_p4}}, {trunc_ln50_25_fu_726_p4}}, {trunc_ln50_24_fu_716_p4}}, {trunc_ln50_23_fu_706_p4}}, {trunc_ln50_22_fu_696_p4}}, {trunc_ln50_21_fu_686_p4}}, {trunc_ln50_20_fu_676_p4}}, {trunc_ln50_19_fu_666_p4}}, {trunc_ln50_18_fu_656_p4}}, {trunc_ln50_17_fu_646_p4}}, {trunc_ln50_16_fu_636_p4}}, {trunc_ln50_15_fu_626_p4}}, {trunc_ln50_14_fu_616_p4}}, {trunc_ln50_13_fu_606_p4}}, {trunc_ln50_12_fu_596_p4}}, {trunc_ln50_11_fu_586_p4}}, {trunc_ln50_10_fu_576_p4}}, {trunc_ln50_9_fu_566_p4}}, {trunc_ln50_8_fu_556_p4}}, {trunc_ln50_7_fu_546_p4}}, {trunc_ln50_6_fu_536_p4}}, {trunc_ln50_5_fu_526_p4}}, {trunc_ln50_4_fu_516_p4}}, {trunc_ln50_3_fu_506_p4}}, {trunc_ln50_2_fu_496_p4}}, {trunc_ln50_1_fu_486_p4}};

assign trunc_ln50_10_fu_576_p4 = {{mac_sm_dout[186:176]}};

assign trunc_ln50_11_fu_586_p4 = {{mac_sm_dout[202:192]}};

assign trunc_ln50_12_fu_596_p4 = {{mac_sm_dout[218:208]}};

assign trunc_ln50_13_fu_606_p4 = {{mac_sm_dout[234:224]}};

assign trunc_ln50_14_fu_616_p4 = {{mac_sm_dout[250:240]}};

assign trunc_ln50_15_fu_626_p4 = {{mac_sm_dout[266:256]}};

assign trunc_ln50_16_fu_636_p4 = {{mac_sm_dout[282:272]}};

assign trunc_ln50_17_fu_646_p4 = {{mac_sm_dout[298:288]}};

assign trunc_ln50_18_fu_656_p4 = {{mac_sm_dout[314:304]}};

assign trunc_ln50_19_fu_666_p4 = {{mac_sm_dout[330:320]}};

assign trunc_ln50_1_fu_486_p4 = {{mac_sm_dout[42:32]}};

assign trunc_ln50_20_fu_676_p4 = {{mac_sm_dout[346:336]}};

assign trunc_ln50_21_fu_686_p4 = {{mac_sm_dout[362:352]}};

assign trunc_ln50_22_fu_696_p4 = {{mac_sm_dout[378:368]}};

assign trunc_ln50_23_fu_706_p4 = {{mac_sm_dout[394:384]}};

assign trunc_ln50_24_fu_716_p4 = {{mac_sm_dout[410:400]}};

assign trunc_ln50_25_fu_726_p4 = {{mac_sm_dout[426:416]}};

assign trunc_ln50_26_fu_736_p4 = {{mac_sm_dout[442:432]}};

assign trunc_ln50_27_fu_746_p4 = {{mac_sm_dout[458:448]}};

assign trunc_ln50_28_fu_756_p4 = {{mac_sm_dout[474:464]}};

assign trunc_ln50_29_fu_766_p4 = {{mac_sm_dout[490:480]}};

assign trunc_ln50_2_fu_496_p4 = {{mac_sm_dout[58:48]}};

assign trunc_ln50_30_fu_776_p4 = {{mac_sm_dout[506:496]}};

assign trunc_ln50_31_fu_786_p4 = {{mac_sm_dout[522:512]}};

assign trunc_ln50_32_fu_796_p4 = {{mac_sm_dout[538:528]}};

assign trunc_ln50_33_fu_806_p4 = {{mac_sm_dout[554:544]}};

assign trunc_ln50_34_fu_816_p4 = {{mac_sm_dout[570:560]}};

assign trunc_ln50_35_fu_826_p4 = {{mac_sm_dout[586:576]}};

assign trunc_ln50_36_fu_836_p4 = {{mac_sm_dout[602:592]}};

assign trunc_ln50_37_fu_846_p4 = {{mac_sm_dout[618:608]}};

assign trunc_ln50_38_fu_856_p4 = {{mac_sm_dout[634:624]}};

assign trunc_ln50_39_fu_866_p4 = {{mac_sm_dout[650:640]}};

assign trunc_ln50_3_fu_506_p4 = {{mac_sm_dout[74:64]}};

assign trunc_ln50_40_fu_876_p4 = {{mac_sm_dout[666:656]}};

assign trunc_ln50_41_fu_886_p4 = {{mac_sm_dout[682:672]}};

assign trunc_ln50_42_fu_896_p4 = {{mac_sm_dout[698:688]}};

assign trunc_ln50_43_fu_906_p4 = {{mac_sm_dout[714:704]}};

assign trunc_ln50_44_fu_916_p4 = {{mac_sm_dout[730:720]}};

assign trunc_ln50_45_fu_926_p4 = {{mac_sm_dout[746:736]}};

assign trunc_ln50_46_fu_936_p4 = {{mac_sm_dout[762:752]}};

assign trunc_ln50_4_fu_516_p4 = {{mac_sm_dout[90:80]}};

assign trunc_ln50_5_fu_526_p4 = {{mac_sm_dout[106:96]}};

assign trunc_ln50_6_fu_536_p4 = {{mac_sm_dout[122:112]}};

assign trunc_ln50_7_fu_546_p4 = {{mac_sm_dout[138:128]}};

assign trunc_ln50_8_fu_556_p4 = {{mac_sm_dout[154:144]}};

assign trunc_ln50_9_fu_566_p4 = {{mac_sm_dout[170:160]}};

assign trunc_ln50_fu_472_p1 = mac_sm_dout[10:0];

assign vec_i_data_M_elems_V_1_fu_1107_p5 = {{tmp_371_fu_1095_p5}, {ap_phi_mux_vec_i_data_M_elems_V_3_phi_fu_370_p4[21:0]}};

assign vec_i_data_M_elems_V_fu_1042_p5 = {{tmp_s_fu_946_p47}, {vec_i_data_M_elems_V_2_reg_332[21:0]}};

assign xor_ln45_fu_415_p2 = (icmp_ln46_fu_409_p2 ^ 1'd1);

endmodule //MLP0_do_adapt_5
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_gelu (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m1_sm_dout,
        m1_sm_empty_n,
        m1_sm_read,
        ge_sm_din,
        ge_sm_full_n,
        ge_sm_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [63:0] m1_sm_dout;
input   m1_sm_empty_n;
output   m1_sm_read;
output  [31:0] ge_sm_din;
input   ge_sm_full_n;
output   ge_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m1_sm_read;
reg ge_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [5:0] mlp_inst_ge_3_address0;
reg    mlp_inst_ge_3_ce0;
wire   [2:0] mlp_inst_ge_3_q0;
reg   [5:0] mlp_inst_ge_3_address1;
reg    mlp_inst_ge_3_ce1;
wire   [2:0] mlp_inst_ge_3_q1;
reg    m1_sm_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln54_reg_525;
reg    ge_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln54_reg_525_pp0_iter2_reg;
reg   [15:0] indvar_flatten_reg_142;
wire   [15:0] add_ln54_fu_153_p2;
reg   [15:0] add_ln54_reg_520;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
reg    ap_block_state8_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln54_fu_159_p2;
reg   [0:0] icmp_ln54_reg_525_pp0_iter1_reg;
wire   [10:0] trunc_ln145_fu_165_p1;
reg   [10:0] trunc_ln145_reg_529;
reg    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [10:0] trunc_ln145_s_reg_534;
reg   [10:0] trunc_ln145_23_reg_539;
reg   [10:0] trunc_ln145_24_reg_544;
wire   [10:0] ret_fu_199_p2;
reg   [10:0] ret_reg_549;
reg   [3:0] tmp_7_reg_556;
wire   [10:0] ret_8_fu_214_p2;
reg   [10:0] ret_8_reg_561;
reg   [3:0] tmp_10_reg_568;
wire   [10:0] ret_9_fu_229_p2;
reg   [10:0] ret_9_reg_573;
reg   [3:0] tmp_13_reg_580;
wire   [10:0] ret_10_fu_244_p2;
reg   [10:0] ret_10_reg_585;
reg   [3:0] tmp_16_reg_592;
wire   [5:0] cursor_V_fu_307_p3;
reg   [5:0] cursor_V_reg_597;
wire   [5:0] cursor_V_1_fu_363_p3;
reg   [5:0] cursor_V_1_reg_602;
wire   [5:0] cursor_V_2_fu_419_p3;
reg   [5:0] cursor_V_2_reg_607;
wire   [5:0] cursor_V_3_fu_475_p3;
reg   [5:0] cursor_V_3_reg_612;
reg   [2:0] mlp_inst_ge_3_load_reg_627;
reg    ap_enable_reg_pp0_iter2;
reg   [2:0] mlp_inst_ge_3_load_1_reg_632;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage1_subdone;
reg   [15:0] ap_phi_mux_indvar_flatten_phi_fu_146_p4;
wire   [63:0] zext_ln534_fu_483_p1;
wire   [63:0] zext_ln534_2_fu_487_p1;
wire   [63:0] zext_ln534_3_fu_491_p1;
wire   [63:0] zext_ln534_4_fu_495_p1;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_8_fu_280_p3;
wire   [0:0] xor_ln7_fu_287_p2;
wire   [0:0] tmp_6_fu_268_p3;
wire   [0:0] icmp_ln886_fu_275_p2;
wire   [0:0] or_ln7_fu_301_p2;
wire   [5:0] select_ln7_fu_293_p3;
wire   [5:0] trunc_ln2_fu_259_p4;
wire   [0:0] tmp_11_fu_336_p3;
wire   [0:0] xor_ln7_1_fu_343_p2;
wire   [0:0] tmp_9_fu_324_p3;
wire   [0:0] icmp_ln886_2_fu_331_p2;
wire   [0:0] or_ln7_1_fu_357_p2;
wire   [5:0] select_ln7_5_fu_349_p3;
wire   [5:0] trunc_ln67_1_fu_315_p4;
wire   [0:0] tmp_14_fu_392_p3;
wire   [0:0] xor_ln7_2_fu_399_p2;
wire   [0:0] tmp_12_fu_380_p3;
wire   [0:0] icmp_ln886_3_fu_387_p2;
wire   [0:0] or_ln7_2_fu_413_p2;
wire   [5:0] select_ln7_7_fu_405_p3;
wire   [5:0] trunc_ln67_2_fu_371_p4;
wire   [0:0] tmp_17_fu_448_p3;
wire   [0:0] xor_ln7_3_fu_455_p2;
wire   [0:0] tmp_15_fu_436_p3;
wire   [0:0] icmp_ln886_4_fu_443_p2;
wire   [0:0] or_ln7_3_fu_469_p2;
wire   [5:0] select_ln7_9_fu_461_p3;
wire   [5:0] trunc_ln67_3_fu_427_p4;
wire   [26:0] tmp_fu_499_p8;
wire    ap_CS_fsm_state9;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 4'd1;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

MLP0_do_gelu_mlp_inst_ge_3 #(
    .DataWidth( 3 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mlp_inst_ge_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_ge_3_address0),
    .ce0(mlp_inst_ge_3_ce0),
    .q0(mlp_inst_ge_3_q0),
    .address1(mlp_inst_ge_3_address1),
    .ce1(mlp_inst_ge_3_ce1),
    .q1(mlp_inst_ge_3_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_525 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_142 <= add_ln54_reg_520;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_142 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln54_reg_520 <= add_ln54_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln54_reg_525_pp0_iter1_reg == 1'd0))) begin
        cursor_V_1_reg_602 <= cursor_V_1_fu_363_p3;
        cursor_V_2_reg_607 <= cursor_V_2_fu_419_p3;
        cursor_V_3_reg_612 <= cursor_V_3_fu_475_p3;
        cursor_V_reg_597 <= cursor_V_fu_307_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln54_reg_525 <= icmp_ln54_fu_159_p2;
        icmp_ln54_reg_525_pp0_iter1_reg <= icmp_ln54_reg_525;
        icmp_ln54_reg_525_pp0_iter2_reg <= icmp_ln54_reg_525_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_525_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mlp_inst_ge_3_load_1_reg_632 <= mlp_inst_ge_3_q0;
        mlp_inst_ge_3_load_reg_627 <= mlp_inst_ge_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_525 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ret_10_reg_585 <= ret_10_fu_244_p2;
        ret_8_reg_561 <= ret_8_fu_214_p2;
        ret_9_reg_573 <= ret_9_fu_229_p2;
        ret_reg_549 <= ret_fu_199_p2;
        tmp_10_reg_568 <= {{ret_8_fu_214_p2[10:7]}};
        tmp_13_reg_580 <= {{ret_9_fu_229_p2[10:7]}};
        tmp_16_reg_592 <= {{ret_10_fu_244_p2[10:7]}};
        tmp_7_reg_556 <= {{ret_fu_199_p2[10:7]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_525 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln145_23_reg_539 <= {{m1_sm_dout[42:32]}};
        trunc_ln145_24_reg_544 <= {{m1_sm_dout[58:48]}};
        trunc_ln145_reg_529 <= trunc_ln145_fu_165_p1;
        trunc_ln145_s_reg_534 <= {{m1_sm_dout[26:16]}};
    end
end

always @ (*) begin
    if ((icmp_ln54_fu_159_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_525 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_146_p4 = add_ln54_reg_520;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_146_p4 = indvar_flatten_reg_142;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_525_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ge_sm_blk_n = ge_sm_full_n;
    end else begin
        ge_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_525_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ge_sm_write = 1'b1;
    end else begin
        ge_sm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_525 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m1_sm_blk_n = m1_sm_empty_n;
    end else begin
        m1_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_525 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m1_sm_read = 1'b1;
    end else begin
        m1_sm_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            mlp_inst_ge_3_address0 = zext_ln534_4_fu_495_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mlp_inst_ge_3_address0 = zext_ln534_2_fu_487_p1;
        end else begin
            mlp_inst_ge_3_address0 = 'bx;
        end
    end else begin
        mlp_inst_ge_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            mlp_inst_ge_3_address1 = zext_ln534_3_fu_491_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mlp_inst_ge_3_address1 = zext_ln534_fu_483_p1;
        end else begin
            mlp_inst_ge_3_address1 = 'bx;
        end
    end else begin
        mlp_inst_ge_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        mlp_inst_ge_3_ce0 = 1'b1;
    end else begin
        mlp_inst_ge_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        mlp_inst_ge_3_ce1 = 1'b1;
    end else begin
        mlp_inst_ge_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln54_fu_159_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln54_fu_159_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln54_fu_153_p2 = (ap_phi_mux_indvar_flatten_phi_fu_146_p4 + 16'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln54_reg_525_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ge_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln54_reg_525_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ge_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln54_reg_525_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ge_sm_full_n == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln54_reg_525 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m1_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln54_reg_525 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (m1_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln54_reg_525 == 1'd0) & (m1_sm_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter3 = ((icmp_ln54_reg_525_pp0_iter2_reg == 1'd0) & (ge_sm_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign cursor_V_1_fu_363_p3 = ((or_ln7_1_fu_357_p2[0:0] == 1'b1) ? select_ln7_5_fu_349_p3 : trunc_ln67_1_fu_315_p4);

assign cursor_V_2_fu_419_p3 = ((or_ln7_2_fu_413_p2[0:0] == 1'b1) ? select_ln7_7_fu_405_p3 : trunc_ln67_2_fu_371_p4);

assign cursor_V_3_fu_475_p3 = ((or_ln7_3_fu_469_p2[0:0] == 1'b1) ? select_ln7_9_fu_461_p3 : trunc_ln67_3_fu_427_p4);

assign cursor_V_fu_307_p3 = ((or_ln7_fu_301_p2[0:0] == 1'b1) ? select_ln7_fu_293_p3 : trunc_ln2_fu_259_p4);

assign ge_sm_din = tmp_fu_499_p8;

assign icmp_ln54_fu_159_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_146_p4 == 16'd37632) ? 1'b1 : 1'b0);

assign icmp_ln886_2_fu_331_p2 = (($signed(tmp_10_reg_568) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_387_p2 = (($signed(tmp_13_reg_580) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_443_p2 = (($signed(tmp_16_reg_592) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_275_p2 = (($signed(tmp_7_reg_556) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign or_ln7_1_fu_357_p2 = (tmp_9_fu_324_p3 | icmp_ln886_2_fu_331_p2);

assign or_ln7_2_fu_413_p2 = (tmp_12_fu_380_p3 | icmp_ln886_3_fu_387_p2);

assign or_ln7_3_fu_469_p2 = (tmp_15_fu_436_p3 | icmp_ln886_4_fu_443_p2);

assign or_ln7_fu_301_p2 = (tmp_6_fu_268_p3 | icmp_ln886_fu_275_p2);

assign ret_10_fu_244_p2 = (trunc_ln145_24_reg_544 + 11'd76);

assign ret_8_fu_214_p2 = (trunc_ln145_s_reg_534 + 11'd76);

assign ret_9_fu_229_p2 = (trunc_ln145_23_reg_539 + 11'd76);

assign ret_fu_199_p2 = (trunc_ln145_reg_529 + 11'd76);

assign select_ln7_5_fu_349_p3 = ((xor_ln7_1_fu_343_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign select_ln7_7_fu_405_p3 = ((xor_ln7_2_fu_399_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign select_ln7_9_fu_461_p3 = ((xor_ln7_3_fu_455_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign select_ln7_fu_293_p3 = ((xor_ln7_fu_287_p2[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign start_out = real_start;

assign tmp_11_fu_336_p3 = ret_8_reg_561[32'd10];

assign tmp_12_fu_380_p3 = ret_9_reg_573[32'd10];

assign tmp_14_fu_392_p3 = ret_9_reg_573[32'd10];

assign tmp_15_fu_436_p3 = ret_10_reg_585[32'd10];

assign tmp_17_fu_448_p3 = ret_10_reg_585[32'd10];

assign tmp_6_fu_268_p3 = ret_reg_549[32'd10];

assign tmp_8_fu_280_p3 = ret_reg_549[32'd10];

assign tmp_9_fu_324_p3 = ret_8_reg_561[32'd10];

assign tmp_fu_499_p8 = {{{{{{{mlp_inst_ge_3_q0}, {5'd0}}, {mlp_inst_ge_3_q1}}, {5'd0}}, {mlp_inst_ge_3_load_1_reg_632}}, {5'd0}}, {mlp_inst_ge_3_load_reg_627}};

assign trunc_ln145_fu_165_p1 = m1_sm_dout[10:0];

assign trunc_ln2_fu_259_p4 = {{ret_reg_549[6:1]}};

assign trunc_ln67_1_fu_315_p4 = {{ret_8_reg_561[6:1]}};

assign trunc_ln67_2_fu_371_p4 = {{ret_9_reg_573[6:1]}};

assign trunc_ln67_3_fu_427_p4 = {{ret_10_reg_585[6:1]}};

assign xor_ln7_1_fu_343_p2 = (tmp_11_fu_336_p3 ^ 1'd1);

assign xor_ln7_2_fu_399_p2 = (tmp_14_fu_392_p3 ^ 1'd1);

assign xor_ln7_3_fu_455_p2 = (tmp_17_fu_448_p3 ^ 1'd1);

assign xor_ln7_fu_287_p2 = (tmp_8_fu_280_p3 ^ 1'd1);

assign zext_ln534_2_fu_487_p1 = cursor_V_1_reg_602;

assign zext_ln534_3_fu_491_p1 = cursor_V_2_reg_607;

assign zext_ln534_4_fu_495_p1 = cursor_V_3_reg_612;

assign zext_ln534_fu_483_p1 = cursor_V_reg_597;

endmodule //MLP0_do_gelu
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) module MLP0_do_gelu_mlp_inst_ge_3_rom (
addr0, ce0, q0, addr1, ce1, q1, clk);

parameter DWIDTH = 3;
parameter AWIDTH = 6;
parameter MEM_SIZE = 64;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input[AWIDTH-1:0] addr1;
input ce1;
output reg[DWIDTH-1:0] q1;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_do_gelu_mlp_inst_ge_3_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



always @(posedge clk)  
begin 
    if (ce1) 
    begin
        q1 <= ram[addr1];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_do_gelu_mlp_inst_ge_3(
    reset,
    clk,
    address0,
    ce0,
    q0,
    address1,
    ce1,
    q1);

parameter DataWidth = 32'd3;
parameter AddressRange = 32'd64;
parameter AddressWidth = 32'd6;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;
input[AddressWidth - 1:0] address1;
input ce1;
output[DataWidth - 1:0] q1;



MLP0_do_gelu_mlp_inst_ge_3_rom MLP0_do_gelu_mlp_inst_ge_3_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ),
    .addr1( address1 ),
    .ce1( ce1 ),
    .q1( q1 ));

endmodule

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_layernorm (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        main_sm_dout,
        main_sm_empty_n,
        main_sm_read,
        ln_sm_din,
        ln_sm_full_n,
        ln_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state25 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] main_sm_dout;
input   main_sm_empty_n;
output   main_sm_read;
output  [15:0] ln_sm_din;
input   ln_sm_full_n;
output   ln_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg main_sm_read;
reg ln_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [6:0] mlp_inst_lnq_rsqrt_table_V_address0;
reg    mlp_inst_lnq_rsqrt_table_V_ce0;
wire   [11:0] mlp_inst_lnq_rsqrt_table_V_q0;
wire   [6:0] mlp_inst_lnq_rsqrt_table_V_address1;
reg    mlp_inst_lnq_rsqrt_table_V_ce1;
wire   [11:0] mlp_inst_lnq_rsqrt_table_V_q1;
wire   [7:0] mlp_inst_lnq_lnw_address0;
reg    mlp_inst_lnq_lnw_ce0;
wire   [31:0] mlp_inst_lnq_lnw_q0;
wire   [7:0] mlp_inst_lnq_lnb_address0;
reg    mlp_inst_lnq_lnb_ce0;
wire   [63:0] mlp_inst_lnq_lnb_q0;
reg    main_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [1:0] select_ln108_1_reg_977;
reg    ln_sm_blk_n;
reg    ap_enable_reg_pp0_iter22;
reg   [1:0] select_ln108_1_reg_977_pp0_iter21_reg;
reg   [15:0] indvar_flatten27_reg_248;
reg   [9:0] indvar_flatten_reg_259;
reg   [1:0] state_reg_270;
reg   [7:0] ct_reg_281;
wire   [15:0] add_ln107_fu_306_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state22_pp0_stage0_iter3;
wire    ap_block_state23_pp0_stage0_iter4;
wire    ap_block_state24_pp0_stage0_iter5;
wire    ap_block_state5_pp0_stage0_iter6;
wire    ap_block_state6_pp0_stage0_iter7;
wire    ap_block_state7_pp0_stage0_iter8;
wire    ap_block_state8_pp0_stage0_iter9;
wire    ap_block_state9_pp0_stage0_iter10;
wire    ap_block_state10_pp0_stage0_iter11;
wire    ap_block_state11_pp0_stage0_iter12;
wire    ap_block_state12_pp0_stage0_iter13;
wire    ap_block_state13_pp0_stage0_iter14;
wire    ap_block_state14_pp0_stage0_iter15;
wire    ap_block_state15_pp0_stage0_iter16;
wire    ap_block_state16_pp0_stage0_iter17;
wire    ap_block_state17_pp0_stage0_iter18;
wire    ap_block_state18_pp0_stage0_iter19;
wire    ap_block_state19_pp0_stage0_iter20;
wire    ap_block_state20_pp0_stage0_iter21;
reg    ap_block_state21_pp0_stage0_iter22;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln107_fu_312_p2;
reg   [0:0] icmp_ln107_reg_965;
reg   [0:0] icmp_ln107_reg_965_pp0_iter1_reg;
wire   [7:0] select_ln108_fu_362_p3;
reg   [7:0] select_ln108_reg_969;
wire   [1:0] select_ln108_1_fu_370_p3;
reg   [1:0] select_ln108_1_reg_977_pp0_iter1_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter2_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter3_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter4_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter5_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter6_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter7_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter8_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter9_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter10_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter11_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter12_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter13_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter14_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter15_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter16_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter17_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter18_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter19_reg;
reg   [1:0] select_ln108_1_reg_977_pp0_iter20_reg;
wire   [9:0] select_ln108_2_fu_384_p3;
wire   [63:0] zext_ln109_fu_392_p1;
reg   [63:0] zext_ln109_reg_987;
reg   [63:0] zext_ln109_reg_987_pp0_iter2_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter3_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter4_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter5_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter6_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter7_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter8_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter9_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter10_reg;
reg   [63:0] zext_ln109_reg_987_pp0_iter11_reg;
wire   [0:0] grp_fu_292_p2;
reg   [0:0] cmp81_reg_998;
reg   [0:0] cmp81_reg_998_pp0_iter2_reg;
reg   [0:0] cmp81_reg_998_pp0_iter3_reg;
reg   [0:0] cmp81_reg_998_pp0_iter4_reg;
reg   [0:0] cmp81_reg_998_pp0_iter5_reg;
reg   [0:0] cmp81_reg_998_pp0_iter6_reg;
reg   [0:0] cmp81_reg_998_pp0_iter7_reg;
reg   [0:0] cmp81_reg_998_pp0_iter8_reg;
reg   [0:0] cmp81_reg_998_pp0_iter9_reg;
reg   [0:0] cmp81_reg_998_pp0_iter10_reg;
wire   [0:0] grp_fu_297_p2;
reg   [0:0] icmp_ln163_reg_1003;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter2_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter3_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter4_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter5_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter6_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter7_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter8_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter9_reg;
reg   [0:0] icmp_ln163_reg_1003_pp0_iter10_reg;
wire  signed [14:0] trunc_ln145_fu_396_p1;
reg  signed [14:0] trunc_ln145_reg_1007;
wire  signed [14:0] trunc_ln145_s_fu_400_p4;
reg  signed [14:0] trunc_ln145_s_reg_1012;
reg   [0:0] icmp_ln119_reg_1017;
reg   [0:0] icmp_ln137_reg_1023;
reg   [0:0] icmp_ln137_reg_1023_pp0_iter2_reg;
reg   [0:0] icmp_ln137_reg_1023_pp0_iter3_reg;
reg   [0:0] icmp_ln137_reg_1023_pp0_iter4_reg;
wire   [7:0] add_ln109_fu_419_p2;
wire   [29:0] buffer_V_q1;
reg   [29:0] buffer_V_load_reg_1032;
reg    ap_enable_reg_pp0_iter2;
reg   [29:0] buffer_V_load_reg_1032_pp0_iter3_reg;
reg   [29:0] buffer_V_load_reg_1032_pp0_iter4_reg;
reg   [29:0] buffer_V_load_reg_1032_pp0_iter5_reg;
wire   [14:0] diff_4_fu_493_p2;
reg   [14:0] diff_4_reg_1050;
reg   [14:0] diff_4_reg_1050_pp0_iter7_reg;
reg   [14:0] diff_4_reg_1050_pp0_iter8_reg;
reg   [14:0] diff_4_reg_1050_pp0_iter9_reg;
reg  signed [14:0] diff_4_reg_1050_pp0_iter10_reg;
wire   [14:0] diff_5_fu_512_p2;
reg   [14:0] diff_5_reg_1055;
reg   [14:0] diff_5_reg_1055_pp0_iter7_reg;
reg   [14:0] diff_5_reg_1055_pp0_iter8_reg;
reg   [14:0] diff_5_reg_1055_pp0_iter9_reg;
reg  signed [14:0] diff_5_reg_1055_pp0_iter10_reg;
wire  signed [29:0] grp_fu_896_p2;
reg  signed [29:0] ret_7_reg_1060;
wire  signed [29:0] grp_fu_902_p2;
reg  signed [29:0] sum_V_1_reg_1066;
wire   [29:0] diff_pow2_fu_530_p3;
reg   [29:0] diff_pow2_reg_1071;
(* use_dsp48 = "no" *) wire   [29:0] lhs_5_fu_540_p2;
reg   [29:0] lhs_5_reg_1076;
reg   [31:0] mlp_inst_lnq_lnw_load_reg_1121;
wire   [38:0] trunc_ln1346_fu_620_p1;
reg   [38:0] trunc_ln1346_reg_1126;
reg   [38:0] trunc_ln1346_reg_1126_pp0_iter14_reg;
reg   [38:0] trunc_ln1346_reg_1126_pp0_iter15_reg;
reg   [38:0] trunc_ln1346_reg_1126_pp0_iter16_reg;
reg   [38:0] trunc_ln1346_reg_1126_pp0_iter17_reg;
reg   [38:0] trunc_ln1346_reg_1126_pp0_iter18_reg;
reg   [38:0] trunc_ln1346_reg_1126_pp0_iter19_reg;
reg   [38:0] trunc_ln1346_reg_1126_pp0_iter20_reg;
wire  signed [38:0] sext_ln1345_3_fu_627_p1;
wire   [38:0] grp_fu_630_p2;
reg   [38:0] mul_ln1346_reg_1148;
wire   [38:0] grp_fu_639_p2;
reg   [38:0] mul_ln1346_1_reg_1153;
wire   [38:0] val_fu_645_p2;
reg   [38:0] val_reg_1158;
reg   [6:0] rel_V_reg_1163;
reg   [4:0] tmp_1_reg_1168;
wire   [38:0] val_1_fu_669_p2;
reg   [38:0] val_1_reg_1173;
reg   [6:0] rel_V_1_reg_1178;
reg   [4:0] tmp_2_reg_1183;
wire  signed [29:0] sext_ln1345_fu_809_p1;
wire  signed [29:0] sext_ln1345_8_fu_832_p1;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
wire   [7:0] buffer_V_address1;
reg    buffer_V_ce1;
reg    buffer_V_we1;
wire   [29:0] buffer_V_d1;
reg   [1:0] ap_phi_mux_state_phi_fu_274_p4;
reg   [7:0] ap_phi_mux_ct_phi_fu_285_p4;
wire   [63:0] zext_ln534_fu_565_p1;
wire   [63:0] zext_ln534_1_fu_585_p1;
reg   [9:0] mean_V_0_1_fu_132;
reg   [9:0] mean_V_1_1_fu_136;
reg   [11:0] rhs_fu_140;
reg   [11:0] rhs_1_fu_144;
reg   [17:0] acc_V_0_1_fu_148;
wire  signed [17:0] acc_V_0_fu_447_p2;
reg   [17:0] acc_V_1_1_fu_152;
wire  signed [17:0] acc_V_1_fu_456_p2;
reg   [29:0] lhs_fu_156;
reg   [29:0] sum_V_1_1_fu_160;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln108_fu_318_p2;
wire   [0:0] icmp_ln109_fu_338_p2;
wire   [0:0] xor_ln107_fu_332_p2;
wire   [1:0] select_ln107_fu_324_p3;
wire   [0:0] and_ln107_fu_344_p2;
wire   [0:0] or_ln108_fu_356_p2;
wire   [1:0] state_2_fu_350_p2;
wire   [9:0] add_ln108_1_fu_378_p2;
wire   [17:0] select_ln119_1_fu_437_p3;
wire  signed [17:0] sext_ln691_fu_444_p1;
wire   [17:0] select_ln119_fu_430_p3;
wire  signed [17:0] sext_ln691_1_fu_453_p1;
wire   [14:0] trunc_ln215_5_fu_486_p1;
wire  signed [14:0] sext_ln1347_1_fu_489_p1;
wire   [14:0] tmp_365_fu_499_p4;
wire  signed [14:0] sext_ln1347_2_fu_508_p1;
(* use_dsp48 = "no" *) wire   [29:0] add_ln213_fu_525_p2;
wire   [29:0] ret_5_fu_550_p2;
wire   [6:0] cursor_V_fu_555_p4;
wire   [29:0] ret_6_fu_570_p2;
wire   [6:0] cursor_V_1_fu_575_p4;
wire  signed [26:0] grp_fu_882_p2;
wire  signed [31:0] grp_fu_630_p0;
wire  signed [26:0] grp_fu_889_p2;
wire  signed [31:0] grp_fu_639_p0;
wire   [0:0] icmp_ln878_fu_702_p2;
wire   [0:0] icmp_ln886_fu_707_p2;
wire   [0:0] or_ln7_fu_720_p2;
wire   [2:0] select_ln7_2_fu_712_p3;
wire   [2:0] trunc_ln8_fu_693_p4;
wire   [0:0] icmp_ln878_1_fu_743_p2;
wire   [0:0] icmp_ln886_1_fu_748_p2;
wire   [0:0] or_ln7_1_fu_761_p2;
wire   [2:0] select_ln7_3_fu_753_p3;
wire   [2:0] trunc_ln8_1_fu_734_p4;
wire   [2:0] select_ln7_1_fu_767_p3;
wire   [2:0] select_ln7_fu_726_p3;
wire   [10:0] tmp_366_fu_775_p4;
wire   [14:0] trunc_ln215_fu_796_p1;
wire  signed [14:0] sext_ln1347_fu_799_p1;
wire   [14:0] diff_fu_803_p2;
wire   [14:0] tmp_363_fu_813_p4;
wire  signed [14:0] sext_ln1347_3_fu_822_p1;
wire   [14:0] diff_1_fu_826_p2;
wire  signed [32:0] grp_fu_864_p3;
wire  signed [32:0] grp_fu_873_p3;
wire   [16:0] grp_fu_864_p1;
wire   [23:0] grp_fu_864_p2;
wire   [16:0] grp_fu_873_p1;
wire   [23:0] grp_fu_873_p2;
wire   [11:0] grp_fu_882_p1;
wire   [11:0] grp_fu_889_p1;
wire  signed [14:0] grp_fu_896_p0;
wire  signed [14:0] grp_fu_896_p1;
wire  signed [14:0] grp_fu_902_p0;
wire  signed [14:0] grp_fu_902_p1;
reg    grp_fu_630_ce;
reg    grp_fu_639_ce;
reg    grp_fu_864_ce;
reg    grp_fu_873_ce;
reg    grp_fu_882_ce;
reg    grp_fu_889_ce;
reg    grp_fu_896_ce;
reg    grp_fu_902_ce;
wire    ap_CS_fsm_state25;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [26:0] grp_fu_882_p10;
wire   [26:0] grp_fu_889_p10;
reg    ap_condition_1080;
reg    ap_condition_1084;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter22 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter4 = 1'b0;
//#0 ap_enable_reg_pp0_iter5 = 1'b0;
//#0 ap_enable_reg_pp0_iter6 = 1'b0;
//#0 ap_enable_reg_pp0_iter7 = 1'b0;
//#0 ap_enable_reg_pp0_iter8 = 1'b0;
//#0 ap_enable_reg_pp0_iter9 = 1'b0;
//#0 ap_enable_reg_pp0_iter10 = 1'b0;
//#0 ap_enable_reg_pp0_iter11 = 1'b0;
//#0 ap_enable_reg_pp0_iter12 = 1'b0;
//#0 ap_enable_reg_pp0_iter13 = 1'b0;
//#0 ap_enable_reg_pp0_iter14 = 1'b0;
//#0 ap_enable_reg_pp0_iter15 = 1'b0;
//#0 ap_enable_reg_pp0_iter16 = 1'b0;
//#0 ap_enable_reg_pp0_iter17 = 1'b0;
//#0 ap_enable_reg_pp0_iter18 = 1'b0;
//#0 ap_enable_reg_pp0_iter19 = 1'b0;
//#0 ap_enable_reg_pp0_iter20 = 1'b0;
//#0 ap_enable_reg_pp0_iter21 = 1'b0;
end

MLP0_do_layernorm_mlp_inst_lnq_rsqrt_table_V #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
mlp_inst_lnq_rsqrt_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_lnq_rsqrt_table_V_address0),
    .ce0(mlp_inst_lnq_rsqrt_table_V_ce0),
    .q0(mlp_inst_lnq_rsqrt_table_V_q0),
    .address1(mlp_inst_lnq_rsqrt_table_V_address1),
    .ce1(mlp_inst_lnq_rsqrt_table_V_ce1),
    .q1(mlp_inst_lnq_rsqrt_table_V_q1)
);

MLP0_do_layernorm_mlp_inst_lnq_lnw #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
mlp_inst_lnq_lnw_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_lnq_lnw_address0),
    .ce0(mlp_inst_lnq_lnw_ce0),
    .q0(mlp_inst_lnq_lnw_q0)
);

MLP0_do_layernorm_mlp_inst_lnq_lnb #(
    .DataWidth( 64 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
mlp_inst_lnq_lnb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_lnq_lnb_address0),
    .ce0(mlp_inst_lnq_lnb_ce0),
    .q0(mlp_inst_lnq_lnb_q0)
);

MLP0_do_layernorm_buffer_V #(
    .DataWidth( 30 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address1(buffer_V_address1),
    .ce1(buffer_V_ce1),
    .we1(buffer_V_we1),
    .d1(buffer_V_d1),
    .q1(buffer_V_q1)
);

MLP0_mul_32s_27s_39_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 39 ))
mul_32s_27s_39_7_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_630_p0),
    .din1(grp_fu_882_p2),
    .ce(grp_fu_630_ce),
    .dout(grp_fu_630_p2)
);

MLP0_mul_32s_27s_39_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 39 ))
mul_32s_27s_39_7_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_639_p0),
    .din1(grp_fu_889_p2),
    .ce(grp_fu_639_ce),
    .dout(grp_fu_639_p2)
);

MLP0_mac_muladd_18s_17ns_24ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 33 ))
mac_muladd_18s_17ns_24ns_33_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_V_0_fu_447_p2),
    .din1(grp_fu_864_p1),
    .din2(grp_fu_864_p2),
    .ce(grp_fu_864_ce),
    .dout(grp_fu_864_p3)
);

MLP0_mac_muladd_18s_17ns_24ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 33 ))
mac_muladd_18s_17ns_24ns_33_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(acc_V_1_fu_456_p2),
    .din1(grp_fu_873_p1),
    .din2(grp_fu_873_p2),
    .ce(grp_fu_873_ce),
    .dout(grp_fu_873_p3)
);

MLP0_mul_mul_15s_12ns_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 27 ))
mul_mul_15s_12ns_27_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(diff_4_reg_1050_pp0_iter10_reg),
    .din1(grp_fu_882_p1),
    .ce(grp_fu_882_ce),
    .dout(grp_fu_882_p2)
);

MLP0_mul_mul_15s_12ns_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 27 ))
mul_mul_15s_12ns_27_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(diff_5_reg_1055_pp0_iter10_reg),
    .din1(grp_fu_889_p1),
    .ce(grp_fu_889_ce),
    .dout(grp_fu_889_p2)
);

MLP0_mul_mul_15s_15s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_15s_15s_30_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_896_p0),
    .din1(grp_fu_896_p1),
    .ce(grp_fu_896_ce),
    .dout(grp_fu_896_p2)
);

MLP0_mul_mul_15s_15s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_15s_15s_30_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_902_p0),
    .din1(grp_fu_902_p1),
    .ce(grp_fu_902_ce),
    .dout(grp_fu_902_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter22 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_965 == 1'd0))) begin
        ct_reg_281 <= add_ln109_fu_419_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ct_reg_281 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_fu_312_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten27_reg_248 <= add_ln107_fu_306_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten27_reg_248 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_fu_312_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_259 <= select_ln108_2_fu_384_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_259 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_965 == 1'd0))) begin
        state_reg_270 <= select_ln108_1_reg_977;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        state_reg_270 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1084)) begin
            sum_V_1_1_fu_160 <= grp_fu_902_p2;
        end else if ((1'b1 == ap_condition_1080)) begin
            sum_V_1_1_fu_160 <= lhs_5_fu_540_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln108_1_reg_977_pp0_iter1_reg == 2'd0))) begin
        acc_V_0_1_fu_148 <= acc_V_0_fu_447_p2;
        acc_V_1_1_fu_152 <= acc_V_1_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln107_reg_965_pp0_iter1_reg == 1'd0))) begin
        buffer_V_load_reg_1032 <= buffer_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        buffer_V_load_reg_1032_pp0_iter3_reg <= buffer_V_load_reg_1032;
        buffer_V_load_reg_1032_pp0_iter4_reg <= buffer_V_load_reg_1032_pp0_iter3_reg;
        buffer_V_load_reg_1032_pp0_iter5_reg <= buffer_V_load_reg_1032_pp0_iter4_reg;
        cmp81_reg_998_pp0_iter10_reg <= cmp81_reg_998_pp0_iter9_reg;
        cmp81_reg_998_pp0_iter2_reg <= cmp81_reg_998;
        cmp81_reg_998_pp0_iter3_reg <= cmp81_reg_998_pp0_iter2_reg;
        cmp81_reg_998_pp0_iter4_reg <= cmp81_reg_998_pp0_iter3_reg;
        cmp81_reg_998_pp0_iter5_reg <= cmp81_reg_998_pp0_iter4_reg;
        cmp81_reg_998_pp0_iter6_reg <= cmp81_reg_998_pp0_iter5_reg;
        cmp81_reg_998_pp0_iter7_reg <= cmp81_reg_998_pp0_iter6_reg;
        cmp81_reg_998_pp0_iter8_reg <= cmp81_reg_998_pp0_iter7_reg;
        cmp81_reg_998_pp0_iter9_reg <= cmp81_reg_998_pp0_iter8_reg;
        diff_4_reg_1050_pp0_iter10_reg <= diff_4_reg_1050_pp0_iter9_reg;
        diff_4_reg_1050_pp0_iter7_reg <= diff_4_reg_1050;
        diff_4_reg_1050_pp0_iter8_reg <= diff_4_reg_1050_pp0_iter7_reg;
        diff_4_reg_1050_pp0_iter9_reg <= diff_4_reg_1050_pp0_iter8_reg;
        diff_5_reg_1055_pp0_iter10_reg <= diff_5_reg_1055_pp0_iter9_reg;
        diff_5_reg_1055_pp0_iter7_reg <= diff_5_reg_1055;
        diff_5_reg_1055_pp0_iter8_reg <= diff_5_reg_1055_pp0_iter7_reg;
        diff_5_reg_1055_pp0_iter9_reg <= diff_5_reg_1055_pp0_iter8_reg;
        icmp_ln137_reg_1023_pp0_iter2_reg <= icmp_ln137_reg_1023;
        icmp_ln137_reg_1023_pp0_iter3_reg <= icmp_ln137_reg_1023_pp0_iter2_reg;
        icmp_ln137_reg_1023_pp0_iter4_reg <= icmp_ln137_reg_1023_pp0_iter3_reg;
        icmp_ln163_reg_1003_pp0_iter10_reg <= icmp_ln163_reg_1003_pp0_iter9_reg;
        icmp_ln163_reg_1003_pp0_iter2_reg <= icmp_ln163_reg_1003;
        icmp_ln163_reg_1003_pp0_iter3_reg <= icmp_ln163_reg_1003_pp0_iter2_reg;
        icmp_ln163_reg_1003_pp0_iter4_reg <= icmp_ln163_reg_1003_pp0_iter3_reg;
        icmp_ln163_reg_1003_pp0_iter5_reg <= icmp_ln163_reg_1003_pp0_iter4_reg;
        icmp_ln163_reg_1003_pp0_iter6_reg <= icmp_ln163_reg_1003_pp0_iter5_reg;
        icmp_ln163_reg_1003_pp0_iter7_reg <= icmp_ln163_reg_1003_pp0_iter6_reg;
        icmp_ln163_reg_1003_pp0_iter8_reg <= icmp_ln163_reg_1003_pp0_iter7_reg;
        icmp_ln163_reg_1003_pp0_iter9_reg <= icmp_ln163_reg_1003_pp0_iter8_reg;
        select_ln108_1_reg_977_pp0_iter10_reg <= select_ln108_1_reg_977_pp0_iter9_reg;
        select_ln108_1_reg_977_pp0_iter11_reg <= select_ln108_1_reg_977_pp0_iter10_reg;
        select_ln108_1_reg_977_pp0_iter12_reg <= select_ln108_1_reg_977_pp0_iter11_reg;
        select_ln108_1_reg_977_pp0_iter13_reg <= select_ln108_1_reg_977_pp0_iter12_reg;
        select_ln108_1_reg_977_pp0_iter14_reg <= select_ln108_1_reg_977_pp0_iter13_reg;
        select_ln108_1_reg_977_pp0_iter15_reg <= select_ln108_1_reg_977_pp0_iter14_reg;
        select_ln108_1_reg_977_pp0_iter16_reg <= select_ln108_1_reg_977_pp0_iter15_reg;
        select_ln108_1_reg_977_pp0_iter17_reg <= select_ln108_1_reg_977_pp0_iter16_reg;
        select_ln108_1_reg_977_pp0_iter18_reg <= select_ln108_1_reg_977_pp0_iter17_reg;
        select_ln108_1_reg_977_pp0_iter19_reg <= select_ln108_1_reg_977_pp0_iter18_reg;
        select_ln108_1_reg_977_pp0_iter20_reg <= select_ln108_1_reg_977_pp0_iter19_reg;
        select_ln108_1_reg_977_pp0_iter21_reg <= select_ln108_1_reg_977_pp0_iter20_reg;
        select_ln108_1_reg_977_pp0_iter2_reg <= select_ln108_1_reg_977_pp0_iter1_reg;
        select_ln108_1_reg_977_pp0_iter3_reg <= select_ln108_1_reg_977_pp0_iter2_reg;
        select_ln108_1_reg_977_pp0_iter4_reg <= select_ln108_1_reg_977_pp0_iter3_reg;
        select_ln108_1_reg_977_pp0_iter5_reg <= select_ln108_1_reg_977_pp0_iter4_reg;
        select_ln108_1_reg_977_pp0_iter6_reg <= select_ln108_1_reg_977_pp0_iter5_reg;
        select_ln108_1_reg_977_pp0_iter7_reg <= select_ln108_1_reg_977_pp0_iter6_reg;
        select_ln108_1_reg_977_pp0_iter8_reg <= select_ln108_1_reg_977_pp0_iter7_reg;
        select_ln108_1_reg_977_pp0_iter9_reg <= select_ln108_1_reg_977_pp0_iter8_reg;
        trunc_ln1346_reg_1126_pp0_iter14_reg <= trunc_ln1346_reg_1126;
        trunc_ln1346_reg_1126_pp0_iter15_reg <= trunc_ln1346_reg_1126_pp0_iter14_reg;
        trunc_ln1346_reg_1126_pp0_iter16_reg <= trunc_ln1346_reg_1126_pp0_iter15_reg;
        trunc_ln1346_reg_1126_pp0_iter17_reg <= trunc_ln1346_reg_1126_pp0_iter16_reg;
        trunc_ln1346_reg_1126_pp0_iter18_reg <= trunc_ln1346_reg_1126_pp0_iter17_reg;
        trunc_ln1346_reg_1126_pp0_iter19_reg <= trunc_ln1346_reg_1126_pp0_iter18_reg;
        trunc_ln1346_reg_1126_pp0_iter20_reg <= trunc_ln1346_reg_1126_pp0_iter19_reg;
        zext_ln109_reg_987_pp0_iter10_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter9_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter11_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter10_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter2_reg[7 : 0] <= zext_ln109_reg_987[7 : 0];
        zext_ln109_reg_987_pp0_iter3_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter2_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter4_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter3_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter5_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter4_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter6_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter5_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter7_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter6_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter8_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter7_reg[7 : 0];
        zext_ln109_reg_987_pp0_iter9_reg[7 : 0] <= zext_ln109_reg_987_pp0_iter8_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln108_1_reg_977 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp81_reg_998 <= grp_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln108_1_reg_977_pp0_iter5_reg == 2'd2))) begin
        diff_4_reg_1050 <= diff_4_fu_493_p2;
        diff_5_reg_1055 <= diff_5_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln108_1_reg_977_pp0_iter8_reg == 2'd1))) begin
        diff_pow2_reg_1071 <= diff_pow2_fu_530_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln107_reg_965 <= icmp_ln107_fu_312_p2;
        icmp_ln107_reg_965_pp0_iter1_reg <= icmp_ln107_reg_965;
        select_ln108_1_reg_977_pp0_iter1_reg <= select_ln108_1_reg_977;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln108_1_reg_977 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln119_reg_1017 <= grp_fu_292_p2;
        icmp_ln137_reg_1023 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln108_1_reg_977 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (grp_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln163_reg_1003 <= grp_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp81_reg_998_pp0_iter8_reg == 1'd0) & (select_ln108_1_reg_977_pp0_iter8_reg == 2'd1))) begin
        lhs_5_reg_1076 <= lhs_5_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (cmp81_reg_998_pp0_iter8_reg == 1'd1) & (select_ln108_1_reg_977_pp0_iter8_reg == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln163_reg_1003_pp0_iter8_reg == 1'd1) & (cmp81_reg_998_pp0_iter8_reg == 1'd0) & (select_ln108_1_reg_977_pp0_iter8_reg == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln163_reg_1003_pp0_iter8_reg == 1'd0) & (cmp81_reg_998_pp0_iter8_reg == 1'd0) & (select_ln108_1_reg_977_pp0_iter8_reg == 2'd1)))) begin
        lhs_fu_156 <= diff_pow2_fu_530_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln137_reg_1023_pp0_iter4_reg == 1'd1) & (select_ln108_1_reg_977_pp0_iter4_reg == 2'd0))) begin
        mean_V_0_1_fu_132 <= {{grp_fu_864_p3[32:23]}};
        mean_V_1_1_fu_136 <= {{grp_fu_873_p3[32:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln108_1_reg_977_pp0_iter12_reg == 2'd2))) begin
        mlp_inst_lnq_lnw_load_reg_1121 <= mlp_inst_lnq_lnw_q0;
        trunc_ln1346_reg_1126 <= trunc_ln1346_fu_620_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln108_1_reg_977_pp0_iter19_reg == 2'd2))) begin
        mul_ln1346_1_reg_1153 <= grp_fu_639_p2;
        mul_ln1346_reg_1148 <= grp_fu_630_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln108_1_reg_977_pp0_iter20_reg == 2'd2))) begin
        rel_V_1_reg_1178 <= {{val_1_fu_669_p2[38:32]}};
        rel_V_reg_1163 <= {{val_fu_645_p2[38:32]}};
        tmp_1_reg_1168 <= {{val_fu_645_p2[38:34]}};
        tmp_2_reg_1183 <= {{val_1_fu_669_p2[38:34]}};
        val_1_reg_1173 <= val_1_fu_669_p2;
        val_reg_1158 <= val_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln108_1_reg_977_pp0_iter7_reg == 2'd1))) begin
        ret_7_reg_1060 <= grp_fu_896_p2;
        sum_V_1_reg_1066 <= grp_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln163_reg_1003_pp0_iter10_reg == 1'd1) & (cmp81_reg_998_pp0_iter10_reg == 1'd0) & (select_ln108_1_reg_977_pp0_iter10_reg == 2'd1))) begin
        rhs_1_fu_144 <= mlp_inst_lnq_rsqrt_table_V_q0;
        rhs_fu_140 <= mlp_inst_lnq_rsqrt_table_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_fu_312_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln108_1_reg_977 <= select_ln108_1_fu_370_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_fu_312_p2 == 1'd0))) begin
        select_ln108_reg_969 <= select_ln108_fu_362_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln108_1_reg_977 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln145_reg_1007 <= trunc_ln145_fu_396_p1;
        trunc_ln145_s_reg_1012 <= {{main_sm_dout[30:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_965 == 1'd0))) begin
        zext_ln109_reg_987[7 : 0] <= zext_ln109_fu_392_p1[7 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln107_fu_312_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_965 == 1'd0))) begin
        ap_phi_mux_ct_phi_fu_285_p4 = add_ln109_fu_419_p2;
    end else begin
        ap_phi_mux_ct_phi_fu_285_p4 = ct_reg_281;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_965 == 1'd0))) begin
        ap_phi_mux_state_phi_fu_274_p4 = select_ln108_1_reg_977;
    end else begin
        ap_phi_mux_state_phi_fu_274_p4 = state_reg_270;
    end
end

always @ (*) begin
    if ((((select_ln108_1_reg_977 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_965 == 1'd0)))) begin
        buffer_V_ce1 = 1'b1;
    end else begin
        buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln108_1_reg_977 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer_V_we1 = 1'b1;
    end else begin
        buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_630_ce = 1'b1;
    end else begin
        grp_fu_630_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_639_ce = 1'b1;
    end else begin
        grp_fu_639_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_864_ce = 1'b1;
    end else begin
        grp_fu_864_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_873_ce = 1'b1;
    end else begin
        grp_fu_873_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_882_ce = 1'b1;
    end else begin
        grp_fu_882_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_889_ce = 1'b1;
    end else begin
        grp_fu_889_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_896_ce = 1'b1;
    end else begin
        grp_fu_896_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_902_ce = 1'b1;
    end else begin
        grp_fu_902_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln108_1_reg_977_pp0_iter21_reg == 2'd2) & (ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ln_sm_blk_n = ln_sm_full_n;
    end else begin
        ln_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln108_1_reg_977_pp0_iter21_reg == 2'd2) & (ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ln_sm_write = 1'b1;
    end else begin
        ln_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln108_1_reg_977 == 2'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        main_sm_blk_n = main_sm_empty_n;
    end else begin
        main_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln108_1_reg_977 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        main_sm_read = 1'b1;
    end else begin
        main_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        mlp_inst_lnq_lnb_ce0 = 1'b1;
    end else begin
        mlp_inst_lnq_lnb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        mlp_inst_lnq_lnw_ce0 = 1'b1;
    end else begin
        mlp_inst_lnq_lnw_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        mlp_inst_lnq_rsqrt_table_V_ce0 = 1'b1;
    end else begin
        mlp_inst_lnq_rsqrt_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        mlp_inst_lnq_rsqrt_table_V_ce1 = 1'b1;
    end else begin
        mlp_inst_lnq_rsqrt_table_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln107_fu_312_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter21 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter21 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln107_fu_312_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_V_0_fu_447_p2 = ($signed(select_ln119_1_fu_437_p3) + $signed(sext_ln691_fu_444_p1));

assign acc_V_1_fu_456_p2 = ($signed(select_ln119_fu_430_p3) + $signed(sext_ln691_1_fu_453_p1));

assign add_ln107_fu_306_p2 = (indvar_flatten27_reg_248 + 16'd1);

assign add_ln108_1_fu_378_p2 = (indvar_flatten_reg_259 + 10'd1);

assign add_ln109_fu_419_p2 = (select_ln108_reg_969 + 8'd1);

assign add_ln213_fu_525_p2 = ($signed(lhs_fu_156) + $signed(ret_7_reg_1060));

assign and_ln107_fu_344_p2 = (xor_ln107_fu_332_p2 & icmp_ln109_fu_338_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((select_ln108_1_reg_977_pp0_iter21_reg == 2'd2) & (ap_enable_reg_pp0_iter22 == 1'b1) & (ln_sm_full_n == 1'b0)) | ((select_ln108_1_reg_977 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (main_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((select_ln108_1_reg_977_pp0_iter21_reg == 2'd2) & (ap_enable_reg_pp0_iter22 == 1'b1) & (ln_sm_full_n == 1'b0)) | ((select_ln108_1_reg_977 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (main_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((select_ln108_1_reg_977_pp0_iter21_reg == 2'd2) & (ap_enable_reg_pp0_iter22 == 1'b1) & (ln_sm_full_n == 1'b0)) | ((select_ln108_1_reg_977 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (main_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp0_stage0_iter22 = ((select_ln108_1_reg_977_pp0_iter21_reg == 2'd2) & (ln_sm_full_n == 1'b0));
end

assign ap_block_state22_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((select_ln108_1_reg_977 == 2'd0) & (main_sm_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1080 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (cmp81_reg_998_pp0_iter8_reg == 1'd0) & (select_ln108_1_reg_977_pp0_iter8_reg == 2'd1));
end

always @ (*) begin
    ap_condition_1084 = ((ap_enable_reg_pp0_iter8 == 1'b1) & (cmp81_reg_998_pp0_iter7_reg == 1'd1) & (select_ln108_1_reg_977_pp0_iter7_reg == 2'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign buffer_V_address1 = zext_ln109_fu_392_p1;

assign buffer_V_d1 = {{trunc_ln145_s_fu_400_p4}, {trunc_ln145_fu_396_p1}};

assign cursor_V_1_fu_575_p4 = {{ret_6_fu_570_p2[29:23]}};

assign cursor_V_fu_555_p4 = {{ret_5_fu_550_p2[29:23]}};

assign diff_1_fu_826_p2 = ($signed(tmp_363_fu_813_p4) - $signed(sext_ln1347_3_fu_822_p1));

assign diff_4_fu_493_p2 = ($signed(trunc_ln215_5_fu_486_p1) - $signed(sext_ln1347_1_fu_489_p1));

assign diff_5_fu_512_p2 = ($signed(tmp_365_fu_499_p4) - $signed(sext_ln1347_2_fu_508_p1));

assign diff_fu_803_p2 = ($signed(trunc_ln215_fu_796_p1) - $signed(sext_ln1347_fu_799_p1));

assign diff_pow2_fu_530_p3 = ((cmp81_reg_998_pp0_iter8_reg[0:0] == 1'b1) ? ret_7_reg_1060 : add_ln213_fu_525_p2);

assign grp_fu_292_p2 = ((select_ln108_reg_969 == 8'd0) ? 1'b1 : 1'b0);

assign grp_fu_297_p2 = ((select_ln108_reg_969 == 8'd191) ? 1'b1 : 1'b0);

assign grp_fu_630_p0 = sext_ln1345_3_fu_627_p1;

assign grp_fu_639_p0 = sext_ln1345_3_fu_627_p1;

assign grp_fu_864_p1 = 33'd43691;

assign grp_fu_864_p2 = 33'd4194304;

assign grp_fu_873_p1 = 33'd43691;

assign grp_fu_873_p2 = 33'd4194304;

assign grp_fu_882_p1 = grp_fu_882_p10;

assign grp_fu_882_p10 = rhs_fu_140;

assign grp_fu_889_p1 = grp_fu_889_p10;

assign grp_fu_889_p10 = rhs_1_fu_144;

assign grp_fu_896_p0 = sext_ln1345_fu_809_p1;

assign grp_fu_896_p1 = sext_ln1345_fu_809_p1;

assign grp_fu_902_p0 = sext_ln1345_8_fu_832_p1;

assign grp_fu_902_p1 = sext_ln1345_8_fu_832_p1;

assign icmp_ln107_fu_312_p2 = ((indvar_flatten27_reg_248 == 16'd56448) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_318_p2 = ((indvar_flatten_reg_259 == 10'd576) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_338_p2 = ((ap_phi_mux_ct_phi_fu_285_p4 == 8'd192) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_743_p2 = (($signed(rel_V_1_reg_1178) < $signed(7'd124)) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_702_p2 = (($signed(rel_V_reg_1163) < $signed(7'd124)) ? 1'b1 : 1'b0);

assign icmp_ln886_1_fu_748_p2 = (($signed(tmp_2_reg_1183) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_707_p2 = (($signed(tmp_1_reg_1168) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign lhs_5_fu_540_p2 = ($signed(sum_V_1_1_fu_160) + $signed(sum_V_1_reg_1066));

assign ln_sm_din = tmp_366_fu_775_p4;

assign mlp_inst_lnq_lnb_address0 = zext_ln109_reg_987_pp0_iter11_reg;

assign mlp_inst_lnq_lnw_address0 = zext_ln109_reg_987_pp0_iter11_reg;

assign mlp_inst_lnq_rsqrt_table_V_address0 = zext_ln534_1_fu_585_p1;

assign mlp_inst_lnq_rsqrt_table_V_address1 = zext_ln534_fu_565_p1;

assign or_ln108_fu_356_p2 = (icmp_ln108_fu_318_p2 | and_ln107_fu_344_p2);

assign or_ln7_1_fu_761_p2 = (icmp_ln886_1_fu_748_p2 | icmp_ln878_1_fu_743_p2);

assign or_ln7_fu_720_p2 = (icmp_ln886_fu_707_p2 | icmp_ln878_fu_702_p2);

assign ret_5_fu_550_p2 = ($signed(diff_pow2_reg_1071) + $signed(30'd1069139444));

assign ret_6_fu_570_p2 = ($signed(lhs_5_reg_1076) + $signed(30'd1069139444));

assign select_ln107_fu_324_p3 = ((icmp_ln108_fu_318_p2[0:0] == 1'b1) ? 2'd0 : ap_phi_mux_state_phi_fu_274_p4);

assign select_ln108_1_fu_370_p3 = ((and_ln107_fu_344_p2[0:0] == 1'b1) ? state_2_fu_350_p2 : select_ln107_fu_324_p3);

assign select_ln108_2_fu_384_p3 = ((icmp_ln108_fu_318_p2[0:0] == 1'b1) ? 10'd1 : add_ln108_1_fu_378_p2);

assign select_ln108_fu_362_p3 = ((or_ln108_fu_356_p2[0:0] == 1'b1) ? 8'd0 : ap_phi_mux_ct_phi_fu_285_p4);

assign select_ln119_1_fu_437_p3 = ((icmp_ln119_reg_1017[0:0] == 1'b1) ? 18'd0 : acc_V_0_1_fu_148);

assign select_ln119_fu_430_p3 = ((icmp_ln119_reg_1017[0:0] == 1'b1) ? 18'd0 : acc_V_1_1_fu_152);

assign select_ln7_1_fu_767_p3 = ((or_ln7_1_fu_761_p2[0:0] == 1'b1) ? select_ln7_3_fu_753_p3 : trunc_ln8_1_fu_734_p4);

assign select_ln7_2_fu_712_p3 = ((icmp_ln878_fu_702_p2[0:0] == 1'b1) ? 3'd4 : 3'd3);

assign select_ln7_3_fu_753_p3 = ((icmp_ln878_1_fu_743_p2[0:0] == 1'b1) ? 3'd4 : 3'd3);

assign select_ln7_fu_726_p3 = ((or_ln7_fu_720_p2[0:0] == 1'b1) ? select_ln7_2_fu_712_p3 : trunc_ln8_fu_693_p4);

assign sext_ln1345_3_fu_627_p1 = $signed(mlp_inst_lnq_lnw_load_reg_1121);

assign sext_ln1345_8_fu_832_p1 = $signed(diff_1_fu_826_p2);

assign sext_ln1345_fu_809_p1 = $signed(diff_fu_803_p2);

assign sext_ln1347_1_fu_489_p1 = $signed(mean_V_0_1_fu_132);

assign sext_ln1347_2_fu_508_p1 = $signed(mean_V_1_1_fu_136);

assign sext_ln1347_3_fu_822_p1 = $signed(mean_V_1_1_fu_136);

assign sext_ln1347_fu_799_p1 = $signed(mean_V_0_1_fu_132);

assign sext_ln691_1_fu_453_p1 = trunc_ln145_s_reg_1012;

assign sext_ln691_fu_444_p1 = trunc_ln145_reg_1007;

assign start_out = real_start;

assign state_2_fu_350_p2 = (select_ln107_fu_324_p3 + 2'd1);

assign tmp_363_fu_813_p4 = {{buffer_V_load_reg_1032_pp0_iter4_reg[29:15]}};

assign tmp_365_fu_499_p4 = {{buffer_V_load_reg_1032_pp0_iter5_reg[29:15]}};

assign tmp_366_fu_775_p4 = {{{select_ln7_1_fu_767_p3}, {5'd0}}, {select_ln7_fu_726_p3}};

assign trunc_ln1346_fu_620_p1 = mlp_inst_lnq_lnb_q0[38:0];

assign trunc_ln145_fu_396_p1 = main_sm_dout[14:0];

assign trunc_ln145_s_fu_400_p4 = {{main_sm_dout[30:16]}};

assign trunc_ln215_5_fu_486_p1 = buffer_V_load_reg_1032_pp0_iter5_reg[14:0];

assign trunc_ln215_fu_796_p1 = buffer_V_load_reg_1032_pp0_iter4_reg[14:0];

assign trunc_ln8_1_fu_734_p4 = {{val_1_reg_1173[34:32]}};

assign trunc_ln8_fu_693_p4 = {{val_reg_1158[34:32]}};

assign val_1_fu_669_p2 = (mul_ln1346_1_reg_1153 + trunc_ln1346_reg_1126_pp0_iter20_reg);

assign val_fu_645_p2 = (trunc_ln1346_reg_1126_pp0_iter20_reg + mul_ln1346_reg_1148);

assign xor_ln107_fu_332_p2 = (icmp_ln108_fu_318_p2 ^ 1'd1);

assign zext_ln109_fu_392_p1 = select_ln108_reg_969;

assign zext_ln534_1_fu_585_p1 = cursor_V_1_fu_575_p4;

assign zext_ln534_fu_565_p1 = cursor_V_fu_555_p4;

always @ (posedge ap_clk) begin
    zext_ln109_reg_987[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln109_reg_987_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //MLP0_do_layernorm
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP0_do_layernorm_buffer_V_ram (addr1, ce1, d1, we1, q1,  clk);

parameter DWIDTH = 30;
parameter AWIDTH = 8;
parameter MEM_SIZE = 192;

input[AWIDTH-1:0] addr1;
input ce1;
input[DWIDTH-1:0] d1;
input we1;
output reg[DWIDTH-1:0] q1;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];




always @(posedge clk)  
begin 
    if (ce1) begin
        if (we1) 
            ram[addr1] <= d1; 
        q1 <= ram[addr1];
    end
end


endmodule

`timescale 1 ns / 1 ps
module MLP0_do_layernorm_buffer_V(
    reset,
    clk,
    address1,
    ce1,
    we1,
    d1,
    q1);

parameter DataWidth = 32'd30;
parameter AddressRange = 32'd192;
parameter AddressWidth = 32'd8;
input reset;
input clk;
input[AddressWidth - 1:0] address1;
input ce1;
input we1;
input[DataWidth - 1:0] d1;
output[DataWidth - 1:0] q1;



MLP0_do_layernorm_buffer_V_ram MLP0_do_layernorm_buffer_V_ram_U(
    .clk( clk ),
    .addr1( address1 ),
    .ce1( ce1 ),
    .we1( we1 ),
    .d1( d1 ),
    .q1( q1 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) module MLP0_do_layernorm_mlp_inst_lnq_lnb_rom (
addr0, ce0, q0, clk);

parameter DWIDTH = 64;
parameter AWIDTH = 8;
parameter MEM_SIZE = 192;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_do_layernorm_mlp_inst_lnq_lnb_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_do_layernorm_mlp_inst_lnq_lnb(
    reset,
    clk,
    address0,
    ce0,
    q0);

parameter DataWidth = 32'd64;
parameter AddressRange = 32'd192;
parameter AddressWidth = 32'd8;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;



MLP0_do_layernorm_mlp_inst_lnq_lnb_rom MLP0_do_layernorm_mlp_inst_lnq_lnb_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) module MLP0_do_layernorm_mlp_inst_lnq_lnw_rom (
addr0, ce0, q0, clk);

parameter DWIDTH = 32;
parameter AWIDTH = 8;
parameter MEM_SIZE = 192;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_do_layernorm_mlp_inst_lnq_lnw_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_do_layernorm_mlp_inst_lnq_lnw(
    reset,
    clk,
    address0,
    ce0,
    q0);

parameter DataWidth = 32'd32;
parameter AddressRange = 32'd192;
parameter AddressWidth = 32'd8;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;



MLP0_do_layernorm_mlp_inst_lnq_lnw_rom MLP0_do_layernorm_mlp_inst_lnq_lnw_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) module MLP0_do_layernorm_mlp_inst_lnq_rsqrt_table_V_rom (
addr0, ce0, q0, addr1, ce1, q1, clk);

parameter DWIDTH = 12;
parameter AWIDTH = 7;
parameter MEM_SIZE = 128;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input[AWIDTH-1:0] addr1;
input ce1;
output reg[DWIDTH-1:0] q1;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_do_layernorm_mlp_inst_lnq_rsqrt_table_V_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



always @(posedge clk)  
begin 
    if (ce1) 
    begin
        q1 <= ram[addr1];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_do_layernorm_mlp_inst_lnq_rsqrt_table_V(
    reset,
    clk,
    address0,
    ce0,
    q0,
    address1,
    ce1,
    q1);

parameter DataWidth = 32'd12;
parameter AddressRange = 32'd128;
parameter AddressWidth = 32'd7;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;
input[AddressWidth - 1:0] address1;
input ce1;
output[DataWidth - 1:0] q1;



MLP0_do_layernorm_mlp_inst_lnq_rsqrt_table_V_rom MLP0_do_layernorm_mlp_inst_lnq_rsqrt_table_V_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ),
    .addr1( address1 ),
    .ce1( ce1 ),
    .q1( q1 ));

endmodule

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_matmul (
        ge_sm_dout,
        ge_sm_empty_n,
        ge_sm_read,
        m2_sm_din,
        m2_sm_full_n,
        m2_sm_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] ge_sm_dout;
input   ge_sm_empty_n;
output   ge_sm_read;
output  [31:0] m2_sm_din;
input   m2_sm_full_n;
output   m2_sm_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    do_adapt_U0_ap_start;
wire    do_adapt_U0_ap_done;
wire    do_adapt_U0_ap_continue;
wire    do_adapt_U0_ap_idle;
wire    do_adapt_U0_ap_ready;
wire    do_adapt_U0_start_out;
wire    do_adapt_U0_start_write;
wire    do_adapt_U0_ge_sm_read;
wire   [383:0] do_adapt_U0_adpt_sm_din;
wire    do_adapt_U0_adpt_sm_write;
wire    matmul_step1_cache_window_U0_ap_start;
wire    matmul_step1_cache_window_U0_ap_done;
wire    matmul_step1_cache_window_U0_ap_continue;
wire    matmul_step1_cache_window_U0_ap_idle;
wire    matmul_step1_cache_window_U0_ap_ready;
wire    matmul_step1_cache_window_U0_start_out;
wire    matmul_step1_cache_window_U0_start_write;
wire    matmul_step1_cache_window_U0_adpt_sm_read;
wire   [383:0] matmul_step1_cache_window_U0_cache_window_sm_din;
wire    matmul_step1_cache_window_U0_cache_window_sm_write;
wire    matmul_step2_mac_U0_ap_start;
wire    matmul_step2_mac_U0_ap_done;
wire    matmul_step2_mac_U0_ap_continue;
wire    matmul_step2_mac_U0_ap_idle;
wire    matmul_step2_mac_U0_ap_ready;
wire    matmul_step2_mac_U0_start_out;
wire    matmul_step2_mac_U0_start_write;
wire    matmul_step2_mac_U0_cache_window_sm_read;
wire   [383:0] matmul_step2_mac_U0_mac_sm_din;
wire    matmul_step2_mac_U0_mac_sm_write;
wire    do_adapt_4_U0_ap_start;
wire    do_adapt_4_U0_ap_done;
wire    do_adapt_4_U0_ap_continue;
wire    do_adapt_4_U0_ap_idle;
wire    do_adapt_4_U0_ap_ready;
wire    do_adapt_4_U0_mac_sm_read;
wire   [31:0] do_adapt_4_U0_m2_sm_din;
wire    do_adapt_4_U0_m2_sm_write;
wire    ap_sync_continue;
wire    adpt_sm_full_n;
wire   [383:0] adpt_sm_dout;
wire    adpt_sm_empty_n;
wire    cache_window_sm_full_n;
wire   [383:0] cache_window_sm_dout;
wire    cache_window_sm_empty_n;
wire    mac_sm_full_n;
wire   [383:0] mac_sm_dout;
wire    mac_sm_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_matmul_step1_cache_window_U0_din;
wire    start_for_matmul_step1_cache_window_U0_full_n;
wire   [0:0] start_for_matmul_step1_cache_window_U0_dout;
wire    start_for_matmul_step1_cache_window_U0_empty_n;
wire   [0:0] start_for_matmul_step2_mac_U0_din;
wire    start_for_matmul_step2_mac_U0_full_n;
wire   [0:0] start_for_matmul_step2_mac_U0_dout;
wire    start_for_matmul_step2_mac_U0_empty_n;
wire   [0:0] start_for_do_adapt_4_U0_din;
wire    start_for_do_adapt_4_U0_full_n;
wire   [0:0] start_for_do_adapt_4_U0_dout;
wire    start_for_do_adapt_4_U0_empty_n;
wire    do_adapt_4_U0_start_full_n;
wire    do_adapt_4_U0_start_write;

MLP0_do_adapt do_adapt_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_U0_ap_start),
    .start_full_n(start_for_matmul_step1_cache_window_U0_full_n),
    .ap_done(do_adapt_U0_ap_done),
    .ap_continue(do_adapt_U0_ap_continue),
    .ap_idle(do_adapt_U0_ap_idle),
    .ap_ready(do_adapt_U0_ap_ready),
    .start_out(do_adapt_U0_start_out),
    .start_write(do_adapt_U0_start_write),
    .ge_sm_dout(ge_sm_dout),
    .ge_sm_empty_n(ge_sm_empty_n),
    .ge_sm_read(do_adapt_U0_ge_sm_read),
    .adpt_sm_din(do_adapt_U0_adpt_sm_din),
    .adpt_sm_full_n(adpt_sm_full_n),
    .adpt_sm_write(do_adapt_U0_adpt_sm_write)
);

MLP0_matmul_step1_cache_window matmul_step1_cache_window_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step1_cache_window_U0_ap_start),
    .start_full_n(start_for_matmul_step2_mac_U0_full_n),
    .ap_done(matmul_step1_cache_window_U0_ap_done),
    .ap_continue(matmul_step1_cache_window_U0_ap_continue),
    .ap_idle(matmul_step1_cache_window_U0_ap_idle),
    .ap_ready(matmul_step1_cache_window_U0_ap_ready),
    .start_out(matmul_step1_cache_window_U0_start_out),
    .start_write(matmul_step1_cache_window_U0_start_write),
    .adpt_sm_dout(adpt_sm_dout),
    .adpt_sm_empty_n(adpt_sm_empty_n),
    .adpt_sm_read(matmul_step1_cache_window_U0_adpt_sm_read),
    .cache_window_sm_din(matmul_step1_cache_window_U0_cache_window_sm_din),
    .cache_window_sm_full_n(cache_window_sm_full_n),
    .cache_window_sm_write(matmul_step1_cache_window_U0_cache_window_sm_write)
);

MLP0_matmul_step2_mac matmul_step2_mac_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step2_mac_U0_ap_start),
    .start_full_n(start_for_do_adapt_4_U0_full_n),
    .ap_done(matmul_step2_mac_U0_ap_done),
    .ap_continue(matmul_step2_mac_U0_ap_continue),
    .ap_idle(matmul_step2_mac_U0_ap_idle),
    .ap_ready(matmul_step2_mac_U0_ap_ready),
    .start_out(matmul_step2_mac_U0_start_out),
    .start_write(matmul_step2_mac_U0_start_write),
    .cache_window_sm_dout(cache_window_sm_dout),
    .cache_window_sm_empty_n(cache_window_sm_empty_n),
    .cache_window_sm_read(matmul_step2_mac_U0_cache_window_sm_read),
    .mac_sm_din(matmul_step2_mac_U0_mac_sm_din),
    .mac_sm_full_n(mac_sm_full_n),
    .mac_sm_write(matmul_step2_mac_U0_mac_sm_write)
);

MLP0_do_adapt_4 do_adapt_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_4_U0_ap_start),
    .ap_done(do_adapt_4_U0_ap_done),
    .ap_continue(do_adapt_4_U0_ap_continue),
    .ap_idle(do_adapt_4_U0_ap_idle),
    .ap_ready(do_adapt_4_U0_ap_ready),
    .mac_sm_dout(mac_sm_dout),
    .mac_sm_empty_n(mac_sm_empty_n),
    .mac_sm_read(do_adapt_4_U0_mac_sm_read),
    .m2_sm_din(do_adapt_4_U0_m2_sm_din),
    .m2_sm_full_n(m2_sm_full_n),
    .m2_sm_write(do_adapt_4_U0_m2_sm_write)
);

MLP0_fifo_w384_d32_A adpt_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_U0_adpt_sm_din),
    .if_full_n(adpt_sm_full_n),
    .if_write(do_adapt_U0_adpt_sm_write),
    .if_dout(adpt_sm_dout),
    .if_empty_n(adpt_sm_empty_n),
    .if_read(matmul_step1_cache_window_U0_adpt_sm_read)
);

MLP0_fifo_w384_d2_S cache_window_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step1_cache_window_U0_cache_window_sm_din),
    .if_full_n(cache_window_sm_full_n),
    .if_write(matmul_step1_cache_window_U0_cache_window_sm_write),
    .if_dout(cache_window_sm_dout),
    .if_empty_n(cache_window_sm_empty_n),
    .if_read(matmul_step2_mac_U0_cache_window_sm_read)
);

MLP0_fifo_w384_d2_S mac_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step2_mac_U0_mac_sm_din),
    .if_full_n(mac_sm_full_n),
    .if_write(matmul_step2_mac_U0_mac_sm_write),
    .if_dout(mac_sm_dout),
    .if_empty_n(mac_sm_empty_n),
    .if_read(do_adapt_4_U0_mac_sm_read)
);

MLP0_start_for_matmul_step1_cache_window_U0 start_for_matmul_step1_cache_window_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step1_cache_window_U0_din),
    .if_full_n(start_for_matmul_step1_cache_window_U0_full_n),
    .if_write(do_adapt_U0_start_write),
    .if_dout(start_for_matmul_step1_cache_window_U0_dout),
    .if_empty_n(start_for_matmul_step1_cache_window_U0_empty_n),
    .if_read(matmul_step1_cache_window_U0_ap_ready)
);

MLP0_start_for_matmul_step2_mac_U0 start_for_matmul_step2_mac_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step2_mac_U0_din),
    .if_full_n(start_for_matmul_step2_mac_U0_full_n),
    .if_write(matmul_step1_cache_window_U0_start_write),
    .if_dout(start_for_matmul_step2_mac_U0_dout),
    .if_empty_n(start_for_matmul_step2_mac_U0_empty_n),
    .if_read(matmul_step2_mac_U0_ap_ready)
);

MLP0_start_for_do_adapt_4_U0 start_for_do_adapt_4_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_4_U0_din),
    .if_full_n(start_for_do_adapt_4_U0_full_n),
    .if_write(matmul_step2_mac_U0_start_write),
    .if_dout(start_for_do_adapt_4_U0_dout),
    .if_empty_n(start_for_do_adapt_4_U0_empty_n),
    .if_read(do_adapt_4_U0_ap_ready)
);

assign ap_done = do_adapt_4_U0_ap_done;

assign ap_idle = (matmul_step2_mac_U0_ap_idle & matmul_step1_cache_window_U0_ap_idle & do_adapt_U0_ap_idle & do_adapt_4_U0_ap_idle);

assign ap_ready = do_adapt_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = do_adapt_4_U0_ap_done;

assign ap_sync_ready = do_adapt_U0_ap_ready;

assign do_adapt_4_U0_ap_continue = ap_continue;

assign do_adapt_4_U0_ap_start = start_for_do_adapt_4_U0_empty_n;

assign do_adapt_4_U0_start_full_n = 1'b1;

assign do_adapt_4_U0_start_write = 1'b0;

assign do_adapt_U0_ap_continue = 1'b1;

assign do_adapt_U0_ap_start = ap_start;

assign ge_sm_read = do_adapt_U0_ge_sm_read;

assign m2_sm_din = do_adapt_4_U0_m2_sm_din;

assign m2_sm_write = do_adapt_4_U0_m2_sm_write;

assign matmul_step1_cache_window_U0_ap_continue = 1'b1;

assign matmul_step1_cache_window_U0_ap_start = start_for_matmul_step1_cache_window_U0_empty_n;

assign matmul_step2_mac_U0_ap_continue = 1'b1;

assign matmul_step2_mac_U0_ap_start = start_for_matmul_step2_mac_U0_empty_n;

assign start_for_do_adapt_4_U0_din = 1'b1;

assign start_for_matmul_step1_cache_window_U0_din = 1'b1;

assign start_for_matmul_step2_mac_U0_din = 1'b1;

endmodule //MLP0_do_matmul
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_matmul_1 (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        ln_sm_dout,
        ln_sm_empty_n,
        ln_sm_read,
        m1_sm_din,
        m1_sm_full_n,
        m1_sm_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [15:0] ln_sm_dout;
input   ln_sm_empty_n;
output   ln_sm_read;
output  [63:0] m1_sm_din;
input   m1_sm_full_n;
output   m1_sm_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    do_adapt_1_U0_ap_start;
wire    do_adapt_1_U0_ap_done;
wire    do_adapt_1_U0_ap_continue;
wire    do_adapt_1_U0_ap_idle;
wire    do_adapt_1_U0_ap_ready;
wire    do_adapt_1_U0_start_out;
wire    do_adapt_1_U0_start_write;
wire    do_adapt_1_U0_ln_sm_read;
wire   [191:0] do_adapt_1_U0_adpt_sm_din;
wire    do_adapt_1_U0_adpt_sm_write;
wire    matmul_step1_cache_window_1_U0_ap_start;
wire    matmul_step1_cache_window_1_U0_ap_done;
wire    matmul_step1_cache_window_1_U0_ap_continue;
wire    matmul_step1_cache_window_1_U0_ap_idle;
wire    matmul_step1_cache_window_1_U0_ap_ready;
wire    matmul_step1_cache_window_1_U0_start_out;
wire    matmul_step1_cache_window_1_U0_start_write;
wire    matmul_step1_cache_window_1_U0_adpt_sm_read;
wire   [191:0] matmul_step1_cache_window_1_U0_cache_window_sm_din;
wire    matmul_step1_cache_window_1_U0_cache_window_sm_write;
wire    matmul_step2_mac_1_U0_ap_start;
wire    matmul_step2_mac_1_U0_ap_done;
wire    matmul_step2_mac_1_U0_ap_continue;
wire    matmul_step2_mac_1_U0_ap_idle;
wire    matmul_step2_mac_1_U0_ap_ready;
wire    matmul_step2_mac_1_U0_start_out;
wire    matmul_step2_mac_1_U0_start_write;
wire    matmul_step2_mac_1_U0_cache_window_sm_read;
wire   [767:0] matmul_step2_mac_1_U0_mac_sm_din;
wire    matmul_step2_mac_1_U0_mac_sm_write;
wire    do_adapt_5_U0_ap_start;
wire    do_adapt_5_U0_ap_done;
wire    do_adapt_5_U0_ap_continue;
wire    do_adapt_5_U0_ap_idle;
wire    do_adapt_5_U0_ap_ready;
wire    do_adapt_5_U0_mac_sm_read;
wire   [63:0] do_adapt_5_U0_m1_sm_din;
wire    do_adapt_5_U0_m1_sm_write;
wire    ap_sync_continue;
wire    adpt_sm_full_n;
wire   [191:0] adpt_sm_dout;
wire    adpt_sm_empty_n;
wire    cache_window_sm_full_n;
wire   [191:0] cache_window_sm_dout;
wire    cache_window_sm_empty_n;
wire    mac_sm_full_n;
wire   [767:0] mac_sm_dout;
wire    mac_sm_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_matmul_step1_cache_window_1_U0_din;
wire    start_for_matmul_step1_cache_window_1_U0_full_n;
wire   [0:0] start_for_matmul_step1_cache_window_1_U0_dout;
wire    start_for_matmul_step1_cache_window_1_U0_empty_n;
wire   [0:0] start_for_matmul_step2_mac_1_U0_din;
wire    start_for_matmul_step2_mac_1_U0_full_n;
wire   [0:0] start_for_matmul_step2_mac_1_U0_dout;
wire    start_for_matmul_step2_mac_1_U0_empty_n;
wire   [0:0] start_for_do_adapt_5_U0_din;
wire    start_for_do_adapt_5_U0_full_n;
wire   [0:0] start_for_do_adapt_5_U0_dout;
wire    start_for_do_adapt_5_U0_empty_n;
wire    do_adapt_5_U0_start_full_n;
wire    do_adapt_5_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
end

MLP0_do_adapt_1 do_adapt_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_1_U0_ap_start),
    .start_full_n(start_for_matmul_step1_cache_window_1_U0_full_n),
    .ap_done(do_adapt_1_U0_ap_done),
    .ap_continue(do_adapt_1_U0_ap_continue),
    .ap_idle(do_adapt_1_U0_ap_idle),
    .ap_ready(do_adapt_1_U0_ap_ready),
    .start_out(do_adapt_1_U0_start_out),
    .start_write(do_adapt_1_U0_start_write),
    .ln_sm_dout(ln_sm_dout),
    .ln_sm_empty_n(ln_sm_empty_n),
    .ln_sm_read(do_adapt_1_U0_ln_sm_read),
    .adpt_sm_din(do_adapt_1_U0_adpt_sm_din),
    .adpt_sm_full_n(adpt_sm_full_n),
    .adpt_sm_write(do_adapt_1_U0_adpt_sm_write)
);

MLP0_matmul_step1_cache_window_1 matmul_step1_cache_window_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step1_cache_window_1_U0_ap_start),
    .start_full_n(start_for_matmul_step2_mac_1_U0_full_n),
    .ap_done(matmul_step1_cache_window_1_U0_ap_done),
    .ap_continue(matmul_step1_cache_window_1_U0_ap_continue),
    .ap_idle(matmul_step1_cache_window_1_U0_ap_idle),
    .ap_ready(matmul_step1_cache_window_1_U0_ap_ready),
    .start_out(matmul_step1_cache_window_1_U0_start_out),
    .start_write(matmul_step1_cache_window_1_U0_start_write),
    .adpt_sm_dout(adpt_sm_dout),
    .adpt_sm_empty_n(adpt_sm_empty_n),
    .adpt_sm_read(matmul_step1_cache_window_1_U0_adpt_sm_read),
    .cache_window_sm_din(matmul_step1_cache_window_1_U0_cache_window_sm_din),
    .cache_window_sm_full_n(cache_window_sm_full_n),
    .cache_window_sm_write(matmul_step1_cache_window_1_U0_cache_window_sm_write)
);

MLP0_matmul_step2_mac_1 matmul_step2_mac_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(matmul_step2_mac_1_U0_ap_start),
    .start_full_n(start_for_do_adapt_5_U0_full_n),
    .ap_done(matmul_step2_mac_1_U0_ap_done),
    .ap_continue(matmul_step2_mac_1_U0_ap_continue),
    .ap_idle(matmul_step2_mac_1_U0_ap_idle),
    .ap_ready(matmul_step2_mac_1_U0_ap_ready),
    .start_out(matmul_step2_mac_1_U0_start_out),
    .start_write(matmul_step2_mac_1_U0_start_write),
    .cache_window_sm_dout(cache_window_sm_dout),
    .cache_window_sm_empty_n(cache_window_sm_empty_n),
    .cache_window_sm_read(matmul_step2_mac_1_U0_cache_window_sm_read),
    .mac_sm_din(matmul_step2_mac_1_U0_mac_sm_din),
    .mac_sm_full_n(mac_sm_full_n),
    .mac_sm_write(matmul_step2_mac_1_U0_mac_sm_write)
);

MLP0_do_adapt_5 do_adapt_5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_5_U0_ap_start),
    .ap_done(do_adapt_5_U0_ap_done),
    .ap_continue(do_adapt_5_U0_ap_continue),
    .ap_idle(do_adapt_5_U0_ap_idle),
    .ap_ready(do_adapt_5_U0_ap_ready),
    .mac_sm_dout(mac_sm_dout),
    .mac_sm_empty_n(mac_sm_empty_n),
    .mac_sm_read(do_adapt_5_U0_mac_sm_read),
    .m1_sm_din(do_adapt_5_U0_m1_sm_din),
    .m1_sm_full_n(m1_sm_full_n),
    .m1_sm_write(do_adapt_5_U0_m1_sm_write)
);

MLP0_fifo_w192_d32_A adpt_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_1_U0_adpt_sm_din),
    .if_full_n(adpt_sm_full_n),
    .if_write(do_adapt_1_U0_adpt_sm_write),
    .if_dout(adpt_sm_dout),
    .if_empty_n(adpt_sm_empty_n),
    .if_read(matmul_step1_cache_window_1_U0_adpt_sm_read)
);

MLP0_fifo_w192_d2_S cache_window_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step1_cache_window_1_U0_cache_window_sm_din),
    .if_full_n(cache_window_sm_full_n),
    .if_write(matmul_step1_cache_window_1_U0_cache_window_sm_write),
    .if_dout(cache_window_sm_dout),
    .if_empty_n(cache_window_sm_empty_n),
    .if_read(matmul_step2_mac_1_U0_cache_window_sm_read)
);

MLP0_fifo_w768_d2_S mac_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(matmul_step2_mac_1_U0_mac_sm_din),
    .if_full_n(mac_sm_full_n),
    .if_write(matmul_step2_mac_1_U0_mac_sm_write),
    .if_dout(mac_sm_dout),
    .if_empty_n(mac_sm_empty_n),
    .if_read(do_adapt_5_U0_mac_sm_read)
);

MLP0_start_for_matmul_step1_cache_window_1_U0 start_for_matmul_step1_cache_window_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step1_cache_window_1_U0_din),
    .if_full_n(start_for_matmul_step1_cache_window_1_U0_full_n),
    .if_write(do_adapt_1_U0_start_write),
    .if_dout(start_for_matmul_step1_cache_window_1_U0_dout),
    .if_empty_n(start_for_matmul_step1_cache_window_1_U0_empty_n),
    .if_read(matmul_step1_cache_window_1_U0_ap_ready)
);

MLP0_start_for_matmul_step2_mac_1_U0 start_for_matmul_step2_mac_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_matmul_step2_mac_1_U0_din),
    .if_full_n(start_for_matmul_step2_mac_1_U0_full_n),
    .if_write(matmul_step1_cache_window_1_U0_start_write),
    .if_dout(start_for_matmul_step2_mac_1_U0_dout),
    .if_empty_n(start_for_matmul_step2_mac_1_U0_empty_n),
    .if_read(matmul_step2_mac_1_U0_ap_ready)
);

MLP0_start_for_do_adapt_5_U0 start_for_do_adapt_5_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_5_U0_din),
    .if_full_n(start_for_do_adapt_5_U0_full_n),
    .if_write(matmul_step2_mac_1_U0_start_write),
    .if_dout(start_for_do_adapt_5_U0_dout),
    .if_empty_n(start_for_do_adapt_5_U0_empty_n),
    .if_read(do_adapt_5_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ap_done = do_adapt_5_U0_ap_done;

assign ap_idle = (matmul_step2_mac_1_U0_ap_idle & matmul_step1_cache_window_1_U0_ap_idle & do_adapt_5_U0_ap_idle & do_adapt_1_U0_ap_idle);

assign ap_ready = internal_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = do_adapt_5_U0_ap_done;

assign ap_sync_ready = do_adapt_1_U0_ap_ready;

assign do_adapt_1_U0_ap_continue = 1'b1;

assign do_adapt_1_U0_ap_start = real_start;

assign do_adapt_5_U0_ap_continue = ap_continue;

assign do_adapt_5_U0_ap_start = start_for_do_adapt_5_U0_empty_n;

assign do_adapt_5_U0_start_full_n = 1'b1;

assign do_adapt_5_U0_start_write = 1'b0;

assign internal_ap_ready = ap_sync_ready;

assign ln_sm_read = do_adapt_1_U0_ln_sm_read;

assign m1_sm_din = do_adapt_5_U0_m1_sm_din;

assign m1_sm_write = do_adapt_5_U0_m1_sm_write;

assign matmul_step1_cache_window_1_U0_ap_continue = 1'b1;

assign matmul_step1_cache_window_1_U0_ap_start = start_for_matmul_step1_cache_window_1_U0_empty_n;

assign matmul_step2_mac_1_U0_ap_continue = 1'b1;

assign matmul_step2_mac_1_U0_ap_start = start_for_matmul_step2_mac_1_U0_empty_n;

assign start_for_do_adapt_5_U0_din = 1'b1;

assign start_for_matmul_step1_cache_window_1_U0_din = 1'b1;

assign start_for_matmul_step2_mac_1_U0_din = 1'b1;

assign start_out = real_start;

endmodule //MLP0_do_matmul_1
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_do_mlp (
        i_stream_V_TDATA,
        o_stream_V_TDATA,
        ap_clk,
        ap_rst,
        i_stream_V_TVALID,
        i_stream_V_TREADY,
        ap_start,
        o_stream_V_TVALID,
        o_stream_V_TREADY,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] i_stream_V_TDATA;
output  [31:0] o_stream_V_TDATA;
input   ap_clk;
input   ap_rst;
input   i_stream_V_TVALID;
output   i_stream_V_TREADY;
input   ap_start;
output   o_stream_V_TVALID;
input   o_stream_V_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    stream_copy_U0_ap_start;
wire    stream_copy_U0_start_full_n;
wire    stream_copy_U0_ap_done;
wire    stream_copy_U0_ap_continue;
wire    stream_copy_U0_ap_idle;
wire    stream_copy_U0_ap_ready;
wire    stream_copy_U0_start_out;
wire    stream_copy_U0_start_write;
wire    stream_copy_U0_i_stream_V_TREADY;
wire   [31:0] stream_copy_U0_main_sm_din;
wire    stream_copy_U0_main_sm_write;
wire   [31:0] stream_copy_U0_resi_i_sm_din;
wire    stream_copy_U0_resi_i_sm_write;
wire    do_adapt_3_U0_ap_start;
wire    do_adapt_3_U0_ap_done;
wire    do_adapt_3_U0_ap_continue;
wire    do_adapt_3_U0_ap_idle;
wire    do_adapt_3_U0_ap_ready;
wire    do_adapt_3_U0_start_out;
wire    do_adapt_3_U0_start_write;
wire    do_adapt_3_U0_resi_i_sm_read;
wire   [63:0] do_adapt_3_U0_resi_sm_din;
wire    do_adapt_3_U0_resi_sm_write;
wire    do_adapt_2_U0_ap_start;
wire    do_adapt_2_U0_ap_done;
wire    do_adapt_2_U0_ap_continue;
wire    do_adapt_2_U0_ap_idle;
wire    do_adapt_2_U0_ap_ready;
wire    do_adapt_2_U0_start_out;
wire    do_adapt_2_U0_start_write;
wire    do_adapt_2_U0_resi_sm_read;
wire   [31:0] do_adapt_2_U0_resi_o_sm_din;
wire    do_adapt_2_U0_resi_o_sm_write;
wire    do_layernorm_U0_ap_start;
wire    do_layernorm_U0_ap_done;
wire    do_layernorm_U0_ap_continue;
wire    do_layernorm_U0_ap_idle;
wire    do_layernorm_U0_ap_ready;
wire    do_layernorm_U0_start_out;
wire    do_layernorm_U0_start_write;
wire    do_layernorm_U0_main_sm_read;
wire   [15:0] do_layernorm_U0_ln_sm_din;
wire    do_layernorm_U0_ln_sm_write;
wire    do_matmul_1_U0_ap_start;
wire    do_matmul_1_U0_start_out;
wire    do_matmul_1_U0_start_write;
wire    do_matmul_1_U0_ln_sm_read;
wire   [63:0] do_matmul_1_U0_m1_sm_din;
wire    do_matmul_1_U0_m1_sm_write;
wire    do_matmul_1_U0_ap_done;
wire    do_matmul_1_U0_ap_ready;
wire    do_matmul_1_U0_ap_idle;
wire    do_matmul_1_U0_ap_continue;
wire    do_gelu_U0_ap_start;
wire    do_gelu_U0_ap_done;
wire    do_gelu_U0_ap_continue;
wire    do_gelu_U0_ap_idle;
wire    do_gelu_U0_ap_ready;
wire    do_gelu_U0_start_out;
wire    do_gelu_U0_start_write;
wire    do_gelu_U0_m1_sm_read;
wire   [31:0] do_gelu_U0_ge_sm_din;
wire    do_gelu_U0_ge_sm_write;
wire    do_matmul_U0_ge_sm_read;
wire   [31:0] do_matmul_U0_m2_sm_din;
wire    do_matmul_U0_m2_sm_write;
wire    do_matmul_U0_ap_start;
wire    do_matmul_U0_ap_done;
wire    do_matmul_U0_ap_ready;
wire    do_matmul_U0_ap_idle;
wire    do_matmul_U0_ap_continue;
wire    stream_merge_U0_ap_start;
wire    stream_merge_U0_ap_done;
wire    stream_merge_U0_ap_continue;
wire    stream_merge_U0_ap_idle;
wire    stream_merge_U0_ap_ready;
wire    stream_merge_U0_resi_o_sm_read;
wire    stream_merge_U0_m2_sm_read;
wire   [31:0] stream_merge_U0_o_stream_V_TDATA;
wire    stream_merge_U0_o_stream_V_TVALID;
wire    ap_sync_continue;
wire    main_sm_full_n;
wire   [31:0] main_sm_dout;
wire    main_sm_empty_n;
wire    resi_i_sm_full_n;
wire   [31:0] resi_i_sm_dout;
wire    resi_i_sm_empty_n;
wire    resi_sm_full_n;
wire   [63:0] resi_sm_dout;
wire    resi_sm_empty_n;
wire    resi_o_sm_full_n;
wire   [31:0] resi_o_sm_dout;
wire    resi_o_sm_empty_n;
wire    ln_sm_full_n;
wire   [15:0] ln_sm_dout;
wire    ln_sm_empty_n;
wire    m1_sm_full_n;
wire   [63:0] m1_sm_dout;
wire    m1_sm_empty_n;
wire    ge_sm_full_n;
wire   [31:0] ge_sm_dout;
wire    ge_sm_empty_n;
wire    m2_sm_full_n;
wire   [31:0] m2_sm_dout;
wire    m2_sm_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_do_adapt_3_U0_din;
wire    start_for_do_adapt_3_U0_full_n;
wire   [0:0] start_for_do_adapt_3_U0_dout;
wire    start_for_do_adapt_3_U0_empty_n;
wire   [0:0] start_for_do_layernorm_U0_din;
wire    start_for_do_layernorm_U0_full_n;
wire   [0:0] start_for_do_layernorm_U0_dout;
wire    start_for_do_layernorm_U0_empty_n;
wire   [0:0] start_for_do_adapt_2_U0_din;
wire    start_for_do_adapt_2_U0_full_n;
wire   [0:0] start_for_do_adapt_2_U0_dout;
wire    start_for_do_adapt_2_U0_empty_n;
wire   [0:0] start_for_stream_merge_U0_din;
wire    start_for_stream_merge_U0_full_n;
wire   [0:0] start_for_stream_merge_U0_dout;
wire    start_for_stream_merge_U0_empty_n;
wire   [0:0] start_for_do_matmul_1_U0_din;
wire    start_for_do_matmul_1_U0_full_n;
wire   [0:0] start_for_do_matmul_1_U0_dout;
wire    start_for_do_matmul_1_U0_empty_n;
wire   [0:0] start_for_do_gelu_U0_din;
wire    start_for_do_gelu_U0_full_n;
wire   [0:0] start_for_do_gelu_U0_dout;
wire    start_for_do_gelu_U0_empty_n;
wire   [0:0] start_for_do_matmul_U0_din;
wire    start_for_do_matmul_U0_full_n;
wire   [0:0] start_for_do_matmul_U0_dout;
wire    start_for_do_matmul_U0_empty_n;
wire    do_matmul_U0_start_full_n;
wire    do_matmul_U0_start_write;
wire    stream_merge_U0_start_full_n;
wire    stream_merge_U0_start_write;

MLP0_stream_copy stream_copy_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_copy_U0_ap_start),
    .start_full_n(stream_copy_U0_start_full_n),
    .ap_done(stream_copy_U0_ap_done),
    .ap_continue(stream_copy_U0_ap_continue),
    .ap_idle(stream_copy_U0_ap_idle),
    .ap_ready(stream_copy_U0_ap_ready),
    .start_out(stream_copy_U0_start_out),
    .start_write(stream_copy_U0_start_write),
    .i_stream_V_TDATA(i_stream_V_TDATA),
    .i_stream_V_TVALID(i_stream_V_TVALID),
    .i_stream_V_TREADY(stream_copy_U0_i_stream_V_TREADY),
    .main_sm_din(stream_copy_U0_main_sm_din),
    .main_sm_full_n(main_sm_full_n),
    .main_sm_write(stream_copy_U0_main_sm_write),
    .resi_i_sm_din(stream_copy_U0_resi_i_sm_din),
    .resi_i_sm_full_n(resi_i_sm_full_n),
    .resi_i_sm_write(stream_copy_U0_resi_i_sm_write)
);

MLP0_do_adapt_3 do_adapt_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_3_U0_ap_start),
    .start_full_n(start_for_do_adapt_2_U0_full_n),
    .ap_done(do_adapt_3_U0_ap_done),
    .ap_continue(do_adapt_3_U0_ap_continue),
    .ap_idle(do_adapt_3_U0_ap_idle),
    .ap_ready(do_adapt_3_U0_ap_ready),
    .start_out(do_adapt_3_U0_start_out),
    .start_write(do_adapt_3_U0_start_write),
    .resi_i_sm_dout(resi_i_sm_dout),
    .resi_i_sm_empty_n(resi_i_sm_empty_n),
    .resi_i_sm_read(do_adapt_3_U0_resi_i_sm_read),
    .resi_sm_din(do_adapt_3_U0_resi_sm_din),
    .resi_sm_full_n(resi_sm_full_n),
    .resi_sm_write(do_adapt_3_U0_resi_sm_write)
);

MLP0_do_adapt_2 do_adapt_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_adapt_2_U0_ap_start),
    .start_full_n(start_for_stream_merge_U0_full_n),
    .ap_done(do_adapt_2_U0_ap_done),
    .ap_continue(do_adapt_2_U0_ap_continue),
    .ap_idle(do_adapt_2_U0_ap_idle),
    .ap_ready(do_adapt_2_U0_ap_ready),
    .start_out(do_adapt_2_U0_start_out),
    .start_write(do_adapt_2_U0_start_write),
    .resi_sm_dout(resi_sm_dout),
    .resi_sm_empty_n(resi_sm_empty_n),
    .resi_sm_read(do_adapt_2_U0_resi_sm_read),
    .resi_o_sm_din(do_adapt_2_U0_resi_o_sm_din),
    .resi_o_sm_full_n(resi_o_sm_full_n),
    .resi_o_sm_write(do_adapt_2_U0_resi_o_sm_write)
);

MLP0_do_layernorm do_layernorm_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_layernorm_U0_ap_start),
    .start_full_n(start_for_do_matmul_1_U0_full_n),
    .ap_done(do_layernorm_U0_ap_done),
    .ap_continue(do_layernorm_U0_ap_continue),
    .ap_idle(do_layernorm_U0_ap_idle),
    .ap_ready(do_layernorm_U0_ap_ready),
    .start_out(do_layernorm_U0_start_out),
    .start_write(do_layernorm_U0_start_write),
    .main_sm_dout(main_sm_dout),
    .main_sm_empty_n(main_sm_empty_n),
    .main_sm_read(do_layernorm_U0_main_sm_read),
    .ln_sm_din(do_layernorm_U0_ln_sm_din),
    .ln_sm_full_n(ln_sm_full_n),
    .ln_sm_write(do_layernorm_U0_ln_sm_write)
);

MLP0_do_matmul_1 do_matmul_1_U0(
    .ap_start(do_matmul_1_U0_ap_start),
    .start_full_n(start_for_do_gelu_U0_full_n),
    .start_out(do_matmul_1_U0_start_out),
    .start_write(do_matmul_1_U0_start_write),
    .ln_sm_dout(ln_sm_dout),
    .ln_sm_empty_n(ln_sm_empty_n),
    .ln_sm_read(do_matmul_1_U0_ln_sm_read),
    .m1_sm_din(do_matmul_1_U0_m1_sm_din),
    .m1_sm_full_n(m1_sm_full_n),
    .m1_sm_write(do_matmul_1_U0_m1_sm_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_done(do_matmul_1_U0_ap_done),
    .ap_ready(do_matmul_1_U0_ap_ready),
    .ap_idle(do_matmul_1_U0_ap_idle),
    .ap_continue(do_matmul_1_U0_ap_continue)
);

MLP0_do_gelu do_gelu_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_gelu_U0_ap_start),
    .start_full_n(start_for_do_matmul_U0_full_n),
    .ap_done(do_gelu_U0_ap_done),
    .ap_continue(do_gelu_U0_ap_continue),
    .ap_idle(do_gelu_U0_ap_idle),
    .ap_ready(do_gelu_U0_ap_ready),
    .start_out(do_gelu_U0_start_out),
    .start_write(do_gelu_U0_start_write),
    .m1_sm_dout(m1_sm_dout),
    .m1_sm_empty_n(m1_sm_empty_n),
    .m1_sm_read(do_gelu_U0_m1_sm_read),
    .ge_sm_din(do_gelu_U0_ge_sm_din),
    .ge_sm_full_n(ge_sm_full_n),
    .ge_sm_write(do_gelu_U0_ge_sm_write)
);

MLP0_do_matmul do_matmul_U0(
    .ge_sm_dout(ge_sm_dout),
    .ge_sm_empty_n(ge_sm_empty_n),
    .ge_sm_read(do_matmul_U0_ge_sm_read),
    .m2_sm_din(do_matmul_U0_m2_sm_din),
    .m2_sm_full_n(m2_sm_full_n),
    .m2_sm_write(do_matmul_U0_m2_sm_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(do_matmul_U0_ap_start),
    .ap_done(do_matmul_U0_ap_done),
    .ap_ready(do_matmul_U0_ap_ready),
    .ap_idle(do_matmul_U0_ap_idle),
    .ap_continue(do_matmul_U0_ap_continue)
);

MLP0_stream_merge stream_merge_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_merge_U0_ap_start),
    .ap_done(stream_merge_U0_ap_done),
    .ap_continue(stream_merge_U0_ap_continue),
    .ap_idle(stream_merge_U0_ap_idle),
    .ap_ready(stream_merge_U0_ap_ready),
    .resi_o_sm_dout(resi_o_sm_dout),
    .resi_o_sm_empty_n(resi_o_sm_empty_n),
    .resi_o_sm_read(stream_merge_U0_resi_o_sm_read),
    .m2_sm_dout(m2_sm_dout),
    .m2_sm_empty_n(m2_sm_empty_n),
    .m2_sm_read(stream_merge_U0_m2_sm_read),
    .o_stream_V_TDATA(stream_merge_U0_o_stream_V_TDATA),
    .o_stream_V_TVALID(stream_merge_U0_o_stream_V_TVALID),
    .o_stream_V_TREADY(o_stream_V_TREADY)
);

MLP0_fifo_w32_d2_S main_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_copy_U0_main_sm_din),
    .if_full_n(main_sm_full_n),
    .if_write(stream_copy_U0_main_sm_write),
    .if_dout(main_sm_dout),
    .if_empty_n(main_sm_empty_n),
    .if_read(do_layernorm_U0_main_sm_read)
);

MLP0_fifo_w32_d2_S resi_i_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_copy_U0_resi_i_sm_din),
    .if_full_n(resi_i_sm_full_n),
    .if_write(stream_copy_U0_resi_i_sm_write),
    .if_dout(resi_i_sm_dout),
    .if_empty_n(resi_i_sm_empty_n),
    .if_read(do_adapt_3_U0_resi_i_sm_read)
);

MLP0_fifo_w64_d512_A resi_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_3_U0_resi_sm_din),
    .if_full_n(resi_sm_full_n),
    .if_write(do_adapt_3_U0_resi_sm_write),
    .if_dout(resi_sm_dout),
    .if_empty_n(resi_sm_empty_n),
    .if_read(do_adapt_2_U0_resi_sm_read)
);

MLP0_fifo_w32_d2_S resi_o_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_adapt_2_U0_resi_o_sm_din),
    .if_full_n(resi_o_sm_full_n),
    .if_write(do_adapt_2_U0_resi_o_sm_write),
    .if_dout(resi_o_sm_dout),
    .if_empty_n(resi_o_sm_empty_n),
    .if_read(stream_merge_U0_resi_o_sm_read)
);

MLP0_fifo_w16_d2_S ln_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_layernorm_U0_ln_sm_din),
    .if_full_n(ln_sm_full_n),
    .if_write(do_layernorm_U0_ln_sm_write),
    .if_dout(ln_sm_dout),
    .if_empty_n(ln_sm_empty_n),
    .if_read(do_matmul_1_U0_ln_sm_read)
);

MLP0_fifo_w64_d2_S m1_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_matmul_1_U0_m1_sm_din),
    .if_full_n(m1_sm_full_n),
    .if_write(do_matmul_1_U0_m1_sm_write),
    .if_dout(m1_sm_dout),
    .if_empty_n(m1_sm_empty_n),
    .if_read(do_gelu_U0_m1_sm_read)
);

MLP0_fifo_w32_d2_S ge_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_gelu_U0_ge_sm_din),
    .if_full_n(ge_sm_full_n),
    .if_write(do_gelu_U0_ge_sm_write),
    .if_dout(ge_sm_dout),
    .if_empty_n(ge_sm_empty_n),
    .if_read(do_matmul_U0_ge_sm_read)
);

MLP0_fifo_w32_d2_S m2_sm_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(do_matmul_U0_m2_sm_din),
    .if_full_n(m2_sm_full_n),
    .if_write(do_matmul_U0_m2_sm_write),
    .if_dout(m2_sm_dout),
    .if_empty_n(m2_sm_empty_n),
    .if_read(stream_merge_U0_m2_sm_read)
);

MLP0_start_for_do_adapt_3_U0 start_for_do_adapt_3_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_3_U0_din),
    .if_full_n(start_for_do_adapt_3_U0_full_n),
    .if_write(stream_copy_U0_start_write),
    .if_dout(start_for_do_adapt_3_U0_dout),
    .if_empty_n(start_for_do_adapt_3_U0_empty_n),
    .if_read(do_adapt_3_U0_ap_ready)
);

MLP0_start_for_do_layernorm_U0 start_for_do_layernorm_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_layernorm_U0_din),
    .if_full_n(start_for_do_layernorm_U0_full_n),
    .if_write(stream_copy_U0_start_write),
    .if_dout(start_for_do_layernorm_U0_dout),
    .if_empty_n(start_for_do_layernorm_U0_empty_n),
    .if_read(do_layernorm_U0_ap_ready)
);

MLP0_start_for_do_adapt_2_U0 start_for_do_adapt_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_adapt_2_U0_din),
    .if_full_n(start_for_do_adapt_2_U0_full_n),
    .if_write(do_adapt_3_U0_start_write),
    .if_dout(start_for_do_adapt_2_U0_dout),
    .if_empty_n(start_for_do_adapt_2_U0_empty_n),
    .if_read(do_adapt_2_U0_ap_ready)
);

MLP0_start_for_stream_merge_U0 start_for_stream_merge_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_stream_merge_U0_din),
    .if_full_n(start_for_stream_merge_U0_full_n),
    .if_write(do_adapt_2_U0_start_write),
    .if_dout(start_for_stream_merge_U0_dout),
    .if_empty_n(start_for_stream_merge_U0_empty_n),
    .if_read(stream_merge_U0_ap_ready)
);

MLP0_start_for_do_matmul_1_U0 start_for_do_matmul_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_matmul_1_U0_din),
    .if_full_n(start_for_do_matmul_1_U0_full_n),
    .if_write(do_layernorm_U0_start_write),
    .if_dout(start_for_do_matmul_1_U0_dout),
    .if_empty_n(start_for_do_matmul_1_U0_empty_n),
    .if_read(do_matmul_1_U0_ap_ready)
);

MLP0_start_for_do_gelu_U0 start_for_do_gelu_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_gelu_U0_din),
    .if_full_n(start_for_do_gelu_U0_full_n),
    .if_write(do_matmul_1_U0_start_write),
    .if_dout(start_for_do_gelu_U0_dout),
    .if_empty_n(start_for_do_gelu_U0_empty_n),
    .if_read(do_gelu_U0_ap_ready)
);

MLP0_start_for_do_matmul_U0 start_for_do_matmul_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_do_matmul_U0_din),
    .if_full_n(start_for_do_matmul_U0_full_n),
    .if_write(do_gelu_U0_start_write),
    .if_dout(start_for_do_matmul_U0_dout),
    .if_empty_n(start_for_do_matmul_U0_empty_n),
    .if_read(do_matmul_U0_ap_ready)
);

assign ap_done = stream_merge_U0_ap_done;

assign ap_idle = (stream_merge_U0_ap_idle & stream_copy_U0_ap_idle & do_matmul_U0_ap_idle & do_matmul_1_U0_ap_idle & do_layernorm_U0_ap_idle & do_gelu_U0_ap_idle & do_adapt_3_U0_ap_idle & do_adapt_2_U0_ap_idle);

assign ap_ready = stream_copy_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = stream_merge_U0_ap_done;

assign ap_sync_ready = stream_copy_U0_ap_ready;

assign do_adapt_2_U0_ap_continue = 1'b1;

assign do_adapt_2_U0_ap_start = start_for_do_adapt_2_U0_empty_n;

assign do_adapt_3_U0_ap_continue = 1'b1;

assign do_adapt_3_U0_ap_start = start_for_do_adapt_3_U0_empty_n;

assign do_gelu_U0_ap_continue = 1'b1;

assign do_gelu_U0_ap_start = start_for_do_gelu_U0_empty_n;

assign do_layernorm_U0_ap_continue = 1'b1;

assign do_layernorm_U0_ap_start = start_for_do_layernorm_U0_empty_n;

assign do_matmul_1_U0_ap_continue = 1'b1;

assign do_matmul_1_U0_ap_start = start_for_do_matmul_1_U0_empty_n;

assign do_matmul_U0_ap_continue = 1'b1;

assign do_matmul_U0_ap_start = start_for_do_matmul_U0_empty_n;

assign do_matmul_U0_start_full_n = 1'b1;

assign do_matmul_U0_start_write = 1'b0;

assign i_stream_V_TREADY = stream_copy_U0_i_stream_V_TREADY;

assign o_stream_V_TDATA = stream_merge_U0_o_stream_V_TDATA;

assign o_stream_V_TVALID = stream_merge_U0_o_stream_V_TVALID;

assign start_for_do_adapt_2_U0_din = 1'b1;

assign start_for_do_adapt_3_U0_din = 1'b1;

assign start_for_do_gelu_U0_din = 1'b1;

assign start_for_do_layernorm_U0_din = 1'b1;

assign start_for_do_matmul_1_U0_din = 1'b1;

assign start_for_do_matmul_U0_din = 1'b1;

assign start_for_stream_merge_U0_din = 1'b1;

assign stream_copy_U0_ap_continue = 1'b1;

assign stream_copy_U0_ap_start = ap_start;

assign stream_copy_U0_start_full_n = (start_for_do_layernorm_U0_full_n & start_for_do_adapt_3_U0_full_n);

assign stream_merge_U0_ap_continue = ap_continue;

assign stream_merge_U0_ap_start = start_for_stream_merge_U0_empty_n;

assign stream_merge_U0_start_full_n = 1'b1;

assign stream_merge_U0_start_write = 1'b0;

endmodule //MLP0_do_mlp
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_fifo_w16_d2_S_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd16;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_fifo_w16_d2_S (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd16;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_fifo_w16_d2_S_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_fifo_w16_d2_S_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_fifo_w192_d2_S_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd192;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_fifo_w192_d2_S (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd192;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_fifo_w192_d2_S_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_fifo_w192_d2_S_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1ns/1ps

module MLP0_fifo_w192_d32_A_ram
#(parameter
    DATA_WIDTH  = 192,
    ADDR_WIDTH  = 5,
    DEPTH       = 32
)
(
    input  wire                  clk,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] waddr,
    input  wire [DATA_WIDTH-1:0] din,
    input  wire [ADDR_WIDTH-1:0] raddr,
    output wire [DATA_WIDTH-1:0] dout
);

(* rw_addr_collision = "yes" *)
reg  [DATA_WIDTH-1:0] mem[0:DEPTH-1];
reg  [ADDR_WIDTH-1:0] raddr_reg;

//write to ram
always @(posedge clk) begin
    if (we)
        mem[waddr] <= din;
end

//buffer the raddr
always @(posedge clk) begin
    raddr_reg <= raddr;
end

//read from ram
assign dout = mem[raddr_reg];

endmodule

module MLP0_fifo_w192_d32_A
#(parameter
    DATA_WIDTH  = 192,
    ADDR_WIDTH  = 5,
    DEPTH       = 32
)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,

    // read
    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
reg  [ADDR_WIDTH-1:0] waddr = 1'b0;
reg  [ADDR_WIDTH-1:0] raddr = 1'b0;
wire [ADDR_WIDTH-1:0] wnext;
wire [ADDR_WIDTH-1:0] rnext;
wire                  push;
wire                  pop;
reg  [ADDR_WIDTH:0]   mOutPtr = 1'b0;
reg                   full_n = 1'b1;
reg                   empty_n = 1'b0;


//------------------------Instantiation------------------
MLP0_fifo_w192_d32_A_ram
#(
 .DATA_WIDTH(DATA_WIDTH),
 .ADDR_WIDTH(ADDR_WIDTH),
 .DEPTH(DEPTH))
U_MLP0_fifo_w192_d32_A_ram(
 .clk(clk),
 .we(push),
 .waddr(waddr),
 .din(if_din),
 .raddr(rnext),
 .dout(if_dout)
);

//------------------------Task and function--------------

//------------------------Body---------------------------
assign if_full_n  = full_n;
assign if_empty_n = empty_n;
assign push       = full_n & if_write_ce & if_write;
assign pop        = empty_n & if_read_ce & if_read;
assign wnext      = !push                ? waddr :
                    (waddr == DEPTH - 1) ? 1'b0  :
                    waddr + 1'b1;
assign rnext      = !pop                 ? raddr :
                    (raddr == DEPTH - 1) ? 1'b0  :
                    raddr + 1'b1;

// waddr
always @(posedge clk) begin
    if (reset == 1'b1)
        waddr <= 1'b0;
    else
        waddr <= wnext;
end

// raddr
always @(posedge clk) begin
    if (reset == 1'b1)
        raddr <= 1'b0;
    else
        raddr <= rnext;
end

// mOutPtr
always @(posedge clk) begin
    if (reset == 1'b1)
        mOutPtr <= 1'b0;
    else if (push & ~pop)
        mOutPtr <= mOutPtr + 1'b1;
    else if (~push & pop)
        mOutPtr <= mOutPtr - 1'b1;
end

// full_n
always @(posedge clk) begin
    if (reset == 1'b1)
        full_n <= 1'b1;
    else if (push & ~pop)
        full_n <= (mOutPtr != DEPTH - 1);
    else if (~push & pop)
        full_n <= 1'b1;
end

// empty_n
always @(posedge clk) begin
    if (reset == 1'b1)
        empty_n <= 1'b0;
    else if (push & ~pop)
        empty_n <= 1'b1;
    else if (~push & pop)
        empty_n <= (mOutPtr != 1'b1);
end

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_fifo_w32_d2_S_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd32;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_fifo_w32_d2_S (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd32;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_fifo_w32_d2_S_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_fifo_w32_d2_S_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_fifo_w384_d2_S_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd384;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_fifo_w384_d2_S (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd384;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_fifo_w384_d2_S_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_fifo_w384_d2_S_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1ns/1ps

module MLP0_fifo_w384_d32_A_ram
#(parameter
    DATA_WIDTH  = 384,
    ADDR_WIDTH  = 5,
    DEPTH       = 32
)
(
    input  wire                  clk,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] waddr,
    input  wire [DATA_WIDTH-1:0] din,
    input  wire [ADDR_WIDTH-1:0] raddr,
    output wire [DATA_WIDTH-1:0] dout
);

(* rw_addr_collision = "yes" *)
reg  [DATA_WIDTH-1:0] mem[0:DEPTH-1];
reg  [ADDR_WIDTH-1:0] raddr_reg;

//write to ram
always @(posedge clk) begin
    if (we)
        mem[waddr] <= din;
end

//buffer the raddr
always @(posedge clk) begin
    raddr_reg <= raddr;
end

//read from ram
assign dout = mem[raddr_reg];

endmodule

module MLP0_fifo_w384_d32_A
#(parameter
    DATA_WIDTH  = 384,
    ADDR_WIDTH  = 5,
    DEPTH       = 32
)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,

    // read
    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
reg  [ADDR_WIDTH-1:0] waddr = 1'b0;
reg  [ADDR_WIDTH-1:0] raddr = 1'b0;
wire [ADDR_WIDTH-1:0] wnext;
wire [ADDR_WIDTH-1:0] rnext;
wire                  push;
wire                  pop;
reg  [ADDR_WIDTH:0]   mOutPtr = 1'b0;
reg                   full_n = 1'b1;
reg                   empty_n = 1'b0;


//------------------------Instantiation------------------
MLP0_fifo_w384_d32_A_ram
#(
 .DATA_WIDTH(DATA_WIDTH),
 .ADDR_WIDTH(ADDR_WIDTH),
 .DEPTH(DEPTH))
U_MLP0_fifo_w384_d32_A_ram(
 .clk(clk),
 .we(push),
 .waddr(waddr),
 .din(if_din),
 .raddr(rnext),
 .dout(if_dout)
);

//------------------------Task and function--------------

//------------------------Body---------------------------
assign if_full_n  = full_n;
assign if_empty_n = empty_n;
assign push       = full_n & if_write_ce & if_write;
assign pop        = empty_n & if_read_ce & if_read;
assign wnext      = !push                ? waddr :
                    (waddr == DEPTH - 1) ? 1'b0  :
                    waddr + 1'b1;
assign rnext      = !pop                 ? raddr :
                    (raddr == DEPTH - 1) ? 1'b0  :
                    raddr + 1'b1;

// waddr
always @(posedge clk) begin
    if (reset == 1'b1)
        waddr <= 1'b0;
    else
        waddr <= wnext;
end

// raddr
always @(posedge clk) begin
    if (reset == 1'b1)
        raddr <= 1'b0;
    else
        raddr <= rnext;
end

// mOutPtr
always @(posedge clk) begin
    if (reset == 1'b1)
        mOutPtr <= 1'b0;
    else if (push & ~pop)
        mOutPtr <= mOutPtr + 1'b1;
    else if (~push & pop)
        mOutPtr <= mOutPtr - 1'b1;
end

// full_n
always @(posedge clk) begin
    if (reset == 1'b1)
        full_n <= 1'b1;
    else if (push & ~pop)
        full_n <= (mOutPtr != DEPTH - 1);
    else if (~push & pop)
        full_n <= 1'b1;
end

// empty_n
always @(posedge clk) begin
    if (reset == 1'b1)
        empty_n <= 1'b0;
    else if (push & ~pop)
        empty_n <= 1'b1;
    else if (~push & pop)
        empty_n <= (mOutPtr != 1'b1);
end

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_fifo_w64_d2_S_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd64;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_fifo_w64_d2_S (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd64;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_fifo_w64_d2_S_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_fifo_w64_d2_S_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1ns/1ps

module MLP0_fifo_w64_d512_A_ram
#(parameter
    DATA_WIDTH  = 64,
    ADDR_WIDTH  = 9,
    DEPTH       = 512
)
(
    input  wire                  clk,
    input  wire                  we,
    input  wire [ADDR_WIDTH-1:0] waddr,
    input  wire [DATA_WIDTH-1:0] din,
    input  wire [ADDR_WIDTH-1:0] raddr,
    output wire [DATA_WIDTH-1:0] dout
);

(* rw_addr_collision = "yes" *)
reg  [DATA_WIDTH-1:0] mem[0:DEPTH-1];
reg  [ADDR_WIDTH-1:0] raddr_reg;

//write to ram
always @(posedge clk) begin
    if (we)
        mem[waddr] <= din;
end

//buffer the raddr
always @(posedge clk) begin
    raddr_reg <= raddr;
end

//read from ram
assign dout = mem[raddr_reg];

endmodule

module MLP0_fifo_w64_d512_A
#(parameter
    DATA_WIDTH  = 64,
    ADDR_WIDTH  = 9,
    DEPTH       = 512
)
(
    // system signal
    input  wire                  clk,
    input  wire                  reset,

    // write
    output wire                  if_full_n,
    input  wire                  if_write_ce,
    input  wire                  if_write,
    input  wire [DATA_WIDTH-1:0] if_din,

    // read
    output wire                  if_empty_n,
    input  wire                  if_read_ce,
    input  wire                  if_read,
    output wire [DATA_WIDTH-1:0] if_dout
);
//------------------------Parameter----------------------

//------------------------Local signal-------------------
reg  [ADDR_WIDTH-1:0] waddr = 1'b0;
reg  [ADDR_WIDTH-1:0] raddr = 1'b0;
wire [ADDR_WIDTH-1:0] wnext;
wire [ADDR_WIDTH-1:0] rnext;
wire                  push;
wire                  pop;
reg  [ADDR_WIDTH:0]   mOutPtr = 1'b0;
reg                   full_n = 1'b1;
reg                   empty_n = 1'b0;


//------------------------Instantiation------------------
MLP0_fifo_w64_d512_A_ram
#(
 .DATA_WIDTH(DATA_WIDTH),
 .ADDR_WIDTH(ADDR_WIDTH),
 .DEPTH(DEPTH))
U_MLP0_fifo_w64_d512_A_ram(
 .clk(clk),
 .we(push),
 .waddr(waddr),
 .din(if_din),
 .raddr(rnext),
 .dout(if_dout)
);

//------------------------Task and function--------------

//------------------------Body---------------------------
assign if_full_n  = full_n;
assign if_empty_n = empty_n;
assign push       = full_n & if_write_ce & if_write;
assign pop        = empty_n & if_read_ce & if_read;
assign wnext      = !push                ? waddr :
                    (waddr == DEPTH - 1) ? 1'b0  :
                    waddr + 1'b1;
assign rnext      = !pop                 ? raddr :
                    (raddr == DEPTH - 1) ? 1'b0  :
                    raddr + 1'b1;

// waddr
always @(posedge clk) begin
    if (reset == 1'b1)
        waddr <= 1'b0;
    else
        waddr <= wnext;
end

// raddr
always @(posedge clk) begin
    if (reset == 1'b1)
        raddr <= 1'b0;
    else
        raddr <= rnext;
end

// mOutPtr
always @(posedge clk) begin
    if (reset == 1'b1)
        mOutPtr <= 1'b0;
    else if (push & ~pop)
        mOutPtr <= mOutPtr + 1'b1;
    else if (~push & pop)
        mOutPtr <= mOutPtr - 1'b1;
end

// full_n
always @(posedge clk) begin
    if (reset == 1'b1)
        full_n <= 1'b1;
    else if (push & ~pop)
        full_n <= (mOutPtr != DEPTH - 1);
    else if (~push & pop)
        full_n <= 1'b1;
end

// empty_n
always @(posedge clk) begin
    if (reset == 1'b1)
        empty_n <= 1'b0;
    else if (push & ~pop)
        empty_n <= 1'b1;
    else if (~push & pop)
        empty_n <= (mOutPtr != 1'b1);
end

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_fifo_w768_d2_S_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd768;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_fifo_w768_d2_S (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd768;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_fifo_w768_d2_S_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_fifo_w768_d2_S_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps

module MLP0_mac_muladd_15s_21ns_22ns_34_4_1_DSP48_3(
    input clk,
    input rst,
    input ce,
    input  [15 - 1:0] in0,
    input  [21 - 1:0] in1,
    input  [22 - 1:0] in2,
    output [34 - 1:0]  dout);

wire signed [27 - 1:0]     a;
wire signed [18 - 1:0]     b;
wire signed [48 - 1:0]     c;
wire signed [45 - 1:0]     m;
wire signed [48 - 1:0]     p;
reg  signed [45 - 1:0]     m_reg;
reg  signed [27 - 1:0]     a_reg;
reg  signed [18 - 1:0]     b_reg;
reg  signed [48 - 1:0]     p_reg;

assign a  = $unsigned(in1);
assign b  = $signed(in0);
assign c  = $unsigned(in2);

assign m  = a_reg * b_reg;
assign p  = m_reg + c;

always @(posedge clk) begin
    if (ce) begin
        m_reg  <= m;
        a_reg  <= a;
        b_reg  <= b;
        p_reg  <= p;
    end
end

assign dout = p_reg;

endmodule
`timescale 1 ns / 1 ps
module MLP0_mac_muladd_15s_21ns_22ns_34_4_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    din2,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter din2_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
input[din2_WIDTH - 1:0] din2;
output[dout_WIDTH - 1:0] dout;



MLP0_mac_muladd_15s_21ns_22ns_34_4_1_DSP48_3 MLP0_mac_muladd_15s_21ns_22ns_34_4_1_DSP48_3_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .in0( din0 ),
    .in1( din1 ),
    .in2( din2 ),
    .dout( dout ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps

module MLP0_mac_muladd_18s_17ns_24ns_33_4_1_DSP48_0(
    input clk,
    input rst,
    input ce,
    input  [18 - 1:0] in0,
    input  [17 - 1:0] in1,
    input  [24 - 1:0] in2,
    output [33 - 1:0]  dout);

wire signed [27 - 1:0]     a;
wire signed [18 - 1:0]     b;
wire signed [48 - 1:0]     c;
wire signed [45 - 1:0]     m;
wire signed [48 - 1:0]     p;
reg  signed [45 - 1:0]     m_reg;
reg  signed [27 - 1:0]     a_reg;
reg  signed [18 - 1:0]     b_reg;
reg  signed [48 - 1:0]     p_reg;

assign a  = $signed(in0);
assign b  = $unsigned(in1);
assign c  = $unsigned(in2);

assign m  = a_reg * b_reg;
assign p  = m_reg + c;

always @(posedge clk) begin
    if (ce) begin
        m_reg  <= m;
        a_reg  <= a;
        b_reg  <= b;
        p_reg  <= p;
    end
end

assign dout = p_reg;

endmodule
`timescale 1 ns / 1 ps
module MLP0_mac_muladd_18s_17ns_24ns_33_4_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    din2,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter din2_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
input[din2_WIDTH - 1:0] din2;
output[dout_WIDTH - 1:0] dout;



MLP0_mac_muladd_18s_17ns_24ns_33_4_1_DSP48_0 MLP0_mac_muladd_18s_17ns_24ns_33_4_1_DSP48_0_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .in0( din0 ),
    .in1( din1 ),
    .in2( din2 ),
    .dout( dout ));

endmodule

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_matmul_step1_cache_window (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        adpt_sm_dout,
        adpt_sm_empty_n,
        adpt_sm_read,
        cache_window_sm_din,
        cache_window_sm_full_n,
        cache_window_sm_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [383:0] adpt_sm_dout;
input   adpt_sm_empty_n;
output   adpt_sm_read;
output  [383:0] cache_window_sm_din;
input   cache_window_sm_full_n;
output   cache_window_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg adpt_sm_read;
reg cache_window_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    adpt_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln64_reg_2409;
reg   [0:0] select_ln65_4_reg_2447;
reg    cache_window_sm_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln64_reg_2409_pp0_iter1_reg;
reg   [15:0] indvar_flatten13_reg_441;
reg   [10:0] indvar_flatten_reg_452;
reg   [4:0] cot_reg_463;
reg   [5:0] cit_reg_474;
wire   [15:0] add_ln64_fu_719_p2;
reg   [15:0] add_ln64_reg_2404;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op95_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln64_fu_725_p2;
wire   [0:0] icmp_ln65_fu_731_p2;
reg   [0:0] icmp_ln65_reg_2413;
wire   [4:0] select_ln64_fu_737_p3;
reg   [4:0] select_ln64_reg_2419;
wire   [0:0] cmp1023_fu_745_p2;
reg   [0:0] cmp1023_reg_2425;
wire   [0:0] and_ln64_fu_763_p2;
reg   [0:0] and_ln64_reg_2430;
wire   [5:0] select_ln65_fu_775_p3;
reg   [5:0] select_ln65_reg_2436;
wire   [10:0] add_ln65_2_fu_783_p2;
reg   [10:0] add_ln65_2_reg_2442;
wire   [0:0] select_ln65_4_fu_804_p3;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire   [4:0] select_ln65_5_fu_811_p3;
reg   [4:0] select_ln65_5_reg_2451;
reg   [4:0] wb_V_addr_reg_2456;
wire   [5:0] add_ln66_fu_821_p2;
reg   [5:0] add_ln66_reg_2461;
wire   [10:0] select_ln65_6_fu_826_p3;
reg   [10:0] select_ln65_6_reg_2466;
wire   [68:0] vec_o_data_M_elems_V_1_cast_fu_1306_p24;
wire   [2:0] trunc_ln73_s_fu_1580_p4;
wire   [2:0] trunc_ln73_23_fu_1590_p4;
wire   [2:0] trunc_ln73_24_fu_1600_p4;
wire   [2:0] trunc_ln73_25_fu_1610_p4;
wire   [2:0] trunc_ln73_26_fu_1620_p4;
wire   [2:0] trunc_ln73_27_fu_1630_p4;
wire   [2:0] trunc_ln73_28_fu_1640_p4;
wire   [2:0] trunc_ln73_29_fu_1650_p4;
wire   [2:0] trunc_ln73_30_fu_1660_p4;
wire   [2:0] trunc_ln73_31_fu_1670_p4;
wire   [2:0] trunc_ln73_32_fu_1680_p4;
wire   [2:0] trunc_ln73_33_fu_1690_p4;
wire   [2:0] trunc_ln73_34_fu_1700_p4;
wire   [2:0] trunc_ln73_35_fu_1710_p4;
wire   [2:0] trunc_ln73_36_fu_1720_p4;
wire   [2:0] trunc_ln73_37_fu_1730_p4;
wire   [2:0] trunc_ln73_38_fu_1740_p4;
wire   [2:0] trunc_ln73_39_fu_1750_p4;
wire   [2:0] trunc_ln73_40_fu_1760_p4;
wire   [2:0] trunc_ln73_41_fu_1770_p4;
wire   [2:0] trunc_ln73_42_fu_1780_p4;
wire   [2:0] trunc_ln73_43_fu_1790_p4;
wire   [2:0] trunc_ln73_44_fu_1800_p4;
wire   [2:0] trunc_ln73_45_fu_1810_p4;
wire   [2:0] trunc_ln73_46_fu_1820_p4;
wire   [68:0] vec_o_data_M_elems_V_cast_fu_1830_p24;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
reg   [4:0] wb_V_address0;
reg    wb_V_ce0;
reg    wb_V_we0;
wire   [143:0] wb_V_d0;
wire   [143:0] wb_V_q0;
reg   [15:0] ap_phi_mux_indvar_flatten13_phi_fu_445_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_456_p4;
reg   [4:0] ap_phi_mux_cot_phi_fu_467_p4;
reg   [5:0] ap_phi_mux_cit_phi_fu_478_p4;
wire   [68:0] ap_phi_reg_pp0_iter0_vec_o_data_M_elems_V_3_in_in_reg_485;
reg   [68:0] ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_34_0_0_0_load_reg_494;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_34_0_0_0_load_reg_494;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_33_0_0_0_load_reg_503;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_33_0_0_0_load_reg_503;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_32_0_0_0_load_reg_512;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_32_0_0_0_load_reg_512;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_31_0_0_0_load_reg_521;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_31_0_0_0_load_reg_521;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_30_0_0_0_load_reg_530;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_30_0_0_0_load_reg_530;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_29_0_0_0_load_reg_539;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_29_0_0_0_load_reg_539;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_28_0_0_0_load_reg_548;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_28_0_0_0_load_reg_548;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_27_0_0_0_load_reg_557;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_27_0_0_0_load_reg_557;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_26_0_0_0_load_reg_566;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_26_0_0_0_load_reg_566;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_25_0_0_0_load_reg_575;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_25_0_0_0_load_reg_575;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_24_0_0_0_load_reg_584;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_24_0_0_0_load_reg_584;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_23_0_0_0_load_reg_593;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_593;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_47_0_0_0_load_reg_602;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_47_0_0_0_load_reg_602;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_46_0_0_0_load_reg_611;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_46_0_0_0_load_reg_611;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_45_0_0_0_load_reg_620;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_45_0_0_0_load_reg_620;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_44_0_0_0_load_reg_629;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_44_0_0_0_load_reg_629;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_43_0_0_0_load_reg_638;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_43_0_0_0_load_reg_638;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_42_0_0_0_load_reg_647;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_42_0_0_0_load_reg_647;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_41_0_0_0_load_reg_656;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_41_0_0_0_load_reg_656;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_40_0_0_0_load_reg_665;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_40_0_0_0_load_reg_665;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_39_0_0_0_load_reg_674;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_39_0_0_0_load_reg_674;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_38_0_0_0_load_reg_683;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_38_0_0_0_load_reg_683;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_37_0_0_0_load_reg_692;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_37_0_0_0_load_reg_692;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_36_0_0_0_load_reg_701;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_36_0_0_0_load_reg_701;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_35_0_0_0_load_reg_710;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_35_0_0_0_load_reg_710;
wire   [63:0] zext_ln66_fu_817_p1;
reg    ap_block_pp0_stage1_01001;
wire   [0:0] icmp_ln66_fu_757_p2;
wire   [0:0] xor_ln64_fu_751_p2;
wire   [0:0] or_ln65_fu_769_p2;
wire   [4:0] cot_4_fu_793_p2;
wire   [0:0] cmp10_mid1_fu_798_p2;
wire   [0:0] or_ln64_fu_789_p2;
wire   [2:0] tmp_335_fu_1046_p4;
wire   [2:0] tmp_334_fu_1036_p4;
wire   [2:0] tmp_333_fu_1026_p4;
wire   [2:0] tmp_332_fu_1016_p4;
wire   [2:0] tmp_331_fu_1006_p4;
wire   [2:0] tmp_330_fu_996_p4;
wire   [2:0] tmp_329_fu_986_p4;
wire   [2:0] tmp_328_fu_976_p4;
wire   [2:0] tmp_327_fu_966_p4;
wire   [2:0] tmp_326_fu_956_p4;
wire   [2:0] tmp_325_fu_946_p4;
wire   [2:0] tmp_324_fu_936_p4;
wire   [2:0] tmp_323_fu_926_p4;
wire   [2:0] tmp_322_fu_916_p4;
wire   [2:0] tmp_321_fu_906_p4;
wire   [2:0] tmp_320_fu_896_p4;
wire   [2:0] tmp_319_fu_886_p4;
wire   [2:0] tmp_318_fu_876_p4;
wire   [2:0] tmp_317_fu_866_p4;
wire   [2:0] tmp_316_fu_856_p4;
wire   [2:0] tmp_315_fu_846_p4;
wire   [2:0] tmp_314_fu_836_p4;
wire   [2:0] trunc_ln87_fu_832_p1;
wire   [2:0] trunc_ln73_22_fu_1570_p4;
wire   [2:0] trunc_ln73_21_fu_1560_p4;
wire   [2:0] trunc_ln73_20_fu_1550_p4;
wire   [2:0] trunc_ln73_19_fu_1540_p4;
wire   [2:0] trunc_ln73_18_fu_1530_p4;
wire   [2:0] trunc_ln73_17_fu_1520_p4;
wire   [2:0] trunc_ln73_16_fu_1510_p4;
wire   [2:0] trunc_ln73_15_fu_1500_p4;
wire   [2:0] trunc_ln73_14_fu_1490_p4;
wire   [2:0] trunc_ln73_13_fu_1480_p4;
wire   [2:0] trunc_ln73_12_fu_1470_p4;
wire   [2:0] trunc_ln73_11_fu_1460_p4;
wire   [2:0] trunc_ln73_10_fu_1450_p4;
wire   [2:0] trunc_ln73_9_fu_1440_p4;
wire   [2:0] trunc_ln73_8_fu_1430_p4;
wire   [2:0] trunc_ln73_7_fu_1420_p4;
wire   [2:0] trunc_ln73_6_fu_1410_p4;
wire   [2:0] trunc_ln73_5_fu_1400_p4;
wire   [2:0] trunc_ln73_4_fu_1390_p4;
wire   [2:0] trunc_ln73_3_fu_1380_p4;
wire   [2:0] trunc_ln73_2_fu_1370_p4;
wire   [2:0] trunc_ln73_1_fu_1360_p4;
wire   [2:0] trunc_ln73_fu_1356_p1;
wire   [2:0] tmp_396_fu_2195_p4;
wire   [2:0] tmp_395_fu_2185_p4;
wire   [2:0] tmp_394_fu_2175_p4;
wire   [2:0] tmp_393_fu_2165_p4;
wire   [2:0] tmp_392_fu_2155_p4;
wire   [2:0] tmp_391_fu_2145_p4;
wire   [2:0] tmp_390_fu_2135_p4;
wire   [2:0] tmp_389_fu_2125_p4;
wire   [2:0] tmp_388_fu_2115_p4;
wire   [2:0] tmp_387_fu_2105_p4;
wire   [2:0] tmp_386_fu_2095_p4;
wire   [2:0] tmp_385_fu_2085_p4;
wire   [2:0] tmp_384_fu_2075_p4;
wire   [2:0] tmp_383_fu_2065_p4;
wire   [2:0] tmp_382_fu_2055_p4;
wire   [2:0] tmp_381_fu_2045_p4;
wire   [2:0] tmp_380_fu_2035_p4;
wire   [2:0] tmp_379_fu_2025_p4;
wire   [2:0] tmp_378_fu_2015_p4;
wire   [2:0] tmp_377_fu_2005_p4;
wire   [2:0] tmp_376_fu_1995_p4;
wire   [2:0] tmp_s_fu_1985_p4;
wire   [2:0] trunc_ln174_fu_1981_p1;
wire   [378:0] tmp_69_fu_2205_p96;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 4'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

MLP0_matmul_step1_cache_window_wb_V #(
    .DataWidth( 144 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
wb_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(wb_V_address0),
    .ce0(wb_V_ce0),
    .we0(wb_V_we0),
    .d0(wb_V_d0),
    .q0(wb_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_593 <= {{wb_V_q0[140:138]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_593 <= {{adpt_sm_dout[186:184]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_593 <= ap_phi_reg_pp0_iter0_p_fca_0_0_23_0_0_0_load_reg_593;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_24_0_0_0_load_reg_584 <= {{wb_V_q0[5:3]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_24_0_0_0_load_reg_584 <= {{adpt_sm_dout[194:192]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_24_0_0_0_load_reg_584 <= ap_phi_reg_pp0_iter0_p_fca_0_0_24_0_0_0_load_reg_584;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_25_0_0_0_load_reg_575 <= {{wb_V_q0[11:9]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_25_0_0_0_load_reg_575 <= {{adpt_sm_dout[202:200]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_25_0_0_0_load_reg_575 <= ap_phi_reg_pp0_iter0_p_fca_0_0_25_0_0_0_load_reg_575;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_26_0_0_0_load_reg_566 <= {{wb_V_q0[17:15]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_26_0_0_0_load_reg_566 <= {{adpt_sm_dout[210:208]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_26_0_0_0_load_reg_566 <= ap_phi_reg_pp0_iter0_p_fca_0_0_26_0_0_0_load_reg_566;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_27_0_0_0_load_reg_557 <= {{wb_V_q0[23:21]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_27_0_0_0_load_reg_557 <= {{adpt_sm_dout[218:216]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_27_0_0_0_load_reg_557 <= ap_phi_reg_pp0_iter0_p_fca_0_0_27_0_0_0_load_reg_557;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_28_0_0_0_load_reg_548 <= {{wb_V_q0[29:27]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_28_0_0_0_load_reg_548 <= {{adpt_sm_dout[226:224]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_28_0_0_0_load_reg_548 <= ap_phi_reg_pp0_iter0_p_fca_0_0_28_0_0_0_load_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_29_0_0_0_load_reg_539 <= {{wb_V_q0[35:33]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_29_0_0_0_load_reg_539 <= {{adpt_sm_dout[234:232]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_29_0_0_0_load_reg_539 <= ap_phi_reg_pp0_iter0_p_fca_0_0_29_0_0_0_load_reg_539;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_30_0_0_0_load_reg_530 <= {{wb_V_q0[41:39]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_30_0_0_0_load_reg_530 <= {{adpt_sm_dout[242:240]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_30_0_0_0_load_reg_530 <= ap_phi_reg_pp0_iter0_p_fca_0_0_30_0_0_0_load_reg_530;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_31_0_0_0_load_reg_521 <= {{wb_V_q0[47:45]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_31_0_0_0_load_reg_521 <= {{adpt_sm_dout[250:248]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_31_0_0_0_load_reg_521 <= ap_phi_reg_pp0_iter0_p_fca_0_0_31_0_0_0_load_reg_521;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_32_0_0_0_load_reg_512 <= {{wb_V_q0[53:51]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_32_0_0_0_load_reg_512 <= {{adpt_sm_dout[258:256]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_32_0_0_0_load_reg_512 <= ap_phi_reg_pp0_iter0_p_fca_0_0_32_0_0_0_load_reg_512;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_33_0_0_0_load_reg_503 <= {{wb_V_q0[59:57]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_33_0_0_0_load_reg_503 <= {{adpt_sm_dout[266:264]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_33_0_0_0_load_reg_503 <= ap_phi_reg_pp0_iter0_p_fca_0_0_33_0_0_0_load_reg_503;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_34_0_0_0_load_reg_494 <= {{wb_V_q0[65:63]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_34_0_0_0_load_reg_494 <= {{adpt_sm_dout[274:272]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_34_0_0_0_load_reg_494 <= ap_phi_reg_pp0_iter0_p_fca_0_0_34_0_0_0_load_reg_494;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_35_0_0_0_load_reg_710 <= {{wb_V_q0[71:69]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_35_0_0_0_load_reg_710 <= {{adpt_sm_dout[282:280]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_35_0_0_0_load_reg_710 <= ap_phi_reg_pp0_iter0_p_fca_0_0_35_0_0_0_load_reg_710;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_36_0_0_0_load_reg_701 <= {{wb_V_q0[77:75]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_36_0_0_0_load_reg_701 <= {{adpt_sm_dout[290:288]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_36_0_0_0_load_reg_701 <= ap_phi_reg_pp0_iter0_p_fca_0_0_36_0_0_0_load_reg_701;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_37_0_0_0_load_reg_692 <= {{wb_V_q0[83:81]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_37_0_0_0_load_reg_692 <= {{adpt_sm_dout[298:296]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_37_0_0_0_load_reg_692 <= ap_phi_reg_pp0_iter0_p_fca_0_0_37_0_0_0_load_reg_692;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_38_0_0_0_load_reg_683 <= {{wb_V_q0[89:87]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_38_0_0_0_load_reg_683 <= {{adpt_sm_dout[306:304]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_38_0_0_0_load_reg_683 <= ap_phi_reg_pp0_iter0_p_fca_0_0_38_0_0_0_load_reg_683;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_39_0_0_0_load_reg_674 <= {{wb_V_q0[95:93]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_39_0_0_0_load_reg_674 <= {{adpt_sm_dout[314:312]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_39_0_0_0_load_reg_674 <= ap_phi_reg_pp0_iter0_p_fca_0_0_39_0_0_0_load_reg_674;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_40_0_0_0_load_reg_665 <= {{wb_V_q0[101:99]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_40_0_0_0_load_reg_665 <= {{adpt_sm_dout[322:320]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_40_0_0_0_load_reg_665 <= ap_phi_reg_pp0_iter0_p_fca_0_0_40_0_0_0_load_reg_665;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_41_0_0_0_load_reg_656 <= {{wb_V_q0[107:105]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_41_0_0_0_load_reg_656 <= {{adpt_sm_dout[330:328]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_41_0_0_0_load_reg_656 <= ap_phi_reg_pp0_iter0_p_fca_0_0_41_0_0_0_load_reg_656;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_42_0_0_0_load_reg_647 <= {{wb_V_q0[113:111]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_42_0_0_0_load_reg_647 <= {{adpt_sm_dout[338:336]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_42_0_0_0_load_reg_647 <= ap_phi_reg_pp0_iter0_p_fca_0_0_42_0_0_0_load_reg_647;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_43_0_0_0_load_reg_638 <= {{wb_V_q0[119:117]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_43_0_0_0_load_reg_638 <= {{adpt_sm_dout[346:344]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_43_0_0_0_load_reg_638 <= ap_phi_reg_pp0_iter0_p_fca_0_0_43_0_0_0_load_reg_638;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_44_0_0_0_load_reg_629 <= {{wb_V_q0[125:123]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_44_0_0_0_load_reg_629 <= {{adpt_sm_dout[354:352]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_44_0_0_0_load_reg_629 <= ap_phi_reg_pp0_iter0_p_fca_0_0_44_0_0_0_load_reg_629;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_45_0_0_0_load_reg_620 <= {{wb_V_q0[131:129]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_45_0_0_0_load_reg_620 <= {{adpt_sm_dout[362:360]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_45_0_0_0_load_reg_620 <= ap_phi_reg_pp0_iter0_p_fca_0_0_45_0_0_0_load_reg_620;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_46_0_0_0_load_reg_611 <= {{wb_V_q0[137:135]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_46_0_0_0_load_reg_611 <= {{adpt_sm_dout[370:368]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_46_0_0_0_load_reg_611 <= ap_phi_reg_pp0_iter0_p_fca_0_0_46_0_0_0_load_reg_611;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_47_0_0_0_load_reg_602 <= {{wb_V_q0[143:141]}};
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_47_0_0_0_load_reg_602 <= {{adpt_sm_dout[378:376]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_47_0_0_0_load_reg_602 <= ap_phi_reg_pp0_iter0_p_fca_0_0_47_0_0_0_load_reg_602;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_4_reg_2447 == 1'd0) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485 <= vec_o_data_M_elems_V_1_cast_fu_1306_p24;
    end else if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485 <= vec_o_data_M_elems_V_cast_fu_1830_p24;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485 <= ap_phi_reg_pp0_iter0_vec_o_data_M_elems_V_3_in_in_reg_485;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cit_reg_474 <= add_ln66_reg_2461;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cit_reg_474 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cot_reg_463 <= select_ln65_5_reg_2451;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cot_reg_463 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten13_reg_441 <= add_ln64_reg_2404;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_441 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_452 <= select_ln65_6_reg_2466;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_452 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln64_reg_2404 <= add_ln64_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_725_p2 == 1'd0))) begin
        add_ln65_2_reg_2442 <= add_ln65_2_fu_783_p2;
        and_ln64_reg_2430 <= and_ln64_fu_763_p2;
        cmp1023_reg_2425 <= cmp1023_fu_745_p2;
        icmp_ln65_reg_2413 <= icmp_ln65_fu_731_p2;
        select_ln64_reg_2419 <= select_ln64_fu_737_p3;
        select_ln65_reg_2436 <= select_ln65_fu_775_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln66_reg_2461 <= add_ln66_fu_821_p2;
        select_ln65_5_reg_2451 <= select_ln65_5_fu_811_p3;
        select_ln65_6_reg_2466 <= select_ln65_6_fu_826_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_2409 <= icmp_ln64_fu_725_p2;
        icmp_ln64_reg_2409_pp0_iter1_reg <= icmp_ln64_reg_2409;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln65_4_reg_2447 <= select_ln65_4_fu_804_p3;
        wb_V_addr_reg_2456 <= zext_ln66_fu_817_p1;
    end
end

always @ (*) begin
    if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        adpt_sm_blk_n = adpt_sm_empty_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op95_read_state4 == 1'b1))) begin
        adpt_sm_read = 1'b1;
    end else begin
        adpt_sm_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln64_fu_725_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cit_phi_fu_478_p4 = add_ln66_reg_2461;
    end else begin
        ap_phi_mux_cit_phi_fu_478_p4 = cit_reg_474;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cot_phi_fu_467_p4 = select_ln65_5_reg_2451;
    end else begin
        ap_phi_mux_cot_phi_fu_467_p4 = cot_reg_463;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten13_phi_fu_445_p4 = add_ln64_reg_2404;
    end else begin
        ap_phi_mux_indvar_flatten13_phi_fu_445_p4 = indvar_flatten13_reg_441;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_456_p4 = select_ln65_6_reg_2466;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_456_p4 = indvar_flatten_reg_452;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2409_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cache_window_sm_blk_n = cache_window_sm_full_n;
    end else begin
        cache_window_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_2409_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cache_window_sm_write = 1'b1;
    end else begin
        cache_window_sm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wb_V_address0 = wb_V_addr_reg_2456;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wb_V_address0 = zext_ln66_fu_817_p1;
    end else begin
        wb_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        wb_V_ce0 = 1'b1;
    end else begin
        wb_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wb_V_we0 = 1'b1;
    end else begin
        wb_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln64_fu_725_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln64_fu_725_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln64_fu_719_p2 = (ap_phi_mux_indvar_flatten13_phi_fu_445_p4 + 16'd1);

assign add_ln65_2_fu_783_p2 = (ap_phi_mux_indvar_flatten_phi_fu_456_p4 + 11'd1);

assign add_ln66_fu_821_p2 = (select_ln65_reg_2436 + 6'd1);

assign and_ln64_fu_763_p2 = (xor_ln64_fu_751_p2 & icmp_ln66_fu_757_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == adpt_sm_empty_n) & (ap_predicate_op95_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == adpt_sm_empty_n) & (ap_predicate_op95_read_state4 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln64_reg_2409_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln64_reg_2409_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln64_reg_2409_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((1'b0 == adpt_sm_empty_n) & (ap_predicate_op95_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage1_iter1 = ((icmp_ln64_reg_2409_pp0_iter1_reg == 1'd0) & (cache_window_sm_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_fca_0_0_23_0_0_0_load_reg_593 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_24_0_0_0_load_reg_584 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_25_0_0_0_load_reg_575 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_26_0_0_0_load_reg_566 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_27_0_0_0_load_reg_557 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_28_0_0_0_load_reg_548 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_29_0_0_0_load_reg_539 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_30_0_0_0_load_reg_530 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_31_0_0_0_load_reg_521 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_32_0_0_0_load_reg_512 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_33_0_0_0_load_reg_503 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_34_0_0_0_load_reg_494 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_35_0_0_0_load_reg_710 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_36_0_0_0_load_reg_701 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_37_0_0_0_load_reg_692 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_38_0_0_0_load_reg_683 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_39_0_0_0_load_reg_674 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_40_0_0_0_load_reg_665 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_41_0_0_0_load_reg_656 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_42_0_0_0_load_reg_647 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_43_0_0_0_load_reg_638 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_44_0_0_0_load_reg_629 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_45_0_0_0_load_reg_620 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_46_0_0_0_load_reg_611 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_47_0_0_0_load_reg_602 = 'bx;

assign ap_phi_reg_pp0_iter0_vec_o_data_M_elems_V_3_in_in_reg_485 = 'bx;

always @ (*) begin
    ap_predicate_op95_read_state4 = ((select_ln65_4_reg_2447 == 1'd1) & (icmp_ln64_reg_2409 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cache_window_sm_din = tmp_69_fu_2205_p96;

assign cmp1023_fu_745_p2 = ((ap_phi_mux_cot_phi_fu_467_p4 == 5'd0) ? 1'b1 : 1'b0);

assign cmp10_mid1_fu_798_p2 = ((cot_4_fu_793_p2 == 5'd0) ? 1'b1 : 1'b0);

assign cot_4_fu_793_p2 = (select_ln64_reg_2419 + 5'd1);

assign icmp_ln64_fu_725_p2 = ((ap_phi_mux_indvar_flatten13_phi_fu_445_p4 == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_731_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_456_p4 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_757_p2 = ((ap_phi_mux_cit_phi_fu_478_p4 == 6'd32) ? 1'b1 : 1'b0);

assign or_ln64_fu_789_p2 = (icmp_ln65_reg_2413 | cmp1023_reg_2425);

assign or_ln65_fu_769_p2 = (icmp_ln65_fu_731_p2 | and_ln64_fu_763_p2);

assign select_ln64_fu_737_p3 = ((icmp_ln65_fu_731_p2[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_cot_phi_fu_467_p4);

assign select_ln65_4_fu_804_p3 = ((and_ln64_reg_2430[0:0] == 1'b1) ? cmp10_mid1_fu_798_p2 : or_ln64_fu_789_p2);

assign select_ln65_5_fu_811_p3 = ((and_ln64_reg_2430[0:0] == 1'b1) ? cot_4_fu_793_p2 : select_ln64_reg_2419);

assign select_ln65_6_fu_826_p3 = ((icmp_ln65_reg_2413[0:0] == 1'b1) ? 11'd1 : add_ln65_2_reg_2442);

assign select_ln65_fu_775_p3 = ((or_ln65_fu_769_p2[0:0] == 1'b1) ? 6'd0 : ap_phi_mux_cit_phi_fu_478_p4);

assign start_out = real_start;

assign tmp_314_fu_836_p4 = {{wb_V_q0[8:6]}};

assign tmp_315_fu_846_p4 = {{wb_V_q0[14:12]}};

assign tmp_316_fu_856_p4 = {{wb_V_q0[20:18]}};

assign tmp_317_fu_866_p4 = {{wb_V_q0[26:24]}};

assign tmp_318_fu_876_p4 = {{wb_V_q0[32:30]}};

assign tmp_319_fu_886_p4 = {{wb_V_q0[38:36]}};

assign tmp_320_fu_896_p4 = {{wb_V_q0[44:42]}};

assign tmp_321_fu_906_p4 = {{wb_V_q0[50:48]}};

assign tmp_322_fu_916_p4 = {{wb_V_q0[56:54]}};

assign tmp_323_fu_926_p4 = {{wb_V_q0[62:60]}};

assign tmp_324_fu_936_p4 = {{wb_V_q0[68:66]}};

assign tmp_325_fu_946_p4 = {{wb_V_q0[74:72]}};

assign tmp_326_fu_956_p4 = {{wb_V_q0[80:78]}};

assign tmp_327_fu_966_p4 = {{wb_V_q0[86:84]}};

assign tmp_328_fu_976_p4 = {{wb_V_q0[92:90]}};

assign tmp_329_fu_986_p4 = {{wb_V_q0[98:96]}};

assign tmp_330_fu_996_p4 = {{wb_V_q0[104:102]}};

assign tmp_331_fu_1006_p4 = {{wb_V_q0[110:108]}};

assign tmp_332_fu_1016_p4 = {{wb_V_q0[116:114]}};

assign tmp_333_fu_1026_p4 = {{wb_V_q0[122:120]}};

assign tmp_334_fu_1036_p4 = {{wb_V_q0[128:126]}};

assign tmp_335_fu_1046_p4 = {{wb_V_q0[134:132]}};

assign tmp_376_fu_1995_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[8:6]}};

assign tmp_377_fu_2005_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[11:9]}};

assign tmp_378_fu_2015_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[14:12]}};

assign tmp_379_fu_2025_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[17:15]}};

assign tmp_380_fu_2035_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[20:18]}};

assign tmp_381_fu_2045_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[23:21]}};

assign tmp_382_fu_2055_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[26:24]}};

assign tmp_383_fu_2065_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[29:27]}};

assign tmp_384_fu_2075_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[32:30]}};

assign tmp_385_fu_2085_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[35:33]}};

assign tmp_386_fu_2095_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[38:36]}};

assign tmp_387_fu_2105_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[41:39]}};

assign tmp_388_fu_2115_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[44:42]}};

assign tmp_389_fu_2125_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[47:45]}};

assign tmp_390_fu_2135_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[50:48]}};

assign tmp_391_fu_2145_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[53:51]}};

assign tmp_392_fu_2155_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[56:54]}};

assign tmp_393_fu_2165_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[59:57]}};

assign tmp_394_fu_2175_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[62:60]}};

assign tmp_395_fu_2185_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[65:63]}};

assign tmp_396_fu_2195_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[68:66]}};

assign tmp_69_fu_2205_p96 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{ap_phi_reg_pp0_iter1_p_fca_0_0_47_0_0_0_load_reg_602}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_46_0_0_0_load_reg_611}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_45_0_0_0_load_reg_620}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_44_0_0_0_load_reg_629}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_43_0_0_0_load_reg_638}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_42_0_0_0_load_reg_647}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_41_0_0_0_load_reg_656}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_40_0_0_0_load_reg_665}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_39_0_0_0_load_reg_674}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_38_0_0_0_load_reg_683}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_37_0_0_0_load_reg_692}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_36_0_0_0_load_reg_701}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_35_0_0_0_load_reg_710}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_34_0_0_0_load_reg_494}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_33_0_0_0_load_reg_503}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_32_0_0_0_load_reg_512}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_31_0_0_0_load_reg_521}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_30_0_0_0_load_reg_530}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_29_0_0_0_load_reg_539}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_28_0_0_0_load_reg_548}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_27_0_0_0_load_reg_557}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_26_0_0_0_load_reg_566}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_25_0_0_0_load_reg_575}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_24_0_0_0_load_reg_584}}, {5'd0}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_593}}, {5'd0}}, {tmp_396_fu_2195_p4}}, {5'd0}}, {tmp_395_fu_2185_p4}}, {5'd0}}, {tmp_394_fu_2175_p4}}, {5'd0}}, {tmp_393_fu_2165_p4}}, {5'd0}}, {tmp_392_fu_2155_p4}}, {5'd0}}, {tmp_391_fu_2145_p4}}, {5'd0}}, {tmp_390_fu_2135_p4}}, {5'd0}}, {tmp_389_fu_2125_p4}}, {5'd0}}, {tmp_388_fu_2115_p4}}, {5'd0}}, {tmp_387_fu_2105_p4}}, {5'd0}}, {tmp_386_fu_2095_p4}}, {5'd0}}, {tmp_385_fu_2085_p4}}, {5'd0}}, {tmp_384_fu_2075_p4}}, {5'd0}}, {tmp_383_fu_2065_p4}}, {5'd0}}, {tmp_382_fu_2055_p4}}, {5'd0}}, {tmp_381_fu_2045_p4}}, {5'd0}}, {tmp_380_fu_2035_p4}}, {5'd0}}, {tmp_379_fu_2025_p4}}, {5'd0}}, {tmp_378_fu_2015_p4}}, {5'd0}}, {tmp_377_fu_2005_p4}}, {5'd0}}, {tmp_376_fu_1995_p4}}, {5'd0}}, {tmp_s_fu_1985_p4}}, {5'd0}}, {trunc_ln174_fu_1981_p1}};

assign tmp_s_fu_1985_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[5:3]}};

assign trunc_ln174_fu_1981_p1 = ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_485[2:0];

assign trunc_ln73_10_fu_1450_p4 = {{adpt_sm_dout[82:80]}};

assign trunc_ln73_11_fu_1460_p4 = {{adpt_sm_dout[90:88]}};

assign trunc_ln73_12_fu_1470_p4 = {{adpt_sm_dout[98:96]}};

assign trunc_ln73_13_fu_1480_p4 = {{adpt_sm_dout[106:104]}};

assign trunc_ln73_14_fu_1490_p4 = {{adpt_sm_dout[114:112]}};

assign trunc_ln73_15_fu_1500_p4 = {{adpt_sm_dout[122:120]}};

assign trunc_ln73_16_fu_1510_p4 = {{adpt_sm_dout[130:128]}};

assign trunc_ln73_17_fu_1520_p4 = {{adpt_sm_dout[138:136]}};

assign trunc_ln73_18_fu_1530_p4 = {{adpt_sm_dout[146:144]}};

assign trunc_ln73_19_fu_1540_p4 = {{adpt_sm_dout[154:152]}};

assign trunc_ln73_1_fu_1360_p4 = {{adpt_sm_dout[10:8]}};

assign trunc_ln73_20_fu_1550_p4 = {{adpt_sm_dout[162:160]}};

assign trunc_ln73_21_fu_1560_p4 = {{adpt_sm_dout[170:168]}};

assign trunc_ln73_22_fu_1570_p4 = {{adpt_sm_dout[178:176]}};

assign trunc_ln73_23_fu_1590_p4 = {{adpt_sm_dout[194:192]}};

assign trunc_ln73_24_fu_1600_p4 = {{adpt_sm_dout[202:200]}};

assign trunc_ln73_25_fu_1610_p4 = {{adpt_sm_dout[210:208]}};

assign trunc_ln73_26_fu_1620_p4 = {{adpt_sm_dout[218:216]}};

assign trunc_ln73_27_fu_1630_p4 = {{adpt_sm_dout[226:224]}};

assign trunc_ln73_28_fu_1640_p4 = {{adpt_sm_dout[234:232]}};

assign trunc_ln73_29_fu_1650_p4 = {{adpt_sm_dout[242:240]}};

assign trunc_ln73_2_fu_1370_p4 = {{adpt_sm_dout[18:16]}};

assign trunc_ln73_30_fu_1660_p4 = {{adpt_sm_dout[250:248]}};

assign trunc_ln73_31_fu_1670_p4 = {{adpt_sm_dout[258:256]}};

assign trunc_ln73_32_fu_1680_p4 = {{adpt_sm_dout[266:264]}};

assign trunc_ln73_33_fu_1690_p4 = {{adpt_sm_dout[274:272]}};

assign trunc_ln73_34_fu_1700_p4 = {{adpt_sm_dout[282:280]}};

assign trunc_ln73_35_fu_1710_p4 = {{adpt_sm_dout[290:288]}};

assign trunc_ln73_36_fu_1720_p4 = {{adpt_sm_dout[298:296]}};

assign trunc_ln73_37_fu_1730_p4 = {{adpt_sm_dout[306:304]}};

assign trunc_ln73_38_fu_1740_p4 = {{adpt_sm_dout[314:312]}};

assign trunc_ln73_39_fu_1750_p4 = {{adpt_sm_dout[322:320]}};

assign trunc_ln73_3_fu_1380_p4 = {{adpt_sm_dout[26:24]}};

assign trunc_ln73_40_fu_1760_p4 = {{adpt_sm_dout[330:328]}};

assign trunc_ln73_41_fu_1770_p4 = {{adpt_sm_dout[338:336]}};

assign trunc_ln73_42_fu_1780_p4 = {{adpt_sm_dout[346:344]}};

assign trunc_ln73_43_fu_1790_p4 = {{adpt_sm_dout[354:352]}};

assign trunc_ln73_44_fu_1800_p4 = {{adpt_sm_dout[362:360]}};

assign trunc_ln73_45_fu_1810_p4 = {{adpt_sm_dout[370:368]}};

assign trunc_ln73_46_fu_1820_p4 = {{adpt_sm_dout[378:376]}};

assign trunc_ln73_4_fu_1390_p4 = {{adpt_sm_dout[34:32]}};

assign trunc_ln73_5_fu_1400_p4 = {{adpt_sm_dout[42:40]}};

assign trunc_ln73_6_fu_1410_p4 = {{adpt_sm_dout[50:48]}};

assign trunc_ln73_7_fu_1420_p4 = {{adpt_sm_dout[58:56]}};

assign trunc_ln73_8_fu_1430_p4 = {{adpt_sm_dout[66:64]}};

assign trunc_ln73_9_fu_1440_p4 = {{adpt_sm_dout[74:72]}};

assign trunc_ln73_fu_1356_p1 = adpt_sm_dout[2:0];

assign trunc_ln73_s_fu_1580_p4 = {{adpt_sm_dout[186:184]}};

assign trunc_ln87_fu_832_p1 = wb_V_q0[2:0];

assign vec_o_data_M_elems_V_1_cast_fu_1306_p24 = {{{{{{{{{{{{{{{{{{{{{{{tmp_335_fu_1046_p4}, {tmp_334_fu_1036_p4}}, {tmp_333_fu_1026_p4}}, {tmp_332_fu_1016_p4}}, {tmp_331_fu_1006_p4}}, {tmp_330_fu_996_p4}}, {tmp_329_fu_986_p4}}, {tmp_328_fu_976_p4}}, {tmp_327_fu_966_p4}}, {tmp_326_fu_956_p4}}, {tmp_325_fu_946_p4}}, {tmp_324_fu_936_p4}}, {tmp_323_fu_926_p4}}, {tmp_322_fu_916_p4}}, {tmp_321_fu_906_p4}}, {tmp_320_fu_896_p4}}, {tmp_319_fu_886_p4}}, {tmp_318_fu_876_p4}}, {tmp_317_fu_866_p4}}, {tmp_316_fu_856_p4}}, {tmp_315_fu_846_p4}}, {tmp_314_fu_836_p4}}, {trunc_ln87_fu_832_p1}};

assign vec_o_data_M_elems_V_cast_fu_1830_p24 = {{{{{{{{{{{{{{{{{{{{{{{trunc_ln73_22_fu_1570_p4}, {trunc_ln73_21_fu_1560_p4}}, {trunc_ln73_20_fu_1550_p4}}, {trunc_ln73_19_fu_1540_p4}}, {trunc_ln73_18_fu_1530_p4}}, {trunc_ln73_17_fu_1520_p4}}, {trunc_ln73_16_fu_1510_p4}}, {trunc_ln73_15_fu_1500_p4}}, {trunc_ln73_14_fu_1490_p4}}, {trunc_ln73_13_fu_1480_p4}}, {trunc_ln73_12_fu_1470_p4}}, {trunc_ln73_11_fu_1460_p4}}, {trunc_ln73_10_fu_1450_p4}}, {trunc_ln73_9_fu_1440_p4}}, {trunc_ln73_8_fu_1430_p4}}, {trunc_ln73_7_fu_1420_p4}}, {trunc_ln73_6_fu_1410_p4}}, {trunc_ln73_5_fu_1400_p4}}, {trunc_ln73_4_fu_1390_p4}}, {trunc_ln73_3_fu_1380_p4}}, {trunc_ln73_2_fu_1370_p4}}, {trunc_ln73_1_fu_1360_p4}}, {trunc_ln73_fu_1356_p1}};

assign wb_V_d0 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln73_46_fu_1820_p4}, {trunc_ln73_s_fu_1580_p4}}, {trunc_ln73_45_fu_1810_p4}}, {trunc_ln73_22_fu_1570_p4}}, {trunc_ln73_44_fu_1800_p4}}, {trunc_ln73_21_fu_1560_p4}}, {trunc_ln73_43_fu_1790_p4}}, {trunc_ln73_20_fu_1550_p4}}, {trunc_ln73_42_fu_1780_p4}}, {trunc_ln73_19_fu_1540_p4}}, {trunc_ln73_41_fu_1770_p4}}, {trunc_ln73_18_fu_1530_p4}}, {trunc_ln73_40_fu_1760_p4}}, {trunc_ln73_17_fu_1520_p4}}, {trunc_ln73_39_fu_1750_p4}}, {trunc_ln73_16_fu_1510_p4}}, {trunc_ln73_38_fu_1740_p4}}, {trunc_ln73_15_fu_1500_p4}}, {trunc_ln73_37_fu_1730_p4}}, {trunc_ln73_14_fu_1490_p4}}, {trunc_ln73_36_fu_1720_p4}}, {trunc_ln73_13_fu_1480_p4}}, {trunc_ln73_35_fu_1710_p4}}, {trunc_ln73_12_fu_1470_p4}}, {trunc_ln73_34_fu_1700_p4}}, {trunc_ln73_11_fu_1460_p4}}, {trunc_ln73_33_fu_1690_p4}}, {trunc_ln73_10_fu_1450_p4}}, {trunc_ln73_32_fu_1680_p4}}, {trunc_ln73_9_fu_1440_p4}}, {trunc_ln73_31_fu_1670_p4}}, {trunc_ln73_8_fu_1430_p4}}, {trunc_ln73_30_fu_1660_p4}}, {trunc_ln73_7_fu_1420_p4}}, {trunc_ln73_29_fu_1650_p4}}, {trunc_ln73_6_fu_1410_p4}}, {trunc_ln73_28_fu_1640_p4}}, {trunc_ln73_5_fu_1400_p4}}, {trunc_ln73_27_fu_1630_p4}}, {trunc_ln73_4_fu_1390_p4}}, {trunc_ln73_26_fu_1620_p4}}, {trunc_ln73_3_fu_1380_p4}}, {trunc_ln73_25_fu_1610_p4}}, {trunc_ln73_2_fu_1370_p4}}, {trunc_ln73_24_fu_1600_p4}}, {trunc_ln73_1_fu_1360_p4}}, {trunc_ln73_23_fu_1590_p4}}, {trunc_ln73_fu_1356_p1}};

assign xor_ln64_fu_751_p2 = (icmp_ln65_fu_731_p2 ^ 1'd1);

assign zext_ln66_fu_817_p1 = select_ln65_reg_2436;

endmodule //MLP0_matmul_step1_cache_window
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_matmul_step1_cache_window_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        adpt_sm_dout,
        adpt_sm_empty_n,
        adpt_sm_read,
        cache_window_sm_din,
        cache_window_sm_full_n,
        cache_window_sm_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [191:0] adpt_sm_dout;
input   adpt_sm_empty_n;
output   adpt_sm_read;
output  [191:0] cache_window_sm_din;
input   cache_window_sm_full_n;
output   cache_window_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg adpt_sm_read;
reg cache_window_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    adpt_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln64_reg_1369;
reg   [0:0] select_ln65_1_reg_1407;
reg    cache_window_sm_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln64_reg_1369_pp0_iter1_reg;
reg   [15:0] indvar_flatten13_reg_273;
reg   [10:0] indvar_flatten_reg_284;
reg   [5:0] cot_reg_295;
reg   [4:0] cit_reg_306;
wire   [15:0] add_ln64_fu_389_p2;
reg   [15:0] add_ln64_reg_1364;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op71_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln64_fu_395_p2;
wire   [0:0] icmp_ln65_fu_401_p2;
reg   [0:0] icmp_ln65_reg_1373;
wire   [5:0] select_ln64_fu_407_p3;
reg   [5:0] select_ln64_reg_1379;
wire   [0:0] cmp1023_fu_415_p2;
reg   [0:0] cmp1023_reg_1385;
wire   [0:0] and_ln64_fu_433_p2;
reg   [0:0] and_ln64_reg_1390;
wire   [4:0] select_ln65_fu_445_p3;
reg   [4:0] select_ln65_reg_1396;
wire   [10:0] add_ln65_1_fu_453_p2;
reg   [10:0] add_ln65_1_reg_1402;
wire   [0:0] select_ln65_1_fu_474_p3;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state5_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire   [5:0] select_ln65_2_fu_481_p3;
reg   [5:0] select_ln65_2_reg_1411;
reg   [3:0] wb_V_addr_reg_1416;
wire   [4:0] add_ln66_fu_491_p2;
reg   [4:0] add_ln66_reg_1421;
wire   [10:0] select_ln65_3_fu_496_p3;
reg   [10:0] select_ln65_3_reg_1426;
wire   [50:0] vec_o_data_M_elems_V_1_cast_fu_736_p18;
wire   [2:0] trunc_ln73_16_fu_938_p4;
wire   [2:0] trunc_ln73_17_fu_948_p4;
wire   [2:0] trunc_ln73_18_fu_958_p4;
wire   [2:0] trunc_ln73_19_fu_968_p4;
wire   [2:0] trunc_ln73_20_fu_978_p4;
wire   [2:0] trunc_ln73_21_fu_988_p4;
wire   [2:0] trunc_ln73_22_fu_998_p4;
wire   [50:0] vec_o_data_M_elems_V_cast_fu_1008_p18;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage1_subdone;
reg   [3:0] wb_V_address0;
reg    wb_V_ce0;
reg    wb_V_we0;
wire   [71:0] wb_V_d0;
wire   [71:0] wb_V_q0;
reg   [15:0] ap_phi_mux_indvar_flatten13_phi_fu_277_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_288_p4;
reg   [5:0] ap_phi_mux_cot_phi_fu_299_p4;
reg   [4:0] ap_phi_mux_cit_phi_fu_310_p4;
wire   [50:0] ap_phi_reg_pp0_iter0_vec_o_data_M_elems_V_3_in_in_reg_317;
reg   [50:0] ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_22_0_0_0_load_reg_326;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_22_0_0_0_load_reg_326;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_21_0_0_0_load_reg_335;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_21_0_0_0_load_reg_335;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_20_0_0_0_load_reg_344;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_20_0_0_0_load_reg_344;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_19_0_0_0_load_reg_353;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_19_0_0_0_load_reg_353;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_18_0_0_0_load_reg_362;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_18_0_0_0_load_reg_362;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_17_0_0_0_load_reg_371;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_17_0_0_0_load_reg_371;
wire   [2:0] ap_phi_reg_pp0_iter0_p_fca_0_0_23_0_0_0_load_reg_380;
reg   [2:0] ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_380;
wire   [63:0] zext_ln66_fu_487_p1;
reg    ap_block_pp0_stage1_01001;
wire   [0:0] icmp_ln66_fu_427_p2;
wire   [0:0] xor_ln64_fu_421_p2;
wire   [0:0] or_ln65_fu_439_p2;
wire   [5:0] cot_2_fu_463_p2;
wire   [0:0] cmp10_mid1_fu_468_p2;
wire   [0:0] or_ln64_fu_459_p2;
wire   [2:0] tmp_353_fu_656_p4;
wire   [2:0] tmp_352_fu_646_p4;
wire   [2:0] tmp_351_fu_636_p4;
wire   [2:0] tmp_350_fu_626_p4;
wire   [2:0] tmp_349_fu_616_p4;
wire   [2:0] tmp_348_fu_606_p4;
wire   [2:0] tmp_347_fu_596_p4;
wire   [2:0] tmp_346_fu_586_p4;
wire   [2:0] tmp_345_fu_576_p4;
wire   [2:0] tmp_344_fu_566_p4;
wire   [2:0] tmp_343_fu_556_p4;
wire   [2:0] tmp_342_fu_546_p4;
wire   [2:0] tmp_341_fu_536_p4;
wire   [2:0] tmp_340_fu_526_p4;
wire   [2:0] tmp_339_fu_516_p4;
wire   [2:0] tmp_338_fu_506_p4;
wire   [2:0] trunc_ln87_fu_502_p1;
wire   [2:0] trunc_ln73_15_fu_928_p4;
wire   [2:0] trunc_ln73_14_fu_918_p4;
wire   [2:0] trunc_ln73_13_fu_908_p4;
wire   [2:0] trunc_ln73_12_fu_898_p4;
wire   [2:0] trunc_ln73_11_fu_888_p4;
wire   [2:0] trunc_ln73_10_fu_878_p4;
wire   [2:0] trunc_ln73_9_fu_868_p4;
wire   [2:0] trunc_ln73_8_fu_858_p4;
wire   [2:0] trunc_ln73_7_fu_848_p4;
wire   [2:0] trunc_ln73_6_fu_838_p4;
wire   [2:0] trunc_ln73_5_fu_828_p4;
wire   [2:0] trunc_ln73_4_fu_818_p4;
wire   [2:0] trunc_ln73_3_fu_808_p4;
wire   [2:0] trunc_ln73_2_fu_798_p4;
wire   [2:0] trunc_ln73_1_fu_788_p4;
wire   [2:0] trunc_ln73_s_fu_778_p4;
wire   [2:0] trunc_ln73_fu_774_p1;
wire   [2:0] tmp_375_fu_1253_p4;
wire   [2:0] tmp_374_fu_1243_p4;
wire   [2:0] tmp_373_fu_1233_p4;
wire   [2:0] tmp_372_fu_1223_p4;
wire   [2:0] tmp_371_fu_1213_p4;
wire   [2:0] tmp_370_fu_1203_p4;
wire   [2:0] tmp_369_fu_1193_p4;
wire   [2:0] tmp_368_fu_1183_p4;
wire   [2:0] tmp_367_fu_1173_p4;
wire   [2:0] tmp_366_fu_1163_p4;
wire   [2:0] tmp_365_fu_1153_p4;
wire   [2:0] tmp_364_fu_1143_p4;
wire   [2:0] tmp_363_fu_1133_p4;
wire   [2:0] tmp_362_fu_1123_p4;
wire   [2:0] tmp_361_fu_1113_p4;
wire   [2:0] tmp_360_fu_1103_p4;
wire   [2:0] trunc_ln174_fu_1099_p1;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 4'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

MLP0_matmul_step1_cache_window_1_wb_V #(
    .DataWidth( 72 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
wb_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(wb_V_address0),
    .ce0(wb_V_ce0),
    .we0(wb_V_we0),
    .d0(wb_V_d0),
    .q0(wb_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_17_0_0_0_load_reg_371 <= {{wb_V_q0[35:33]}};
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_17_0_0_0_load_reg_371 <= {{adpt_sm_dout[138:136]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_17_0_0_0_load_reg_371 <= ap_phi_reg_pp0_iter0_p_fca_0_0_17_0_0_0_load_reg_371;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_18_0_0_0_load_reg_362 <= {{wb_V_q0[41:39]}};
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_18_0_0_0_load_reg_362 <= {{adpt_sm_dout[146:144]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_18_0_0_0_load_reg_362 <= ap_phi_reg_pp0_iter0_p_fca_0_0_18_0_0_0_load_reg_362;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_19_0_0_0_load_reg_353 <= {{wb_V_q0[47:45]}};
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_19_0_0_0_load_reg_353 <= {{adpt_sm_dout[154:152]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_19_0_0_0_load_reg_353 <= ap_phi_reg_pp0_iter0_p_fca_0_0_19_0_0_0_load_reg_353;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_20_0_0_0_load_reg_344 <= {{wb_V_q0[53:51]}};
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_20_0_0_0_load_reg_344 <= {{adpt_sm_dout[162:160]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_20_0_0_0_load_reg_344 <= ap_phi_reg_pp0_iter0_p_fca_0_0_20_0_0_0_load_reg_344;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_21_0_0_0_load_reg_335 <= {{wb_V_q0[59:57]}};
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_21_0_0_0_load_reg_335 <= {{adpt_sm_dout[170:168]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_21_0_0_0_load_reg_335 <= ap_phi_reg_pp0_iter0_p_fca_0_0_21_0_0_0_load_reg_335;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_22_0_0_0_load_reg_326 <= {{wb_V_q0[65:63]}};
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_22_0_0_0_load_reg_326 <= {{adpt_sm_dout[178:176]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_22_0_0_0_load_reg_326 <= ap_phi_reg_pp0_iter0_p_fca_0_0_22_0_0_0_load_reg_326;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_380 <= {{wb_V_q0[71:69]}};
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_380 <= {{adpt_sm_dout[186:184]}};
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_380 <= ap_phi_reg_pp0_iter0_p_fca_0_0_23_0_0_0_load_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln65_1_reg_1407 == 1'd0) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317 <= vec_o_data_M_elems_V_1_cast_fu_736_p18;
    end else if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317 <= vec_o_data_M_elems_V_cast_fu_1008_p18;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317 <= ap_phi_reg_pp0_iter0_vec_o_data_M_elems_V_3_in_in_reg_317;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cit_reg_306 <= add_ln66_reg_1421;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cit_reg_306 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cot_reg_295 <= select_ln65_2_reg_1411;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cot_reg_295 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten13_reg_273 <= add_ln64_reg_1364;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_273 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_284 <= select_ln65_3_reg_1426;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_284 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln64_reg_1364 <= add_ln64_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_395_p2 == 1'd0))) begin
        add_ln65_1_reg_1402 <= add_ln65_1_fu_453_p2;
        and_ln64_reg_1390 <= and_ln64_fu_433_p2;
        cmp1023_reg_1385 <= cmp1023_fu_415_p2;
        icmp_ln65_reg_1373 <= icmp_ln65_fu_401_p2;
        select_ln64_reg_1379 <= select_ln64_fu_407_p3;
        select_ln65_reg_1396 <= select_ln65_fu_445_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln66_reg_1421 <= add_ln66_fu_491_p2;
        select_ln65_2_reg_1411 <= select_ln65_2_fu_481_p3;
        select_ln65_3_reg_1426 <= select_ln65_3_fu_496_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_1369 <= icmp_ln64_fu_395_p2;
        icmp_ln64_reg_1369_pp0_iter1_reg <= icmp_ln64_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        select_ln65_1_reg_1407 <= select_ln65_1_fu_474_p3;
        wb_V_addr_reg_1416 <= zext_ln66_fu_487_p1;
    end
end

always @ (*) begin
    if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        adpt_sm_blk_n = adpt_sm_empty_n;
    end else begin
        adpt_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op71_read_state4 == 1'b1))) begin
        adpt_sm_read = 1'b1;
    end else begin
        adpt_sm_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln64_fu_395_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cit_phi_fu_310_p4 = add_ln66_reg_1421;
    end else begin
        ap_phi_mux_cit_phi_fu_310_p4 = cit_reg_306;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cot_phi_fu_299_p4 = select_ln65_2_reg_1411;
    end else begin
        ap_phi_mux_cot_phi_fu_299_p4 = cot_reg_295;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten13_phi_fu_277_p4 = add_ln64_reg_1364;
    end else begin
        ap_phi_mux_indvar_flatten13_phi_fu_277_p4 = indvar_flatten13_reg_273;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_288_p4 = select_ln65_3_reg_1426;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_288_p4 = indvar_flatten_reg_284;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_1369_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cache_window_sm_blk_n = cache_window_sm_full_n;
    end else begin
        cache_window_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_1369_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cache_window_sm_write = 1'b1;
    end else begin
        cache_window_sm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wb_V_address0 = wb_V_addr_reg_1416;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wb_V_address0 = zext_ln66_fu_487_p1;
    end else begin
        wb_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        wb_V_ce0 = 1'b1;
    end else begin
        wb_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wb_V_we0 = 1'b1;
    end else begin
        wb_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln64_fu_395_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln64_fu_395_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln64_fu_389_p2 = (ap_phi_mux_indvar_flatten13_phi_fu_277_p4 + 16'd1);

assign add_ln65_1_fu_453_p2 = (ap_phi_mux_indvar_flatten_phi_fu_288_p4 + 11'd1);

assign add_ln66_fu_491_p2 = (select_ln65_reg_1396 + 5'd1);

assign and_ln64_fu_433_p2 = (xor_ln64_fu_421_p2 & icmp_ln66_fu_427_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == adpt_sm_empty_n) & (ap_predicate_op71_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == adpt_sm_empty_n) & (ap_predicate_op71_read_state4 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln64_reg_1369_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln64_reg_1369_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln64_reg_1369_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((1'b0 == adpt_sm_empty_n) & (ap_predicate_op71_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage1_iter1 = ((icmp_ln64_reg_1369_pp0_iter1_reg == 1'd0) & (cache_window_sm_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_fca_0_0_17_0_0_0_load_reg_371 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_18_0_0_0_load_reg_362 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_19_0_0_0_load_reg_353 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_20_0_0_0_load_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_21_0_0_0_load_reg_335 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_22_0_0_0_load_reg_326 = 'bx;

assign ap_phi_reg_pp0_iter0_p_fca_0_0_23_0_0_0_load_reg_380 = 'bx;

assign ap_phi_reg_pp0_iter0_vec_o_data_M_elems_V_3_in_in_reg_317 = 'bx;

always @ (*) begin
    ap_predicate_op71_read_state4 = ((select_ln65_1_reg_1407 == 1'd1) & (icmp_ln64_reg_1369 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cache_window_sm_din = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{5'd0}, {ap_phi_reg_pp0_iter1_p_fca_0_0_23_0_0_0_load_reg_380}}}, {5'd0}}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_22_0_0_0_load_reg_326}}}, {5'd0}}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_21_0_0_0_load_reg_335}}}, {5'd0}}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_20_0_0_0_load_reg_344}}}, {5'd0}}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_19_0_0_0_load_reg_353}}}, {5'd0}}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_18_0_0_0_load_reg_362}}}, {5'd0}}}, {ap_phi_reg_pp0_iter1_p_fca_0_0_17_0_0_0_load_reg_371}}}, {5'd0}}}, {tmp_375_fu_1253_p4}}}, {5'd0}}}, {tmp_374_fu_1243_p4}}}, {5'd0}}}, {tmp_373_fu_1233_p4}}}, {5'd0}}}, {tmp_372_fu_1223_p4}}}, {5'd0}}}, {tmp_371_fu_1213_p4}}}, {5'd0}}}, {tmp_370_fu_1203_p4}}}, {5'd0}}}, {tmp_369_fu_1193_p4}}}, {5'd0}}}, {tmp_368_fu_1183_p4}}}, {5'd0}}}, {tmp_367_fu_1173_p4}}}, {5'd0}}}, {tmp_366_fu_1163_p4}}}, {5'd0}}}, {tmp_365_fu_1153_p4}}}, {5'd0}}}, {tmp_364_fu_1143_p4}}}, {5'd0}}}, {tmp_363_fu_1133_p4}}}, {5'd0}}}, {tmp_362_fu_1123_p4}}}, {5'd0}}}, {tmp_361_fu_1113_p4}}}, {5'd0}}}, {tmp_360_fu_1103_p4}}}, {5'd0}}}, {trunc_ln174_fu_1099_p1}};

assign cmp1023_fu_415_p2 = ((ap_phi_mux_cot_phi_fu_299_p4 == 6'd0) ? 1'b1 : 1'b0);

assign cmp10_mid1_fu_468_p2 = ((cot_2_fu_463_p2 == 6'd0) ? 1'b1 : 1'b0);

assign cot_2_fu_463_p2 = (select_ln64_reg_1379 + 6'd1);

assign icmp_ln64_fu_395_p2 = ((ap_phi_mux_indvar_flatten13_phi_fu_277_p4 == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_401_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_288_p4 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_427_p2 = ((ap_phi_mux_cit_phi_fu_310_p4 == 5'd16) ? 1'b1 : 1'b0);

assign or_ln64_fu_459_p2 = (icmp_ln65_reg_1373 | cmp1023_reg_1385);

assign or_ln65_fu_439_p2 = (icmp_ln65_fu_401_p2 | and_ln64_fu_433_p2);

assign select_ln64_fu_407_p3 = ((icmp_ln65_fu_401_p2[0:0] == 1'b1) ? 6'd0 : ap_phi_mux_cot_phi_fu_299_p4);

assign select_ln65_1_fu_474_p3 = ((and_ln64_reg_1390[0:0] == 1'b1) ? cmp10_mid1_fu_468_p2 : or_ln64_fu_459_p2);

assign select_ln65_2_fu_481_p3 = ((and_ln64_reg_1390[0:0] == 1'b1) ? cot_2_fu_463_p2 : select_ln64_reg_1379);

assign select_ln65_3_fu_496_p3 = ((icmp_ln65_reg_1373[0:0] == 1'b1) ? 11'd1 : add_ln65_1_reg_1402);

assign select_ln65_fu_445_p3 = ((or_ln65_fu_439_p2[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_cit_phi_fu_310_p4);

assign start_out = real_start;

assign tmp_338_fu_506_p4 = {{wb_V_q0[8:6]}};

assign tmp_339_fu_516_p4 = {{wb_V_q0[14:12]}};

assign tmp_340_fu_526_p4 = {{wb_V_q0[20:18]}};

assign tmp_341_fu_536_p4 = {{wb_V_q0[26:24]}};

assign tmp_342_fu_546_p4 = {{wb_V_q0[32:30]}};

assign tmp_343_fu_556_p4 = {{wb_V_q0[38:36]}};

assign tmp_344_fu_566_p4 = {{wb_V_q0[44:42]}};

assign tmp_345_fu_576_p4 = {{wb_V_q0[50:48]}};

assign tmp_346_fu_586_p4 = {{wb_V_q0[56:54]}};

assign tmp_347_fu_596_p4 = {{wb_V_q0[62:60]}};

assign tmp_348_fu_606_p4 = {{wb_V_q0[68:66]}};

assign tmp_349_fu_616_p4 = {{wb_V_q0[5:3]}};

assign tmp_350_fu_626_p4 = {{wb_V_q0[11:9]}};

assign tmp_351_fu_636_p4 = {{wb_V_q0[17:15]}};

assign tmp_352_fu_646_p4 = {{wb_V_q0[23:21]}};

assign tmp_353_fu_656_p4 = {{wb_V_q0[29:27]}};

assign tmp_360_fu_1103_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[5:3]}};

assign tmp_361_fu_1113_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[8:6]}};

assign tmp_362_fu_1123_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[11:9]}};

assign tmp_363_fu_1133_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[14:12]}};

assign tmp_364_fu_1143_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[17:15]}};

assign tmp_365_fu_1153_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[20:18]}};

assign tmp_366_fu_1163_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[23:21]}};

assign tmp_367_fu_1173_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[26:24]}};

assign tmp_368_fu_1183_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[29:27]}};

assign tmp_369_fu_1193_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[32:30]}};

assign tmp_370_fu_1203_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[35:33]}};

assign tmp_371_fu_1213_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[38:36]}};

assign tmp_372_fu_1223_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[41:39]}};

assign tmp_373_fu_1233_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[44:42]}};

assign tmp_374_fu_1243_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[47:45]}};

assign tmp_375_fu_1253_p4 = {{ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[50:48]}};

assign trunc_ln174_fu_1099_p1 = ap_phi_reg_pp0_iter1_vec_o_data_M_elems_V_3_in_in_reg_317[2:0];

assign trunc_ln73_10_fu_878_p4 = {{adpt_sm_dout[90:88]}};

assign trunc_ln73_11_fu_888_p4 = {{adpt_sm_dout[98:96]}};

assign trunc_ln73_12_fu_898_p4 = {{adpt_sm_dout[106:104]}};

assign trunc_ln73_13_fu_908_p4 = {{adpt_sm_dout[114:112]}};

assign trunc_ln73_14_fu_918_p4 = {{adpt_sm_dout[122:120]}};

assign trunc_ln73_15_fu_928_p4 = {{adpt_sm_dout[130:128]}};

assign trunc_ln73_16_fu_938_p4 = {{adpt_sm_dout[138:136]}};

assign trunc_ln73_17_fu_948_p4 = {{adpt_sm_dout[146:144]}};

assign trunc_ln73_18_fu_958_p4 = {{adpt_sm_dout[154:152]}};

assign trunc_ln73_19_fu_968_p4 = {{adpt_sm_dout[162:160]}};

assign trunc_ln73_1_fu_788_p4 = {{adpt_sm_dout[18:16]}};

assign trunc_ln73_20_fu_978_p4 = {{adpt_sm_dout[170:168]}};

assign trunc_ln73_21_fu_988_p4 = {{adpt_sm_dout[178:176]}};

assign trunc_ln73_22_fu_998_p4 = {{adpt_sm_dout[186:184]}};

assign trunc_ln73_2_fu_798_p4 = {{adpt_sm_dout[26:24]}};

assign trunc_ln73_3_fu_808_p4 = {{adpt_sm_dout[34:32]}};

assign trunc_ln73_4_fu_818_p4 = {{adpt_sm_dout[42:40]}};

assign trunc_ln73_5_fu_828_p4 = {{adpt_sm_dout[50:48]}};

assign trunc_ln73_6_fu_838_p4 = {{adpt_sm_dout[58:56]}};

assign trunc_ln73_7_fu_848_p4 = {{adpt_sm_dout[66:64]}};

assign trunc_ln73_8_fu_858_p4 = {{adpt_sm_dout[74:72]}};

assign trunc_ln73_9_fu_868_p4 = {{adpt_sm_dout[82:80]}};

assign trunc_ln73_fu_774_p1 = adpt_sm_dout[2:0];

assign trunc_ln73_s_fu_778_p4 = {{adpt_sm_dout[10:8]}};

assign trunc_ln87_fu_502_p1 = wb_V_q0[2:0];

assign vec_o_data_M_elems_V_1_cast_fu_736_p18 = {{{{{{{{{{{{{{{{{tmp_353_fu_656_p4}, {tmp_352_fu_646_p4}}, {tmp_351_fu_636_p4}}, {tmp_350_fu_626_p4}}, {tmp_349_fu_616_p4}}, {tmp_348_fu_606_p4}}, {tmp_347_fu_596_p4}}, {tmp_346_fu_586_p4}}, {tmp_345_fu_576_p4}}, {tmp_344_fu_566_p4}}, {tmp_343_fu_556_p4}}, {tmp_342_fu_546_p4}}, {tmp_341_fu_536_p4}}, {tmp_340_fu_526_p4}}, {tmp_339_fu_516_p4}}, {tmp_338_fu_506_p4}}, {trunc_ln87_fu_502_p1}};

assign vec_o_data_M_elems_V_cast_fu_1008_p18 = {{{{{{{{{{{{{{{{{trunc_ln73_15_fu_928_p4}, {trunc_ln73_14_fu_918_p4}}, {trunc_ln73_13_fu_908_p4}}, {trunc_ln73_12_fu_898_p4}}, {trunc_ln73_11_fu_888_p4}}, {trunc_ln73_10_fu_878_p4}}, {trunc_ln73_9_fu_868_p4}}, {trunc_ln73_8_fu_858_p4}}, {trunc_ln73_7_fu_848_p4}}, {trunc_ln73_6_fu_838_p4}}, {trunc_ln73_5_fu_828_p4}}, {trunc_ln73_4_fu_818_p4}}, {trunc_ln73_3_fu_808_p4}}, {trunc_ln73_2_fu_798_p4}}, {trunc_ln73_1_fu_788_p4}}, {trunc_ln73_s_fu_778_p4}}, {trunc_ln73_fu_774_p1}};

assign wb_V_d0 = {{{{{{{{{{{{{{{{{{{{{{{{trunc_ln73_22_fu_998_p4}, {trunc_ln73_10_fu_878_p4}}, {trunc_ln73_21_fu_988_p4}}, {trunc_ln73_9_fu_868_p4}}, {trunc_ln73_20_fu_978_p4}}, {trunc_ln73_8_fu_858_p4}}, {trunc_ln73_19_fu_968_p4}}, {trunc_ln73_7_fu_848_p4}}, {trunc_ln73_18_fu_958_p4}}, {trunc_ln73_6_fu_838_p4}}, {trunc_ln73_17_fu_948_p4}}, {trunc_ln73_5_fu_828_p4}}, {trunc_ln73_16_fu_938_p4}}, {trunc_ln73_4_fu_818_p4}}, {trunc_ln73_15_fu_928_p4}}, {trunc_ln73_3_fu_808_p4}}, {trunc_ln73_14_fu_918_p4}}, {trunc_ln73_2_fu_798_p4}}, {trunc_ln73_13_fu_908_p4}}, {trunc_ln73_1_fu_788_p4}}, {trunc_ln73_12_fu_898_p4}}, {trunc_ln73_s_fu_778_p4}}, {trunc_ln73_11_fu_888_p4}}, {trunc_ln73_fu_774_p1}};

assign xor_ln64_fu_421_p2 = (icmp_ln65_fu_401_p2 ^ 1'd1);

assign zext_ln66_fu_487_p1 = select_ln65_reg_1396;

endmodule //MLP0_matmul_step1_cache_window_1
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP0_matmul_step1_cache_window_1_wb_V_ram (addr0, ce0, d0, we0, q0,  clk);

parameter DWIDTH = 72;
parameter AWIDTH = 4;
parameter MEM_SIZE = 16;

input[AWIDTH-1:0] addr0;
input ce0;
input[DWIDTH-1:0] d0;
input we0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];




always @(posedge clk)  
begin 
    if (ce0) begin
        if (we0) 
            ram[addr0] <= d0; 
        q0 <= ram[addr0];
    end
end


endmodule

`timescale 1 ns / 1 ps
module MLP0_matmul_step1_cache_window_1_wb_V(
    reset,
    clk,
    address0,
    ce0,
    we0,
    d0,
    q0);

parameter DataWidth = 32'd72;
parameter AddressRange = 32'd16;
parameter AddressWidth = 32'd4;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
input we0;
input[DataWidth - 1:0] d0;
output[DataWidth - 1:0] q0;



MLP0_matmul_step1_cache_window_1_wb_V_ram MLP0_matmul_step1_cache_window_1_wb_V_ram_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .we0( we0 ),
    .d0( d0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
module MLP0_matmul_step1_cache_window_wb_V_ram (addr0, ce0, d0, we0, q0,  clk);

parameter DWIDTH = 144;
parameter AWIDTH = 5;
parameter MEM_SIZE = 32;

input[AWIDTH-1:0] addr0;
input ce0;
input[DWIDTH-1:0] d0;
input we0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];




always @(posedge clk)  
begin 
    if (ce0) begin
        if (we0) 
            ram[addr0] <= d0; 
        q0 <= ram[addr0];
    end
end


endmodule

`timescale 1 ns / 1 ps
module MLP0_matmul_step1_cache_window_wb_V(
    reset,
    clk,
    address0,
    ce0,
    we0,
    d0,
    q0);

parameter DataWidth = 32'd144;
parameter AddressRange = 32'd32;
parameter AddressWidth = 32'd5;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
input we0;
input[DataWidth - 1:0] d0;
output[DataWidth - 1:0] q0;



MLP0_matmul_step1_cache_window_wb_V_ram MLP0_matmul_step1_cache_window_wb_V_ram_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .we0( we0 ),
    .d0( d0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_matmul_step2_mac (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        cache_window_sm_dout,
        cache_window_sm_empty_n,
        cache_window_sm_read,
        mac_sm_din,
        mac_sm_full_n,
        mac_sm_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_pp0_stage1 = 5'd8;
parameter    ap_ST_fsm_state9 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [383:0] cache_window_sm_dout;
input   cache_window_sm_empty_n;
output   cache_window_sm_read;
output  [383:0] mac_sm_din;
input   mac_sm_full_n;
output   mac_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg cache_window_sm_read;
reg mac_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [3:0] mlp_inst_m2_bias_arr_V_address0;
reg    mlp_inst_m2_bias_arr_V_ce0;
wire   [155:0] mlp_inst_m2_bias_arr_V_q0;
wire   [8:0] mlp_inst_m2_weight_arr_V_address0;
reg    mlp_inst_m2_weight_arr_V_ce0;
wire   [863:0] mlp_inst_m2_weight_arr_V_q0;
reg    cache_window_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln120_reg_16937;
reg    mac_sm_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln161_reg_17010;
reg   [0:0] icmp_ln161_reg_17010_pp0_iter1_reg;
reg   [15:0] indvar_flatten20_reg_1462;
reg   [10:0] indvar_flatten_reg_1474;
reg   [4:0] cot_reg_1485;
reg   [5:0] cit_reg_1497;
reg   [155:0] mlp_inst_m2_bias_arr_V_load_1_reg_16927;
wire    ap_CS_fsm_state2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln120_fu_1513_p2;
reg   [0:0] icmp_ln120_reg_16937_pp0_iter1_reg;
reg   [0:0] icmp_ln120_reg_16937_pp0_iter2_reg;
wire   [0:0] icmp_ln121_fu_1519_p2;
reg   [0:0] icmp_ln121_reg_16941;
wire   [4:0] select_ln120_fu_1525_p3;
reg   [4:0] select_ln120_reg_16948;
wire   [0:0] and_ln120_fu_1545_p2;
reg   [0:0] and_ln120_reg_16953;
wire   [4:0] add_ln121_fu_1551_p2;
reg   [4:0] add_ln121_reg_16960;
wire   [5:0] select_ln121_fu_1563_p3;
reg   [5:0] select_ln121_reg_16967;
wire   [10:0] add_ln121_2_fu_1571_p2;
reg   [10:0] add_ln121_2_reg_16975;
wire   [15:0] add_ln120_fu_1577_p2;
reg   [15:0] add_ln120_reg_16980;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_state8_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [155:0] mlp_inst_m2_bias_arr_V_load_reg_16985;
wire   [4:0] select_ln121_7_fu_1616_p3;
reg   [4:0] select_ln121_7_reg_16995;
wire   [0:0] icmp_ln126_fu_1635_p2;
reg   [0:0] icmp_ln126_reg_17005;
reg   [0:0] icmp_ln126_reg_17005_pp0_iter1_reg;
wire   [0:0] icmp_ln161_fu_1640_p2;
wire   [5:0] add_ln122_fu_1645_p2;
reg   [5:0] add_ln122_reg_17014;
wire   [10:0] select_ln121_8_fu_1650_p3;
reg   [10:0] select_ln121_8_reg_17019;
wire   [155:0] select_ln121_6_fu_1661_p3;
reg   [155:0] select_ln121_6_reg_17024;
wire  signed [5:0] mul_ln1345_fu_1684_p2;
reg  signed [5:0] mul_ln1345_reg_17030;
wire  signed [5:0] mul_ln1345_1_fu_1718_p2;
reg  signed [5:0] mul_ln1345_1_reg_17035;
wire  signed [5:0] mul_ln1345_2_fu_1752_p2;
reg  signed [5:0] mul_ln1345_2_reg_17040;
wire  signed [5:0] mul_ln1345_3_fu_1786_p2;
reg  signed [5:0] mul_ln1345_3_reg_17045;
wire  signed [5:0] mul_ln1345_4_fu_1820_p2;
reg  signed [5:0] mul_ln1345_4_reg_17050;
wire  signed [5:0] mul_ln1345_5_fu_1854_p2;
reg  signed [5:0] mul_ln1345_5_reg_17055;
wire  signed [5:0] mul_ln1345_6_fu_1888_p2;
reg  signed [5:0] mul_ln1345_6_reg_17060;
wire  signed [5:0] mul_ln1345_7_fu_1922_p2;
reg  signed [5:0] mul_ln1345_7_reg_17065;
wire  signed [5:0] mul_ln1345_8_fu_1956_p2;
reg  signed [5:0] mul_ln1345_8_reg_17070;
wire  signed [5:0] mul_ln1345_9_fu_1990_p2;
reg  signed [5:0] mul_ln1345_9_reg_17075;
wire  signed [5:0] mul_ln1345_10_fu_2024_p2;
reg  signed [5:0] mul_ln1345_10_reg_17080;
wire  signed [5:0] mul_ln1345_11_fu_2058_p2;
reg  signed [5:0] mul_ln1345_11_reg_17085;
reg   [2:0] tmp_13_reg_17090;
reg   [2:0] tmp_325_reg_17095;
wire  signed [5:0] mul_ln1345_13_fu_2112_p2;
reg  signed [5:0] mul_ln1345_13_reg_17100;
wire  signed [5:0] mul_ln1345_14_fu_2146_p2;
reg  signed [5:0] mul_ln1345_14_reg_17105;
wire  signed [5:0] mul_ln1345_15_fu_2180_p2;
reg  signed [5:0] mul_ln1345_15_reg_17110;
wire  signed [5:0] mul_ln1345_16_fu_2214_p2;
reg  signed [5:0] mul_ln1345_16_reg_17115;
wire  signed [5:0] mul_ln1345_17_fu_2248_p2;
reg  signed [5:0] mul_ln1345_17_reg_17120;
reg   [2:0] tmp_19_reg_17125;
reg   [2:0] tmp_331_reg_17130;
wire  signed [5:0] mul_ln1345_19_fu_2302_p2;
reg  signed [5:0] mul_ln1345_19_reg_17135;
reg   [2:0] tmp_21_reg_17140;
reg   [2:0] tmp_333_reg_17145;
reg   [2:0] tmp_22_reg_17150;
reg   [2:0] tmp_334_reg_17155;
reg   [2:0] tmp_23_reg_17160;
reg   [2:0] tmp_335_reg_17165;
wire  signed [5:0] mul_ln1345_23_fu_2396_p2;
reg  signed [5:0] mul_ln1345_23_reg_17170;
wire  signed [5:0] mul_ln1345_24_fu_2416_p2;
reg  signed [5:0] mul_ln1345_24_reg_17175;
wire  signed [5:0] mul_ln1345_25_fu_2436_p2;
reg  signed [5:0] mul_ln1345_25_reg_17180;
wire  signed [5:0] mul_ln1345_26_fu_2456_p2;
reg  signed [5:0] mul_ln1345_26_reg_17185;
wire  signed [5:0] mul_ln1345_27_fu_2476_p2;
reg  signed [5:0] mul_ln1345_27_reg_17190;
wire  signed [5:0] mul_ln1345_28_fu_2496_p2;
reg  signed [5:0] mul_ln1345_28_reg_17195;
wire  signed [5:0] mul_ln1345_29_fu_2516_p2;
reg  signed [5:0] mul_ln1345_29_reg_17200;
wire  signed [5:0] mul_ln1345_30_fu_2536_p2;
reg  signed [5:0] mul_ln1345_30_reg_17205;
wire  signed [5:0] mul_ln1345_31_fu_2556_p2;
reg  signed [5:0] mul_ln1345_31_reg_17210;
wire  signed [5:0] mul_ln1345_32_fu_2576_p2;
reg  signed [5:0] mul_ln1345_32_reg_17215;
wire  signed [5:0] mul_ln1345_33_fu_2596_p2;
reg  signed [5:0] mul_ln1345_33_reg_17220;
wire  signed [5:0] mul_ln1345_34_fu_2616_p2;
reg  signed [5:0] mul_ln1345_34_reg_17225;
wire  signed [5:0] mul_ln1345_35_fu_2636_p2;
reg  signed [5:0] mul_ln1345_35_reg_17230;
reg   [2:0] tmp_38_reg_17235;
wire  signed [5:0] mul_ln1345_37_fu_2666_p2;
reg  signed [5:0] mul_ln1345_37_reg_17240;
wire  signed [5:0] mul_ln1345_38_fu_2686_p2;
reg  signed [5:0] mul_ln1345_38_reg_17245;
wire  signed [5:0] mul_ln1345_39_fu_2706_p2;
reg  signed [5:0] mul_ln1345_39_reg_17250;
wire  signed [5:0] mul_ln1345_40_fu_2726_p2;
reg  signed [5:0] mul_ln1345_40_reg_17255;
wire  signed [5:0] mul_ln1345_41_fu_2746_p2;
reg  signed [5:0] mul_ln1345_41_reg_17260;
reg   [2:0] tmp_44_reg_17265;
wire  signed [5:0] mul_ln1345_43_fu_2776_p2;
reg  signed [5:0] mul_ln1345_43_reg_17270;
reg   [2:0] tmp_46_reg_17275;
reg   [2:0] tmp_47_reg_17280;
reg   [2:0] tmp_48_reg_17285;
wire  signed [5:0] mul_ln1345_47_fu_2826_p2;
reg  signed [5:0] mul_ln1345_47_reg_17290;
wire  signed [5:0] mul_ln1345_48_fu_2846_p2;
reg  signed [5:0] mul_ln1345_48_reg_17295;
wire  signed [5:0] mul_ln1345_49_fu_2866_p2;
reg  signed [5:0] mul_ln1345_49_reg_17300;
wire  signed [5:0] mul_ln1345_50_fu_2886_p2;
reg  signed [5:0] mul_ln1345_50_reg_17305;
wire  signed [5:0] mul_ln1345_51_fu_2906_p2;
reg  signed [5:0] mul_ln1345_51_reg_17310;
wire  signed [5:0] mul_ln1345_52_fu_2926_p2;
reg  signed [5:0] mul_ln1345_52_reg_17315;
wire  signed [5:0] mul_ln1345_53_fu_2946_p2;
reg  signed [5:0] mul_ln1345_53_reg_17320;
wire  signed [5:0] mul_ln1345_54_fu_2966_p2;
reg  signed [5:0] mul_ln1345_54_reg_17325;
wire  signed [5:0] mul_ln1345_55_fu_2986_p2;
reg  signed [5:0] mul_ln1345_55_reg_17330;
wire  signed [5:0] mul_ln1345_56_fu_3006_p2;
reg  signed [5:0] mul_ln1345_56_reg_17335;
wire  signed [5:0] mul_ln1345_57_fu_3026_p2;
reg  signed [5:0] mul_ln1345_57_reg_17340;
wire  signed [5:0] mul_ln1345_58_fu_3046_p2;
reg  signed [5:0] mul_ln1345_58_reg_17345;
wire  signed [5:0] mul_ln1345_59_fu_3066_p2;
reg  signed [5:0] mul_ln1345_59_reg_17350;
reg   [2:0] tmp_63_reg_17355;
wire  signed [5:0] mul_ln1345_61_fu_3096_p2;
reg  signed [5:0] mul_ln1345_61_reg_17360;
wire  signed [5:0] mul_ln1345_62_fu_3116_p2;
reg  signed [5:0] mul_ln1345_62_reg_17365;
wire  signed [5:0] mul_ln1345_63_fu_3136_p2;
reg  signed [5:0] mul_ln1345_63_reg_17370;
wire  signed [5:0] mul_ln1345_64_fu_3156_p2;
reg  signed [5:0] mul_ln1345_64_reg_17375;
wire  signed [5:0] mul_ln1345_65_fu_3176_p2;
reg  signed [5:0] mul_ln1345_65_reg_17380;
reg   [2:0] tmp_69_reg_17385;
wire  signed [5:0] mul_ln1345_67_fu_3206_p2;
reg  signed [5:0] mul_ln1345_67_reg_17390;
reg   [2:0] tmp_71_reg_17395;
reg   [2:0] tmp_72_reg_17400;
reg   [2:0] tmp_73_reg_17405;
wire  signed [5:0] mul_ln1345_71_fu_3256_p2;
reg  signed [5:0] mul_ln1345_71_reg_17410;
wire  signed [5:0] mul_ln1345_72_fu_3276_p2;
reg  signed [5:0] mul_ln1345_72_reg_17415;
wire  signed [5:0] mul_ln1345_73_fu_3296_p2;
reg  signed [5:0] mul_ln1345_73_reg_17420;
wire  signed [5:0] mul_ln1345_74_fu_3316_p2;
reg  signed [5:0] mul_ln1345_74_reg_17425;
wire  signed [5:0] sext_ln1345_75_fu_3332_p1;
reg  signed [5:0] sext_ln1345_75_reg_17430;
wire  signed [5:0] mul_ln1345_75_fu_3336_p2;
reg  signed [5:0] mul_ln1345_75_reg_17435;
wire  signed [5:0] sext_ln1345_76_fu_3352_p1;
reg  signed [5:0] sext_ln1345_76_reg_17440;
wire  signed [5:0] mul_ln1345_76_fu_3356_p2;
reg  signed [5:0] mul_ln1345_76_reg_17445;
wire  signed [5:0] sext_ln1345_77_fu_3372_p1;
reg  signed [5:0] sext_ln1345_77_reg_17450;
wire  signed [5:0] mul_ln1345_77_fu_3376_p2;
reg  signed [5:0] mul_ln1345_77_reg_17455;
wire  signed [5:0] sext_ln1345_78_fu_3392_p1;
reg  signed [5:0] sext_ln1345_78_reg_17460;
wire  signed [5:0] mul_ln1345_78_fu_3396_p2;
reg  signed [5:0] mul_ln1345_78_reg_17465;
wire  signed [5:0] sext_ln1345_79_fu_3412_p1;
reg  signed [5:0] sext_ln1345_79_reg_17470;
wire  signed [5:0] mul_ln1345_79_fu_3416_p2;
reg  signed [5:0] mul_ln1345_79_reg_17475;
wire  signed [5:0] sext_ln1345_80_fu_3432_p1;
reg  signed [5:0] sext_ln1345_80_reg_17480;
wire  signed [5:0] mul_ln1345_80_fu_3436_p2;
reg  signed [5:0] mul_ln1345_80_reg_17485;
wire  signed [5:0] sext_ln1345_81_fu_3452_p1;
reg  signed [5:0] sext_ln1345_81_reg_17490;
wire  signed [5:0] mul_ln1345_81_fu_3456_p2;
reg  signed [5:0] mul_ln1345_81_reg_17495;
wire  signed [5:0] sext_ln1345_82_fu_3472_p1;
reg  signed [5:0] sext_ln1345_82_reg_17500;
wire  signed [5:0] mul_ln1345_82_fu_3476_p2;
reg  signed [5:0] mul_ln1345_82_reg_17505;
wire  signed [5:0] sext_ln1345_83_fu_3492_p1;
reg  signed [5:0] sext_ln1345_83_reg_17510;
wire  signed [5:0] mul_ln1345_83_fu_3496_p2;
reg  signed [5:0] mul_ln1345_83_reg_17515;
reg   [2:0] tmp_88_reg_17520;
wire  signed [5:0] sext_ln1345_85_fu_3522_p1;
reg  signed [5:0] sext_ln1345_85_reg_17525;
wire  signed [5:0] mul_ln1345_85_fu_3526_p2;
reg  signed [5:0] mul_ln1345_85_reg_17530;
wire  signed [5:0] sext_ln1345_86_fu_3542_p1;
reg  signed [5:0] sext_ln1345_86_reg_17535;
wire  signed [5:0] mul_ln1345_86_fu_3546_p2;
reg  signed [5:0] mul_ln1345_86_reg_17540;
wire  signed [5:0] sext_ln1345_87_fu_3562_p1;
reg  signed [5:0] sext_ln1345_87_reg_17545;
wire  signed [5:0] mul_ln1345_87_fu_3566_p2;
reg  signed [5:0] mul_ln1345_87_reg_17550;
wire  signed [5:0] sext_ln1345_88_fu_3582_p1;
reg  signed [5:0] sext_ln1345_88_reg_17555;
wire  signed [5:0] mul_ln1345_88_fu_3586_p2;
reg  signed [5:0] mul_ln1345_88_reg_17560;
wire  signed [5:0] sext_ln1345_89_fu_3602_p1;
reg  signed [5:0] sext_ln1345_89_reg_17565;
wire  signed [5:0] mul_ln1345_89_fu_3606_p2;
reg  signed [5:0] mul_ln1345_89_reg_17570;
reg   [2:0] tmp_94_reg_17575;
wire  signed [5:0] sext_ln1345_91_fu_3632_p1;
reg  signed [5:0] sext_ln1345_91_reg_17580;
wire  signed [5:0] mul_ln1345_91_fu_3636_p2;
reg  signed [5:0] mul_ln1345_91_reg_17585;
reg   [2:0] tmp_96_reg_17590;
reg   [2:0] tmp_97_reg_17595;
reg   [2:0] tmp_98_reg_17600;
wire  signed [5:0] sext_ln1345_95_fu_3682_p1;
reg  signed [5:0] sext_ln1345_95_reg_17605;
wire  signed [5:0] mul_ln1345_95_fu_3686_p2;
reg  signed [5:0] mul_ln1345_95_reg_17610;
wire  signed [5:0] sext_ln1345_96_fu_3702_p1;
reg  signed [5:0] sext_ln1345_96_reg_17615;
wire  signed [5:0] mul_ln1345_96_fu_3706_p2;
reg  signed [5:0] mul_ln1345_96_reg_17620;
wire  signed [5:0] sext_ln1345_97_fu_3722_p1;
reg  signed [5:0] sext_ln1345_97_reg_17625;
wire  signed [5:0] mul_ln1345_97_fu_3726_p2;
reg  signed [5:0] mul_ln1345_97_reg_17630;
wire  signed [5:0] sext_ln1345_98_fu_3742_p1;
reg  signed [5:0] sext_ln1345_98_reg_17635;
wire  signed [5:0] mul_ln1345_98_fu_3746_p2;
reg  signed [5:0] mul_ln1345_98_reg_17640;
wire  signed [5:0] sext_ln1345_99_fu_3762_p1;
reg  signed [5:0] sext_ln1345_99_reg_17645;
wire  signed [5:0] mul_ln1345_99_fu_3766_p2;
reg  signed [5:0] mul_ln1345_99_reg_17650;
wire  signed [5:0] sext_ln1345_100_fu_3782_p1;
reg  signed [5:0] sext_ln1345_100_reg_17655;
wire  signed [5:0] mul_ln1345_100_fu_3786_p2;
reg  signed [5:0] mul_ln1345_100_reg_17660;
wire  signed [5:0] sext_ln1345_101_fu_3802_p1;
reg  signed [5:0] sext_ln1345_101_reg_17665;
wire  signed [5:0] mul_ln1345_101_fu_3806_p2;
reg  signed [5:0] mul_ln1345_101_reg_17670;
wire  signed [5:0] sext_ln1345_102_fu_3822_p1;
reg  signed [5:0] sext_ln1345_102_reg_17675;
wire  signed [5:0] mul_ln1345_102_fu_3826_p2;
reg  signed [5:0] mul_ln1345_102_reg_17680;
wire  signed [5:0] sext_ln1345_103_fu_3842_p1;
reg  signed [5:0] sext_ln1345_103_reg_17685;
wire  signed [5:0] mul_ln1345_103_fu_3846_p2;
reg  signed [5:0] mul_ln1345_103_reg_17690;
wire  signed [5:0] sext_ln1345_104_fu_3862_p1;
reg  signed [5:0] sext_ln1345_104_reg_17695;
wire  signed [5:0] mul_ln1345_104_fu_3866_p2;
reg  signed [5:0] mul_ln1345_104_reg_17700;
wire  signed [5:0] sext_ln1345_105_fu_3882_p1;
reg  signed [5:0] sext_ln1345_105_reg_17705;
wire  signed [5:0] mul_ln1345_105_fu_3886_p2;
reg  signed [5:0] mul_ln1345_105_reg_17710;
wire  signed [5:0] sext_ln1345_106_fu_3902_p1;
reg  signed [5:0] sext_ln1345_106_reg_17715;
wire  signed [5:0] mul_ln1345_106_fu_3906_p2;
reg  signed [5:0] mul_ln1345_106_reg_17720;
wire  signed [5:0] sext_ln1345_107_fu_3922_p1;
reg  signed [5:0] sext_ln1345_107_reg_17725;
wire  signed [5:0] mul_ln1345_107_fu_3926_p2;
reg  signed [5:0] mul_ln1345_107_reg_17730;
reg   [2:0] tmp_113_reg_17735;
wire  signed [5:0] sext_ln1345_109_fu_3952_p1;
reg  signed [5:0] sext_ln1345_109_reg_17740;
wire  signed [5:0] mul_ln1345_109_fu_3956_p2;
reg  signed [5:0] mul_ln1345_109_reg_17745;
wire  signed [5:0] sext_ln1345_110_fu_3972_p1;
reg  signed [5:0] sext_ln1345_110_reg_17750;
wire  signed [5:0] mul_ln1345_110_fu_3976_p2;
reg  signed [5:0] mul_ln1345_110_reg_17755;
wire  signed [5:0] sext_ln1345_111_fu_3992_p1;
reg  signed [5:0] sext_ln1345_111_reg_17760;
wire  signed [5:0] mul_ln1345_111_fu_3996_p2;
reg  signed [5:0] mul_ln1345_111_reg_17765;
wire  signed [5:0] sext_ln1345_112_fu_4012_p1;
reg  signed [5:0] sext_ln1345_112_reg_17770;
wire  signed [5:0] mul_ln1345_112_fu_4016_p2;
reg  signed [5:0] mul_ln1345_112_reg_17775;
wire  signed [5:0] sext_ln1345_113_fu_4032_p1;
reg  signed [5:0] sext_ln1345_113_reg_17780;
wire  signed [5:0] mul_ln1345_113_fu_4036_p2;
reg  signed [5:0] mul_ln1345_113_reg_17785;
reg   [2:0] tmp_119_reg_17790;
wire  signed [5:0] sext_ln1345_115_fu_4062_p1;
reg  signed [5:0] sext_ln1345_115_reg_17795;
wire  signed [5:0] mul_ln1345_115_fu_4066_p2;
reg  signed [5:0] mul_ln1345_115_reg_17800;
reg   [2:0] tmp_121_reg_17805;
reg   [2:0] tmp_122_reg_17810;
reg   [2:0] tmp_123_reg_17815;
wire  signed [5:0] sext_ln1345_119_fu_4112_p1;
reg  signed [5:0] sext_ln1345_119_reg_17820;
wire  signed [5:0] mul_ln1345_119_fu_4116_p2;
reg  signed [5:0] mul_ln1345_119_reg_17825;
wire  signed [5:0] sext_ln1345_120_fu_4132_p1;
reg  signed [5:0] sext_ln1345_120_reg_17830;
wire  signed [5:0] mul_ln1345_120_fu_4136_p2;
reg  signed [5:0] mul_ln1345_120_reg_17835;
wire  signed [5:0] sext_ln1345_121_fu_4152_p1;
reg  signed [5:0] sext_ln1345_121_reg_17840;
wire  signed [5:0] mul_ln1345_121_fu_4156_p2;
reg  signed [5:0] mul_ln1345_121_reg_17845;
wire  signed [5:0] sext_ln1345_122_fu_4172_p1;
reg  signed [5:0] sext_ln1345_122_reg_17850;
wire  signed [5:0] mul_ln1345_122_fu_4176_p2;
reg  signed [5:0] mul_ln1345_122_reg_17855;
wire  signed [5:0] sext_ln1345_123_fu_4192_p1;
reg  signed [5:0] sext_ln1345_123_reg_17860;
wire  signed [5:0] mul_ln1345_123_fu_4196_p2;
reg  signed [5:0] mul_ln1345_123_reg_17865;
wire  signed [5:0] sext_ln1345_124_fu_4212_p1;
reg  signed [5:0] sext_ln1345_124_reg_17870;
wire  signed [5:0] mul_ln1345_124_fu_4216_p2;
reg  signed [5:0] mul_ln1345_124_reg_17875;
wire  signed [5:0] sext_ln1345_125_fu_4232_p1;
reg  signed [5:0] sext_ln1345_125_reg_17880;
wire  signed [5:0] mul_ln1345_125_fu_4236_p2;
reg  signed [5:0] mul_ln1345_125_reg_17885;
wire  signed [5:0] sext_ln1345_126_fu_4252_p1;
reg  signed [5:0] sext_ln1345_126_reg_17890;
wire  signed [5:0] mul_ln1345_126_fu_4256_p2;
reg  signed [5:0] mul_ln1345_126_reg_17895;
wire  signed [5:0] sext_ln1345_127_fu_4272_p1;
reg  signed [5:0] sext_ln1345_127_reg_17900;
wire  signed [5:0] mul_ln1345_127_fu_4276_p2;
reg  signed [5:0] mul_ln1345_127_reg_17905;
wire  signed [5:0] sext_ln1345_128_fu_4292_p1;
reg  signed [5:0] sext_ln1345_128_reg_17910;
wire  signed [5:0] mul_ln1345_128_fu_4296_p2;
reg  signed [5:0] mul_ln1345_128_reg_17915;
wire  signed [5:0] sext_ln1345_129_fu_4312_p1;
reg  signed [5:0] sext_ln1345_129_reg_17920;
wire  signed [5:0] mul_ln1345_129_fu_4316_p2;
reg  signed [5:0] mul_ln1345_129_reg_17925;
wire  signed [5:0] sext_ln1345_130_fu_4332_p1;
reg  signed [5:0] sext_ln1345_130_reg_17930;
wire  signed [5:0] mul_ln1345_130_fu_4336_p2;
reg  signed [5:0] mul_ln1345_130_reg_17935;
wire  signed [5:0] sext_ln1345_131_fu_4352_p1;
reg  signed [5:0] sext_ln1345_131_reg_17940;
wire  signed [5:0] mul_ln1345_131_fu_4356_p2;
reg  signed [5:0] mul_ln1345_131_reg_17945;
reg   [2:0] tmp_138_reg_17950;
wire  signed [5:0] sext_ln1345_133_fu_4382_p1;
reg  signed [5:0] sext_ln1345_133_reg_17955;
wire  signed [5:0] mul_ln1345_133_fu_4386_p2;
reg  signed [5:0] mul_ln1345_133_reg_17960;
wire  signed [5:0] sext_ln1345_134_fu_4402_p1;
reg  signed [5:0] sext_ln1345_134_reg_17965;
wire  signed [5:0] mul_ln1345_134_fu_4406_p2;
reg  signed [5:0] mul_ln1345_134_reg_17970;
wire  signed [5:0] sext_ln1345_135_fu_4422_p1;
reg  signed [5:0] sext_ln1345_135_reg_17975;
wire  signed [5:0] mul_ln1345_135_fu_4426_p2;
reg  signed [5:0] mul_ln1345_135_reg_17980;
wire  signed [5:0] sext_ln1345_136_fu_4442_p1;
reg  signed [5:0] sext_ln1345_136_reg_17985;
wire  signed [5:0] mul_ln1345_136_fu_4446_p2;
reg  signed [5:0] mul_ln1345_136_reg_17990;
wire  signed [5:0] sext_ln1345_137_fu_4462_p1;
reg  signed [5:0] sext_ln1345_137_reg_17995;
wire  signed [5:0] mul_ln1345_137_fu_4466_p2;
reg  signed [5:0] mul_ln1345_137_reg_18000;
reg   [2:0] tmp_144_reg_18005;
wire  signed [5:0] sext_ln1345_139_fu_4492_p1;
reg  signed [5:0] sext_ln1345_139_reg_18010;
wire  signed [5:0] mul_ln1345_139_fu_4496_p2;
reg  signed [5:0] mul_ln1345_139_reg_18015;
reg   [2:0] tmp_146_reg_18020;
reg   [2:0] tmp_147_reg_18025;
reg   [2:0] tmp_148_reg_18030;
wire  signed [5:0] sext_ln1345_143_fu_4542_p1;
reg  signed [5:0] sext_ln1345_143_reg_18035;
wire  signed [5:0] mul_ln1345_143_fu_4546_p2;
reg  signed [5:0] mul_ln1345_143_reg_18040;
wire  signed [5:0] sext_ln1345_144_fu_4562_p1;
reg  signed [5:0] sext_ln1345_144_reg_18045;
wire  signed [5:0] mul_ln1345_144_fu_4566_p2;
reg  signed [5:0] mul_ln1345_144_reg_18050;
wire  signed [5:0] sext_ln1345_145_fu_4582_p1;
reg  signed [5:0] sext_ln1345_145_reg_18055;
wire  signed [5:0] mul_ln1345_145_fu_4586_p2;
reg  signed [5:0] mul_ln1345_145_reg_18060;
wire  signed [5:0] sext_ln1345_146_fu_4602_p1;
reg  signed [5:0] sext_ln1345_146_reg_18065;
wire  signed [5:0] mul_ln1345_146_fu_4606_p2;
reg  signed [5:0] mul_ln1345_146_reg_18070;
wire  signed [5:0] sext_ln1345_147_fu_4622_p1;
reg  signed [5:0] sext_ln1345_147_reg_18075;
wire  signed [5:0] mul_ln1345_147_fu_4626_p2;
reg  signed [5:0] mul_ln1345_147_reg_18080;
wire  signed [5:0] sext_ln1345_148_fu_4642_p1;
reg  signed [5:0] sext_ln1345_148_reg_18085;
wire  signed [5:0] mul_ln1345_148_fu_4646_p2;
reg  signed [5:0] mul_ln1345_148_reg_18090;
wire  signed [5:0] sext_ln1345_149_fu_4662_p1;
reg  signed [5:0] sext_ln1345_149_reg_18095;
wire  signed [5:0] mul_ln1345_149_fu_4666_p2;
reg  signed [5:0] mul_ln1345_149_reg_18100;
wire  signed [5:0] sext_ln1345_150_fu_4682_p1;
reg  signed [5:0] sext_ln1345_150_reg_18105;
wire  signed [5:0] mul_ln1345_150_fu_4686_p2;
reg  signed [5:0] mul_ln1345_150_reg_18110;
wire  signed [5:0] sext_ln1345_151_fu_4702_p1;
reg  signed [5:0] sext_ln1345_151_reg_18115;
wire  signed [5:0] mul_ln1345_151_fu_4706_p2;
reg  signed [5:0] mul_ln1345_151_reg_18120;
wire  signed [5:0] sext_ln1345_152_fu_4722_p1;
reg  signed [5:0] sext_ln1345_152_reg_18125;
wire  signed [5:0] mul_ln1345_152_fu_4726_p2;
reg  signed [5:0] mul_ln1345_152_reg_18130;
wire  signed [5:0] sext_ln1345_153_fu_4742_p1;
reg  signed [5:0] sext_ln1345_153_reg_18135;
wire  signed [5:0] mul_ln1345_153_fu_4746_p2;
reg  signed [5:0] mul_ln1345_153_reg_18140;
wire  signed [5:0] sext_ln1345_154_fu_4762_p1;
reg  signed [5:0] sext_ln1345_154_reg_18145;
wire  signed [5:0] mul_ln1345_154_fu_4766_p2;
reg  signed [5:0] mul_ln1345_154_reg_18150;
wire  signed [5:0] sext_ln1345_155_fu_4782_p1;
reg  signed [5:0] sext_ln1345_155_reg_18155;
wire  signed [5:0] mul_ln1345_155_fu_4786_p2;
reg  signed [5:0] mul_ln1345_155_reg_18160;
reg   [2:0] tmp_163_reg_18165;
wire  signed [5:0] sext_ln1345_157_fu_4812_p1;
reg  signed [5:0] sext_ln1345_157_reg_18170;
wire  signed [5:0] mul_ln1345_157_fu_4816_p2;
reg  signed [5:0] mul_ln1345_157_reg_18175;
wire  signed [5:0] sext_ln1345_158_fu_4832_p1;
reg  signed [5:0] sext_ln1345_158_reg_18180;
wire  signed [5:0] mul_ln1345_158_fu_4836_p2;
reg  signed [5:0] mul_ln1345_158_reg_18185;
wire  signed [5:0] sext_ln1345_159_fu_4852_p1;
reg  signed [5:0] sext_ln1345_159_reg_18190;
wire  signed [5:0] mul_ln1345_159_fu_4856_p2;
reg  signed [5:0] mul_ln1345_159_reg_18195;
wire  signed [5:0] sext_ln1345_160_fu_4872_p1;
reg  signed [5:0] sext_ln1345_160_reg_18200;
wire  signed [5:0] mul_ln1345_160_fu_4876_p2;
reg  signed [5:0] mul_ln1345_160_reg_18205;
wire  signed [5:0] sext_ln1345_161_fu_4892_p1;
reg  signed [5:0] sext_ln1345_161_reg_18210;
wire  signed [5:0] mul_ln1345_161_fu_4896_p2;
reg  signed [5:0] mul_ln1345_161_reg_18215;
reg   [2:0] tmp_169_reg_18220;
wire  signed [5:0] sext_ln1345_163_fu_4922_p1;
reg  signed [5:0] sext_ln1345_163_reg_18225;
wire  signed [5:0] mul_ln1345_163_fu_4926_p2;
reg  signed [5:0] mul_ln1345_163_reg_18230;
reg   [2:0] tmp_171_reg_18235;
reg   [2:0] tmp_172_reg_18240;
reg   [2:0] tmp_173_reg_18245;
wire  signed [5:0] sext_ln1345_167_fu_4972_p1;
reg  signed [5:0] sext_ln1345_167_reg_18250;
wire  signed [5:0] mul_ln1345_167_fu_4976_p2;
reg  signed [5:0] mul_ln1345_167_reg_18255;
wire  signed [5:0] sext_ln1345_168_fu_4992_p1;
reg  signed [5:0] sext_ln1345_168_reg_18260;
wire  signed [5:0] mul_ln1345_168_fu_4996_p2;
reg  signed [5:0] mul_ln1345_168_reg_18265;
wire  signed [5:0] sext_ln1345_169_fu_5012_p1;
reg  signed [5:0] sext_ln1345_169_reg_18270;
wire  signed [5:0] mul_ln1345_169_fu_5016_p2;
reg  signed [5:0] mul_ln1345_169_reg_18275;
wire  signed [5:0] sext_ln1345_170_fu_5032_p1;
reg  signed [5:0] sext_ln1345_170_reg_18280;
wire  signed [5:0] mul_ln1345_170_fu_5036_p2;
reg  signed [5:0] mul_ln1345_170_reg_18285;
wire  signed [5:0] sext_ln1345_171_fu_5052_p1;
reg  signed [5:0] sext_ln1345_171_reg_18290;
wire  signed [5:0] mul_ln1345_171_fu_5056_p2;
reg  signed [5:0] mul_ln1345_171_reg_18295;
wire  signed [5:0] sext_ln1345_172_fu_5072_p1;
reg  signed [5:0] sext_ln1345_172_reg_18300;
wire  signed [5:0] mul_ln1345_172_fu_5076_p2;
reg  signed [5:0] mul_ln1345_172_reg_18305;
wire  signed [5:0] sext_ln1345_173_fu_5092_p1;
reg  signed [5:0] sext_ln1345_173_reg_18310;
wire  signed [5:0] mul_ln1345_173_fu_5096_p2;
reg  signed [5:0] mul_ln1345_173_reg_18315;
wire  signed [5:0] sext_ln1345_174_fu_5112_p1;
reg  signed [5:0] sext_ln1345_174_reg_18320;
wire  signed [5:0] mul_ln1345_174_fu_5116_p2;
reg  signed [5:0] mul_ln1345_174_reg_18325;
wire  signed [5:0] sext_ln1345_175_fu_5132_p1;
reg  signed [5:0] sext_ln1345_175_reg_18330;
wire  signed [5:0] mul_ln1345_175_fu_5136_p2;
reg  signed [5:0] mul_ln1345_175_reg_18335;
wire  signed [5:0] sext_ln1345_176_fu_5152_p1;
reg  signed [5:0] sext_ln1345_176_reg_18340;
wire  signed [5:0] mul_ln1345_176_fu_5156_p2;
reg  signed [5:0] mul_ln1345_176_reg_18345;
wire  signed [5:0] sext_ln1345_177_fu_5172_p1;
reg  signed [5:0] sext_ln1345_177_reg_18350;
wire  signed [5:0] mul_ln1345_177_fu_5176_p2;
reg  signed [5:0] mul_ln1345_177_reg_18355;
wire  signed [5:0] sext_ln1345_178_fu_5192_p1;
reg  signed [5:0] sext_ln1345_178_reg_18360;
wire  signed [5:0] mul_ln1345_178_fu_5196_p2;
reg  signed [5:0] mul_ln1345_178_reg_18365;
wire  signed [5:0] sext_ln1345_179_fu_5212_p1;
reg  signed [5:0] sext_ln1345_179_reg_18370;
wire  signed [5:0] mul_ln1345_179_fu_5216_p2;
reg  signed [5:0] mul_ln1345_179_reg_18375;
reg   [2:0] tmp_188_reg_18380;
wire  signed [5:0] sext_ln1345_181_fu_5242_p1;
reg  signed [5:0] sext_ln1345_181_reg_18385;
wire  signed [5:0] mul_ln1345_181_fu_5246_p2;
reg  signed [5:0] mul_ln1345_181_reg_18390;
wire  signed [5:0] sext_ln1345_182_fu_5262_p1;
reg  signed [5:0] sext_ln1345_182_reg_18395;
wire  signed [5:0] mul_ln1345_182_fu_5266_p2;
reg  signed [5:0] mul_ln1345_182_reg_18400;
wire  signed [5:0] sext_ln1345_183_fu_5282_p1;
reg  signed [5:0] sext_ln1345_183_reg_18405;
wire  signed [5:0] mul_ln1345_183_fu_5286_p2;
reg  signed [5:0] mul_ln1345_183_reg_18410;
wire  signed [5:0] sext_ln1345_184_fu_5302_p1;
reg  signed [5:0] sext_ln1345_184_reg_18415;
wire  signed [5:0] mul_ln1345_184_fu_5306_p2;
reg  signed [5:0] mul_ln1345_184_reg_18420;
wire  signed [5:0] sext_ln1345_185_fu_5322_p1;
reg  signed [5:0] sext_ln1345_185_reg_18425;
wire  signed [5:0] mul_ln1345_185_fu_5326_p2;
reg  signed [5:0] mul_ln1345_185_reg_18430;
reg   [2:0] tmp_194_reg_18435;
wire  signed [5:0] sext_ln1345_187_fu_5352_p1;
reg  signed [5:0] sext_ln1345_187_reg_18440;
wire  signed [5:0] mul_ln1345_187_fu_5356_p2;
reg  signed [5:0] mul_ln1345_187_reg_18445;
reg   [2:0] tmp_196_reg_18450;
reg   [2:0] tmp_197_reg_18455;
reg   [2:0] tmp_198_reg_18460;
wire  signed [5:0] sext_ln1345_191_fu_5402_p1;
reg  signed [5:0] sext_ln1345_191_reg_18465;
wire  signed [5:0] mul_ln1345_191_fu_5406_p2;
reg  signed [5:0] mul_ln1345_191_reg_18470;
wire  signed [5:0] sext_ln1345_192_fu_5422_p1;
reg  signed [5:0] sext_ln1345_192_reg_18475;
wire  signed [5:0] mul_ln1345_192_fu_5426_p2;
reg  signed [5:0] mul_ln1345_192_reg_18480;
wire  signed [5:0] sext_ln1345_193_fu_5442_p1;
reg  signed [5:0] sext_ln1345_193_reg_18485;
wire  signed [5:0] mul_ln1345_193_fu_5446_p2;
reg  signed [5:0] mul_ln1345_193_reg_18490;
wire  signed [5:0] sext_ln1345_194_fu_5462_p1;
reg  signed [5:0] sext_ln1345_194_reg_18495;
wire  signed [5:0] mul_ln1345_194_fu_5466_p2;
reg  signed [5:0] mul_ln1345_194_reg_18500;
wire  signed [5:0] sext_ln1345_195_fu_5482_p1;
reg  signed [5:0] sext_ln1345_195_reg_18505;
wire  signed [5:0] mul_ln1345_195_fu_5486_p2;
reg  signed [5:0] mul_ln1345_195_reg_18510;
wire  signed [5:0] sext_ln1345_196_fu_5502_p1;
reg  signed [5:0] sext_ln1345_196_reg_18515;
wire  signed [5:0] mul_ln1345_196_fu_5506_p2;
reg  signed [5:0] mul_ln1345_196_reg_18520;
wire  signed [5:0] sext_ln1345_197_fu_5522_p1;
reg  signed [5:0] sext_ln1345_197_reg_18525;
wire  signed [5:0] mul_ln1345_197_fu_5526_p2;
reg  signed [5:0] mul_ln1345_197_reg_18530;
wire  signed [5:0] sext_ln1345_198_fu_5542_p1;
reg  signed [5:0] sext_ln1345_198_reg_18535;
wire  signed [5:0] mul_ln1345_198_fu_5546_p2;
reg  signed [5:0] mul_ln1345_198_reg_18540;
wire  signed [5:0] sext_ln1345_199_fu_5562_p1;
reg  signed [5:0] sext_ln1345_199_reg_18545;
wire  signed [5:0] mul_ln1345_199_fu_5566_p2;
reg  signed [5:0] mul_ln1345_199_reg_18550;
wire  signed [5:0] sext_ln1345_200_fu_5582_p1;
reg  signed [5:0] sext_ln1345_200_reg_18555;
wire  signed [5:0] mul_ln1345_200_fu_5586_p2;
reg  signed [5:0] mul_ln1345_200_reg_18560;
wire  signed [5:0] sext_ln1345_201_fu_5602_p1;
reg  signed [5:0] sext_ln1345_201_reg_18565;
wire  signed [5:0] mul_ln1345_201_fu_5606_p2;
reg  signed [5:0] mul_ln1345_201_reg_18570;
wire  signed [5:0] sext_ln1345_202_fu_5622_p1;
reg  signed [5:0] sext_ln1345_202_reg_18575;
wire  signed [5:0] mul_ln1345_202_fu_5626_p2;
reg  signed [5:0] mul_ln1345_202_reg_18580;
wire  signed [5:0] sext_ln1345_203_fu_5642_p1;
reg  signed [5:0] sext_ln1345_203_reg_18585;
wire  signed [5:0] mul_ln1345_203_fu_5646_p2;
reg  signed [5:0] mul_ln1345_203_reg_18590;
reg   [2:0] tmp_213_reg_18595;
wire  signed [5:0] sext_ln1345_205_fu_5672_p1;
reg  signed [5:0] sext_ln1345_205_reg_18600;
wire  signed [5:0] mul_ln1345_205_fu_5676_p2;
reg  signed [5:0] mul_ln1345_205_reg_18605;
wire  signed [5:0] sext_ln1345_206_fu_5692_p1;
reg  signed [5:0] sext_ln1345_206_reg_18610;
wire  signed [5:0] mul_ln1345_206_fu_5696_p2;
reg  signed [5:0] mul_ln1345_206_reg_18615;
wire  signed [5:0] sext_ln1345_207_fu_5712_p1;
reg  signed [5:0] sext_ln1345_207_reg_18620;
wire  signed [5:0] mul_ln1345_207_fu_5716_p2;
reg  signed [5:0] mul_ln1345_207_reg_18625;
wire  signed [5:0] sext_ln1345_208_fu_5732_p1;
reg  signed [5:0] sext_ln1345_208_reg_18630;
wire  signed [5:0] mul_ln1345_208_fu_5736_p2;
reg  signed [5:0] mul_ln1345_208_reg_18635;
wire  signed [5:0] sext_ln1345_209_fu_5752_p1;
reg  signed [5:0] sext_ln1345_209_reg_18640;
wire  signed [5:0] mul_ln1345_209_fu_5756_p2;
reg  signed [5:0] mul_ln1345_209_reg_18645;
reg   [2:0] tmp_219_reg_18650;
wire  signed [5:0] sext_ln1345_211_fu_5782_p1;
reg  signed [5:0] sext_ln1345_211_reg_18655;
wire  signed [5:0] mul_ln1345_211_fu_5786_p2;
reg  signed [5:0] mul_ln1345_211_reg_18660;
reg   [2:0] tmp_221_reg_18665;
reg   [2:0] tmp_222_reg_18670;
reg   [2:0] tmp_223_reg_18675;
wire  signed [5:0] sext_ln1345_215_fu_5832_p1;
reg  signed [5:0] sext_ln1345_215_reg_18680;
wire  signed [5:0] mul_ln1345_215_fu_5836_p2;
reg  signed [5:0] mul_ln1345_215_reg_18685;
wire  signed [5:0] sext_ln1345_216_fu_5852_p1;
reg  signed [5:0] sext_ln1345_216_reg_18690;
wire  signed [5:0] mul_ln1345_216_fu_5856_p2;
reg  signed [5:0] mul_ln1345_216_reg_18695;
wire  signed [5:0] sext_ln1345_217_fu_5872_p1;
reg  signed [5:0] sext_ln1345_217_reg_18700;
wire  signed [5:0] mul_ln1345_217_fu_5876_p2;
reg  signed [5:0] mul_ln1345_217_reg_18705;
wire  signed [5:0] sext_ln1345_218_fu_5892_p1;
reg  signed [5:0] sext_ln1345_218_reg_18710;
wire  signed [5:0] mul_ln1345_218_fu_5896_p2;
reg  signed [5:0] mul_ln1345_218_reg_18715;
wire  signed [5:0] sext_ln1345_219_fu_5912_p1;
reg  signed [5:0] sext_ln1345_219_reg_18720;
wire  signed [5:0] mul_ln1345_219_fu_5916_p2;
reg  signed [5:0] mul_ln1345_219_reg_18725;
wire  signed [5:0] sext_ln1345_220_fu_5932_p1;
reg  signed [5:0] sext_ln1345_220_reg_18730;
wire  signed [5:0] mul_ln1345_220_fu_5936_p2;
reg  signed [5:0] mul_ln1345_220_reg_18735;
wire  signed [5:0] sext_ln1345_221_fu_5952_p1;
reg  signed [5:0] sext_ln1345_221_reg_18740;
wire  signed [5:0] mul_ln1345_221_fu_5956_p2;
reg  signed [5:0] mul_ln1345_221_reg_18745;
wire  signed [5:0] sext_ln1345_222_fu_5972_p1;
reg  signed [5:0] sext_ln1345_222_reg_18750;
wire  signed [5:0] mul_ln1345_222_fu_5976_p2;
reg  signed [5:0] mul_ln1345_222_reg_18755;
wire  signed [5:0] sext_ln1345_223_fu_5992_p1;
reg  signed [5:0] sext_ln1345_223_reg_18760;
wire  signed [5:0] mul_ln1345_223_fu_5996_p2;
reg  signed [5:0] mul_ln1345_223_reg_18765;
wire  signed [5:0] sext_ln1345_224_fu_6012_p1;
reg  signed [5:0] sext_ln1345_224_reg_18770;
wire  signed [5:0] mul_ln1345_224_fu_6016_p2;
reg  signed [5:0] mul_ln1345_224_reg_18775;
wire  signed [5:0] sext_ln1345_225_fu_6032_p1;
reg  signed [5:0] sext_ln1345_225_reg_18780;
wire  signed [5:0] mul_ln1345_225_fu_6036_p2;
reg  signed [5:0] mul_ln1345_225_reg_18785;
wire  signed [5:0] sext_ln1345_226_fu_6052_p1;
reg  signed [5:0] sext_ln1345_226_reg_18790;
wire  signed [5:0] mul_ln1345_226_fu_6056_p2;
reg  signed [5:0] mul_ln1345_226_reg_18795;
wire  signed [5:0] sext_ln1345_227_fu_6072_p1;
reg  signed [5:0] sext_ln1345_227_reg_18800;
wire  signed [5:0] mul_ln1345_227_fu_6076_p2;
reg  signed [5:0] mul_ln1345_227_reg_18805;
reg   [2:0] tmp_238_reg_18810;
wire  signed [5:0] sext_ln1345_229_fu_6102_p1;
reg  signed [5:0] sext_ln1345_229_reg_18815;
wire  signed [5:0] mul_ln1345_229_fu_6106_p2;
reg  signed [5:0] mul_ln1345_229_reg_18820;
wire  signed [5:0] sext_ln1345_230_fu_6122_p1;
reg  signed [5:0] sext_ln1345_230_reg_18825;
wire  signed [5:0] mul_ln1345_230_fu_6126_p2;
reg  signed [5:0] mul_ln1345_230_reg_18830;
wire  signed [5:0] sext_ln1345_231_fu_6142_p1;
reg  signed [5:0] sext_ln1345_231_reg_18835;
wire  signed [5:0] mul_ln1345_231_fu_6146_p2;
reg  signed [5:0] mul_ln1345_231_reg_18840;
wire  signed [5:0] sext_ln1345_232_fu_6162_p1;
reg  signed [5:0] sext_ln1345_232_reg_18845;
wire  signed [5:0] mul_ln1345_232_fu_6166_p2;
reg  signed [5:0] mul_ln1345_232_reg_18850;
wire  signed [5:0] sext_ln1345_233_fu_6182_p1;
reg  signed [5:0] sext_ln1345_233_reg_18855;
wire  signed [5:0] mul_ln1345_233_fu_6186_p2;
reg  signed [5:0] mul_ln1345_233_reg_18860;
reg   [2:0] tmp_244_reg_18865;
wire  signed [5:0] sext_ln1345_235_fu_6212_p1;
reg  signed [5:0] sext_ln1345_235_reg_18870;
wire  signed [5:0] mul_ln1345_235_fu_6216_p2;
reg  signed [5:0] mul_ln1345_235_reg_18875;
reg   [2:0] tmp_246_reg_18880;
reg   [2:0] tmp_247_reg_18885;
reg   [2:0] tmp_248_reg_18890;
wire  signed [5:0] sext_ln1345_239_fu_6262_p1;
reg  signed [5:0] sext_ln1345_239_reg_18895;
wire  signed [5:0] mul_ln1345_239_fu_6266_p2;
reg  signed [5:0] mul_ln1345_239_reg_18900;
wire  signed [5:0] sext_ln1345_240_fu_6282_p1;
reg  signed [5:0] sext_ln1345_240_reg_18905;
wire  signed [5:0] mul_ln1345_240_fu_6286_p2;
reg  signed [5:0] mul_ln1345_240_reg_18910;
wire  signed [5:0] sext_ln1345_241_fu_6302_p1;
reg  signed [5:0] sext_ln1345_241_reg_18915;
wire  signed [5:0] mul_ln1345_241_fu_6306_p2;
reg  signed [5:0] mul_ln1345_241_reg_18920;
wire  signed [5:0] sext_ln1345_242_fu_6322_p1;
reg  signed [5:0] sext_ln1345_242_reg_18925;
wire  signed [5:0] mul_ln1345_242_fu_6326_p2;
reg  signed [5:0] mul_ln1345_242_reg_18930;
wire  signed [5:0] sext_ln1345_243_fu_6342_p1;
reg  signed [5:0] sext_ln1345_243_reg_18935;
wire  signed [5:0] mul_ln1345_243_fu_6346_p2;
reg  signed [5:0] mul_ln1345_243_reg_18940;
wire  signed [5:0] sext_ln1345_244_fu_6362_p1;
reg  signed [5:0] sext_ln1345_244_reg_18945;
wire  signed [5:0] mul_ln1345_244_fu_6366_p2;
reg  signed [5:0] mul_ln1345_244_reg_18950;
wire  signed [5:0] sext_ln1345_245_fu_6382_p1;
reg  signed [5:0] sext_ln1345_245_reg_18955;
wire  signed [5:0] mul_ln1345_245_fu_6386_p2;
reg  signed [5:0] mul_ln1345_245_reg_18960;
wire  signed [5:0] sext_ln1345_246_fu_6402_p1;
reg  signed [5:0] sext_ln1345_246_reg_18965;
wire  signed [5:0] mul_ln1345_246_fu_6406_p2;
reg  signed [5:0] mul_ln1345_246_reg_18970;
wire  signed [5:0] sext_ln1345_247_fu_6422_p1;
reg  signed [5:0] sext_ln1345_247_reg_18975;
wire  signed [5:0] mul_ln1345_247_fu_6426_p2;
reg  signed [5:0] mul_ln1345_247_reg_18980;
wire  signed [5:0] sext_ln1345_248_fu_6442_p1;
reg  signed [5:0] sext_ln1345_248_reg_18985;
wire  signed [5:0] mul_ln1345_248_fu_6446_p2;
reg  signed [5:0] mul_ln1345_248_reg_18990;
wire  signed [5:0] sext_ln1345_249_fu_6462_p1;
reg  signed [5:0] sext_ln1345_249_reg_18995;
wire  signed [5:0] mul_ln1345_249_fu_6466_p2;
reg  signed [5:0] mul_ln1345_249_reg_19000;
wire  signed [5:0] sext_ln1345_250_fu_6482_p1;
reg  signed [5:0] sext_ln1345_250_reg_19005;
wire  signed [5:0] mul_ln1345_250_fu_6486_p2;
reg  signed [5:0] mul_ln1345_250_reg_19010;
wire  signed [5:0] sext_ln1345_251_fu_6502_p1;
reg  signed [5:0] sext_ln1345_251_reg_19015;
wire  signed [5:0] mul_ln1345_251_fu_6506_p2;
reg  signed [5:0] mul_ln1345_251_reg_19020;
reg   [2:0] tmp_263_reg_19025;
wire  signed [5:0] sext_ln1345_253_fu_6532_p1;
reg  signed [5:0] sext_ln1345_253_reg_19030;
wire  signed [5:0] mul_ln1345_253_fu_6536_p2;
reg  signed [5:0] mul_ln1345_253_reg_19035;
wire  signed [5:0] sext_ln1345_254_fu_6552_p1;
reg  signed [5:0] sext_ln1345_254_reg_19040;
wire  signed [5:0] mul_ln1345_254_fu_6556_p2;
reg  signed [5:0] mul_ln1345_254_reg_19045;
wire  signed [5:0] sext_ln1345_255_fu_6572_p1;
reg  signed [5:0] sext_ln1345_255_reg_19050;
wire  signed [5:0] mul_ln1345_255_fu_6576_p2;
reg  signed [5:0] mul_ln1345_255_reg_19055;
wire  signed [5:0] sext_ln1345_256_fu_6592_p1;
reg  signed [5:0] sext_ln1345_256_reg_19060;
wire  signed [5:0] mul_ln1345_256_fu_6596_p2;
reg  signed [5:0] mul_ln1345_256_reg_19065;
wire  signed [5:0] sext_ln1345_257_fu_6612_p1;
reg  signed [5:0] sext_ln1345_257_reg_19070;
wire  signed [5:0] mul_ln1345_257_fu_6616_p2;
reg  signed [5:0] mul_ln1345_257_reg_19075;
reg   [2:0] tmp_269_reg_19080;
wire  signed [5:0] sext_ln1345_259_fu_6642_p1;
reg  signed [5:0] sext_ln1345_259_reg_19085;
wire  signed [5:0] mul_ln1345_259_fu_6646_p2;
reg  signed [5:0] mul_ln1345_259_reg_19090;
reg   [2:0] tmp_271_reg_19095;
reg   [2:0] tmp_272_reg_19100;
reg   [2:0] tmp_273_reg_19105;
wire  signed [5:0] sext_ln1345_263_fu_6692_p1;
reg  signed [5:0] sext_ln1345_263_reg_19110;
wire  signed [5:0] mul_ln1345_263_fu_6696_p2;
reg  signed [5:0] mul_ln1345_263_reg_19115;
wire  signed [5:0] sext_ln1345_264_fu_6712_p1;
reg  signed [5:0] sext_ln1345_264_reg_19120;
wire  signed [5:0] mul_ln1345_264_fu_6716_p2;
reg  signed [5:0] mul_ln1345_264_reg_19125;
wire  signed [5:0] sext_ln1345_265_fu_6732_p1;
reg  signed [5:0] sext_ln1345_265_reg_19130;
wire  signed [5:0] mul_ln1345_265_fu_6736_p2;
reg  signed [5:0] mul_ln1345_265_reg_19135;
wire  signed [5:0] sext_ln1345_266_fu_6752_p1;
reg  signed [5:0] sext_ln1345_266_reg_19140;
wire  signed [5:0] mul_ln1345_266_fu_6756_p2;
reg  signed [5:0] mul_ln1345_266_reg_19145;
wire  signed [5:0] sext_ln1345_267_fu_6772_p1;
reg  signed [5:0] sext_ln1345_267_reg_19150;
wire  signed [5:0] mul_ln1345_267_fu_6776_p2;
reg  signed [5:0] mul_ln1345_267_reg_19155;
wire  signed [5:0] sext_ln1345_268_fu_6792_p1;
reg  signed [5:0] sext_ln1345_268_reg_19160;
wire  signed [5:0] mul_ln1345_268_fu_6796_p2;
reg  signed [5:0] mul_ln1345_268_reg_19165;
wire  signed [5:0] sext_ln1345_269_fu_6812_p1;
reg  signed [5:0] sext_ln1345_269_reg_19170;
wire  signed [5:0] mul_ln1345_269_fu_6816_p2;
reg  signed [5:0] mul_ln1345_269_reg_19175;
wire  signed [5:0] sext_ln1345_270_fu_6832_p1;
reg  signed [5:0] sext_ln1345_270_reg_19180;
wire  signed [5:0] mul_ln1345_270_fu_6836_p2;
reg  signed [5:0] mul_ln1345_270_reg_19185;
wire  signed [5:0] sext_ln1345_271_fu_6852_p1;
reg  signed [5:0] sext_ln1345_271_reg_19190;
wire  signed [5:0] mul_ln1345_271_fu_6856_p2;
reg  signed [5:0] mul_ln1345_271_reg_19195;
wire  signed [5:0] sext_ln1345_272_fu_6872_p1;
reg  signed [5:0] sext_ln1345_272_reg_19200;
wire  signed [5:0] mul_ln1345_272_fu_6876_p2;
reg  signed [5:0] mul_ln1345_272_reg_19205;
wire  signed [5:0] sext_ln1345_273_fu_6892_p1;
reg  signed [5:0] sext_ln1345_273_reg_19210;
wire  signed [5:0] mul_ln1345_273_fu_6896_p2;
reg  signed [5:0] mul_ln1345_273_reg_19215;
wire  signed [5:0] sext_ln1345_274_fu_6912_p1;
reg  signed [5:0] sext_ln1345_274_reg_19220;
wire  signed [5:0] mul_ln1345_274_fu_6916_p2;
reg  signed [5:0] mul_ln1345_274_reg_19225;
wire  signed [5:0] sext_ln1345_275_fu_6932_p1;
reg  signed [5:0] sext_ln1345_275_reg_19230;
wire  signed [5:0] mul_ln1345_275_fu_6936_p2;
reg  signed [5:0] mul_ln1345_275_reg_19235;
reg   [2:0] tmp_288_reg_19240;
wire  signed [5:0] sext_ln1345_277_fu_6962_p1;
reg  signed [5:0] sext_ln1345_277_reg_19245;
wire  signed [5:0] mul_ln1345_277_fu_6966_p2;
reg  signed [5:0] mul_ln1345_277_reg_19250;
wire  signed [5:0] sext_ln1345_278_fu_6982_p1;
reg  signed [5:0] sext_ln1345_278_reg_19255;
wire  signed [5:0] mul_ln1345_278_fu_6986_p2;
reg  signed [5:0] mul_ln1345_278_reg_19260;
wire  signed [5:0] sext_ln1345_279_fu_7002_p1;
reg  signed [5:0] sext_ln1345_279_reg_19265;
wire  signed [5:0] mul_ln1345_279_fu_7006_p2;
reg  signed [5:0] mul_ln1345_279_reg_19270;
wire  signed [5:0] sext_ln1345_280_fu_7022_p1;
reg  signed [5:0] sext_ln1345_280_reg_19275;
wire  signed [5:0] mul_ln1345_280_fu_7026_p2;
reg  signed [5:0] mul_ln1345_280_reg_19280;
wire  signed [5:0] sext_ln1345_281_fu_7042_p1;
reg  signed [5:0] sext_ln1345_281_reg_19285;
wire  signed [5:0] mul_ln1345_281_fu_7046_p2;
reg  signed [5:0] mul_ln1345_281_reg_19290;
reg   [2:0] tmp_294_reg_19295;
wire  signed [5:0] sext_ln1345_283_fu_7072_p1;
reg  signed [5:0] sext_ln1345_283_reg_19300;
wire  signed [5:0] mul_ln1345_283_fu_7076_p2;
reg  signed [5:0] mul_ln1345_283_reg_19305;
reg   [2:0] tmp_296_reg_19310;
reg   [2:0] tmp_297_reg_19315;
reg   [2:0] tmp_298_reg_19320;
wire  signed [5:0] sext_ln1345_287_fu_7122_p1;
reg  signed [5:0] sext_ln1345_287_reg_19325;
wire  signed [5:0] mul_ln1345_287_fu_7126_p2;
reg  signed [5:0] mul_ln1345_287_reg_19330;
wire   [5:0] zext_ln1345_24_fu_7142_p1;
reg   [5:0] zext_ln1345_24_reg_19335;
wire  signed [5:0] mul_ln1345_288_fu_7146_p2;
reg  signed [5:0] mul_ln1345_288_reg_19347;
wire   [5:0] zext_ln1345_25_fu_7162_p1;
reg   [5:0] zext_ln1345_25_reg_19352;
wire  signed [5:0] mul_ln1345_289_fu_7166_p2;
reg  signed [5:0] mul_ln1345_289_reg_19364;
wire   [5:0] zext_ln1345_26_fu_7182_p1;
reg   [5:0] zext_ln1345_26_reg_19369;
wire  signed [5:0] mul_ln1345_290_fu_7186_p2;
reg  signed [5:0] mul_ln1345_290_reg_19381;
wire   [5:0] zext_ln1345_27_fu_7202_p1;
reg   [5:0] zext_ln1345_27_reg_19386;
wire  signed [5:0] mul_ln1345_291_fu_7206_p2;
reg  signed [5:0] mul_ln1345_291_reg_19399;
wire   [5:0] zext_ln1345_28_fu_7222_p1;
reg   [5:0] zext_ln1345_28_reg_19404;
wire  signed [5:0] mul_ln1345_292_fu_7226_p2;
reg  signed [5:0] mul_ln1345_292_reg_19417;
wire   [5:0] zext_ln1345_29_fu_7242_p1;
reg   [5:0] zext_ln1345_29_reg_19422;
wire  signed [5:0] mul_ln1345_293_fu_7246_p2;
reg  signed [5:0] mul_ln1345_293_reg_19435;
wire   [5:0] zext_ln1345_30_fu_7262_p1;
reg   [5:0] zext_ln1345_30_reg_19440;
wire  signed [5:0] mul_ln1345_294_fu_7266_p2;
reg  signed [5:0] mul_ln1345_294_reg_19453;
wire   [5:0] zext_ln1345_31_fu_7282_p1;
reg   [5:0] zext_ln1345_31_reg_19458;
wire  signed [5:0] mul_ln1345_295_fu_7286_p2;
reg  signed [5:0] mul_ln1345_295_reg_19471;
wire   [5:0] zext_ln1345_32_fu_7302_p1;
reg   [5:0] zext_ln1345_32_reg_19476;
wire  signed [5:0] mul_ln1345_296_fu_7306_p2;
reg  signed [5:0] mul_ln1345_296_reg_19489;
wire   [5:0] zext_ln1345_33_fu_7322_p1;
reg   [5:0] zext_ln1345_33_reg_19494;
wire  signed [5:0] mul_ln1345_297_fu_7326_p2;
reg  signed [5:0] mul_ln1345_297_reg_19507;
wire   [5:0] zext_ln1345_34_fu_7342_p1;
reg   [5:0] zext_ln1345_34_reg_19512;
wire  signed [5:0] mul_ln1345_298_fu_7346_p2;
reg  signed [5:0] mul_ln1345_298_reg_19525;
wire   [5:0] zext_ln1345_35_fu_7362_p1;
reg   [5:0] zext_ln1345_35_reg_19530;
wire  signed [5:0] mul_ln1345_299_fu_7366_p2;
reg  signed [5:0] mul_ln1345_299_reg_19543;
reg   [2:0] tmp_348_reg_19548;
wire   [5:0] zext_ln1345_37_fu_7392_p1;
reg   [5:0] zext_ln1345_37_reg_19553;
wire  signed [5:0] mul_ln1345_301_fu_7396_p2;
reg  signed [5:0] mul_ln1345_301_reg_19566;
wire   [5:0] zext_ln1345_38_fu_7412_p1;
reg   [5:0] zext_ln1345_38_reg_19571;
wire  signed [5:0] mul_ln1345_302_fu_7416_p2;
reg  signed [5:0] mul_ln1345_302_reg_19584;
wire   [5:0] zext_ln1345_39_fu_7432_p1;
reg   [5:0] zext_ln1345_39_reg_19589;
wire  signed [5:0] mul_ln1345_303_fu_7436_p2;
reg  signed [5:0] mul_ln1345_303_reg_19602;
wire   [5:0] zext_ln1345_40_fu_7452_p1;
reg   [5:0] zext_ln1345_40_reg_19607;
wire  signed [5:0] mul_ln1345_304_fu_7456_p2;
reg  signed [5:0] mul_ln1345_304_reg_19620;
wire   [5:0] zext_ln1345_41_fu_7472_p1;
reg   [5:0] zext_ln1345_41_reg_19625;
wire  signed [5:0] mul_ln1345_305_fu_7476_p2;
reg  signed [5:0] mul_ln1345_305_reg_19638;
reg   [2:0] tmp_354_reg_19643;
wire   [5:0] zext_ln1345_43_fu_7502_p1;
reg   [5:0] zext_ln1345_43_reg_19648;
wire  signed [5:0] mul_ln1345_307_fu_7506_p2;
reg  signed [5:0] mul_ln1345_307_reg_19661;
reg   [2:0] tmp_356_reg_19666;
reg   [2:0] tmp_357_reg_19671;
reg   [2:0] tmp_358_reg_19676;
wire   [5:0] zext_ln1345_47_fu_7552_p1;
reg   [5:0] zext_ln1345_47_reg_19681;
wire  signed [5:0] mul_ln1345_311_fu_7556_p2;
reg  signed [5:0] mul_ln1345_311_reg_19694;
wire  signed [5:0] mul_ln1345_312_fu_7562_p2;
reg  signed [5:0] mul_ln1345_312_reg_19699;
wire  signed [5:0] mul_ln1345_313_fu_7568_p2;
reg  signed [5:0] mul_ln1345_313_reg_19704;
wire  signed [5:0] mul_ln1345_314_fu_7574_p2;
reg  signed [5:0] mul_ln1345_314_reg_19709;
wire  signed [5:0] mul_ln1345_315_fu_7580_p2;
reg  signed [5:0] mul_ln1345_315_reg_19714;
wire  signed [5:0] mul_ln1345_316_fu_7586_p2;
reg  signed [5:0] mul_ln1345_316_reg_19719;
wire  signed [5:0] mul_ln1345_317_fu_7592_p2;
reg  signed [5:0] mul_ln1345_317_reg_19724;
wire  signed [5:0] mul_ln1345_318_fu_7598_p2;
reg  signed [5:0] mul_ln1345_318_reg_19729;
wire  signed [5:0] mul_ln1345_319_fu_7604_p2;
reg  signed [5:0] mul_ln1345_319_reg_19734;
wire  signed [5:0] mul_ln1345_320_fu_7610_p2;
reg  signed [5:0] mul_ln1345_320_reg_19739;
wire  signed [5:0] mul_ln1345_321_fu_7616_p2;
reg  signed [5:0] mul_ln1345_321_reg_19744;
wire  signed [5:0] mul_ln1345_322_fu_7622_p2;
reg  signed [5:0] mul_ln1345_322_reg_19749;
wire  signed [5:0] mul_ln1345_323_fu_7628_p2;
reg  signed [5:0] mul_ln1345_323_reg_19754;
wire  signed [5:0] mul_ln1345_325_fu_7634_p2;
reg  signed [5:0] mul_ln1345_325_reg_19759;
wire  signed [5:0] mul_ln1345_326_fu_7640_p2;
reg  signed [5:0] mul_ln1345_326_reg_19764;
wire  signed [5:0] mul_ln1345_327_fu_7646_p2;
reg  signed [5:0] mul_ln1345_327_reg_19769;
wire  signed [5:0] mul_ln1345_328_fu_7652_p2;
reg  signed [5:0] mul_ln1345_328_reg_19774;
wire  signed [5:0] mul_ln1345_329_fu_7658_p2;
reg  signed [5:0] mul_ln1345_329_reg_19779;
wire  signed [5:0] mul_ln1345_331_fu_7664_p2;
reg  signed [5:0] mul_ln1345_331_reg_19784;
wire  signed [5:0] mul_ln1345_335_fu_7670_p2;
reg  signed [5:0] mul_ln1345_335_reg_19789;
wire  signed [5:0] mul_ln1345_336_fu_7676_p2;
reg  signed [5:0] mul_ln1345_336_reg_19794;
wire  signed [5:0] mul_ln1345_337_fu_7682_p2;
reg  signed [5:0] mul_ln1345_337_reg_19799;
wire  signed [5:0] mul_ln1345_338_fu_7688_p2;
reg  signed [5:0] mul_ln1345_338_reg_19804;
wire  signed [5:0] mul_ln1345_339_fu_7694_p2;
reg  signed [5:0] mul_ln1345_339_reg_19809;
wire  signed [5:0] mul_ln1345_340_fu_7700_p2;
reg  signed [5:0] mul_ln1345_340_reg_19814;
wire  signed [5:0] mul_ln1345_341_fu_7706_p2;
reg  signed [5:0] mul_ln1345_341_reg_19819;
wire  signed [5:0] mul_ln1345_342_fu_7712_p2;
reg  signed [5:0] mul_ln1345_342_reg_19824;
wire  signed [5:0] mul_ln1345_343_fu_7718_p2;
reg  signed [5:0] mul_ln1345_343_reg_19829;
wire  signed [5:0] mul_ln1345_344_fu_7724_p2;
reg  signed [5:0] mul_ln1345_344_reg_19834;
wire  signed [5:0] mul_ln1345_345_fu_7730_p2;
reg  signed [5:0] mul_ln1345_345_reg_19839;
wire  signed [5:0] mul_ln1345_346_fu_7736_p2;
reg  signed [5:0] mul_ln1345_346_reg_19844;
wire  signed [5:0] mul_ln1345_347_fu_7742_p2;
reg  signed [5:0] mul_ln1345_347_reg_19849;
wire  signed [5:0] mul_ln1345_349_fu_7748_p2;
reg  signed [5:0] mul_ln1345_349_reg_19854;
wire  signed [5:0] mul_ln1345_350_fu_7754_p2;
reg  signed [5:0] mul_ln1345_350_reg_19859;
wire  signed [5:0] mul_ln1345_351_fu_7760_p2;
reg  signed [5:0] mul_ln1345_351_reg_19864;
wire  signed [5:0] mul_ln1345_352_fu_7766_p2;
reg  signed [5:0] mul_ln1345_352_reg_19869;
wire  signed [5:0] mul_ln1345_353_fu_7772_p2;
reg  signed [5:0] mul_ln1345_353_reg_19874;
wire  signed [5:0] mul_ln1345_355_fu_7778_p2;
reg  signed [5:0] mul_ln1345_355_reg_19879;
wire  signed [5:0] mul_ln1345_359_fu_7784_p2;
reg  signed [5:0] mul_ln1345_359_reg_19884;
wire  signed [5:0] mul_ln1345_360_fu_7790_p2;
reg  signed [5:0] mul_ln1345_360_reg_19889;
wire  signed [5:0] mul_ln1345_361_fu_7796_p2;
reg  signed [5:0] mul_ln1345_361_reg_19894;
wire  signed [5:0] mul_ln1345_362_fu_7802_p2;
reg  signed [5:0] mul_ln1345_362_reg_19899;
wire   [6:0] add_ln691_fu_7945_p2;
reg   [6:0] add_ln691_reg_19904;
wire   [7:0] add_ln691_3_fu_7961_p2;
reg   [7:0] add_ln691_3_reg_19909;
wire   [7:0] add_ln691_6_fu_7977_p2;
reg   [7:0] add_ln691_6_reg_19914;
wire   [7:0] add_ln691_8_fu_7993_p2;
reg   [7:0] add_ln691_8_reg_19919;
wire   [7:0] add_ln691_12_fu_8009_p2;
reg   [7:0] add_ln691_12_reg_19924;
wire   [7:0] add_ln691_14_fu_8025_p2;
reg   [7:0] add_ln691_14_reg_19929;
wire   [7:0] add_ln691_17_fu_8041_p2;
reg   [7:0] add_ln691_17_reg_19934;
wire   [7:0] add_ln691_20_fu_8067_p2;
reg   [7:0] add_ln691_20_reg_19939;
wire   [6:0] add_ln691_24_fu_8195_p2;
reg   [6:0] add_ln691_24_reg_19944;
wire   [7:0] add_ln691_27_fu_8211_p2;
reg   [7:0] add_ln691_27_reg_19949;
wire   [7:0] add_ln691_30_fu_8227_p2;
reg   [7:0] add_ln691_30_reg_19954;
wire   [7:0] add_ln691_32_fu_8243_p2;
reg   [7:0] add_ln691_32_reg_19959;
wire   [7:0] add_ln691_36_fu_8259_p2;
reg   [7:0] add_ln691_36_reg_19964;
wire   [7:0] add_ln691_38_fu_8275_p2;
reg   [7:0] add_ln691_38_reg_19969;
wire   [7:0] add_ln691_41_fu_8291_p2;
reg   [7:0] add_ln691_41_reg_19974;
wire   [7:0] add_ln691_44_fu_8317_p2;
reg   [7:0] add_ln691_44_reg_19979;
wire   [6:0] add_ln691_48_fu_8445_p2;
reg   [6:0] add_ln691_48_reg_19984;
wire   [7:0] add_ln691_51_fu_8461_p2;
reg   [7:0] add_ln691_51_reg_19989;
wire   [7:0] add_ln691_54_fu_8477_p2;
reg   [7:0] add_ln691_54_reg_19994;
wire   [7:0] add_ln691_56_fu_8493_p2;
reg   [7:0] add_ln691_56_reg_19999;
wire   [7:0] add_ln691_60_fu_8509_p2;
reg   [7:0] add_ln691_60_reg_20004;
wire   [7:0] add_ln691_62_fu_8525_p2;
reg   [7:0] add_ln691_62_reg_20009;
wire   [7:0] add_ln691_65_fu_8541_p2;
reg   [7:0] add_ln691_65_reg_20014;
wire   [7:0] add_ln691_68_fu_8567_p2;
reg   [7:0] add_ln691_68_reg_20019;
wire   [6:0] add_ln691_72_fu_8695_p2;
reg   [6:0] add_ln691_72_reg_20024;
wire   [7:0] add_ln691_75_fu_8711_p2;
reg   [7:0] add_ln691_75_reg_20029;
wire   [7:0] add_ln691_78_fu_8727_p2;
reg   [7:0] add_ln691_78_reg_20034;
wire   [7:0] add_ln691_80_fu_8743_p2;
reg   [7:0] add_ln691_80_reg_20039;
wire   [7:0] add_ln691_84_fu_8759_p2;
reg   [7:0] add_ln691_84_reg_20044;
wire   [7:0] add_ln691_86_fu_8775_p2;
reg   [7:0] add_ln691_86_reg_20049;
wire   [7:0] add_ln691_89_fu_8791_p2;
reg   [7:0] add_ln691_89_reg_20054;
wire   [7:0] add_ln691_92_fu_8817_p2;
reg   [7:0] add_ln691_92_reg_20059;
wire   [6:0] add_ln691_96_fu_8945_p2;
reg   [6:0] add_ln691_96_reg_20064;
wire   [7:0] add_ln691_99_fu_8961_p2;
reg   [7:0] add_ln691_99_reg_20069;
wire   [7:0] add_ln691_102_fu_8977_p2;
reg   [7:0] add_ln691_102_reg_20074;
wire   [7:0] add_ln691_104_fu_8993_p2;
reg   [7:0] add_ln691_104_reg_20079;
wire   [7:0] add_ln691_108_fu_9009_p2;
reg   [7:0] add_ln691_108_reg_20084;
wire   [7:0] add_ln691_110_fu_9025_p2;
reg   [7:0] add_ln691_110_reg_20089;
wire   [7:0] add_ln691_113_fu_9041_p2;
reg   [7:0] add_ln691_113_reg_20094;
wire   [7:0] add_ln691_116_fu_9067_p2;
reg   [7:0] add_ln691_116_reg_20099;
wire   [6:0] add_ln691_120_fu_9195_p2;
reg   [6:0] add_ln691_120_reg_20104;
wire   [7:0] add_ln691_123_fu_9211_p2;
reg   [7:0] add_ln691_123_reg_20109;
wire   [7:0] add_ln691_126_fu_9227_p2;
reg   [7:0] add_ln691_126_reg_20114;
wire   [7:0] add_ln691_128_fu_9243_p2;
reg   [7:0] add_ln691_128_reg_20119;
wire   [7:0] add_ln691_132_fu_9259_p2;
reg   [7:0] add_ln691_132_reg_20124;
wire   [7:0] add_ln691_134_fu_9275_p2;
reg   [7:0] add_ln691_134_reg_20129;
wire   [7:0] add_ln691_137_fu_9291_p2;
reg   [7:0] add_ln691_137_reg_20134;
wire   [7:0] add_ln691_140_fu_9317_p2;
reg   [7:0] add_ln691_140_reg_20139;
wire   [6:0] add_ln691_144_fu_9445_p2;
reg   [6:0] add_ln691_144_reg_20144;
wire   [7:0] add_ln691_147_fu_9461_p2;
reg   [7:0] add_ln691_147_reg_20149;
wire   [7:0] add_ln691_150_fu_9477_p2;
reg   [7:0] add_ln691_150_reg_20154;
wire   [7:0] add_ln691_152_fu_9493_p2;
reg   [7:0] add_ln691_152_reg_20159;
wire   [7:0] add_ln691_156_fu_9509_p2;
reg   [7:0] add_ln691_156_reg_20164;
wire   [7:0] add_ln691_158_fu_9525_p2;
reg   [7:0] add_ln691_158_reg_20169;
wire   [7:0] add_ln691_161_fu_9541_p2;
reg   [7:0] add_ln691_161_reg_20174;
wire   [7:0] add_ln691_164_fu_9567_p2;
reg   [7:0] add_ln691_164_reg_20179;
wire   [6:0] add_ln691_168_fu_9695_p2;
reg   [6:0] add_ln691_168_reg_20184;
wire   [7:0] add_ln691_171_fu_9711_p2;
reg   [7:0] add_ln691_171_reg_20189;
wire   [7:0] add_ln691_174_fu_9727_p2;
reg   [7:0] add_ln691_174_reg_20194;
wire   [7:0] add_ln691_176_fu_9743_p2;
reg   [7:0] add_ln691_176_reg_20199;
wire   [7:0] add_ln691_180_fu_9759_p2;
reg   [7:0] add_ln691_180_reg_20204;
wire   [7:0] add_ln691_182_fu_9775_p2;
reg   [7:0] add_ln691_182_reg_20209;
wire   [7:0] add_ln691_185_fu_9791_p2;
reg   [7:0] add_ln691_185_reg_20214;
wire   [7:0] add_ln691_188_fu_9817_p2;
reg   [7:0] add_ln691_188_reg_20219;
wire   [6:0] add_ln691_192_fu_9945_p2;
reg   [6:0] add_ln691_192_reg_20224;
wire   [7:0] add_ln691_195_fu_9961_p2;
reg   [7:0] add_ln691_195_reg_20229;
wire   [7:0] add_ln691_198_fu_9977_p2;
reg   [7:0] add_ln691_198_reg_20234;
wire   [7:0] add_ln691_200_fu_9993_p2;
reg   [7:0] add_ln691_200_reg_20239;
wire   [7:0] add_ln691_204_fu_10009_p2;
reg   [7:0] add_ln691_204_reg_20244;
wire   [7:0] add_ln691_206_fu_10025_p2;
reg   [7:0] add_ln691_206_reg_20249;
wire   [7:0] add_ln691_209_fu_10041_p2;
reg   [7:0] add_ln691_209_reg_20254;
wire   [7:0] add_ln691_212_fu_10067_p2;
reg   [7:0] add_ln691_212_reg_20259;
wire   [6:0] add_ln691_216_fu_10195_p2;
reg   [6:0] add_ln691_216_reg_20264;
wire   [7:0] add_ln691_219_fu_10211_p2;
reg   [7:0] add_ln691_219_reg_20269;
wire   [7:0] add_ln691_222_fu_10227_p2;
reg   [7:0] add_ln691_222_reg_20274;
wire   [7:0] add_ln691_224_fu_10243_p2;
reg   [7:0] add_ln691_224_reg_20279;
wire   [7:0] add_ln691_228_fu_10259_p2;
reg   [7:0] add_ln691_228_reg_20284;
wire   [7:0] add_ln691_230_fu_10275_p2;
reg   [7:0] add_ln691_230_reg_20289;
wire   [7:0] add_ln691_233_fu_10291_p2;
reg   [7:0] add_ln691_233_reg_20294;
wire   [7:0] add_ln691_236_fu_10317_p2;
reg   [7:0] add_ln691_236_reg_20299;
wire   [6:0] add_ln691_240_fu_10445_p2;
reg   [6:0] add_ln691_240_reg_20304;
wire   [7:0] add_ln691_243_fu_10461_p2;
reg   [7:0] add_ln691_243_reg_20309;
wire   [7:0] add_ln691_246_fu_10477_p2;
reg   [7:0] add_ln691_246_reg_20314;
wire   [7:0] add_ln691_248_fu_10493_p2;
reg   [7:0] add_ln691_248_reg_20319;
wire   [7:0] add_ln691_252_fu_10509_p2;
reg   [7:0] add_ln691_252_reg_20324;
wire   [7:0] add_ln691_254_fu_10525_p2;
reg   [7:0] add_ln691_254_reg_20329;
wire   [7:0] add_ln691_257_fu_10541_p2;
reg   [7:0] add_ln691_257_reg_20334;
wire   [7:0] add_ln691_260_fu_10567_p2;
reg   [7:0] add_ln691_260_reg_20339;
wire   [6:0] add_ln691_264_fu_10695_p2;
reg   [6:0] add_ln691_264_reg_20344;
wire   [7:0] add_ln691_267_fu_10711_p2;
reg   [7:0] add_ln691_267_reg_20349;
wire   [7:0] add_ln691_270_fu_10727_p2;
reg   [7:0] add_ln691_270_reg_20354;
wire   [7:0] add_ln691_272_fu_10743_p2;
reg   [7:0] add_ln691_272_reg_20359;
wire   [7:0] add_ln691_276_fu_10759_p2;
reg   [7:0] add_ln691_276_reg_20364;
wire   [7:0] add_ln691_278_fu_10775_p2;
reg   [7:0] add_ln691_278_reg_20369;
wire   [7:0] add_ln691_281_fu_10791_p2;
reg   [7:0] add_ln691_281_reg_20374;
wire   [7:0] add_ln691_284_fu_10817_p2;
reg   [7:0] add_ln691_284_reg_20379;
wire   [6:0] add_ln691_288_fu_10945_p2;
reg   [6:0] add_ln691_288_reg_20384;
wire   [7:0] add_ln691_291_fu_10961_p2;
reg   [7:0] add_ln691_291_reg_20389;
wire   [7:0] add_ln691_294_fu_10977_p2;
reg   [7:0] add_ln691_294_reg_20394;
wire   [7:0] add_ln691_296_fu_10993_p2;
reg   [7:0] add_ln691_296_reg_20399;
wire   [7:0] add_ln691_300_fu_11009_p2;
reg   [7:0] add_ln691_300_reg_20404;
wire   [7:0] add_ln691_302_fu_11025_p2;
reg   [7:0] add_ln691_302_reg_20409;
wire   [7:0] add_ln691_305_fu_11041_p2;
reg   [7:0] add_ln691_305_reg_20414;
wire   [7:0] add_ln691_308_fu_11067_p2;
reg   [7:0] add_ln691_308_reg_20419;
wire   [6:0] add_ln691_312_fu_11180_p2;
reg   [6:0] add_ln691_312_reg_20424;
wire   [7:0] add_ln691_315_fu_11196_p2;
reg   [7:0] add_ln691_315_reg_20429;
wire   [7:0] add_ln691_318_fu_11212_p2;
reg   [7:0] add_ln691_318_reg_20434;
wire   [7:0] add_ln691_320_fu_11228_p2;
reg   [7:0] add_ln691_320_reg_20439;
wire   [7:0] add_ln691_324_fu_11244_p2;
reg   [7:0] add_ln691_324_reg_20444;
wire   [7:0] add_ln691_326_fu_11260_p2;
reg   [7:0] add_ln691_326_reg_20449;
wire   [7:0] add_ln691_329_fu_11276_p2;
reg   [7:0] add_ln691_329_reg_20454;
wire   [7:0] add_ln691_332_fu_11302_p2;
reg   [7:0] add_ln691_332_reg_20459;
wire   [6:0] add_ln691_336_fu_11415_p2;
reg   [6:0] add_ln691_336_reg_20464;
wire   [7:0] add_ln691_339_fu_11431_p2;
reg   [7:0] add_ln691_339_reg_20469;
wire   [7:0] add_ln691_342_fu_11447_p2;
reg   [7:0] add_ln691_342_reg_20474;
wire   [7:0] add_ln691_344_fu_11463_p2;
reg   [7:0] add_ln691_344_reg_20479;
wire   [7:0] add_ln691_348_fu_11479_p2;
reg   [7:0] add_ln691_348_reg_20484;
wire   [7:0] add_ln691_350_fu_11495_p2;
reg   [7:0] add_ln691_350_reg_20489;
wire   [7:0] add_ln691_353_fu_11511_p2;
reg   [7:0] add_ln691_353_reg_20494;
wire   [7:0] add_ln691_356_fu_11537_p2;
reg   [7:0] add_ln691_356_reg_20499;
wire  signed [5:0] mul_ln1345_372_fu_11624_p2;
reg  signed [5:0] mul_ln1345_372_reg_20504;
wire  signed [5:0] mul_ln1345_378_fu_11670_p2;
reg  signed [5:0] mul_ln1345_378_reg_20509;
wire  signed [5:0] mul_ln1345_380_fu_11684_p2;
reg  signed [5:0] mul_ln1345_380_reg_20514;
wire   [6:0] add_ln691_360_fu_11718_p2;
reg   [6:0] add_ln691_360_reg_20519;
wire   [6:0] add_ln691_362_fu_11724_p2;
reg   [6:0] add_ln691_362_reg_20524;
wire   [6:0] add_ln691_365_fu_11730_p2;
reg   [6:0] add_ln691_365_reg_20529;
wire   [6:0] add_ln691_367_fu_11736_p2;
reg   [6:0] add_ln691_367_reg_20534;
wire   [7:0] add_ln691_372_fu_11752_p2;
reg   [7:0] add_ln691_372_reg_20539;
wire   [7:0] add_ln691_374_fu_11768_p2;
reg   [7:0] add_ln691_374_reg_20544;
wire   [7:0] add_ln691_377_fu_11784_p2;
reg   [7:0] add_ln691_377_reg_20549;
wire   [7:0] add_ln691_380_fu_11810_p2;
reg   [7:0] add_ln691_380_reg_20554;
wire  signed [5:0] mul_ln1345_396_fu_11912_p2;
reg  signed [5:0] mul_ln1345_396_reg_20559;
wire  signed [5:0] mul_ln1345_402_fu_11958_p2;
reg  signed [5:0] mul_ln1345_402_reg_20564;
wire  signed [5:0] mul_ln1345_404_fu_11972_p2;
reg  signed [5:0] mul_ln1345_404_reg_20569;
wire   [6:0] add_ln691_384_fu_12006_p2;
reg   [6:0] add_ln691_384_reg_20574;
wire   [6:0] add_ln691_386_fu_12012_p2;
reg   [6:0] add_ln691_386_reg_20579;
wire   [6:0] add_ln691_389_fu_12018_p2;
reg   [6:0] add_ln691_389_reg_20584;
wire   [6:0] add_ln691_391_fu_12024_p2;
reg   [6:0] add_ln691_391_reg_20589;
wire   [7:0] add_ln691_396_fu_12040_p2;
reg   [7:0] add_ln691_396_reg_20594;
wire   [7:0] add_ln691_398_fu_12056_p2;
reg   [7:0] add_ln691_398_reg_20599;
wire   [7:0] add_ln691_401_fu_12072_p2;
reg   [7:0] add_ln691_401_reg_20604;
wire   [7:0] add_ln691_404_fu_12098_p2;
reg   [7:0] add_ln691_404_reg_20609;
wire  signed [5:0] mul_ln1345_420_fu_12200_p2;
reg  signed [5:0] mul_ln1345_420_reg_20614;
wire  signed [5:0] mul_ln1345_426_fu_12246_p2;
reg  signed [5:0] mul_ln1345_426_reg_20619;
wire  signed [5:0] mul_ln1345_428_fu_12260_p2;
reg  signed [5:0] mul_ln1345_428_reg_20624;
wire   [6:0] add_ln691_408_fu_12294_p2;
reg   [6:0] add_ln691_408_reg_20629;
wire   [6:0] add_ln691_410_fu_12300_p2;
reg   [6:0] add_ln691_410_reg_20634;
wire   [6:0] add_ln691_413_fu_12306_p2;
reg   [6:0] add_ln691_413_reg_20639;
wire   [6:0] add_ln691_415_fu_12312_p2;
reg   [6:0] add_ln691_415_reg_20644;
wire   [7:0] add_ln691_420_fu_12328_p2;
reg   [7:0] add_ln691_420_reg_20649;
wire   [7:0] add_ln691_422_fu_12344_p2;
reg   [7:0] add_ln691_422_reg_20654;
wire   [7:0] add_ln691_425_fu_12360_p2;
reg   [7:0] add_ln691_425_reg_20659;
wire   [7:0] add_ln691_428_fu_12386_p2;
reg   [7:0] add_ln691_428_reg_20664;
wire  signed [5:0] mul_ln1345_444_fu_12488_p2;
reg  signed [5:0] mul_ln1345_444_reg_20669;
wire  signed [5:0] mul_ln1345_450_fu_12534_p2;
reg  signed [5:0] mul_ln1345_450_reg_20674;
wire  signed [5:0] mul_ln1345_452_fu_12548_p2;
reg  signed [5:0] mul_ln1345_452_reg_20679;
wire   [6:0] add_ln691_432_fu_12582_p2;
reg   [6:0] add_ln691_432_reg_20684;
wire   [6:0] add_ln691_434_fu_12588_p2;
reg   [6:0] add_ln691_434_reg_20689;
wire   [6:0] add_ln691_437_fu_12594_p2;
reg   [6:0] add_ln691_437_reg_20694;
wire   [6:0] add_ln691_439_fu_12600_p2;
reg   [6:0] add_ln691_439_reg_20699;
wire   [7:0] add_ln691_444_fu_12616_p2;
reg   [7:0] add_ln691_444_reg_20704;
wire   [7:0] add_ln691_446_fu_12632_p2;
reg   [7:0] add_ln691_446_reg_20709;
wire   [7:0] add_ln691_449_fu_12648_p2;
reg   [7:0] add_ln691_449_reg_20714;
wire   [7:0] add_ln691_452_fu_12674_p2;
reg   [7:0] add_ln691_452_reg_20719;
wire  signed [5:0] mul_ln1345_468_fu_12776_p2;
reg  signed [5:0] mul_ln1345_468_reg_20724;
wire  signed [5:0] mul_ln1345_474_fu_12822_p2;
reg  signed [5:0] mul_ln1345_474_reg_20729;
wire  signed [5:0] mul_ln1345_476_fu_12836_p2;
reg  signed [5:0] mul_ln1345_476_reg_20734;
wire   [6:0] add_ln691_456_fu_12870_p2;
reg   [6:0] add_ln691_456_reg_20739;
wire   [6:0] add_ln691_458_fu_12876_p2;
reg   [6:0] add_ln691_458_reg_20744;
wire   [6:0] add_ln691_461_fu_12882_p2;
reg   [6:0] add_ln691_461_reg_20749;
wire   [6:0] add_ln691_463_fu_12888_p2;
reg   [6:0] add_ln691_463_reg_20754;
wire   [7:0] add_ln691_468_fu_12904_p2;
reg   [7:0] add_ln691_468_reg_20759;
wire   [7:0] add_ln691_470_fu_12920_p2;
reg   [7:0] add_ln691_470_reg_20764;
wire   [7:0] add_ln691_473_fu_12936_p2;
reg   [7:0] add_ln691_473_reg_20769;
wire   [7:0] add_ln691_476_fu_12962_p2;
reg   [7:0] add_ln691_476_reg_20774;
wire  signed [5:0] mul_ln1345_492_fu_13064_p2;
reg  signed [5:0] mul_ln1345_492_reg_20779;
wire  signed [5:0] mul_ln1345_498_fu_13110_p2;
reg  signed [5:0] mul_ln1345_498_reg_20784;
wire  signed [5:0] mul_ln1345_500_fu_13124_p2;
reg  signed [5:0] mul_ln1345_500_reg_20789;
wire   [6:0] add_ln691_480_fu_13158_p2;
reg   [6:0] add_ln691_480_reg_20794;
wire   [6:0] add_ln691_482_fu_13164_p2;
reg   [6:0] add_ln691_482_reg_20799;
wire   [6:0] add_ln691_485_fu_13170_p2;
reg   [6:0] add_ln691_485_reg_20804;
wire   [6:0] add_ln691_487_fu_13176_p2;
reg   [6:0] add_ln691_487_reg_20809;
wire   [7:0] add_ln691_492_fu_13192_p2;
reg   [7:0] add_ln691_492_reg_20814;
wire   [7:0] add_ln691_494_fu_13208_p2;
reg   [7:0] add_ln691_494_reg_20819;
wire   [7:0] add_ln691_497_fu_13224_p2;
reg   [7:0] add_ln691_497_reg_20824;
wire   [7:0] add_ln691_500_fu_13250_p2;
reg   [7:0] add_ln691_500_reg_20829;
wire  signed [5:0] mul_ln1345_516_fu_13352_p2;
reg  signed [5:0] mul_ln1345_516_reg_20834;
wire  signed [5:0] mul_ln1345_522_fu_13398_p2;
reg  signed [5:0] mul_ln1345_522_reg_20839;
wire  signed [5:0] mul_ln1345_524_fu_13412_p2;
reg  signed [5:0] mul_ln1345_524_reg_20844;
wire   [6:0] add_ln691_504_fu_13446_p2;
reg   [6:0] add_ln691_504_reg_20849;
wire   [6:0] add_ln691_506_fu_13452_p2;
reg   [6:0] add_ln691_506_reg_20854;
wire   [6:0] add_ln691_509_fu_13458_p2;
reg   [6:0] add_ln691_509_reg_20859;
wire   [6:0] add_ln691_511_fu_13464_p2;
reg   [6:0] add_ln691_511_reg_20864;
wire   [7:0] add_ln691_516_fu_13480_p2;
reg   [7:0] add_ln691_516_reg_20869;
wire   [7:0] add_ln691_518_fu_13496_p2;
reg   [7:0] add_ln691_518_reg_20874;
wire   [7:0] add_ln691_521_fu_13512_p2;
reg   [7:0] add_ln691_521_reg_20879;
wire   [7:0] add_ln691_524_fu_13538_p2;
reg   [7:0] add_ln691_524_reg_20884;
wire  signed [5:0] mul_ln1345_540_fu_13640_p2;
reg  signed [5:0] mul_ln1345_540_reg_20889;
wire  signed [5:0] mul_ln1345_546_fu_13686_p2;
reg  signed [5:0] mul_ln1345_546_reg_20894;
wire  signed [5:0] mul_ln1345_548_fu_13700_p2;
reg  signed [5:0] mul_ln1345_548_reg_20899;
wire   [6:0] add_ln691_528_fu_13734_p2;
reg   [6:0] add_ln691_528_reg_20904;
wire   [6:0] add_ln691_530_fu_13740_p2;
reg   [6:0] add_ln691_530_reg_20909;
wire   [6:0] add_ln691_533_fu_13746_p2;
reg   [6:0] add_ln691_533_reg_20914;
wire   [6:0] add_ln691_535_fu_13752_p2;
reg   [6:0] add_ln691_535_reg_20919;
wire   [7:0] add_ln691_540_fu_13768_p2;
reg   [7:0] add_ln691_540_reg_20924;
wire   [7:0] add_ln691_542_fu_13784_p2;
reg   [7:0] add_ln691_542_reg_20929;
wire   [7:0] add_ln691_545_fu_13800_p2;
reg   [7:0] add_ln691_545_reg_20934;
wire   [7:0] add_ln691_548_fu_13826_p2;
reg   [7:0] add_ln691_548_reg_20939;
wire  signed [5:0] mul_ln1345_564_fu_13928_p2;
reg  signed [5:0] mul_ln1345_564_reg_20944;
wire  signed [5:0] mul_ln1345_570_fu_13974_p2;
reg  signed [5:0] mul_ln1345_570_reg_20949;
wire  signed [5:0] mul_ln1345_572_fu_13988_p2;
reg  signed [5:0] mul_ln1345_572_reg_20954;
wire   [6:0] add_ln691_552_fu_14022_p2;
reg   [6:0] add_ln691_552_reg_20959;
wire   [6:0] add_ln691_554_fu_14028_p2;
reg   [6:0] add_ln691_554_reg_20964;
wire   [6:0] add_ln691_557_fu_14034_p2;
reg   [6:0] add_ln691_557_reg_20969;
wire   [6:0] add_ln691_559_fu_14040_p2;
reg   [6:0] add_ln691_559_reg_20974;
wire   [7:0] add_ln691_564_fu_14056_p2;
reg   [7:0] add_ln691_564_reg_20979;
wire   [7:0] add_ln691_566_fu_14072_p2;
reg   [7:0] add_ln691_566_reg_20984;
wire   [7:0] add_ln691_569_fu_14088_p2;
reg   [7:0] add_ln691_569_reg_20989;
wire   [7:0] add_ln691_572_fu_14114_p2;
reg   [7:0] add_ln691_572_reg_20994;
wire   [12:0] add_ln691_4_fu_14152_p2;
reg   [12:0] add_ln691_4_reg_20999;
wire   [8:0] add_ln691_9_fu_14164_p2;
reg   [8:0] add_ln691_9_reg_21004;
wire   [9:0] add_ln691_22_fu_14202_p2;
reg   [9:0] add_ln691_22_reg_21009;
wire   [12:0] add_ln691_28_fu_14230_p2;
reg   [12:0] add_ln691_28_reg_21014;
wire   [8:0] add_ln691_33_fu_14242_p2;
reg   [8:0] add_ln691_33_reg_21019;
wire   [9:0] add_ln691_46_fu_14280_p2;
reg   [9:0] add_ln691_46_reg_21024;
wire   [12:0] add_ln691_52_fu_14308_p2;
reg   [12:0] add_ln691_52_reg_21029;
wire   [8:0] add_ln691_57_fu_14320_p2;
reg   [8:0] add_ln691_57_reg_21034;
wire   [9:0] add_ln691_70_fu_14358_p2;
reg   [9:0] add_ln691_70_reg_21039;
wire   [12:0] add_ln691_76_fu_14386_p2;
reg   [12:0] add_ln691_76_reg_21044;
wire   [8:0] add_ln691_81_fu_14398_p2;
reg   [8:0] add_ln691_81_reg_21049;
wire   [9:0] add_ln691_94_fu_14436_p2;
reg   [9:0] add_ln691_94_reg_21054;
wire   [12:0] add_ln691_100_fu_14464_p2;
reg   [12:0] add_ln691_100_reg_21059;
wire   [8:0] add_ln691_105_fu_14476_p2;
reg   [8:0] add_ln691_105_reg_21064;
wire   [9:0] add_ln691_118_fu_14514_p2;
reg   [9:0] add_ln691_118_reg_21069;
wire   [12:0] add_ln691_124_fu_14542_p2;
reg   [12:0] add_ln691_124_reg_21074;
wire   [8:0] add_ln691_129_fu_14554_p2;
reg   [8:0] add_ln691_129_reg_21079;
wire   [9:0] add_ln691_142_fu_14592_p2;
reg   [9:0] add_ln691_142_reg_21084;
wire   [12:0] add_ln691_148_fu_14620_p2;
reg   [12:0] add_ln691_148_reg_21089;
wire   [8:0] add_ln691_153_fu_14632_p2;
reg   [8:0] add_ln691_153_reg_21094;
wire   [9:0] add_ln691_166_fu_14670_p2;
reg   [9:0] add_ln691_166_reg_21099;
wire   [12:0] add_ln691_172_fu_14698_p2;
reg   [12:0] add_ln691_172_reg_21104;
wire   [8:0] add_ln691_177_fu_14710_p2;
reg   [8:0] add_ln691_177_reg_21109;
wire   [9:0] add_ln691_190_fu_14748_p2;
reg   [9:0] add_ln691_190_reg_21114;
wire   [12:0] add_ln691_196_fu_14776_p2;
reg   [12:0] add_ln691_196_reg_21119;
wire   [8:0] add_ln691_201_fu_14788_p2;
reg   [8:0] add_ln691_201_reg_21124;
wire   [9:0] add_ln691_214_fu_14826_p2;
reg   [9:0] add_ln691_214_reg_21129;
wire   [12:0] add_ln691_220_fu_14854_p2;
reg   [12:0] add_ln691_220_reg_21134;
wire   [8:0] add_ln691_225_fu_14866_p2;
reg   [8:0] add_ln691_225_reg_21139;
wire   [9:0] add_ln691_238_fu_14904_p2;
reg   [9:0] add_ln691_238_reg_21144;
wire   [12:0] add_ln691_244_fu_14932_p2;
reg   [12:0] add_ln691_244_reg_21149;
wire   [8:0] add_ln691_249_fu_14944_p2;
reg   [8:0] add_ln691_249_reg_21154;
wire   [9:0] add_ln691_262_fu_14982_p2;
reg   [9:0] add_ln691_262_reg_21159;
wire   [12:0] add_ln691_268_fu_15010_p2;
reg   [12:0] add_ln691_268_reg_21164;
wire   [8:0] add_ln691_273_fu_15022_p2;
reg   [8:0] add_ln691_273_reg_21169;
wire   [9:0] add_ln691_286_fu_15060_p2;
reg   [9:0] add_ln691_286_reg_21174;
wire   [12:0] add_ln691_292_fu_15088_p2;
reg   [12:0] add_ln691_292_reg_21179;
wire   [8:0] add_ln691_297_fu_15100_p2;
reg   [8:0] add_ln691_297_reg_21184;
wire   [9:0] add_ln691_310_fu_15138_p2;
reg   [9:0] add_ln691_310_reg_21189;
wire   [12:0] add_ln691_316_fu_15166_p2;
reg   [12:0] add_ln691_316_reg_21194;
wire   [8:0] add_ln691_321_fu_15178_p2;
reg   [8:0] add_ln691_321_reg_21199;
wire   [9:0] add_ln691_334_fu_15216_p2;
reg   [9:0] add_ln691_334_reg_21204;
wire   [12:0] add_ln691_340_fu_15244_p2;
reg   [12:0] add_ln691_340_reg_21209;
wire   [8:0] add_ln691_345_fu_15256_p2;
reg   [8:0] add_ln691_345_reg_21214;
wire   [9:0] add_ln691_358_fu_15294_p2;
reg   [9:0] add_ln691_358_reg_21219;
wire   [12:0] add_ln691_364_fu_15341_p2;
reg   [12:0] add_ln691_364_reg_21224;
wire   [8:0] add_ln691_369_fu_15373_p2;
reg   [8:0] add_ln691_369_reg_21229;
wire   [9:0] add_ln691_382_fu_15411_p2;
reg   [9:0] add_ln691_382_reg_21234;
wire   [12:0] add_ln691_388_fu_15458_p2;
reg   [12:0] add_ln691_388_reg_21239;
wire   [8:0] add_ln691_393_fu_15490_p2;
reg   [8:0] add_ln691_393_reg_21244;
wire   [9:0] add_ln691_406_fu_15528_p2;
reg   [9:0] add_ln691_406_reg_21249;
wire   [12:0] add_ln691_412_fu_15575_p2;
reg   [12:0] add_ln691_412_reg_21254;
wire   [8:0] add_ln691_417_fu_15607_p2;
reg   [8:0] add_ln691_417_reg_21259;
wire   [9:0] add_ln691_430_fu_15645_p2;
reg   [9:0] add_ln691_430_reg_21264;
wire   [12:0] add_ln691_436_fu_15692_p2;
reg   [12:0] add_ln691_436_reg_21269;
wire   [8:0] add_ln691_441_fu_15724_p2;
reg   [8:0] add_ln691_441_reg_21274;
wire   [9:0] add_ln691_454_fu_15762_p2;
reg   [9:0] add_ln691_454_reg_21279;
wire   [12:0] add_ln691_460_fu_15809_p2;
reg   [12:0] add_ln691_460_reg_21284;
wire   [8:0] add_ln691_465_fu_15841_p2;
reg   [8:0] add_ln691_465_reg_21289;
wire   [9:0] add_ln691_478_fu_15879_p2;
reg   [9:0] add_ln691_478_reg_21294;
wire   [12:0] add_ln691_484_fu_15926_p2;
reg   [12:0] add_ln691_484_reg_21299;
wire   [8:0] add_ln691_489_fu_15958_p2;
reg   [8:0] add_ln691_489_reg_21304;
wire   [9:0] add_ln691_502_fu_15996_p2;
reg   [9:0] add_ln691_502_reg_21309;
wire   [12:0] add_ln691_508_fu_16043_p2;
reg   [12:0] add_ln691_508_reg_21314;
wire   [8:0] add_ln691_513_fu_16075_p2;
reg   [8:0] add_ln691_513_reg_21319;
wire   [9:0] add_ln691_526_fu_16113_p2;
reg   [9:0] add_ln691_526_reg_21324;
wire   [12:0] add_ln691_532_fu_16160_p2;
reg   [12:0] add_ln691_532_reg_21329;
wire   [8:0] add_ln691_537_fu_16192_p2;
reg   [8:0] add_ln691_537_reg_21334;
wire   [9:0] add_ln691_550_fu_16230_p2;
reg   [9:0] add_ln691_550_reg_21339;
wire   [12:0] add_ln691_556_fu_16277_p2;
reg   [12:0] add_ln691_556_reg_21344;
wire   [8:0] add_ln691_561_fu_16309_p2;
reg   [8:0] add_ln691_561_reg_21349;
wire   [9:0] add_ln691_574_fu_16347_p2;
reg   [9:0] add_ln691_574_reg_21354;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg   [15:0] ap_phi_mux_indvar_flatten20_phi_fu_1466_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_1478_p4;
reg   [4:0] ap_phi_mux_cot_phi_fu_1489_p4;
reg   [5:0] ap_phi_mux_cit_phi_fu_1501_p4;
wire   [63:0] zext_ln121_fu_1508_p1;
wire   [63:0] zext_ln121_2_fu_1583_p1;
wire   [63:0] zext_ln215_2_fu_1630_p1;
reg   [311:0] vec_o_data_M_elems_V_2_fu_1410;
wire   [311:0] tmp_312_fu_16761_p25;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_state1;
wire   [0:0] icmp_ln122_fu_1539_p2;
wire   [0:0] xor_ln120_fu_1533_p2;
wire   [0:0] or_ln121_fu_1557_p2;
wire   [3:0] trunc_ln215_3_fu_1590_p1;
wire   [3:0] trunc_ln215_fu_1587_p1;
wire   [3:0] select_ln120_4_fu_1594_p3;
wire   [3:0] select_ln121_5_fu_1601_p3;
wire   [8:0] tmp_cast_fu_1608_p3;
wire   [8:0] zext_ln215_fu_1621_p1;
wire   [8:0] add_ln215_fu_1624_p2;
wire   [155:0] select_ln120_3_fu_1656_p3;
wire   [2:0] trunc_ln145_fu_1668_p1;
wire   [2:0] trunc_ln215_4_fu_1672_p1;
wire  signed [2:0] mul_ln1345_fu_1684_p0;
wire  signed [5:0] sext_ln1345_fu_1680_p1;
wire   [2:0] mul_ln1345_fu_1684_p1;
wire   [5:0] zext_ln1345_fu_1676_p1;
wire   [2:0] tmp_314_fu_1700_p4;
wire   [2:0] tmp_2_fu_1690_p4;
wire   [2:0] mul_ln1345_1_fu_1718_p0;
wire   [5:0] zext_ln1345_1_fu_1710_p1;
wire  signed [2:0] mul_ln1345_1_fu_1718_p1;
wire  signed [5:0] sext_ln1345_1_fu_1714_p1;
wire   [2:0] tmp_315_fu_1734_p4;
wire   [2:0] tmp_3_fu_1724_p4;
wire   [2:0] mul_ln1345_2_fu_1752_p0;
wire   [5:0] zext_ln1345_2_fu_1744_p1;
wire  signed [2:0] mul_ln1345_2_fu_1752_p1;
wire  signed [5:0] sext_ln1345_2_fu_1748_p1;
wire   [2:0] tmp_316_fu_1768_p4;
wire   [2:0] tmp_4_fu_1758_p4;
wire   [2:0] mul_ln1345_3_fu_1786_p0;
wire   [5:0] zext_ln1345_3_fu_1778_p1;
wire  signed [2:0] mul_ln1345_3_fu_1786_p1;
wire  signed [5:0] sext_ln1345_3_fu_1782_p1;
wire   [2:0] tmp_317_fu_1802_p4;
wire   [2:0] tmp_5_fu_1792_p4;
wire   [2:0] mul_ln1345_4_fu_1820_p0;
wire   [5:0] zext_ln1345_4_fu_1812_p1;
wire  signed [2:0] mul_ln1345_4_fu_1820_p1;
wire  signed [5:0] sext_ln1345_4_fu_1816_p1;
wire   [2:0] tmp_318_fu_1836_p4;
wire   [2:0] tmp_6_fu_1826_p4;
wire   [2:0] mul_ln1345_5_fu_1854_p0;
wire   [5:0] zext_ln1345_5_fu_1846_p1;
wire  signed [2:0] mul_ln1345_5_fu_1854_p1;
wire  signed [5:0] sext_ln1345_5_fu_1850_p1;
wire   [2:0] tmp_319_fu_1870_p4;
wire   [2:0] tmp_7_fu_1860_p4;
wire   [2:0] mul_ln1345_6_fu_1888_p0;
wire   [5:0] zext_ln1345_6_fu_1880_p1;
wire  signed [2:0] mul_ln1345_6_fu_1888_p1;
wire  signed [5:0] sext_ln1345_6_fu_1884_p1;
wire   [2:0] tmp_320_fu_1904_p4;
wire   [2:0] tmp_8_fu_1894_p4;
wire   [2:0] mul_ln1345_7_fu_1922_p0;
wire   [5:0] zext_ln1345_7_fu_1914_p1;
wire  signed [2:0] mul_ln1345_7_fu_1922_p1;
wire  signed [5:0] sext_ln1345_7_fu_1918_p1;
wire   [2:0] tmp_321_fu_1938_p4;
wire   [2:0] tmp_9_fu_1928_p4;
wire   [2:0] mul_ln1345_8_fu_1956_p0;
wire   [5:0] zext_ln1345_8_fu_1948_p1;
wire  signed [2:0] mul_ln1345_8_fu_1956_p1;
wire  signed [5:0] sext_ln1345_8_fu_1952_p1;
wire   [2:0] tmp_322_fu_1972_p4;
wire   [2:0] tmp_10_fu_1962_p4;
wire   [2:0] mul_ln1345_9_fu_1990_p0;
wire   [5:0] zext_ln1345_9_fu_1982_p1;
wire  signed [2:0] mul_ln1345_9_fu_1990_p1;
wire  signed [5:0] sext_ln1345_9_fu_1986_p1;
wire   [2:0] tmp_323_fu_2006_p4;
wire   [2:0] tmp_11_fu_1996_p4;
wire   [2:0] mul_ln1345_10_fu_2024_p0;
wire   [5:0] zext_ln1345_10_fu_2016_p1;
wire  signed [2:0] mul_ln1345_10_fu_2024_p1;
wire  signed [5:0] sext_ln1345_10_fu_2020_p1;
wire   [2:0] tmp_324_fu_2040_p4;
wire   [2:0] tmp_12_fu_2030_p4;
wire   [2:0] mul_ln1345_11_fu_2058_p0;
wire   [5:0] zext_ln1345_11_fu_2050_p1;
wire  signed [2:0] mul_ln1345_11_fu_2058_p1;
wire  signed [5:0] sext_ln1345_11_fu_2054_p1;
wire   [2:0] tmp_326_fu_2094_p4;
wire   [2:0] tmp_14_fu_2084_p4;
wire   [2:0] mul_ln1345_13_fu_2112_p0;
wire   [5:0] zext_ln1345_13_fu_2104_p1;
wire  signed [2:0] mul_ln1345_13_fu_2112_p1;
wire  signed [5:0] sext_ln1345_13_fu_2108_p1;
wire   [2:0] tmp_327_fu_2128_p4;
wire   [2:0] tmp_15_fu_2118_p4;
wire   [2:0] mul_ln1345_14_fu_2146_p0;
wire   [5:0] zext_ln1345_14_fu_2138_p1;
wire  signed [2:0] mul_ln1345_14_fu_2146_p1;
wire  signed [5:0] sext_ln1345_14_fu_2142_p1;
wire   [2:0] tmp_328_fu_2162_p4;
wire   [2:0] tmp_16_fu_2152_p4;
wire   [2:0] mul_ln1345_15_fu_2180_p0;
wire   [5:0] zext_ln1345_15_fu_2172_p1;
wire  signed [2:0] mul_ln1345_15_fu_2180_p1;
wire  signed [5:0] sext_ln1345_15_fu_2176_p1;
wire   [2:0] tmp_329_fu_2196_p4;
wire   [2:0] tmp_17_fu_2186_p4;
wire   [2:0] mul_ln1345_16_fu_2214_p0;
wire   [5:0] zext_ln1345_16_fu_2206_p1;
wire  signed [2:0] mul_ln1345_16_fu_2214_p1;
wire  signed [5:0] sext_ln1345_16_fu_2210_p1;
wire   [2:0] tmp_330_fu_2230_p4;
wire   [2:0] tmp_18_fu_2220_p4;
wire   [2:0] mul_ln1345_17_fu_2248_p0;
wire   [5:0] zext_ln1345_17_fu_2240_p1;
wire  signed [2:0] mul_ln1345_17_fu_2248_p1;
wire  signed [5:0] sext_ln1345_17_fu_2244_p1;
wire   [2:0] tmp_332_fu_2284_p4;
wire   [2:0] tmp_20_fu_2274_p4;
wire   [2:0] mul_ln1345_19_fu_2302_p0;
wire   [5:0] zext_ln1345_19_fu_2294_p1;
wire  signed [2:0] mul_ln1345_19_fu_2302_p1;
wire  signed [5:0] sext_ln1345_19_fu_2298_p1;
wire   [2:0] tmp_s_fu_2378_p4;
wire   [2:0] tmp_24_fu_2368_p4;
wire   [2:0] mul_ln1345_23_fu_2396_p0;
wire   [5:0] zext_ln1345_23_fu_2388_p1;
wire  signed [2:0] mul_ln1345_23_fu_2396_p1;
wire  signed [5:0] sext_ln1345_23_fu_2392_p1;
wire   [2:0] tmp_25_fu_2402_p4;
wire  signed [2:0] mul_ln1345_24_fu_2416_p0;
wire  signed [5:0] sext_ln1345_24_fu_2412_p1;
wire   [2:0] mul_ln1345_24_fu_2416_p1;
wire   [2:0] tmp_27_fu_2422_p4;
wire   [2:0] mul_ln1345_25_fu_2436_p0;
wire  signed [2:0] mul_ln1345_25_fu_2436_p1;
wire  signed [5:0] sext_ln1345_25_fu_2432_p1;
wire   [2:0] tmp_28_fu_2442_p4;
wire   [2:0] mul_ln1345_26_fu_2456_p0;
wire  signed [2:0] mul_ln1345_26_fu_2456_p1;
wire  signed [5:0] sext_ln1345_26_fu_2452_p1;
wire   [2:0] tmp_29_fu_2462_p4;
wire   [2:0] mul_ln1345_27_fu_2476_p0;
wire  signed [2:0] mul_ln1345_27_fu_2476_p1;
wire  signed [5:0] sext_ln1345_27_fu_2472_p1;
wire   [2:0] tmp_30_fu_2482_p4;
wire   [2:0] mul_ln1345_28_fu_2496_p0;
wire  signed [2:0] mul_ln1345_28_fu_2496_p1;
wire  signed [5:0] sext_ln1345_28_fu_2492_p1;
wire   [2:0] tmp_31_fu_2502_p4;
wire   [2:0] mul_ln1345_29_fu_2516_p0;
wire  signed [2:0] mul_ln1345_29_fu_2516_p1;
wire  signed [5:0] sext_ln1345_29_fu_2512_p1;
wire   [2:0] tmp_32_fu_2522_p4;
wire   [2:0] mul_ln1345_30_fu_2536_p0;
wire  signed [2:0] mul_ln1345_30_fu_2536_p1;
wire  signed [5:0] sext_ln1345_30_fu_2532_p1;
wire   [2:0] tmp_33_fu_2542_p4;
wire   [2:0] mul_ln1345_31_fu_2556_p0;
wire  signed [2:0] mul_ln1345_31_fu_2556_p1;
wire  signed [5:0] sext_ln1345_31_fu_2552_p1;
wire   [2:0] tmp_34_fu_2562_p4;
wire   [2:0] mul_ln1345_32_fu_2576_p0;
wire  signed [2:0] mul_ln1345_32_fu_2576_p1;
wire  signed [5:0] sext_ln1345_32_fu_2572_p1;
wire   [2:0] tmp_35_fu_2582_p4;
wire   [2:0] mul_ln1345_33_fu_2596_p0;
wire  signed [2:0] mul_ln1345_33_fu_2596_p1;
wire  signed [5:0] sext_ln1345_33_fu_2592_p1;
wire   [2:0] tmp_36_fu_2602_p4;
wire   [2:0] mul_ln1345_34_fu_2616_p0;
wire  signed [2:0] mul_ln1345_34_fu_2616_p1;
wire  signed [5:0] sext_ln1345_34_fu_2612_p1;
wire   [2:0] tmp_37_fu_2622_p4;
wire   [2:0] mul_ln1345_35_fu_2636_p0;
wire  signed [2:0] mul_ln1345_35_fu_2636_p1;
wire  signed [5:0] sext_ln1345_35_fu_2632_p1;
wire   [2:0] tmp_39_fu_2652_p4;
wire   [2:0] mul_ln1345_37_fu_2666_p0;
wire  signed [2:0] mul_ln1345_37_fu_2666_p1;
wire  signed [5:0] sext_ln1345_37_fu_2662_p1;
wire   [2:0] tmp_40_fu_2672_p4;
wire   [2:0] mul_ln1345_38_fu_2686_p0;
wire  signed [2:0] mul_ln1345_38_fu_2686_p1;
wire  signed [5:0] sext_ln1345_38_fu_2682_p1;
wire   [2:0] tmp_41_fu_2692_p4;
wire   [2:0] mul_ln1345_39_fu_2706_p0;
wire  signed [2:0] mul_ln1345_39_fu_2706_p1;
wire  signed [5:0] sext_ln1345_39_fu_2702_p1;
wire   [2:0] tmp_42_fu_2712_p4;
wire   [2:0] mul_ln1345_40_fu_2726_p0;
wire  signed [2:0] mul_ln1345_40_fu_2726_p1;
wire  signed [5:0] sext_ln1345_40_fu_2722_p1;
wire   [2:0] tmp_43_fu_2732_p4;
wire   [2:0] mul_ln1345_41_fu_2746_p0;
wire  signed [2:0] mul_ln1345_41_fu_2746_p1;
wire  signed [5:0] sext_ln1345_41_fu_2742_p1;
wire   [2:0] tmp_45_fu_2762_p4;
wire   [2:0] mul_ln1345_43_fu_2776_p0;
wire  signed [2:0] mul_ln1345_43_fu_2776_p1;
wire  signed [5:0] sext_ln1345_43_fu_2772_p1;
wire   [2:0] tmp_49_fu_2812_p4;
wire   [2:0] mul_ln1345_47_fu_2826_p0;
wire  signed [2:0] mul_ln1345_47_fu_2826_p1;
wire  signed [5:0] sext_ln1345_47_fu_2822_p1;
wire   [2:0] tmp_50_fu_2832_p4;
wire  signed [2:0] mul_ln1345_48_fu_2846_p0;
wire  signed [5:0] sext_ln1345_48_fu_2842_p1;
wire   [2:0] mul_ln1345_48_fu_2846_p1;
wire   [2:0] tmp_52_fu_2852_p4;
wire   [2:0] mul_ln1345_49_fu_2866_p0;
wire  signed [2:0] mul_ln1345_49_fu_2866_p1;
wire  signed [5:0] sext_ln1345_49_fu_2862_p1;
wire   [2:0] tmp_53_fu_2872_p4;
wire   [2:0] mul_ln1345_50_fu_2886_p0;
wire  signed [2:0] mul_ln1345_50_fu_2886_p1;
wire  signed [5:0] sext_ln1345_50_fu_2882_p1;
wire   [2:0] tmp_54_fu_2892_p4;
wire   [2:0] mul_ln1345_51_fu_2906_p0;
wire  signed [2:0] mul_ln1345_51_fu_2906_p1;
wire  signed [5:0] sext_ln1345_51_fu_2902_p1;
wire   [2:0] tmp_55_fu_2912_p4;
wire   [2:0] mul_ln1345_52_fu_2926_p0;
wire  signed [2:0] mul_ln1345_52_fu_2926_p1;
wire  signed [5:0] sext_ln1345_52_fu_2922_p1;
wire   [2:0] tmp_56_fu_2932_p4;
wire   [2:0] mul_ln1345_53_fu_2946_p0;
wire  signed [2:0] mul_ln1345_53_fu_2946_p1;
wire  signed [5:0] sext_ln1345_53_fu_2942_p1;
wire   [2:0] tmp_57_fu_2952_p4;
wire   [2:0] mul_ln1345_54_fu_2966_p0;
wire  signed [2:0] mul_ln1345_54_fu_2966_p1;
wire  signed [5:0] sext_ln1345_54_fu_2962_p1;
wire   [2:0] tmp_58_fu_2972_p4;
wire   [2:0] mul_ln1345_55_fu_2986_p0;
wire  signed [2:0] mul_ln1345_55_fu_2986_p1;
wire  signed [5:0] sext_ln1345_55_fu_2982_p1;
wire   [2:0] tmp_59_fu_2992_p4;
wire   [2:0] mul_ln1345_56_fu_3006_p0;
wire  signed [2:0] mul_ln1345_56_fu_3006_p1;
wire  signed [5:0] sext_ln1345_56_fu_3002_p1;
wire   [2:0] tmp_60_fu_3012_p4;
wire   [2:0] mul_ln1345_57_fu_3026_p0;
wire  signed [2:0] mul_ln1345_57_fu_3026_p1;
wire  signed [5:0] sext_ln1345_57_fu_3022_p1;
wire   [2:0] tmp_61_fu_3032_p4;
wire   [2:0] mul_ln1345_58_fu_3046_p0;
wire  signed [2:0] mul_ln1345_58_fu_3046_p1;
wire  signed [5:0] sext_ln1345_58_fu_3042_p1;
wire   [2:0] tmp_62_fu_3052_p4;
wire   [2:0] mul_ln1345_59_fu_3066_p0;
wire  signed [2:0] mul_ln1345_59_fu_3066_p1;
wire  signed [5:0] sext_ln1345_59_fu_3062_p1;
wire   [2:0] tmp_64_fu_3082_p4;
wire   [2:0] mul_ln1345_61_fu_3096_p0;
wire  signed [2:0] mul_ln1345_61_fu_3096_p1;
wire  signed [5:0] sext_ln1345_61_fu_3092_p1;
wire   [2:0] tmp_65_fu_3102_p4;
wire   [2:0] mul_ln1345_62_fu_3116_p0;
wire  signed [2:0] mul_ln1345_62_fu_3116_p1;
wire  signed [5:0] sext_ln1345_62_fu_3112_p1;
wire   [2:0] tmp_66_fu_3122_p4;
wire   [2:0] mul_ln1345_63_fu_3136_p0;
wire  signed [2:0] mul_ln1345_63_fu_3136_p1;
wire  signed [5:0] sext_ln1345_63_fu_3132_p1;
wire   [2:0] tmp_67_fu_3142_p4;
wire   [2:0] mul_ln1345_64_fu_3156_p0;
wire  signed [2:0] mul_ln1345_64_fu_3156_p1;
wire  signed [5:0] sext_ln1345_64_fu_3152_p1;
wire   [2:0] tmp_68_fu_3162_p4;
wire   [2:0] mul_ln1345_65_fu_3176_p0;
wire  signed [2:0] mul_ln1345_65_fu_3176_p1;
wire  signed [5:0] sext_ln1345_65_fu_3172_p1;
wire   [2:0] tmp_70_fu_3192_p4;
wire   [2:0] mul_ln1345_67_fu_3206_p0;
wire  signed [2:0] mul_ln1345_67_fu_3206_p1;
wire  signed [5:0] sext_ln1345_67_fu_3202_p1;
wire   [2:0] tmp_74_fu_3242_p4;
wire   [2:0] mul_ln1345_71_fu_3256_p0;
wire  signed [2:0] mul_ln1345_71_fu_3256_p1;
wire  signed [5:0] sext_ln1345_71_fu_3252_p1;
wire   [2:0] tmp_75_fu_3262_p4;
wire  signed [2:0] mul_ln1345_72_fu_3276_p0;
wire  signed [5:0] sext_ln1345_72_fu_3272_p1;
wire   [2:0] mul_ln1345_72_fu_3276_p1;
wire   [2:0] tmp_77_fu_3282_p4;
wire   [2:0] mul_ln1345_73_fu_3296_p0;
wire  signed [2:0] mul_ln1345_73_fu_3296_p1;
wire  signed [5:0] sext_ln1345_73_fu_3292_p1;
wire   [2:0] tmp_78_fu_3302_p4;
wire   [2:0] mul_ln1345_74_fu_3316_p0;
wire  signed [2:0] mul_ln1345_74_fu_3316_p1;
wire  signed [5:0] sext_ln1345_74_fu_3312_p1;
wire  signed [2:0] tmp_79_fu_3322_p4;
wire   [2:0] mul_ln1345_75_fu_3336_p0;
wire  signed [2:0] tmp_80_fu_3342_p4;
wire   [2:0] mul_ln1345_76_fu_3356_p0;
wire  signed [2:0] tmp_81_fu_3362_p4;
wire   [2:0] mul_ln1345_77_fu_3376_p0;
wire  signed [2:0] tmp_82_fu_3382_p4;
wire   [2:0] mul_ln1345_78_fu_3396_p0;
wire  signed [2:0] tmp_83_fu_3402_p4;
wire   [2:0] mul_ln1345_79_fu_3416_p0;
wire  signed [2:0] tmp_84_fu_3422_p4;
wire   [2:0] mul_ln1345_80_fu_3436_p0;
wire  signed [2:0] tmp_85_fu_3442_p4;
wire   [2:0] mul_ln1345_81_fu_3456_p0;
wire  signed [2:0] tmp_86_fu_3462_p4;
wire   [2:0] mul_ln1345_82_fu_3476_p0;
wire  signed [2:0] tmp_87_fu_3482_p4;
wire   [2:0] mul_ln1345_83_fu_3496_p0;
wire  signed [2:0] tmp_89_fu_3512_p4;
wire   [2:0] mul_ln1345_85_fu_3526_p0;
wire  signed [2:0] tmp_90_fu_3532_p4;
wire   [2:0] mul_ln1345_86_fu_3546_p0;
wire  signed [2:0] tmp_91_fu_3552_p4;
wire   [2:0] mul_ln1345_87_fu_3566_p0;
wire  signed [2:0] tmp_92_fu_3572_p4;
wire   [2:0] mul_ln1345_88_fu_3586_p0;
wire  signed [2:0] tmp_93_fu_3592_p4;
wire   [2:0] mul_ln1345_89_fu_3606_p0;
wire  signed [2:0] tmp_95_fu_3622_p4;
wire   [2:0] mul_ln1345_91_fu_3636_p0;
wire  signed [2:0] tmp_99_fu_3672_p4;
wire   [2:0] mul_ln1345_95_fu_3686_p0;
wire  signed [2:0] tmp_100_fu_3692_p4;
wire   [2:0] mul_ln1345_96_fu_3706_p1;
wire  signed [2:0] tmp_102_fu_3712_p4;
wire   [2:0] mul_ln1345_97_fu_3726_p0;
wire  signed [2:0] tmp_103_fu_3732_p4;
wire   [2:0] mul_ln1345_98_fu_3746_p0;
wire  signed [2:0] tmp_104_fu_3752_p4;
wire   [2:0] mul_ln1345_99_fu_3766_p0;
wire  signed [2:0] tmp_105_fu_3772_p4;
wire   [2:0] mul_ln1345_100_fu_3786_p0;
wire  signed [2:0] tmp_106_fu_3792_p4;
wire   [2:0] mul_ln1345_101_fu_3806_p0;
wire  signed [2:0] tmp_107_fu_3812_p4;
wire   [2:0] mul_ln1345_102_fu_3826_p0;
wire  signed [2:0] tmp_108_fu_3832_p4;
wire   [2:0] mul_ln1345_103_fu_3846_p0;
wire  signed [2:0] tmp_109_fu_3852_p4;
wire   [2:0] mul_ln1345_104_fu_3866_p0;
wire  signed [2:0] tmp_110_fu_3872_p4;
wire   [2:0] mul_ln1345_105_fu_3886_p0;
wire  signed [2:0] tmp_111_fu_3892_p4;
wire   [2:0] mul_ln1345_106_fu_3906_p0;
wire  signed [2:0] tmp_112_fu_3912_p4;
wire   [2:0] mul_ln1345_107_fu_3926_p0;
wire  signed [2:0] tmp_114_fu_3942_p4;
wire   [2:0] mul_ln1345_109_fu_3956_p0;
wire  signed [2:0] tmp_115_fu_3962_p4;
wire   [2:0] mul_ln1345_110_fu_3976_p0;
wire  signed [2:0] tmp_116_fu_3982_p4;
wire   [2:0] mul_ln1345_111_fu_3996_p0;
wire  signed [2:0] tmp_117_fu_4002_p4;
wire   [2:0] mul_ln1345_112_fu_4016_p0;
wire  signed [2:0] tmp_118_fu_4022_p4;
wire   [2:0] mul_ln1345_113_fu_4036_p0;
wire  signed [2:0] tmp_120_fu_4052_p4;
wire   [2:0] mul_ln1345_115_fu_4066_p0;
wire  signed [2:0] tmp_124_fu_4102_p4;
wire   [2:0] mul_ln1345_119_fu_4116_p0;
wire  signed [2:0] tmp_125_fu_4122_p4;
wire   [2:0] mul_ln1345_120_fu_4136_p1;
wire  signed [2:0] tmp_127_fu_4142_p4;
wire   [2:0] mul_ln1345_121_fu_4156_p0;
wire  signed [2:0] tmp_128_fu_4162_p4;
wire   [2:0] mul_ln1345_122_fu_4176_p0;
wire  signed [2:0] tmp_129_fu_4182_p4;
wire   [2:0] mul_ln1345_123_fu_4196_p0;
wire  signed [2:0] tmp_130_fu_4202_p4;
wire   [2:0] mul_ln1345_124_fu_4216_p0;
wire  signed [2:0] tmp_131_fu_4222_p4;
wire   [2:0] mul_ln1345_125_fu_4236_p0;
wire  signed [2:0] tmp_132_fu_4242_p4;
wire   [2:0] mul_ln1345_126_fu_4256_p0;
wire  signed [2:0] tmp_133_fu_4262_p4;
wire   [2:0] mul_ln1345_127_fu_4276_p0;
wire  signed [2:0] tmp_134_fu_4282_p4;
wire   [2:0] mul_ln1345_128_fu_4296_p0;
wire  signed [2:0] tmp_135_fu_4302_p4;
wire   [2:0] mul_ln1345_129_fu_4316_p0;
wire  signed [2:0] tmp_136_fu_4322_p4;
wire   [2:0] mul_ln1345_130_fu_4336_p0;
wire  signed [2:0] tmp_137_fu_4342_p4;
wire   [2:0] mul_ln1345_131_fu_4356_p0;
wire  signed [2:0] tmp_139_fu_4372_p4;
wire   [2:0] mul_ln1345_133_fu_4386_p0;
wire  signed [2:0] tmp_140_fu_4392_p4;
wire   [2:0] mul_ln1345_134_fu_4406_p0;
wire  signed [2:0] tmp_141_fu_4412_p4;
wire   [2:0] mul_ln1345_135_fu_4426_p0;
wire  signed [2:0] tmp_142_fu_4432_p4;
wire   [2:0] mul_ln1345_136_fu_4446_p0;
wire  signed [2:0] tmp_143_fu_4452_p4;
wire   [2:0] mul_ln1345_137_fu_4466_p0;
wire  signed [2:0] tmp_145_fu_4482_p4;
wire   [2:0] mul_ln1345_139_fu_4496_p0;
wire  signed [2:0] tmp_149_fu_4532_p4;
wire   [2:0] mul_ln1345_143_fu_4546_p0;
wire  signed [2:0] tmp_150_fu_4552_p4;
wire   [2:0] mul_ln1345_144_fu_4566_p1;
wire  signed [2:0] tmp_152_fu_4572_p4;
wire   [2:0] mul_ln1345_145_fu_4586_p0;
wire  signed [2:0] tmp_153_fu_4592_p4;
wire   [2:0] mul_ln1345_146_fu_4606_p0;
wire  signed [2:0] tmp_154_fu_4612_p4;
wire   [2:0] mul_ln1345_147_fu_4626_p0;
wire  signed [2:0] tmp_155_fu_4632_p4;
wire   [2:0] mul_ln1345_148_fu_4646_p0;
wire  signed [2:0] tmp_156_fu_4652_p4;
wire   [2:0] mul_ln1345_149_fu_4666_p0;
wire  signed [2:0] tmp_157_fu_4672_p4;
wire   [2:0] mul_ln1345_150_fu_4686_p0;
wire  signed [2:0] tmp_158_fu_4692_p4;
wire   [2:0] mul_ln1345_151_fu_4706_p0;
wire  signed [2:0] tmp_159_fu_4712_p4;
wire   [2:0] mul_ln1345_152_fu_4726_p0;
wire  signed [2:0] tmp_160_fu_4732_p4;
wire   [2:0] mul_ln1345_153_fu_4746_p0;
wire  signed [2:0] tmp_161_fu_4752_p4;
wire   [2:0] mul_ln1345_154_fu_4766_p0;
wire  signed [2:0] tmp_162_fu_4772_p4;
wire   [2:0] mul_ln1345_155_fu_4786_p0;
wire  signed [2:0] tmp_164_fu_4802_p4;
wire   [2:0] mul_ln1345_157_fu_4816_p0;
wire  signed [2:0] tmp_165_fu_4822_p4;
wire   [2:0] mul_ln1345_158_fu_4836_p0;
wire  signed [2:0] tmp_166_fu_4842_p4;
wire   [2:0] mul_ln1345_159_fu_4856_p0;
wire  signed [2:0] tmp_167_fu_4862_p4;
wire   [2:0] mul_ln1345_160_fu_4876_p0;
wire  signed [2:0] tmp_168_fu_4882_p4;
wire   [2:0] mul_ln1345_161_fu_4896_p0;
wire  signed [2:0] tmp_170_fu_4912_p4;
wire   [2:0] mul_ln1345_163_fu_4926_p0;
wire  signed [2:0] tmp_174_fu_4962_p4;
wire   [2:0] mul_ln1345_167_fu_4976_p0;
wire  signed [2:0] tmp_175_fu_4982_p4;
wire   [2:0] mul_ln1345_168_fu_4996_p1;
wire  signed [2:0] tmp_177_fu_5002_p4;
wire   [2:0] mul_ln1345_169_fu_5016_p0;
wire  signed [2:0] tmp_178_fu_5022_p4;
wire   [2:0] mul_ln1345_170_fu_5036_p0;
wire  signed [2:0] tmp_179_fu_5042_p4;
wire   [2:0] mul_ln1345_171_fu_5056_p0;
wire  signed [2:0] tmp_180_fu_5062_p4;
wire   [2:0] mul_ln1345_172_fu_5076_p0;
wire  signed [2:0] tmp_181_fu_5082_p4;
wire   [2:0] mul_ln1345_173_fu_5096_p0;
wire  signed [2:0] tmp_182_fu_5102_p4;
wire   [2:0] mul_ln1345_174_fu_5116_p0;
wire  signed [2:0] tmp_183_fu_5122_p4;
wire   [2:0] mul_ln1345_175_fu_5136_p0;
wire  signed [2:0] tmp_184_fu_5142_p4;
wire   [2:0] mul_ln1345_176_fu_5156_p0;
wire  signed [2:0] tmp_185_fu_5162_p4;
wire   [2:0] mul_ln1345_177_fu_5176_p0;
wire  signed [2:0] tmp_186_fu_5182_p4;
wire   [2:0] mul_ln1345_178_fu_5196_p0;
wire  signed [2:0] tmp_187_fu_5202_p4;
wire   [2:0] mul_ln1345_179_fu_5216_p0;
wire  signed [2:0] tmp_189_fu_5232_p4;
wire   [2:0] mul_ln1345_181_fu_5246_p0;
wire  signed [2:0] tmp_190_fu_5252_p4;
wire   [2:0] mul_ln1345_182_fu_5266_p0;
wire  signed [2:0] tmp_191_fu_5272_p4;
wire   [2:0] mul_ln1345_183_fu_5286_p0;
wire  signed [2:0] tmp_192_fu_5292_p4;
wire   [2:0] mul_ln1345_184_fu_5306_p0;
wire  signed [2:0] tmp_193_fu_5312_p4;
wire   [2:0] mul_ln1345_185_fu_5326_p0;
wire  signed [2:0] tmp_195_fu_5342_p4;
wire   [2:0] mul_ln1345_187_fu_5356_p0;
wire  signed [2:0] tmp_199_fu_5392_p4;
wire   [2:0] mul_ln1345_191_fu_5406_p0;
wire  signed [2:0] tmp_200_fu_5412_p4;
wire   [2:0] mul_ln1345_192_fu_5426_p1;
wire  signed [2:0] tmp_202_fu_5432_p4;
wire   [2:0] mul_ln1345_193_fu_5446_p0;
wire  signed [2:0] tmp_203_fu_5452_p4;
wire   [2:0] mul_ln1345_194_fu_5466_p0;
wire  signed [2:0] tmp_204_fu_5472_p4;
wire   [2:0] mul_ln1345_195_fu_5486_p0;
wire  signed [2:0] tmp_205_fu_5492_p4;
wire   [2:0] mul_ln1345_196_fu_5506_p0;
wire  signed [2:0] tmp_206_fu_5512_p4;
wire   [2:0] mul_ln1345_197_fu_5526_p0;
wire  signed [2:0] tmp_207_fu_5532_p4;
wire   [2:0] mul_ln1345_198_fu_5546_p0;
wire  signed [2:0] tmp_208_fu_5552_p4;
wire   [2:0] mul_ln1345_199_fu_5566_p0;
wire  signed [2:0] tmp_209_fu_5572_p4;
wire   [2:0] mul_ln1345_200_fu_5586_p0;
wire  signed [2:0] tmp_210_fu_5592_p4;
wire   [2:0] mul_ln1345_201_fu_5606_p0;
wire  signed [2:0] tmp_211_fu_5612_p4;
wire   [2:0] mul_ln1345_202_fu_5626_p0;
wire  signed [2:0] tmp_212_fu_5632_p4;
wire   [2:0] mul_ln1345_203_fu_5646_p0;
wire  signed [2:0] tmp_214_fu_5662_p4;
wire   [2:0] mul_ln1345_205_fu_5676_p0;
wire  signed [2:0] tmp_215_fu_5682_p4;
wire   [2:0] mul_ln1345_206_fu_5696_p0;
wire  signed [2:0] tmp_216_fu_5702_p4;
wire   [2:0] mul_ln1345_207_fu_5716_p0;
wire  signed [2:0] tmp_217_fu_5722_p4;
wire   [2:0] mul_ln1345_208_fu_5736_p0;
wire  signed [2:0] tmp_218_fu_5742_p4;
wire   [2:0] mul_ln1345_209_fu_5756_p0;
wire  signed [2:0] tmp_220_fu_5772_p4;
wire   [2:0] mul_ln1345_211_fu_5786_p0;
wire  signed [2:0] tmp_224_fu_5822_p4;
wire   [2:0] mul_ln1345_215_fu_5836_p0;
wire  signed [2:0] tmp_225_fu_5842_p4;
wire   [2:0] mul_ln1345_216_fu_5856_p1;
wire  signed [2:0] tmp_227_fu_5862_p4;
wire   [2:0] mul_ln1345_217_fu_5876_p0;
wire  signed [2:0] tmp_228_fu_5882_p4;
wire   [2:0] mul_ln1345_218_fu_5896_p0;
wire  signed [2:0] tmp_229_fu_5902_p4;
wire   [2:0] mul_ln1345_219_fu_5916_p0;
wire  signed [2:0] tmp_230_fu_5922_p4;
wire   [2:0] mul_ln1345_220_fu_5936_p0;
wire  signed [2:0] tmp_231_fu_5942_p4;
wire   [2:0] mul_ln1345_221_fu_5956_p0;
wire  signed [2:0] tmp_232_fu_5962_p4;
wire   [2:0] mul_ln1345_222_fu_5976_p0;
wire  signed [2:0] tmp_233_fu_5982_p4;
wire   [2:0] mul_ln1345_223_fu_5996_p0;
wire  signed [2:0] tmp_234_fu_6002_p4;
wire   [2:0] mul_ln1345_224_fu_6016_p0;
wire  signed [2:0] tmp_235_fu_6022_p4;
wire   [2:0] mul_ln1345_225_fu_6036_p0;
wire  signed [2:0] tmp_236_fu_6042_p4;
wire   [2:0] mul_ln1345_226_fu_6056_p0;
wire  signed [2:0] tmp_237_fu_6062_p4;
wire   [2:0] mul_ln1345_227_fu_6076_p0;
wire  signed [2:0] tmp_239_fu_6092_p4;
wire   [2:0] mul_ln1345_229_fu_6106_p0;
wire  signed [2:0] tmp_240_fu_6112_p4;
wire   [2:0] mul_ln1345_230_fu_6126_p0;
wire  signed [2:0] tmp_241_fu_6132_p4;
wire   [2:0] mul_ln1345_231_fu_6146_p0;
wire  signed [2:0] tmp_242_fu_6152_p4;
wire   [2:0] mul_ln1345_232_fu_6166_p0;
wire  signed [2:0] tmp_243_fu_6172_p4;
wire   [2:0] mul_ln1345_233_fu_6186_p0;
wire  signed [2:0] tmp_245_fu_6202_p4;
wire   [2:0] mul_ln1345_235_fu_6216_p0;
wire  signed [2:0] tmp_249_fu_6252_p4;
wire   [2:0] mul_ln1345_239_fu_6266_p0;
wire  signed [2:0] tmp_250_fu_6272_p4;
wire   [2:0] mul_ln1345_240_fu_6286_p1;
wire  signed [2:0] tmp_252_fu_6292_p4;
wire   [2:0] mul_ln1345_241_fu_6306_p0;
wire  signed [2:0] tmp_253_fu_6312_p4;
wire   [2:0] mul_ln1345_242_fu_6326_p0;
wire  signed [2:0] tmp_254_fu_6332_p4;
wire   [2:0] mul_ln1345_243_fu_6346_p0;
wire  signed [2:0] tmp_255_fu_6352_p4;
wire   [2:0] mul_ln1345_244_fu_6366_p0;
wire  signed [2:0] tmp_256_fu_6372_p4;
wire   [2:0] mul_ln1345_245_fu_6386_p0;
wire  signed [2:0] tmp_257_fu_6392_p4;
wire   [2:0] mul_ln1345_246_fu_6406_p0;
wire  signed [2:0] tmp_258_fu_6412_p4;
wire   [2:0] mul_ln1345_247_fu_6426_p0;
wire  signed [2:0] tmp_259_fu_6432_p4;
wire   [2:0] mul_ln1345_248_fu_6446_p0;
wire  signed [2:0] tmp_260_fu_6452_p4;
wire   [2:0] mul_ln1345_249_fu_6466_p0;
wire  signed [2:0] tmp_261_fu_6472_p4;
wire   [2:0] mul_ln1345_250_fu_6486_p0;
wire  signed [2:0] tmp_262_fu_6492_p4;
wire   [2:0] mul_ln1345_251_fu_6506_p0;
wire  signed [2:0] tmp_264_fu_6522_p4;
wire   [2:0] mul_ln1345_253_fu_6536_p0;
wire  signed [2:0] tmp_265_fu_6542_p4;
wire   [2:0] mul_ln1345_254_fu_6556_p0;
wire  signed [2:0] tmp_266_fu_6562_p4;
wire   [2:0] mul_ln1345_255_fu_6576_p0;
wire  signed [2:0] tmp_267_fu_6582_p4;
wire   [2:0] mul_ln1345_256_fu_6596_p0;
wire  signed [2:0] tmp_268_fu_6602_p4;
wire   [2:0] mul_ln1345_257_fu_6616_p0;
wire  signed [2:0] tmp_270_fu_6632_p4;
wire   [2:0] mul_ln1345_259_fu_6646_p0;
wire  signed [2:0] tmp_274_fu_6682_p4;
wire   [2:0] mul_ln1345_263_fu_6696_p0;
wire  signed [2:0] tmp_275_fu_6702_p4;
wire   [2:0] mul_ln1345_264_fu_6716_p1;
wire  signed [2:0] tmp_277_fu_6722_p4;
wire   [2:0] mul_ln1345_265_fu_6736_p0;
wire  signed [2:0] tmp_278_fu_6742_p4;
wire   [2:0] mul_ln1345_266_fu_6756_p0;
wire  signed [2:0] tmp_279_fu_6762_p4;
wire   [2:0] mul_ln1345_267_fu_6776_p0;
wire  signed [2:0] tmp_280_fu_6782_p4;
wire   [2:0] mul_ln1345_268_fu_6796_p0;
wire  signed [2:0] tmp_281_fu_6802_p4;
wire   [2:0] mul_ln1345_269_fu_6816_p0;
wire  signed [2:0] tmp_282_fu_6822_p4;
wire   [2:0] mul_ln1345_270_fu_6836_p0;
wire  signed [2:0] tmp_283_fu_6842_p4;
wire   [2:0] mul_ln1345_271_fu_6856_p0;
wire  signed [2:0] tmp_284_fu_6862_p4;
wire   [2:0] mul_ln1345_272_fu_6876_p0;
wire  signed [2:0] tmp_285_fu_6882_p4;
wire   [2:0] mul_ln1345_273_fu_6896_p0;
wire  signed [2:0] tmp_286_fu_6902_p4;
wire   [2:0] mul_ln1345_274_fu_6916_p0;
wire  signed [2:0] tmp_287_fu_6922_p4;
wire   [2:0] mul_ln1345_275_fu_6936_p0;
wire  signed [2:0] tmp_289_fu_6952_p4;
wire   [2:0] mul_ln1345_277_fu_6966_p0;
wire  signed [2:0] tmp_290_fu_6972_p4;
wire   [2:0] mul_ln1345_278_fu_6986_p0;
wire  signed [2:0] tmp_291_fu_6992_p4;
wire   [2:0] mul_ln1345_279_fu_7006_p0;
wire  signed [2:0] tmp_292_fu_7012_p4;
wire   [2:0] mul_ln1345_280_fu_7026_p0;
wire  signed [2:0] tmp_293_fu_7032_p4;
wire   [2:0] mul_ln1345_281_fu_7046_p0;
wire  signed [2:0] tmp_295_fu_7062_p4;
wire   [2:0] mul_ln1345_283_fu_7076_p0;
wire  signed [2:0] tmp_299_fu_7112_p4;
wire   [2:0] mul_ln1345_287_fu_7126_p0;
wire   [2:0] tmp_336_fu_7132_p4;
wire   [2:0] mul_ln1345_288_fu_7146_p0;
wire  signed [2:0] mul_ln1345_288_fu_7146_p1;
wire   [2:0] tmp_337_fu_7152_p4;
wire   [2:0] mul_ln1345_289_fu_7166_p0;
wire  signed [2:0] mul_ln1345_289_fu_7166_p1;
wire   [2:0] tmp_338_fu_7172_p4;
wire   [2:0] mul_ln1345_290_fu_7186_p0;
wire  signed [2:0] mul_ln1345_290_fu_7186_p1;
wire   [2:0] tmp_339_fu_7192_p4;
wire   [2:0] mul_ln1345_291_fu_7206_p0;
wire  signed [2:0] mul_ln1345_291_fu_7206_p1;
wire   [2:0] tmp_340_fu_7212_p4;
wire   [2:0] mul_ln1345_292_fu_7226_p0;
wire  signed [2:0] mul_ln1345_292_fu_7226_p1;
wire   [2:0] tmp_341_fu_7232_p4;
wire   [2:0] mul_ln1345_293_fu_7246_p0;
wire  signed [2:0] mul_ln1345_293_fu_7246_p1;
wire   [2:0] tmp_342_fu_7252_p4;
wire   [2:0] mul_ln1345_294_fu_7266_p0;
wire  signed [2:0] mul_ln1345_294_fu_7266_p1;
wire   [2:0] tmp_343_fu_7272_p4;
wire   [2:0] mul_ln1345_295_fu_7286_p0;
wire  signed [2:0] mul_ln1345_295_fu_7286_p1;
wire   [2:0] tmp_344_fu_7292_p4;
wire   [2:0] mul_ln1345_296_fu_7306_p0;
wire  signed [2:0] mul_ln1345_296_fu_7306_p1;
wire   [2:0] tmp_345_fu_7312_p4;
wire   [2:0] mul_ln1345_297_fu_7326_p0;
wire  signed [2:0] mul_ln1345_297_fu_7326_p1;
wire   [2:0] tmp_346_fu_7332_p4;
wire   [2:0] mul_ln1345_298_fu_7346_p0;
wire  signed [2:0] mul_ln1345_298_fu_7346_p1;
wire   [2:0] tmp_347_fu_7352_p4;
wire   [2:0] mul_ln1345_299_fu_7366_p0;
wire  signed [2:0] mul_ln1345_299_fu_7366_p1;
wire   [2:0] tmp_349_fu_7382_p4;
wire   [2:0] mul_ln1345_301_fu_7396_p0;
wire  signed [2:0] mul_ln1345_301_fu_7396_p1;
wire   [2:0] tmp_350_fu_7402_p4;
wire   [2:0] mul_ln1345_302_fu_7416_p0;
wire  signed [2:0] mul_ln1345_302_fu_7416_p1;
wire   [2:0] tmp_351_fu_7422_p4;
wire   [2:0] mul_ln1345_303_fu_7436_p0;
wire  signed [2:0] mul_ln1345_303_fu_7436_p1;
wire   [2:0] tmp_352_fu_7442_p4;
wire   [2:0] mul_ln1345_304_fu_7456_p0;
wire  signed [2:0] mul_ln1345_304_fu_7456_p1;
wire   [2:0] tmp_353_fu_7462_p4;
wire   [2:0] mul_ln1345_305_fu_7476_p0;
wire  signed [2:0] mul_ln1345_305_fu_7476_p1;
wire   [2:0] tmp_355_fu_7492_p4;
wire   [2:0] mul_ln1345_307_fu_7506_p0;
wire  signed [2:0] mul_ln1345_307_fu_7506_p1;
wire   [2:0] tmp_359_fu_7542_p4;
wire   [2:0] mul_ln1345_311_fu_7556_p0;
wire  signed [2:0] mul_ln1345_311_fu_7556_p1;
wire   [2:0] mul_ln1345_312_fu_7562_p0;
wire  signed [2:0] mul_ln1345_312_fu_7562_p1;
wire   [2:0] mul_ln1345_313_fu_7568_p0;
wire  signed [2:0] mul_ln1345_313_fu_7568_p1;
wire   [2:0] mul_ln1345_314_fu_7574_p0;
wire  signed [2:0] mul_ln1345_314_fu_7574_p1;
wire   [2:0] mul_ln1345_315_fu_7580_p0;
wire  signed [2:0] mul_ln1345_315_fu_7580_p1;
wire   [2:0] mul_ln1345_316_fu_7586_p0;
wire  signed [2:0] mul_ln1345_316_fu_7586_p1;
wire   [2:0] mul_ln1345_317_fu_7592_p0;
wire  signed [2:0] mul_ln1345_317_fu_7592_p1;
wire   [2:0] mul_ln1345_318_fu_7598_p0;
wire  signed [2:0] mul_ln1345_318_fu_7598_p1;
wire   [2:0] mul_ln1345_319_fu_7604_p0;
wire  signed [2:0] mul_ln1345_319_fu_7604_p1;
wire   [2:0] mul_ln1345_320_fu_7610_p0;
wire  signed [2:0] mul_ln1345_320_fu_7610_p1;
wire   [2:0] mul_ln1345_321_fu_7616_p0;
wire  signed [2:0] mul_ln1345_321_fu_7616_p1;
wire   [2:0] mul_ln1345_322_fu_7622_p0;
wire  signed [2:0] mul_ln1345_322_fu_7622_p1;
wire   [2:0] mul_ln1345_323_fu_7628_p0;
wire  signed [2:0] mul_ln1345_323_fu_7628_p1;
wire   [2:0] mul_ln1345_325_fu_7634_p0;
wire  signed [2:0] mul_ln1345_325_fu_7634_p1;
wire   [2:0] mul_ln1345_326_fu_7640_p0;
wire  signed [2:0] mul_ln1345_326_fu_7640_p1;
wire   [2:0] mul_ln1345_327_fu_7646_p0;
wire  signed [2:0] mul_ln1345_327_fu_7646_p1;
wire   [2:0] mul_ln1345_328_fu_7652_p0;
wire  signed [2:0] mul_ln1345_328_fu_7652_p1;
wire   [2:0] mul_ln1345_329_fu_7658_p0;
wire  signed [2:0] mul_ln1345_329_fu_7658_p1;
wire   [2:0] mul_ln1345_331_fu_7664_p0;
wire  signed [2:0] mul_ln1345_331_fu_7664_p1;
wire   [2:0] mul_ln1345_335_fu_7670_p0;
wire  signed [2:0] mul_ln1345_335_fu_7670_p1;
wire   [2:0] mul_ln1345_336_fu_7676_p0;
wire  signed [2:0] mul_ln1345_336_fu_7676_p1;
wire   [2:0] mul_ln1345_337_fu_7682_p0;
wire  signed [2:0] mul_ln1345_337_fu_7682_p1;
wire   [2:0] mul_ln1345_338_fu_7688_p0;
wire  signed [2:0] mul_ln1345_338_fu_7688_p1;
wire   [2:0] mul_ln1345_339_fu_7694_p0;
wire  signed [2:0] mul_ln1345_339_fu_7694_p1;
wire   [2:0] mul_ln1345_340_fu_7700_p0;
wire  signed [2:0] mul_ln1345_340_fu_7700_p1;
wire   [2:0] mul_ln1345_341_fu_7706_p0;
wire  signed [2:0] mul_ln1345_341_fu_7706_p1;
wire   [2:0] mul_ln1345_342_fu_7712_p0;
wire  signed [2:0] mul_ln1345_342_fu_7712_p1;
wire   [2:0] mul_ln1345_343_fu_7718_p0;
wire  signed [2:0] mul_ln1345_343_fu_7718_p1;
wire   [2:0] mul_ln1345_344_fu_7724_p0;
wire  signed [2:0] mul_ln1345_344_fu_7724_p1;
wire   [2:0] mul_ln1345_345_fu_7730_p0;
wire  signed [2:0] mul_ln1345_345_fu_7730_p1;
wire   [2:0] mul_ln1345_346_fu_7736_p0;
wire  signed [2:0] mul_ln1345_346_fu_7736_p1;
wire   [2:0] mul_ln1345_347_fu_7742_p0;
wire  signed [2:0] mul_ln1345_347_fu_7742_p1;
wire   [2:0] mul_ln1345_349_fu_7748_p0;
wire  signed [2:0] mul_ln1345_349_fu_7748_p1;
wire   [2:0] mul_ln1345_350_fu_7754_p0;
wire  signed [2:0] mul_ln1345_350_fu_7754_p1;
wire   [2:0] mul_ln1345_351_fu_7760_p0;
wire  signed [2:0] mul_ln1345_351_fu_7760_p1;
wire   [2:0] mul_ln1345_352_fu_7766_p0;
wire  signed [2:0] mul_ln1345_352_fu_7766_p1;
wire   [2:0] mul_ln1345_353_fu_7772_p0;
wire  signed [2:0] mul_ln1345_353_fu_7772_p1;
wire   [2:0] mul_ln1345_355_fu_7778_p0;
wire  signed [2:0] mul_ln1345_355_fu_7778_p1;
wire   [2:0] mul_ln1345_359_fu_7784_p0;
wire  signed [2:0] mul_ln1345_359_fu_7784_p1;
wire   [2:0] mul_ln1345_360_fu_7790_p0;
wire  signed [2:0] mul_ln1345_360_fu_7790_p1;
wire   [2:0] mul_ln1345_361_fu_7796_p0;
wire  signed [2:0] mul_ln1345_361_fu_7796_p1;
wire   [2:0] mul_ln1345_362_fu_7802_p0;
wire  signed [2:0] mul_ln1345_362_fu_7802_p1;
wire   [2:0] mul_ln1345_12_fu_7850_p0;
wire   [5:0] zext_ln1345_12_fu_7844_p1;
wire  signed [2:0] mul_ln1345_12_fu_7850_p1;
wire  signed [5:0] sext_ln1345_12_fu_7847_p1;
wire  signed [5:0] mul_ln1345_12_fu_7850_p2;
wire   [2:0] mul_ln1345_18_fu_7881_p0;
wire   [5:0] zext_ln1345_18_fu_7875_p1;
wire  signed [2:0] mul_ln1345_18_fu_7881_p1;
wire  signed [5:0] sext_ln1345_18_fu_7878_p1;
wire  signed [5:0] mul_ln1345_18_fu_7881_p2;
wire   [2:0] mul_ln1345_20_fu_7900_p0;
wire   [5:0] zext_ln1345_20_fu_7894_p1;
wire  signed [2:0] mul_ln1345_20_fu_7900_p1;
wire  signed [5:0] sext_ln1345_20_fu_7897_p1;
wire  signed [5:0] mul_ln1345_20_fu_7900_p2;
wire   [2:0] mul_ln1345_21_fu_7916_p0;
wire   [5:0] zext_ln1345_21_fu_7910_p1;
wire  signed [2:0] mul_ln1345_21_fu_7916_p1;
wire  signed [5:0] sext_ln1345_21_fu_7913_p1;
wire  signed [5:0] mul_ln1345_21_fu_7916_p2;
wire   [2:0] mul_ln1345_22_fu_7932_p0;
wire   [5:0] zext_ln1345_22_fu_7926_p1;
wire  signed [2:0] mul_ln1345_22_fu_7932_p1;
wire  signed [5:0] sext_ln1345_22_fu_7929_p1;
wire  signed [5:0] mul_ln1345_22_fu_7932_p2;
wire  signed [6:0] sext_ln151_20_fu_7922_p1;
wire  signed [6:0] sext_ln151_21_fu_7938_p1;
wire  signed [6:0] sext_ln151_16_fu_7872_p1;
wire  signed [6:0] sext_ln151_18_fu_7891_p1;
wire   [6:0] add_ln691_2_fu_7951_p2;
wire  signed [7:0] sext_ln691_3_fu_7957_p1;
wire  signed [7:0] sext_ln151_19_fu_7906_p1;
wire  signed [6:0] sext_ln151_10_fu_7841_p1;
wire  signed [6:0] sext_ln151_12_fu_7860_p1;
wire   [6:0] add_ln691_5_fu_7967_p2;
wire  signed [7:0] sext_ln691_5_fu_7973_p1;
wire  signed [7:0] sext_ln151_17_fu_7887_p1;
wire  signed [6:0] sext_ln151_13_fu_7863_p1;
wire  signed [6:0] sext_ln151_15_fu_7869_p1;
wire   [6:0] add_ln691_7_fu_7983_p2;
wire  signed [7:0] sext_ln691_7_fu_7989_p1;
wire  signed [7:0] sext_ln151_11_fu_7856_p1;
wire  signed [6:0] sext_ln151_fu_7811_p1;
wire  signed [6:0] sext_ln691_fu_7808_p1;
wire   [6:0] add_ln691_11_fu_7999_p2;
wire  signed [7:0] sext_ln691_10_fu_8005_p1;
wire  signed [7:0] sext_ln151_14_fu_7866_p1;
wire  signed [6:0] sext_ln151_3_fu_7820_p1;
wire  signed [6:0] sext_ln151_2_fu_7817_p1;
wire   [6:0] add_ln691_13_fu_8015_p2;
wire  signed [7:0] sext_ln691_12_fu_8021_p1;
wire  signed [7:0] sext_ln151_1_fu_7814_p1;
wire  signed [6:0] sext_ln151_6_fu_7829_p1;
wire  signed [6:0] sext_ln151_5_fu_7826_p1;
wire   [6:0] add_ln691_16_fu_8031_p2;
wire  signed [7:0] sext_ln691_15_fu_8037_p1;
wire  signed [7:0] sext_ln151_4_fu_7823_p1;
wire  signed [6:0] sext_ln151_7_fu_7832_p1;
wire  signed [6:0] sext_ln151_9_fu_7838_p1;
wire   [6:0] add_ln691_18_fu_8047_p2;
wire  signed [6:0] sext_ln151_8_fu_7835_p1;
wire  signed [6:0] sext_ln691_1_fu_7942_p1;
wire   [6:0] add_ln691_19_fu_8057_p2;
wire  signed [7:0] sext_ln691_18_fu_8063_p1;
wire  signed [7:0] sext_ln691_17_fu_8053_p1;
wire   [2:0] mul_ln1345_36_fu_8112_p0;
wire  signed [2:0] mul_ln1345_36_fu_8112_p1;
wire  signed [5:0] sext_ln1345_36_fu_8109_p1;
wire  signed [5:0] mul_ln1345_36_fu_8112_p2;
wire   [2:0] mul_ln1345_42_fu_8140_p0;
wire  signed [2:0] mul_ln1345_42_fu_8140_p1;
wire  signed [5:0] sext_ln1345_42_fu_8137_p1;
wire  signed [5:0] mul_ln1345_42_fu_8140_p2;
wire   [2:0] mul_ln1345_44_fu_8156_p0;
wire  signed [2:0] mul_ln1345_44_fu_8156_p1;
wire  signed [5:0] sext_ln1345_44_fu_8153_p1;
wire  signed [5:0] mul_ln1345_44_fu_8156_p2;
wire   [2:0] mul_ln1345_45_fu_8169_p0;
wire  signed [2:0] mul_ln1345_45_fu_8169_p1;
wire  signed [5:0] sext_ln1345_45_fu_8166_p1;
wire  signed [5:0] mul_ln1345_45_fu_8169_p2;
wire   [2:0] mul_ln1345_46_fu_8182_p0;
wire  signed [2:0] mul_ln1345_46_fu_8182_p1;
wire  signed [5:0] sext_ln1345_46_fu_8179_p1;
wire  signed [5:0] mul_ln1345_46_fu_8182_p2;
wire  signed [6:0] sext_ln151_42_fu_8175_p1;
wire  signed [6:0] sext_ln151_43_fu_8188_p1;
wire  signed [6:0] sext_ln151_38_fu_8134_p1;
wire  signed [6:0] sext_ln151_40_fu_8150_p1;
wire   [6:0] add_ln691_26_fu_8201_p2;
wire  signed [7:0] sext_ln691_25_fu_8207_p1;
wire  signed [7:0] sext_ln151_41_fu_8162_p1;
wire  signed [6:0] sext_ln151_32_fu_8106_p1;
wire  signed [6:0] sext_ln151_34_fu_8122_p1;
wire   [6:0] add_ln691_29_fu_8217_p2;
wire  signed [7:0] sext_ln691_27_fu_8223_p1;
wire  signed [7:0] sext_ln151_39_fu_8146_p1;
wire  signed [6:0] sext_ln151_35_fu_8125_p1;
wire  signed [6:0] sext_ln151_37_fu_8131_p1;
wire   [6:0] add_ln691_31_fu_8233_p2;
wire  signed [7:0] sext_ln691_29_fu_8239_p1;
wire  signed [7:0] sext_ln151_33_fu_8118_p1;
wire  signed [6:0] sext_ln151_22_fu_8076_p1;
wire  signed [6:0] sext_ln691_22_fu_8073_p1;
wire   [6:0] add_ln691_35_fu_8249_p2;
wire  signed [7:0] sext_ln691_32_fu_8255_p1;
wire  signed [7:0] sext_ln151_36_fu_8128_p1;
wire  signed [6:0] sext_ln151_25_fu_8085_p1;
wire  signed [6:0] sext_ln151_24_fu_8082_p1;
wire   [6:0] add_ln691_37_fu_8265_p2;
wire  signed [7:0] sext_ln691_34_fu_8271_p1;
wire  signed [7:0] sext_ln151_23_fu_8079_p1;
wire  signed [6:0] sext_ln151_28_fu_8094_p1;
wire  signed [6:0] sext_ln151_27_fu_8091_p1;
wire   [6:0] add_ln691_40_fu_8281_p2;
wire  signed [7:0] sext_ln691_37_fu_8287_p1;
wire  signed [7:0] sext_ln151_26_fu_8088_p1;
wire  signed [6:0] sext_ln151_29_fu_8097_p1;
wire  signed [6:0] sext_ln151_31_fu_8103_p1;
wire   [6:0] add_ln691_42_fu_8297_p2;
wire  signed [6:0] sext_ln151_30_fu_8100_p1;
wire  signed [6:0] sext_ln691_23_fu_8192_p1;
wire   [6:0] add_ln691_43_fu_8307_p2;
wire  signed [7:0] sext_ln691_40_fu_8313_p1;
wire  signed [7:0] sext_ln691_39_fu_8303_p1;
wire   [2:0] mul_ln1345_60_fu_8362_p0;
wire  signed [2:0] mul_ln1345_60_fu_8362_p1;
wire  signed [5:0] sext_ln1345_60_fu_8359_p1;
wire  signed [5:0] mul_ln1345_60_fu_8362_p2;
wire   [2:0] mul_ln1345_66_fu_8390_p0;
wire  signed [2:0] mul_ln1345_66_fu_8390_p1;
wire  signed [5:0] sext_ln1345_66_fu_8387_p1;
wire  signed [5:0] mul_ln1345_66_fu_8390_p2;
wire   [2:0] mul_ln1345_68_fu_8406_p0;
wire  signed [2:0] mul_ln1345_68_fu_8406_p1;
wire  signed [5:0] sext_ln1345_68_fu_8403_p1;
wire  signed [5:0] mul_ln1345_68_fu_8406_p2;
wire   [2:0] mul_ln1345_69_fu_8419_p0;
wire  signed [2:0] mul_ln1345_69_fu_8419_p1;
wire  signed [5:0] sext_ln1345_69_fu_8416_p1;
wire  signed [5:0] mul_ln1345_69_fu_8419_p2;
wire   [2:0] mul_ln1345_70_fu_8432_p0;
wire  signed [2:0] mul_ln1345_70_fu_8432_p1;
wire  signed [5:0] sext_ln1345_70_fu_8429_p1;
wire  signed [5:0] mul_ln1345_70_fu_8432_p2;
wire  signed [6:0] sext_ln151_64_fu_8425_p1;
wire  signed [6:0] sext_ln151_65_fu_8438_p1;
wire  signed [6:0] sext_ln151_60_fu_8384_p1;
wire  signed [6:0] sext_ln151_62_fu_8400_p1;
wire   [6:0] add_ln691_50_fu_8451_p2;
wire  signed [7:0] sext_ln691_47_fu_8457_p1;
wire  signed [7:0] sext_ln151_63_fu_8412_p1;
wire  signed [6:0] sext_ln151_54_fu_8356_p1;
wire  signed [6:0] sext_ln151_56_fu_8372_p1;
wire   [6:0] add_ln691_53_fu_8467_p2;
wire  signed [7:0] sext_ln691_49_fu_8473_p1;
wire  signed [7:0] sext_ln151_61_fu_8396_p1;
wire  signed [6:0] sext_ln151_57_fu_8375_p1;
wire  signed [6:0] sext_ln151_59_fu_8381_p1;
wire   [6:0] add_ln691_55_fu_8483_p2;
wire  signed [7:0] sext_ln691_51_fu_8489_p1;
wire  signed [7:0] sext_ln151_55_fu_8368_p1;
wire  signed [6:0] sext_ln151_44_fu_8326_p1;
wire  signed [6:0] sext_ln691_44_fu_8323_p1;
wire   [6:0] add_ln691_59_fu_8499_p2;
wire  signed [7:0] sext_ln691_54_fu_8505_p1;
wire  signed [7:0] sext_ln151_58_fu_8378_p1;
wire  signed [6:0] sext_ln151_47_fu_8335_p1;
wire  signed [6:0] sext_ln151_46_fu_8332_p1;
wire   [6:0] add_ln691_61_fu_8515_p2;
wire  signed [7:0] sext_ln691_56_fu_8521_p1;
wire  signed [7:0] sext_ln151_45_fu_8329_p1;
wire  signed [6:0] sext_ln151_50_fu_8344_p1;
wire  signed [6:0] sext_ln151_49_fu_8341_p1;
wire   [6:0] add_ln691_64_fu_8531_p2;
wire  signed [7:0] sext_ln691_59_fu_8537_p1;
wire  signed [7:0] sext_ln151_48_fu_8338_p1;
wire  signed [6:0] sext_ln151_51_fu_8347_p1;
wire  signed [6:0] sext_ln151_53_fu_8353_p1;
wire   [6:0] add_ln691_66_fu_8547_p2;
wire  signed [6:0] sext_ln151_52_fu_8350_p1;
wire  signed [6:0] sext_ln691_45_fu_8442_p1;
wire   [6:0] add_ln691_67_fu_8557_p2;
wire  signed [7:0] sext_ln691_62_fu_8563_p1;
wire  signed [7:0] sext_ln691_61_fu_8553_p1;
wire   [2:0] mul_ln1345_84_fu_8612_p0;
wire  signed [2:0] mul_ln1345_84_fu_8612_p1;
wire  signed [5:0] sext_ln1345_84_fu_8609_p1;
wire  signed [5:0] mul_ln1345_84_fu_8612_p2;
wire   [2:0] mul_ln1345_90_fu_8640_p0;
wire  signed [2:0] mul_ln1345_90_fu_8640_p1;
wire  signed [5:0] sext_ln1345_90_fu_8637_p1;
wire  signed [5:0] mul_ln1345_90_fu_8640_p2;
wire   [2:0] mul_ln1345_92_fu_8656_p0;
wire  signed [2:0] mul_ln1345_92_fu_8656_p1;
wire  signed [5:0] sext_ln1345_92_fu_8653_p1;
wire  signed [5:0] mul_ln1345_92_fu_8656_p2;
wire   [2:0] mul_ln1345_93_fu_8669_p0;
wire  signed [2:0] mul_ln1345_93_fu_8669_p1;
wire  signed [5:0] sext_ln1345_93_fu_8666_p1;
wire  signed [5:0] mul_ln1345_93_fu_8669_p2;
wire   [2:0] mul_ln1345_94_fu_8682_p0;
wire  signed [2:0] mul_ln1345_94_fu_8682_p1;
wire  signed [5:0] sext_ln1345_94_fu_8679_p1;
wire  signed [5:0] mul_ln1345_94_fu_8682_p2;
wire  signed [6:0] sext_ln151_86_fu_8675_p1;
wire  signed [6:0] sext_ln151_87_fu_8688_p1;
wire  signed [6:0] sext_ln151_82_fu_8634_p1;
wire  signed [6:0] sext_ln151_84_fu_8650_p1;
wire   [6:0] add_ln691_74_fu_8701_p2;
wire  signed [7:0] sext_ln691_69_fu_8707_p1;
wire  signed [7:0] sext_ln151_85_fu_8662_p1;
wire  signed [6:0] sext_ln151_76_fu_8606_p1;
wire  signed [6:0] sext_ln151_78_fu_8622_p1;
wire   [6:0] add_ln691_77_fu_8717_p2;
wire  signed [7:0] sext_ln691_71_fu_8723_p1;
wire  signed [7:0] sext_ln151_83_fu_8646_p1;
wire  signed [6:0] sext_ln151_79_fu_8625_p1;
wire  signed [6:0] sext_ln151_81_fu_8631_p1;
wire   [6:0] add_ln691_79_fu_8733_p2;
wire  signed [7:0] sext_ln691_73_fu_8739_p1;
wire  signed [7:0] sext_ln151_77_fu_8618_p1;
wire  signed [6:0] sext_ln151_66_fu_8576_p1;
wire  signed [6:0] sext_ln691_66_fu_8573_p1;
wire   [6:0] add_ln691_83_fu_8749_p2;
wire  signed [7:0] sext_ln691_76_fu_8755_p1;
wire  signed [7:0] sext_ln151_80_fu_8628_p1;
wire  signed [6:0] sext_ln151_69_fu_8585_p1;
wire  signed [6:0] sext_ln151_68_fu_8582_p1;
wire   [6:0] add_ln691_85_fu_8765_p2;
wire  signed [7:0] sext_ln691_78_fu_8771_p1;
wire  signed [7:0] sext_ln151_67_fu_8579_p1;
wire  signed [6:0] sext_ln151_72_fu_8594_p1;
wire  signed [6:0] sext_ln151_71_fu_8591_p1;
wire   [6:0] add_ln691_88_fu_8781_p2;
wire  signed [7:0] sext_ln691_81_fu_8787_p1;
wire  signed [7:0] sext_ln151_70_fu_8588_p1;
wire  signed [6:0] sext_ln151_73_fu_8597_p1;
wire  signed [6:0] sext_ln151_75_fu_8603_p1;
wire   [6:0] add_ln691_90_fu_8797_p2;
wire  signed [6:0] sext_ln151_74_fu_8600_p1;
wire  signed [6:0] sext_ln691_67_fu_8692_p1;
wire   [6:0] add_ln691_91_fu_8807_p2;
wire  signed [7:0] sext_ln691_84_fu_8813_p1;
wire  signed [7:0] sext_ln691_83_fu_8803_p1;
wire   [2:0] mul_ln1345_108_fu_8862_p0;
wire  signed [2:0] mul_ln1345_108_fu_8862_p1;
wire  signed [5:0] sext_ln1345_108_fu_8859_p1;
wire  signed [5:0] mul_ln1345_108_fu_8862_p2;
wire   [2:0] mul_ln1345_114_fu_8890_p0;
wire  signed [2:0] mul_ln1345_114_fu_8890_p1;
wire  signed [5:0] sext_ln1345_114_fu_8887_p1;
wire  signed [5:0] mul_ln1345_114_fu_8890_p2;
wire   [2:0] mul_ln1345_116_fu_8906_p0;
wire  signed [2:0] mul_ln1345_116_fu_8906_p1;
wire  signed [5:0] sext_ln1345_116_fu_8903_p1;
wire  signed [5:0] mul_ln1345_116_fu_8906_p2;
wire   [2:0] mul_ln1345_117_fu_8919_p0;
wire  signed [2:0] mul_ln1345_117_fu_8919_p1;
wire  signed [5:0] sext_ln1345_117_fu_8916_p1;
wire  signed [5:0] mul_ln1345_117_fu_8919_p2;
wire   [2:0] mul_ln1345_118_fu_8932_p0;
wire  signed [2:0] mul_ln1345_118_fu_8932_p1;
wire  signed [5:0] sext_ln1345_118_fu_8929_p1;
wire  signed [5:0] mul_ln1345_118_fu_8932_p2;
wire  signed [6:0] sext_ln151_108_fu_8925_p1;
wire  signed [6:0] sext_ln151_109_fu_8938_p1;
wire  signed [6:0] sext_ln151_104_fu_8884_p1;
wire  signed [6:0] sext_ln151_106_fu_8900_p1;
wire   [6:0] add_ln691_98_fu_8951_p2;
wire  signed [7:0] sext_ln691_91_fu_8957_p1;
wire  signed [7:0] sext_ln151_107_fu_8912_p1;
wire  signed [6:0] sext_ln151_98_fu_8856_p1;
wire  signed [6:0] sext_ln151_100_fu_8872_p1;
wire   [6:0] add_ln691_101_fu_8967_p2;
wire  signed [7:0] sext_ln691_93_fu_8973_p1;
wire  signed [7:0] sext_ln151_105_fu_8896_p1;
wire  signed [6:0] sext_ln151_101_fu_8875_p1;
wire  signed [6:0] sext_ln151_103_fu_8881_p1;
wire   [6:0] add_ln691_103_fu_8983_p2;
wire  signed [7:0] sext_ln691_95_fu_8989_p1;
wire  signed [7:0] sext_ln151_99_fu_8868_p1;
wire  signed [6:0] sext_ln151_88_fu_8826_p1;
wire  signed [6:0] sext_ln691_88_fu_8823_p1;
wire   [6:0] add_ln691_107_fu_8999_p2;
wire  signed [7:0] sext_ln691_98_fu_9005_p1;
wire  signed [7:0] sext_ln151_102_fu_8878_p1;
wire  signed [6:0] sext_ln151_91_fu_8835_p1;
wire  signed [6:0] sext_ln151_90_fu_8832_p1;
wire   [6:0] add_ln691_109_fu_9015_p2;
wire  signed [7:0] sext_ln691_100_fu_9021_p1;
wire  signed [7:0] sext_ln151_89_fu_8829_p1;
wire  signed [6:0] sext_ln151_94_fu_8844_p1;
wire  signed [6:0] sext_ln151_93_fu_8841_p1;
wire   [6:0] add_ln691_112_fu_9031_p2;
wire  signed [7:0] sext_ln691_103_fu_9037_p1;
wire  signed [7:0] sext_ln151_92_fu_8838_p1;
wire  signed [6:0] sext_ln151_95_fu_8847_p1;
wire  signed [6:0] sext_ln151_97_fu_8853_p1;
wire   [6:0] add_ln691_114_fu_9047_p2;
wire  signed [6:0] sext_ln151_96_fu_8850_p1;
wire  signed [6:0] sext_ln691_89_fu_8942_p1;
wire   [6:0] add_ln691_115_fu_9057_p2;
wire  signed [7:0] sext_ln691_106_fu_9063_p1;
wire  signed [7:0] sext_ln691_105_fu_9053_p1;
wire   [2:0] mul_ln1345_132_fu_9112_p0;
wire  signed [2:0] mul_ln1345_132_fu_9112_p1;
wire  signed [5:0] sext_ln1345_132_fu_9109_p1;
wire  signed [5:0] mul_ln1345_132_fu_9112_p2;
wire   [2:0] mul_ln1345_138_fu_9140_p0;
wire  signed [2:0] mul_ln1345_138_fu_9140_p1;
wire  signed [5:0] sext_ln1345_138_fu_9137_p1;
wire  signed [5:0] mul_ln1345_138_fu_9140_p2;
wire   [2:0] mul_ln1345_140_fu_9156_p0;
wire  signed [2:0] mul_ln1345_140_fu_9156_p1;
wire  signed [5:0] sext_ln1345_140_fu_9153_p1;
wire  signed [5:0] mul_ln1345_140_fu_9156_p2;
wire   [2:0] mul_ln1345_141_fu_9169_p0;
wire  signed [2:0] mul_ln1345_141_fu_9169_p1;
wire  signed [5:0] sext_ln1345_141_fu_9166_p1;
wire  signed [5:0] mul_ln1345_141_fu_9169_p2;
wire   [2:0] mul_ln1345_142_fu_9182_p0;
wire  signed [2:0] mul_ln1345_142_fu_9182_p1;
wire  signed [5:0] sext_ln1345_142_fu_9179_p1;
wire  signed [5:0] mul_ln1345_142_fu_9182_p2;
wire  signed [6:0] sext_ln151_130_fu_9175_p1;
wire  signed [6:0] sext_ln151_131_fu_9188_p1;
wire  signed [6:0] sext_ln151_126_fu_9134_p1;
wire  signed [6:0] sext_ln151_128_fu_9150_p1;
wire   [6:0] add_ln691_122_fu_9201_p2;
wire  signed [7:0] sext_ln691_113_fu_9207_p1;
wire  signed [7:0] sext_ln151_129_fu_9162_p1;
wire  signed [6:0] sext_ln151_120_fu_9106_p1;
wire  signed [6:0] sext_ln151_122_fu_9122_p1;
wire   [6:0] add_ln691_125_fu_9217_p2;
wire  signed [7:0] sext_ln691_115_fu_9223_p1;
wire  signed [7:0] sext_ln151_127_fu_9146_p1;
wire  signed [6:0] sext_ln151_123_fu_9125_p1;
wire  signed [6:0] sext_ln151_125_fu_9131_p1;
wire   [6:0] add_ln691_127_fu_9233_p2;
wire  signed [7:0] sext_ln691_117_fu_9239_p1;
wire  signed [7:0] sext_ln151_121_fu_9118_p1;
wire  signed [6:0] sext_ln151_110_fu_9076_p1;
wire  signed [6:0] sext_ln691_110_fu_9073_p1;
wire   [6:0] add_ln691_131_fu_9249_p2;
wire  signed [7:0] sext_ln691_120_fu_9255_p1;
wire  signed [7:0] sext_ln151_124_fu_9128_p1;
wire  signed [6:0] sext_ln151_113_fu_9085_p1;
wire  signed [6:0] sext_ln151_112_fu_9082_p1;
wire   [6:0] add_ln691_133_fu_9265_p2;
wire  signed [7:0] sext_ln691_122_fu_9271_p1;
wire  signed [7:0] sext_ln151_111_fu_9079_p1;
wire  signed [6:0] sext_ln151_116_fu_9094_p1;
wire  signed [6:0] sext_ln151_115_fu_9091_p1;
wire   [6:0] add_ln691_136_fu_9281_p2;
wire  signed [7:0] sext_ln691_125_fu_9287_p1;
wire  signed [7:0] sext_ln151_114_fu_9088_p1;
wire  signed [6:0] sext_ln151_117_fu_9097_p1;
wire  signed [6:0] sext_ln151_119_fu_9103_p1;
wire   [6:0] add_ln691_138_fu_9297_p2;
wire  signed [6:0] sext_ln151_118_fu_9100_p1;
wire  signed [6:0] sext_ln691_111_fu_9192_p1;
wire   [6:0] add_ln691_139_fu_9307_p2;
wire  signed [7:0] sext_ln691_128_fu_9313_p1;
wire  signed [7:0] sext_ln691_127_fu_9303_p1;
wire   [2:0] mul_ln1345_156_fu_9362_p0;
wire  signed [2:0] mul_ln1345_156_fu_9362_p1;
wire  signed [5:0] sext_ln1345_156_fu_9359_p1;
wire  signed [5:0] mul_ln1345_156_fu_9362_p2;
wire   [2:0] mul_ln1345_162_fu_9390_p0;
wire  signed [2:0] mul_ln1345_162_fu_9390_p1;
wire  signed [5:0] sext_ln1345_162_fu_9387_p1;
wire  signed [5:0] mul_ln1345_162_fu_9390_p2;
wire   [2:0] mul_ln1345_164_fu_9406_p0;
wire  signed [2:0] mul_ln1345_164_fu_9406_p1;
wire  signed [5:0] sext_ln1345_164_fu_9403_p1;
wire  signed [5:0] mul_ln1345_164_fu_9406_p2;
wire   [2:0] mul_ln1345_165_fu_9419_p0;
wire  signed [2:0] mul_ln1345_165_fu_9419_p1;
wire  signed [5:0] sext_ln1345_165_fu_9416_p1;
wire  signed [5:0] mul_ln1345_165_fu_9419_p2;
wire   [2:0] mul_ln1345_166_fu_9432_p0;
wire  signed [2:0] mul_ln1345_166_fu_9432_p1;
wire  signed [5:0] sext_ln1345_166_fu_9429_p1;
wire  signed [5:0] mul_ln1345_166_fu_9432_p2;
wire  signed [6:0] sext_ln151_152_fu_9425_p1;
wire  signed [6:0] sext_ln151_153_fu_9438_p1;
wire  signed [6:0] sext_ln151_148_fu_9384_p1;
wire  signed [6:0] sext_ln151_150_fu_9400_p1;
wire   [6:0] add_ln691_146_fu_9451_p2;
wire  signed [7:0] sext_ln691_135_fu_9457_p1;
wire  signed [7:0] sext_ln151_151_fu_9412_p1;
wire  signed [6:0] sext_ln151_142_fu_9356_p1;
wire  signed [6:0] sext_ln151_144_fu_9372_p1;
wire   [6:0] add_ln691_149_fu_9467_p2;
wire  signed [7:0] sext_ln691_137_fu_9473_p1;
wire  signed [7:0] sext_ln151_149_fu_9396_p1;
wire  signed [6:0] sext_ln151_145_fu_9375_p1;
wire  signed [6:0] sext_ln151_147_fu_9381_p1;
wire   [6:0] add_ln691_151_fu_9483_p2;
wire  signed [7:0] sext_ln691_139_fu_9489_p1;
wire  signed [7:0] sext_ln151_143_fu_9368_p1;
wire  signed [6:0] sext_ln151_132_fu_9326_p1;
wire  signed [6:0] sext_ln691_132_fu_9323_p1;
wire   [6:0] add_ln691_155_fu_9499_p2;
wire  signed [7:0] sext_ln691_142_fu_9505_p1;
wire  signed [7:0] sext_ln151_146_fu_9378_p1;
wire  signed [6:0] sext_ln151_135_fu_9335_p1;
wire  signed [6:0] sext_ln151_134_fu_9332_p1;
wire   [6:0] add_ln691_157_fu_9515_p2;
wire  signed [7:0] sext_ln691_144_fu_9521_p1;
wire  signed [7:0] sext_ln151_133_fu_9329_p1;
wire  signed [6:0] sext_ln151_138_fu_9344_p1;
wire  signed [6:0] sext_ln151_137_fu_9341_p1;
wire   [6:0] add_ln691_160_fu_9531_p2;
wire  signed [7:0] sext_ln691_147_fu_9537_p1;
wire  signed [7:0] sext_ln151_136_fu_9338_p1;
wire  signed [6:0] sext_ln151_139_fu_9347_p1;
wire  signed [6:0] sext_ln151_141_fu_9353_p1;
wire   [6:0] add_ln691_162_fu_9547_p2;
wire  signed [6:0] sext_ln151_140_fu_9350_p1;
wire  signed [6:0] sext_ln691_133_fu_9442_p1;
wire   [6:0] add_ln691_163_fu_9557_p2;
wire  signed [7:0] sext_ln691_150_fu_9563_p1;
wire  signed [7:0] sext_ln691_149_fu_9553_p1;
wire   [2:0] mul_ln1345_180_fu_9612_p0;
wire  signed [2:0] mul_ln1345_180_fu_9612_p1;
wire  signed [5:0] sext_ln1345_180_fu_9609_p1;
wire  signed [5:0] mul_ln1345_180_fu_9612_p2;
wire   [2:0] mul_ln1345_186_fu_9640_p0;
wire  signed [2:0] mul_ln1345_186_fu_9640_p1;
wire  signed [5:0] sext_ln1345_186_fu_9637_p1;
wire  signed [5:0] mul_ln1345_186_fu_9640_p2;
wire   [2:0] mul_ln1345_188_fu_9656_p0;
wire  signed [2:0] mul_ln1345_188_fu_9656_p1;
wire  signed [5:0] sext_ln1345_188_fu_9653_p1;
wire  signed [5:0] mul_ln1345_188_fu_9656_p2;
wire   [2:0] mul_ln1345_189_fu_9669_p0;
wire  signed [2:0] mul_ln1345_189_fu_9669_p1;
wire  signed [5:0] sext_ln1345_189_fu_9666_p1;
wire  signed [5:0] mul_ln1345_189_fu_9669_p2;
wire   [2:0] mul_ln1345_190_fu_9682_p0;
wire  signed [2:0] mul_ln1345_190_fu_9682_p1;
wire  signed [5:0] sext_ln1345_190_fu_9679_p1;
wire  signed [5:0] mul_ln1345_190_fu_9682_p2;
wire  signed [6:0] sext_ln151_174_fu_9675_p1;
wire  signed [6:0] sext_ln151_175_fu_9688_p1;
wire  signed [6:0] sext_ln151_170_fu_9634_p1;
wire  signed [6:0] sext_ln151_172_fu_9650_p1;
wire   [6:0] add_ln691_170_fu_9701_p2;
wire  signed [7:0] sext_ln691_157_fu_9707_p1;
wire  signed [7:0] sext_ln151_173_fu_9662_p1;
wire  signed [6:0] sext_ln151_164_fu_9606_p1;
wire  signed [6:0] sext_ln151_166_fu_9622_p1;
wire   [6:0] add_ln691_173_fu_9717_p2;
wire  signed [7:0] sext_ln691_159_fu_9723_p1;
wire  signed [7:0] sext_ln151_171_fu_9646_p1;
wire  signed [6:0] sext_ln151_167_fu_9625_p1;
wire  signed [6:0] sext_ln151_169_fu_9631_p1;
wire   [6:0] add_ln691_175_fu_9733_p2;
wire  signed [7:0] sext_ln691_161_fu_9739_p1;
wire  signed [7:0] sext_ln151_165_fu_9618_p1;
wire  signed [6:0] sext_ln151_154_fu_9576_p1;
wire  signed [6:0] sext_ln691_154_fu_9573_p1;
wire   [6:0] add_ln691_179_fu_9749_p2;
wire  signed [7:0] sext_ln691_164_fu_9755_p1;
wire  signed [7:0] sext_ln151_168_fu_9628_p1;
wire  signed [6:0] sext_ln151_157_fu_9585_p1;
wire  signed [6:0] sext_ln151_156_fu_9582_p1;
wire   [6:0] add_ln691_181_fu_9765_p2;
wire  signed [7:0] sext_ln691_166_fu_9771_p1;
wire  signed [7:0] sext_ln151_155_fu_9579_p1;
wire  signed [6:0] sext_ln151_160_fu_9594_p1;
wire  signed [6:0] sext_ln151_159_fu_9591_p1;
wire   [6:0] add_ln691_184_fu_9781_p2;
wire  signed [7:0] sext_ln691_169_fu_9787_p1;
wire  signed [7:0] sext_ln151_158_fu_9588_p1;
wire  signed [6:0] sext_ln151_161_fu_9597_p1;
wire  signed [6:0] sext_ln151_163_fu_9603_p1;
wire   [6:0] add_ln691_186_fu_9797_p2;
wire  signed [6:0] sext_ln151_162_fu_9600_p1;
wire  signed [6:0] sext_ln691_155_fu_9692_p1;
wire   [6:0] add_ln691_187_fu_9807_p2;
wire  signed [7:0] sext_ln691_172_fu_9813_p1;
wire  signed [7:0] sext_ln691_171_fu_9803_p1;
wire   [2:0] mul_ln1345_204_fu_9862_p0;
wire  signed [2:0] mul_ln1345_204_fu_9862_p1;
wire  signed [5:0] sext_ln1345_204_fu_9859_p1;
wire  signed [5:0] mul_ln1345_204_fu_9862_p2;
wire   [2:0] mul_ln1345_210_fu_9890_p0;
wire  signed [2:0] mul_ln1345_210_fu_9890_p1;
wire  signed [5:0] sext_ln1345_210_fu_9887_p1;
wire  signed [5:0] mul_ln1345_210_fu_9890_p2;
wire   [2:0] mul_ln1345_212_fu_9906_p0;
wire  signed [2:0] mul_ln1345_212_fu_9906_p1;
wire  signed [5:0] sext_ln1345_212_fu_9903_p1;
wire  signed [5:0] mul_ln1345_212_fu_9906_p2;
wire   [2:0] mul_ln1345_213_fu_9919_p0;
wire  signed [2:0] mul_ln1345_213_fu_9919_p1;
wire  signed [5:0] sext_ln1345_213_fu_9916_p1;
wire  signed [5:0] mul_ln1345_213_fu_9919_p2;
wire   [2:0] mul_ln1345_214_fu_9932_p0;
wire  signed [2:0] mul_ln1345_214_fu_9932_p1;
wire  signed [5:0] sext_ln1345_214_fu_9929_p1;
wire  signed [5:0] mul_ln1345_214_fu_9932_p2;
wire  signed [6:0] sext_ln151_196_fu_9925_p1;
wire  signed [6:0] sext_ln151_197_fu_9938_p1;
wire  signed [6:0] sext_ln151_192_fu_9884_p1;
wire  signed [6:0] sext_ln151_194_fu_9900_p1;
wire   [6:0] add_ln691_194_fu_9951_p2;
wire  signed [7:0] sext_ln691_179_fu_9957_p1;
wire  signed [7:0] sext_ln151_195_fu_9912_p1;
wire  signed [6:0] sext_ln151_186_fu_9856_p1;
wire  signed [6:0] sext_ln151_188_fu_9872_p1;
wire   [6:0] add_ln691_197_fu_9967_p2;
wire  signed [7:0] sext_ln691_181_fu_9973_p1;
wire  signed [7:0] sext_ln151_193_fu_9896_p1;
wire  signed [6:0] sext_ln151_189_fu_9875_p1;
wire  signed [6:0] sext_ln151_191_fu_9881_p1;
wire   [6:0] add_ln691_199_fu_9983_p2;
wire  signed [7:0] sext_ln691_183_fu_9989_p1;
wire  signed [7:0] sext_ln151_187_fu_9868_p1;
wire  signed [6:0] sext_ln151_176_fu_9826_p1;
wire  signed [6:0] sext_ln691_176_fu_9823_p1;
wire   [6:0] add_ln691_203_fu_9999_p2;
wire  signed [7:0] sext_ln691_186_fu_10005_p1;
wire  signed [7:0] sext_ln151_190_fu_9878_p1;
wire  signed [6:0] sext_ln151_179_fu_9835_p1;
wire  signed [6:0] sext_ln151_178_fu_9832_p1;
wire   [6:0] add_ln691_205_fu_10015_p2;
wire  signed [7:0] sext_ln691_188_fu_10021_p1;
wire  signed [7:0] sext_ln151_177_fu_9829_p1;
wire  signed [6:0] sext_ln151_182_fu_9844_p1;
wire  signed [6:0] sext_ln151_181_fu_9841_p1;
wire   [6:0] add_ln691_208_fu_10031_p2;
wire  signed [7:0] sext_ln691_191_fu_10037_p1;
wire  signed [7:0] sext_ln151_180_fu_9838_p1;
wire  signed [6:0] sext_ln151_183_fu_9847_p1;
wire  signed [6:0] sext_ln151_185_fu_9853_p1;
wire   [6:0] add_ln691_210_fu_10047_p2;
wire  signed [6:0] sext_ln151_184_fu_9850_p1;
wire  signed [6:0] sext_ln691_177_fu_9942_p1;
wire   [6:0] add_ln691_211_fu_10057_p2;
wire  signed [7:0] sext_ln691_194_fu_10063_p1;
wire  signed [7:0] sext_ln691_193_fu_10053_p1;
wire   [2:0] mul_ln1345_228_fu_10112_p0;
wire  signed [2:0] mul_ln1345_228_fu_10112_p1;
wire  signed [5:0] sext_ln1345_228_fu_10109_p1;
wire  signed [5:0] mul_ln1345_228_fu_10112_p2;
wire   [2:0] mul_ln1345_234_fu_10140_p0;
wire  signed [2:0] mul_ln1345_234_fu_10140_p1;
wire  signed [5:0] sext_ln1345_234_fu_10137_p1;
wire  signed [5:0] mul_ln1345_234_fu_10140_p2;
wire   [2:0] mul_ln1345_236_fu_10156_p0;
wire  signed [2:0] mul_ln1345_236_fu_10156_p1;
wire  signed [5:0] sext_ln1345_236_fu_10153_p1;
wire  signed [5:0] mul_ln1345_236_fu_10156_p2;
wire   [2:0] mul_ln1345_237_fu_10169_p0;
wire  signed [2:0] mul_ln1345_237_fu_10169_p1;
wire  signed [5:0] sext_ln1345_237_fu_10166_p1;
wire  signed [5:0] mul_ln1345_237_fu_10169_p2;
wire   [2:0] mul_ln1345_238_fu_10182_p0;
wire  signed [2:0] mul_ln1345_238_fu_10182_p1;
wire  signed [5:0] sext_ln1345_238_fu_10179_p1;
wire  signed [5:0] mul_ln1345_238_fu_10182_p2;
wire  signed [6:0] sext_ln151_218_fu_10175_p1;
wire  signed [6:0] sext_ln151_219_fu_10188_p1;
wire  signed [6:0] sext_ln151_214_fu_10134_p1;
wire  signed [6:0] sext_ln151_216_fu_10150_p1;
wire   [6:0] add_ln691_218_fu_10201_p2;
wire  signed [7:0] sext_ln691_201_fu_10207_p1;
wire  signed [7:0] sext_ln151_217_fu_10162_p1;
wire  signed [6:0] sext_ln151_208_fu_10106_p1;
wire  signed [6:0] sext_ln151_210_fu_10122_p1;
wire   [6:0] add_ln691_221_fu_10217_p2;
wire  signed [7:0] sext_ln691_203_fu_10223_p1;
wire  signed [7:0] sext_ln151_215_fu_10146_p1;
wire  signed [6:0] sext_ln151_211_fu_10125_p1;
wire  signed [6:0] sext_ln151_213_fu_10131_p1;
wire   [6:0] add_ln691_223_fu_10233_p2;
wire  signed [7:0] sext_ln691_205_fu_10239_p1;
wire  signed [7:0] sext_ln151_209_fu_10118_p1;
wire  signed [6:0] sext_ln151_198_fu_10076_p1;
wire  signed [6:0] sext_ln691_198_fu_10073_p1;
wire   [6:0] add_ln691_227_fu_10249_p2;
wire  signed [7:0] sext_ln691_208_fu_10255_p1;
wire  signed [7:0] sext_ln151_212_fu_10128_p1;
wire  signed [6:0] sext_ln151_201_fu_10085_p1;
wire  signed [6:0] sext_ln151_200_fu_10082_p1;
wire   [6:0] add_ln691_229_fu_10265_p2;
wire  signed [7:0] sext_ln691_210_fu_10271_p1;
wire  signed [7:0] sext_ln151_199_fu_10079_p1;
wire  signed [6:0] sext_ln151_204_fu_10094_p1;
wire  signed [6:0] sext_ln151_203_fu_10091_p1;
wire   [6:0] add_ln691_232_fu_10281_p2;
wire  signed [7:0] sext_ln691_213_fu_10287_p1;
wire  signed [7:0] sext_ln151_202_fu_10088_p1;
wire  signed [6:0] sext_ln151_205_fu_10097_p1;
wire  signed [6:0] sext_ln151_207_fu_10103_p1;
wire   [6:0] add_ln691_234_fu_10297_p2;
wire  signed [6:0] sext_ln151_206_fu_10100_p1;
wire  signed [6:0] sext_ln691_199_fu_10192_p1;
wire   [6:0] add_ln691_235_fu_10307_p2;
wire  signed [7:0] sext_ln691_216_fu_10313_p1;
wire  signed [7:0] sext_ln691_215_fu_10303_p1;
wire   [2:0] mul_ln1345_252_fu_10362_p0;
wire  signed [2:0] mul_ln1345_252_fu_10362_p1;
wire  signed [5:0] sext_ln1345_252_fu_10359_p1;
wire  signed [5:0] mul_ln1345_252_fu_10362_p2;
wire   [2:0] mul_ln1345_258_fu_10390_p0;
wire  signed [2:0] mul_ln1345_258_fu_10390_p1;
wire  signed [5:0] sext_ln1345_258_fu_10387_p1;
wire  signed [5:0] mul_ln1345_258_fu_10390_p2;
wire   [2:0] mul_ln1345_260_fu_10406_p0;
wire  signed [2:0] mul_ln1345_260_fu_10406_p1;
wire  signed [5:0] sext_ln1345_260_fu_10403_p1;
wire  signed [5:0] mul_ln1345_260_fu_10406_p2;
wire   [2:0] mul_ln1345_261_fu_10419_p0;
wire  signed [2:0] mul_ln1345_261_fu_10419_p1;
wire  signed [5:0] sext_ln1345_261_fu_10416_p1;
wire  signed [5:0] mul_ln1345_261_fu_10419_p2;
wire   [2:0] mul_ln1345_262_fu_10432_p0;
wire  signed [2:0] mul_ln1345_262_fu_10432_p1;
wire  signed [5:0] sext_ln1345_262_fu_10429_p1;
wire  signed [5:0] mul_ln1345_262_fu_10432_p2;
wire  signed [6:0] sext_ln151_240_fu_10425_p1;
wire  signed [6:0] sext_ln151_241_fu_10438_p1;
wire  signed [6:0] sext_ln151_236_fu_10384_p1;
wire  signed [6:0] sext_ln151_238_fu_10400_p1;
wire   [6:0] add_ln691_242_fu_10451_p2;
wire  signed [7:0] sext_ln691_223_fu_10457_p1;
wire  signed [7:0] sext_ln151_239_fu_10412_p1;
wire  signed [6:0] sext_ln151_230_fu_10356_p1;
wire  signed [6:0] sext_ln151_232_fu_10372_p1;
wire   [6:0] add_ln691_245_fu_10467_p2;
wire  signed [7:0] sext_ln691_225_fu_10473_p1;
wire  signed [7:0] sext_ln151_237_fu_10396_p1;
wire  signed [6:0] sext_ln151_233_fu_10375_p1;
wire  signed [6:0] sext_ln151_235_fu_10381_p1;
wire   [6:0] add_ln691_247_fu_10483_p2;
wire  signed [7:0] sext_ln691_227_fu_10489_p1;
wire  signed [7:0] sext_ln151_231_fu_10368_p1;
wire  signed [6:0] sext_ln151_220_fu_10326_p1;
wire  signed [6:0] sext_ln691_220_fu_10323_p1;
wire   [6:0] add_ln691_251_fu_10499_p2;
wire  signed [7:0] sext_ln691_230_fu_10505_p1;
wire  signed [7:0] sext_ln151_234_fu_10378_p1;
wire  signed [6:0] sext_ln151_223_fu_10335_p1;
wire  signed [6:0] sext_ln151_222_fu_10332_p1;
wire   [6:0] add_ln691_253_fu_10515_p2;
wire  signed [7:0] sext_ln691_232_fu_10521_p1;
wire  signed [7:0] sext_ln151_221_fu_10329_p1;
wire  signed [6:0] sext_ln151_226_fu_10344_p1;
wire  signed [6:0] sext_ln151_225_fu_10341_p1;
wire   [6:0] add_ln691_256_fu_10531_p2;
wire  signed [7:0] sext_ln691_235_fu_10537_p1;
wire  signed [7:0] sext_ln151_224_fu_10338_p1;
wire  signed [6:0] sext_ln151_227_fu_10347_p1;
wire  signed [6:0] sext_ln151_229_fu_10353_p1;
wire   [6:0] add_ln691_258_fu_10547_p2;
wire  signed [6:0] sext_ln151_228_fu_10350_p1;
wire  signed [6:0] sext_ln691_221_fu_10442_p1;
wire   [6:0] add_ln691_259_fu_10557_p2;
wire  signed [7:0] sext_ln691_238_fu_10563_p1;
wire  signed [7:0] sext_ln691_237_fu_10553_p1;
wire   [2:0] mul_ln1345_276_fu_10612_p0;
wire  signed [2:0] mul_ln1345_276_fu_10612_p1;
wire  signed [5:0] sext_ln1345_276_fu_10609_p1;
wire  signed [5:0] mul_ln1345_276_fu_10612_p2;
wire   [2:0] mul_ln1345_282_fu_10640_p0;
wire  signed [2:0] mul_ln1345_282_fu_10640_p1;
wire  signed [5:0] sext_ln1345_282_fu_10637_p1;
wire  signed [5:0] mul_ln1345_282_fu_10640_p2;
wire   [2:0] mul_ln1345_284_fu_10656_p0;
wire  signed [2:0] mul_ln1345_284_fu_10656_p1;
wire  signed [5:0] sext_ln1345_284_fu_10653_p1;
wire  signed [5:0] mul_ln1345_284_fu_10656_p2;
wire   [2:0] mul_ln1345_285_fu_10669_p0;
wire  signed [2:0] mul_ln1345_285_fu_10669_p1;
wire  signed [5:0] sext_ln1345_285_fu_10666_p1;
wire  signed [5:0] mul_ln1345_285_fu_10669_p2;
wire   [2:0] mul_ln1345_286_fu_10682_p0;
wire  signed [2:0] mul_ln1345_286_fu_10682_p1;
wire  signed [5:0] sext_ln1345_286_fu_10679_p1;
wire  signed [5:0] mul_ln1345_286_fu_10682_p2;
wire  signed [6:0] sext_ln151_262_fu_10675_p1;
wire  signed [6:0] sext_ln151_263_fu_10688_p1;
wire  signed [6:0] sext_ln151_258_fu_10634_p1;
wire  signed [6:0] sext_ln151_260_fu_10650_p1;
wire   [6:0] add_ln691_266_fu_10701_p2;
wire  signed [7:0] sext_ln691_245_fu_10707_p1;
wire  signed [7:0] sext_ln151_261_fu_10662_p1;
wire  signed [6:0] sext_ln151_252_fu_10606_p1;
wire  signed [6:0] sext_ln151_254_fu_10622_p1;
wire   [6:0] add_ln691_269_fu_10717_p2;
wire  signed [7:0] sext_ln691_247_fu_10723_p1;
wire  signed [7:0] sext_ln151_259_fu_10646_p1;
wire  signed [6:0] sext_ln151_255_fu_10625_p1;
wire  signed [6:0] sext_ln151_257_fu_10631_p1;
wire   [6:0] add_ln691_271_fu_10733_p2;
wire  signed [7:0] sext_ln691_249_fu_10739_p1;
wire  signed [7:0] sext_ln151_253_fu_10618_p1;
wire  signed [6:0] sext_ln151_242_fu_10576_p1;
wire  signed [6:0] sext_ln691_242_fu_10573_p1;
wire   [6:0] add_ln691_275_fu_10749_p2;
wire  signed [7:0] sext_ln691_252_fu_10755_p1;
wire  signed [7:0] sext_ln151_256_fu_10628_p1;
wire  signed [6:0] sext_ln151_245_fu_10585_p1;
wire  signed [6:0] sext_ln151_244_fu_10582_p1;
wire   [6:0] add_ln691_277_fu_10765_p2;
wire  signed [7:0] sext_ln691_254_fu_10771_p1;
wire  signed [7:0] sext_ln151_243_fu_10579_p1;
wire  signed [6:0] sext_ln151_248_fu_10594_p1;
wire  signed [6:0] sext_ln151_247_fu_10591_p1;
wire   [6:0] add_ln691_280_fu_10781_p2;
wire  signed [7:0] sext_ln691_257_fu_10787_p1;
wire  signed [7:0] sext_ln151_246_fu_10588_p1;
wire  signed [6:0] sext_ln151_249_fu_10597_p1;
wire  signed [6:0] sext_ln151_251_fu_10603_p1;
wire   [6:0] add_ln691_282_fu_10797_p2;
wire  signed [6:0] sext_ln151_250_fu_10600_p1;
wire  signed [6:0] sext_ln691_243_fu_10692_p1;
wire   [6:0] add_ln691_283_fu_10807_p2;
wire  signed [7:0] sext_ln691_260_fu_10813_p1;
wire  signed [7:0] sext_ln691_259_fu_10803_p1;
wire   [2:0] mul_ln1345_300_fu_10862_p0;
wire   [5:0] zext_ln1345_36_fu_10859_p1;
wire  signed [2:0] mul_ln1345_300_fu_10862_p1;
wire  signed [5:0] mul_ln1345_300_fu_10862_p2;
wire   [2:0] mul_ln1345_306_fu_10890_p0;
wire   [5:0] zext_ln1345_42_fu_10887_p1;
wire  signed [2:0] mul_ln1345_306_fu_10890_p1;
wire  signed [5:0] mul_ln1345_306_fu_10890_p2;
wire   [2:0] mul_ln1345_308_fu_10906_p0;
wire   [5:0] zext_ln1345_44_fu_10903_p1;
wire  signed [2:0] mul_ln1345_308_fu_10906_p1;
wire  signed [5:0] mul_ln1345_308_fu_10906_p2;
wire   [2:0] mul_ln1345_309_fu_10919_p0;
wire   [5:0] zext_ln1345_45_fu_10916_p1;
wire  signed [2:0] mul_ln1345_309_fu_10919_p1;
wire  signed [5:0] mul_ln1345_309_fu_10919_p2;
wire   [2:0] mul_ln1345_310_fu_10932_p0;
wire   [5:0] zext_ln1345_46_fu_10929_p1;
wire  signed [2:0] mul_ln1345_310_fu_10932_p1;
wire  signed [5:0] mul_ln1345_310_fu_10932_p2;
wire  signed [6:0] sext_ln151_284_fu_10925_p1;
wire  signed [6:0] sext_ln151_285_fu_10938_p1;
wire  signed [6:0] sext_ln151_280_fu_10884_p1;
wire  signed [6:0] sext_ln151_282_fu_10900_p1;
wire   [6:0] add_ln691_290_fu_10951_p2;
wire  signed [7:0] sext_ln691_267_fu_10957_p1;
wire  signed [7:0] sext_ln151_283_fu_10912_p1;
wire  signed [6:0] sext_ln151_274_fu_10856_p1;
wire  signed [6:0] sext_ln151_276_fu_10872_p1;
wire   [6:0] add_ln691_293_fu_10967_p2;
wire  signed [7:0] sext_ln691_269_fu_10973_p1;
wire  signed [7:0] sext_ln151_281_fu_10896_p1;
wire  signed [6:0] sext_ln151_277_fu_10875_p1;
wire  signed [6:0] sext_ln151_279_fu_10881_p1;
wire   [6:0] add_ln691_295_fu_10983_p2;
wire  signed [7:0] sext_ln691_271_fu_10989_p1;
wire  signed [7:0] sext_ln151_275_fu_10868_p1;
wire  signed [6:0] sext_ln151_264_fu_10826_p1;
wire  signed [6:0] sext_ln691_264_fu_10823_p1;
wire   [6:0] add_ln691_299_fu_10999_p2;
wire  signed [7:0] sext_ln691_274_fu_11005_p1;
wire  signed [7:0] sext_ln151_278_fu_10878_p1;
wire  signed [6:0] sext_ln151_267_fu_10835_p1;
wire  signed [6:0] sext_ln151_266_fu_10832_p1;
wire   [6:0] add_ln691_301_fu_11015_p2;
wire  signed [7:0] sext_ln691_276_fu_11021_p1;
wire  signed [7:0] sext_ln151_265_fu_10829_p1;
wire  signed [6:0] sext_ln151_270_fu_10844_p1;
wire  signed [6:0] sext_ln151_269_fu_10841_p1;
wire   [6:0] add_ln691_304_fu_11031_p2;
wire  signed [7:0] sext_ln691_279_fu_11037_p1;
wire  signed [7:0] sext_ln151_268_fu_10838_p1;
wire  signed [6:0] sext_ln151_271_fu_10847_p1;
wire  signed [6:0] sext_ln151_273_fu_10853_p1;
wire   [6:0] add_ln691_306_fu_11047_p2;
wire  signed [6:0] sext_ln151_272_fu_10850_p1;
wire  signed [6:0] sext_ln691_265_fu_10942_p1;
wire   [6:0] add_ln691_307_fu_11057_p2;
wire  signed [7:0] sext_ln691_282_fu_11063_p1;
wire  signed [7:0] sext_ln691_281_fu_11053_p1;
wire   [2:0] mul_ln1345_324_fu_11109_p0;
wire  signed [2:0] mul_ln1345_324_fu_11109_p1;
wire  signed [5:0] mul_ln1345_324_fu_11109_p2;
wire   [2:0] mul_ln1345_330_fu_11134_p0;
wire  signed [2:0] mul_ln1345_330_fu_11134_p1;
wire  signed [5:0] mul_ln1345_330_fu_11134_p2;
wire   [2:0] mul_ln1345_332_fu_11147_p0;
wire  signed [2:0] mul_ln1345_332_fu_11147_p1;
wire  signed [5:0] mul_ln1345_332_fu_11147_p2;
wire   [2:0] mul_ln1345_333_fu_11157_p0;
wire  signed [2:0] mul_ln1345_333_fu_11157_p1;
wire  signed [5:0] mul_ln1345_333_fu_11157_p2;
wire   [2:0] mul_ln1345_334_fu_11167_p0;
wire  signed [2:0] mul_ln1345_334_fu_11167_p1;
wire  signed [5:0] mul_ln1345_334_fu_11167_p2;
wire  signed [6:0] sext_ln151_306_fu_11163_p1;
wire  signed [6:0] sext_ln151_307_fu_11173_p1;
wire  signed [6:0] sext_ln151_302_fu_11131_p1;
wire  signed [6:0] sext_ln151_304_fu_11144_p1;
wire   [6:0] add_ln691_314_fu_11186_p2;
wire  signed [7:0] sext_ln691_289_fu_11192_p1;
wire  signed [7:0] sext_ln151_305_fu_11153_p1;
wire  signed [6:0] sext_ln151_296_fu_11106_p1;
wire  signed [6:0] sext_ln151_298_fu_11119_p1;
wire   [6:0] add_ln691_317_fu_11202_p2;
wire  signed [7:0] sext_ln691_291_fu_11208_p1;
wire  signed [7:0] sext_ln151_303_fu_11140_p1;
wire  signed [6:0] sext_ln151_299_fu_11122_p1;
wire  signed [6:0] sext_ln151_301_fu_11128_p1;
wire   [6:0] add_ln691_319_fu_11218_p2;
wire  signed [7:0] sext_ln691_293_fu_11224_p1;
wire  signed [7:0] sext_ln151_297_fu_11115_p1;
wire  signed [6:0] sext_ln151_286_fu_11076_p1;
wire  signed [6:0] sext_ln691_286_fu_11073_p1;
wire   [6:0] add_ln691_323_fu_11234_p2;
wire  signed [7:0] sext_ln691_296_fu_11240_p1;
wire  signed [7:0] sext_ln151_300_fu_11125_p1;
wire  signed [6:0] sext_ln151_289_fu_11085_p1;
wire  signed [6:0] sext_ln151_288_fu_11082_p1;
wire   [6:0] add_ln691_325_fu_11250_p2;
wire  signed [7:0] sext_ln691_298_fu_11256_p1;
wire  signed [7:0] sext_ln151_287_fu_11079_p1;
wire  signed [6:0] sext_ln151_292_fu_11094_p1;
wire  signed [6:0] sext_ln151_291_fu_11091_p1;
wire   [6:0] add_ln691_328_fu_11266_p2;
wire  signed [7:0] sext_ln691_301_fu_11272_p1;
wire  signed [7:0] sext_ln151_290_fu_11088_p1;
wire  signed [6:0] sext_ln151_293_fu_11097_p1;
wire  signed [6:0] sext_ln151_295_fu_11103_p1;
wire   [6:0] add_ln691_330_fu_11282_p2;
wire  signed [6:0] sext_ln151_294_fu_11100_p1;
wire  signed [6:0] sext_ln691_287_fu_11177_p1;
wire   [6:0] add_ln691_331_fu_11292_p2;
wire  signed [7:0] sext_ln691_304_fu_11298_p1;
wire  signed [7:0] sext_ln691_303_fu_11288_p1;
wire   [2:0] mul_ln1345_348_fu_11344_p0;
wire  signed [2:0] mul_ln1345_348_fu_11344_p1;
wire  signed [5:0] mul_ln1345_348_fu_11344_p2;
wire   [2:0] mul_ln1345_354_fu_11369_p0;
wire  signed [2:0] mul_ln1345_354_fu_11369_p1;
wire  signed [5:0] mul_ln1345_354_fu_11369_p2;
wire   [2:0] mul_ln1345_356_fu_11382_p0;
wire  signed [2:0] mul_ln1345_356_fu_11382_p1;
wire  signed [5:0] mul_ln1345_356_fu_11382_p2;
wire   [2:0] mul_ln1345_357_fu_11392_p0;
wire  signed [2:0] mul_ln1345_357_fu_11392_p1;
wire  signed [5:0] mul_ln1345_357_fu_11392_p2;
wire   [2:0] mul_ln1345_358_fu_11402_p0;
wire  signed [2:0] mul_ln1345_358_fu_11402_p1;
wire  signed [5:0] mul_ln1345_358_fu_11402_p2;
wire  signed [6:0] sext_ln151_328_fu_11398_p1;
wire  signed [6:0] sext_ln151_329_fu_11408_p1;
wire  signed [6:0] sext_ln151_324_fu_11366_p1;
wire  signed [6:0] sext_ln151_326_fu_11379_p1;
wire   [6:0] add_ln691_338_fu_11421_p2;
wire  signed [7:0] sext_ln691_311_fu_11427_p1;
wire  signed [7:0] sext_ln151_327_fu_11388_p1;
wire  signed [6:0] sext_ln151_318_fu_11341_p1;
wire  signed [6:0] sext_ln151_320_fu_11354_p1;
wire   [6:0] add_ln691_341_fu_11437_p2;
wire  signed [7:0] sext_ln691_313_fu_11443_p1;
wire  signed [7:0] sext_ln151_325_fu_11375_p1;
wire  signed [6:0] sext_ln151_321_fu_11357_p1;
wire  signed [6:0] sext_ln151_323_fu_11363_p1;
wire   [6:0] add_ln691_343_fu_11453_p2;
wire  signed [7:0] sext_ln691_315_fu_11459_p1;
wire  signed [7:0] sext_ln151_319_fu_11350_p1;
wire  signed [6:0] sext_ln151_308_fu_11311_p1;
wire  signed [6:0] sext_ln691_308_fu_11308_p1;
wire   [6:0] add_ln691_347_fu_11469_p2;
wire  signed [7:0] sext_ln691_318_fu_11475_p1;
wire  signed [7:0] sext_ln151_322_fu_11360_p1;
wire  signed [6:0] sext_ln151_311_fu_11320_p1;
wire  signed [6:0] sext_ln151_310_fu_11317_p1;
wire   [6:0] add_ln691_349_fu_11485_p2;
wire  signed [7:0] sext_ln691_320_fu_11491_p1;
wire  signed [7:0] sext_ln151_309_fu_11314_p1;
wire  signed [6:0] sext_ln151_314_fu_11329_p1;
wire  signed [6:0] sext_ln151_313_fu_11326_p1;
wire   [6:0] add_ln691_352_fu_11501_p2;
wire  signed [7:0] sext_ln691_323_fu_11507_p1;
wire  signed [7:0] sext_ln151_312_fu_11323_p1;
wire  signed [6:0] sext_ln151_315_fu_11332_p1;
wire  signed [6:0] sext_ln151_317_fu_11338_p1;
wire   [6:0] add_ln691_354_fu_11517_p2;
wire  signed [6:0] sext_ln151_316_fu_11335_p1;
wire  signed [6:0] sext_ln691_309_fu_11412_p1;
wire   [6:0] add_ln691_355_fu_11527_p2;
wire  signed [7:0] sext_ln691_326_fu_11533_p1;
wire  signed [7:0] sext_ln691_325_fu_11523_p1;
wire   [2:0] mul_ln1345_363_fu_11552_p0;
wire  signed [2:0] mul_ln1345_363_fu_11552_p1;
wire  signed [5:0] mul_ln1345_363_fu_11552_p2;
wire   [2:0] mul_ln1345_364_fu_11560_p0;
wire  signed [2:0] mul_ln1345_364_fu_11560_p1;
wire  signed [5:0] mul_ln1345_364_fu_11560_p2;
wire   [2:0] mul_ln1345_365_fu_11568_p0;
wire  signed [2:0] mul_ln1345_365_fu_11568_p1;
wire  signed [5:0] mul_ln1345_365_fu_11568_p2;
wire   [2:0] mul_ln1345_366_fu_11576_p0;
wire  signed [2:0] mul_ln1345_366_fu_11576_p1;
wire  signed [5:0] mul_ln1345_366_fu_11576_p2;
wire   [2:0] mul_ln1345_367_fu_11584_p0;
wire  signed [2:0] mul_ln1345_367_fu_11584_p1;
wire  signed [5:0] mul_ln1345_367_fu_11584_p2;
wire   [2:0] mul_ln1345_368_fu_11592_p0;
wire  signed [2:0] mul_ln1345_368_fu_11592_p1;
wire  signed [5:0] mul_ln1345_368_fu_11592_p2;
wire   [2:0] mul_ln1345_369_fu_11600_p0;
wire  signed [2:0] mul_ln1345_369_fu_11600_p1;
wire  signed [5:0] mul_ln1345_369_fu_11600_p2;
wire   [2:0] mul_ln1345_370_fu_11608_p0;
wire  signed [2:0] mul_ln1345_370_fu_11608_p1;
wire  signed [5:0] mul_ln1345_370_fu_11608_p2;
wire   [2:0] mul_ln1345_371_fu_11616_p0;
wire  signed [2:0] mul_ln1345_371_fu_11616_p1;
wire  signed [5:0] mul_ln1345_371_fu_11616_p2;
wire   [2:0] mul_ln1345_372_fu_11624_p0;
wire  signed [2:0] mul_ln1345_372_fu_11624_p1;
wire   [2:0] mul_ln1345_373_fu_11630_p0;
wire  signed [2:0] mul_ln1345_373_fu_11630_p1;
wire  signed [5:0] mul_ln1345_373_fu_11630_p2;
wire   [2:0] mul_ln1345_374_fu_11638_p0;
wire  signed [2:0] mul_ln1345_374_fu_11638_p1;
wire  signed [5:0] mul_ln1345_374_fu_11638_p2;
wire   [2:0] mul_ln1345_375_fu_11646_p0;
wire  signed [2:0] mul_ln1345_375_fu_11646_p1;
wire  signed [5:0] mul_ln1345_375_fu_11646_p2;
wire   [2:0] mul_ln1345_376_fu_11654_p0;
wire  signed [2:0] mul_ln1345_376_fu_11654_p1;
wire  signed [5:0] mul_ln1345_376_fu_11654_p2;
wire   [2:0] mul_ln1345_377_fu_11662_p0;
wire  signed [2:0] mul_ln1345_377_fu_11662_p1;
wire  signed [5:0] mul_ln1345_377_fu_11662_p2;
wire   [2:0] mul_ln1345_378_fu_11670_p0;
wire  signed [2:0] mul_ln1345_378_fu_11670_p1;
wire   [2:0] mul_ln1345_379_fu_11676_p0;
wire  signed [2:0] mul_ln1345_379_fu_11676_p1;
wire  signed [5:0] mul_ln1345_379_fu_11676_p2;
wire   [2:0] mul_ln1345_380_fu_11684_p0;
wire  signed [2:0] mul_ln1345_380_fu_11684_p1;
wire   [2:0] mul_ln1345_381_fu_11690_p0;
wire  signed [2:0] mul_ln1345_381_fu_11690_p1;
wire  signed [5:0] mul_ln1345_381_fu_11690_p2;
wire   [2:0] mul_ln1345_382_fu_11700_p0;
wire  signed [2:0] mul_ln1345_382_fu_11700_p1;
wire  signed [5:0] mul_ln1345_382_fu_11700_p2;
wire   [2:0] mul_ln1345_383_fu_11710_p0;
wire  signed [2:0] mul_ln1345_383_fu_11710_p1;
wire  signed [5:0] mul_ln1345_383_fu_11710_p2;
wire  signed [6:0] sext_ln151_350_fu_11696_p1;
wire  signed [6:0] sext_ln151_351_fu_11706_p1;
wire  signed [6:0] sext_ln151_346_fu_11666_p1;
wire  signed [6:0] sext_ln151_348_fu_11680_p1;
wire  signed [6:0] sext_ln151_340_fu_11620_p1;
wire  signed [6:0] sext_ln151_342_fu_11634_p1;
wire  signed [6:0] sext_ln151_343_fu_11642_p1;
wire  signed [6:0] sext_ln151_345_fu_11658_p1;
wire  signed [6:0] sext_ln151_330_fu_11546_p1;
wire  signed [6:0] sext_ln691_330_fu_11543_p1;
wire   [6:0] add_ln691_371_fu_11742_p2;
wire  signed [7:0] sext_ln691_340_fu_11748_p1;
wire  signed [7:0] sext_ln151_344_fu_11650_p1;
wire  signed [6:0] sext_ln151_333_fu_11564_p1;
wire  signed [6:0] sext_ln151_332_fu_11556_p1;
wire   [6:0] add_ln691_373_fu_11758_p2;
wire  signed [7:0] sext_ln691_342_fu_11764_p1;
wire  signed [7:0] sext_ln151_331_fu_11549_p1;
wire  signed [6:0] sext_ln151_336_fu_11588_p1;
wire  signed [6:0] sext_ln151_335_fu_11580_p1;
wire   [6:0] add_ln691_376_fu_11774_p2;
wire  signed [7:0] sext_ln691_345_fu_11780_p1;
wire  signed [7:0] sext_ln151_334_fu_11572_p1;
wire  signed [6:0] sext_ln151_337_fu_11596_p1;
wire  signed [6:0] sext_ln151_339_fu_11612_p1;
wire   [6:0] add_ln691_378_fu_11790_p2;
wire  signed [6:0] sext_ln151_338_fu_11604_p1;
wire  signed [6:0] sext_ln691_331_fu_11714_p1;
wire   [6:0] add_ln691_379_fu_11800_p2;
wire  signed [7:0] sext_ln691_348_fu_11806_p1;
wire  signed [7:0] sext_ln691_347_fu_11796_p1;
wire   [2:0] mul_ln1345_384_fu_11816_p0;
wire  signed [2:0] mul_ln1345_384_fu_11816_p1;
wire  signed [5:0] mul_ln1345_384_fu_11816_p2;
wire   [2:0] mul_ln1345_385_fu_11824_p0;
wire  signed [2:0] mul_ln1345_385_fu_11824_p1;
wire  signed [5:0] mul_ln1345_385_fu_11824_p2;
wire   [2:0] mul_ln1345_386_fu_11832_p0;
wire  signed [2:0] mul_ln1345_386_fu_11832_p1;
wire  signed [5:0] mul_ln1345_386_fu_11832_p2;
wire   [2:0] mul_ln1345_387_fu_11840_p0;
wire  signed [2:0] mul_ln1345_387_fu_11840_p1;
wire  signed [5:0] mul_ln1345_387_fu_11840_p2;
wire   [2:0] mul_ln1345_388_fu_11848_p0;
wire  signed [2:0] mul_ln1345_388_fu_11848_p1;
wire  signed [5:0] mul_ln1345_388_fu_11848_p2;
wire   [2:0] mul_ln1345_389_fu_11856_p0;
wire  signed [2:0] mul_ln1345_389_fu_11856_p1;
wire  signed [5:0] mul_ln1345_389_fu_11856_p2;
wire   [2:0] mul_ln1345_390_fu_11864_p0;
wire  signed [2:0] mul_ln1345_390_fu_11864_p1;
wire  signed [5:0] mul_ln1345_390_fu_11864_p2;
wire   [2:0] mul_ln1345_391_fu_11872_p0;
wire  signed [2:0] mul_ln1345_391_fu_11872_p1;
wire  signed [5:0] mul_ln1345_391_fu_11872_p2;
wire   [2:0] mul_ln1345_392_fu_11880_p0;
wire  signed [2:0] mul_ln1345_392_fu_11880_p1;
wire  signed [5:0] mul_ln1345_392_fu_11880_p2;
wire   [2:0] mul_ln1345_393_fu_11888_p0;
wire  signed [2:0] mul_ln1345_393_fu_11888_p1;
wire  signed [5:0] mul_ln1345_393_fu_11888_p2;
wire   [2:0] mul_ln1345_394_fu_11896_p0;
wire  signed [2:0] mul_ln1345_394_fu_11896_p1;
wire  signed [5:0] mul_ln1345_394_fu_11896_p2;
wire   [2:0] mul_ln1345_395_fu_11904_p0;
wire  signed [2:0] mul_ln1345_395_fu_11904_p1;
wire  signed [5:0] mul_ln1345_395_fu_11904_p2;
wire   [2:0] mul_ln1345_396_fu_11912_p0;
wire  signed [2:0] mul_ln1345_396_fu_11912_p1;
wire   [2:0] mul_ln1345_397_fu_11918_p0;
wire  signed [2:0] mul_ln1345_397_fu_11918_p1;
wire  signed [5:0] mul_ln1345_397_fu_11918_p2;
wire   [2:0] mul_ln1345_398_fu_11926_p0;
wire  signed [2:0] mul_ln1345_398_fu_11926_p1;
wire  signed [5:0] mul_ln1345_398_fu_11926_p2;
wire   [2:0] mul_ln1345_399_fu_11934_p0;
wire  signed [2:0] mul_ln1345_399_fu_11934_p1;
wire  signed [5:0] mul_ln1345_399_fu_11934_p2;
wire   [2:0] mul_ln1345_400_fu_11942_p0;
wire  signed [2:0] mul_ln1345_400_fu_11942_p1;
wire  signed [5:0] mul_ln1345_400_fu_11942_p2;
wire   [2:0] mul_ln1345_401_fu_11950_p0;
wire  signed [2:0] mul_ln1345_401_fu_11950_p1;
wire  signed [5:0] mul_ln1345_401_fu_11950_p2;
wire   [2:0] mul_ln1345_402_fu_11958_p0;
wire  signed [2:0] mul_ln1345_402_fu_11958_p1;
wire   [2:0] mul_ln1345_403_fu_11964_p0;
wire  signed [2:0] mul_ln1345_403_fu_11964_p1;
wire  signed [5:0] mul_ln1345_403_fu_11964_p2;
wire   [2:0] mul_ln1345_404_fu_11972_p0;
wire  signed [2:0] mul_ln1345_404_fu_11972_p1;
wire   [2:0] mul_ln1345_405_fu_11978_p0;
wire  signed [2:0] mul_ln1345_405_fu_11978_p1;
wire  signed [5:0] mul_ln1345_405_fu_11978_p2;
wire   [2:0] mul_ln1345_406_fu_11988_p0;
wire  signed [2:0] mul_ln1345_406_fu_11988_p1;
wire  signed [5:0] mul_ln1345_406_fu_11988_p2;
wire   [2:0] mul_ln1345_407_fu_11998_p0;
wire  signed [2:0] mul_ln1345_407_fu_11998_p1;
wire  signed [5:0] mul_ln1345_407_fu_11998_p2;
wire  signed [6:0] sext_ln151_372_fu_11984_p1;
wire  signed [6:0] sext_ln151_373_fu_11994_p1;
wire  signed [6:0] sext_ln151_368_fu_11954_p1;
wire  signed [6:0] sext_ln151_370_fu_11968_p1;
wire  signed [6:0] sext_ln151_362_fu_11908_p1;
wire  signed [6:0] sext_ln151_364_fu_11922_p1;
wire  signed [6:0] sext_ln151_365_fu_11930_p1;
wire  signed [6:0] sext_ln151_367_fu_11946_p1;
wire  signed [6:0] sext_ln151_352_fu_11828_p1;
wire  signed [6:0] sext_ln691_352_fu_11820_p1;
wire   [6:0] add_ln691_395_fu_12030_p2;
wire  signed [7:0] sext_ln691_362_fu_12036_p1;
wire  signed [7:0] sext_ln151_366_fu_11938_p1;
wire  signed [6:0] sext_ln151_355_fu_11852_p1;
wire  signed [6:0] sext_ln151_354_fu_11844_p1;
wire   [6:0] add_ln691_397_fu_12046_p2;
wire  signed [7:0] sext_ln691_364_fu_12052_p1;
wire  signed [7:0] sext_ln151_353_fu_11836_p1;
wire  signed [6:0] sext_ln151_358_fu_11876_p1;
wire  signed [6:0] sext_ln151_357_fu_11868_p1;
wire   [6:0] add_ln691_400_fu_12062_p2;
wire  signed [7:0] sext_ln691_367_fu_12068_p1;
wire  signed [7:0] sext_ln151_356_fu_11860_p1;
wire  signed [6:0] sext_ln151_359_fu_11884_p1;
wire  signed [6:0] sext_ln151_361_fu_11900_p1;
wire   [6:0] add_ln691_402_fu_12078_p2;
wire  signed [6:0] sext_ln151_360_fu_11892_p1;
wire  signed [6:0] sext_ln691_353_fu_12002_p1;
wire   [6:0] add_ln691_403_fu_12088_p2;
wire  signed [7:0] sext_ln691_370_fu_12094_p1;
wire  signed [7:0] sext_ln691_369_fu_12084_p1;
wire   [2:0] mul_ln1345_408_fu_12104_p0;
wire  signed [2:0] mul_ln1345_408_fu_12104_p1;
wire  signed [5:0] mul_ln1345_408_fu_12104_p2;
wire   [2:0] mul_ln1345_409_fu_12112_p0;
wire  signed [2:0] mul_ln1345_409_fu_12112_p1;
wire  signed [5:0] mul_ln1345_409_fu_12112_p2;
wire   [2:0] mul_ln1345_410_fu_12120_p0;
wire  signed [2:0] mul_ln1345_410_fu_12120_p1;
wire  signed [5:0] mul_ln1345_410_fu_12120_p2;
wire   [2:0] mul_ln1345_411_fu_12128_p0;
wire  signed [2:0] mul_ln1345_411_fu_12128_p1;
wire  signed [5:0] mul_ln1345_411_fu_12128_p2;
wire   [2:0] mul_ln1345_412_fu_12136_p0;
wire  signed [2:0] mul_ln1345_412_fu_12136_p1;
wire  signed [5:0] mul_ln1345_412_fu_12136_p2;
wire   [2:0] mul_ln1345_413_fu_12144_p0;
wire  signed [2:0] mul_ln1345_413_fu_12144_p1;
wire  signed [5:0] mul_ln1345_413_fu_12144_p2;
wire   [2:0] mul_ln1345_414_fu_12152_p0;
wire  signed [2:0] mul_ln1345_414_fu_12152_p1;
wire  signed [5:0] mul_ln1345_414_fu_12152_p2;
wire   [2:0] mul_ln1345_415_fu_12160_p0;
wire  signed [2:0] mul_ln1345_415_fu_12160_p1;
wire  signed [5:0] mul_ln1345_415_fu_12160_p2;
wire   [2:0] mul_ln1345_416_fu_12168_p0;
wire  signed [2:0] mul_ln1345_416_fu_12168_p1;
wire  signed [5:0] mul_ln1345_416_fu_12168_p2;
wire   [2:0] mul_ln1345_417_fu_12176_p0;
wire  signed [2:0] mul_ln1345_417_fu_12176_p1;
wire  signed [5:0] mul_ln1345_417_fu_12176_p2;
wire   [2:0] mul_ln1345_418_fu_12184_p0;
wire  signed [2:0] mul_ln1345_418_fu_12184_p1;
wire  signed [5:0] mul_ln1345_418_fu_12184_p2;
wire   [2:0] mul_ln1345_419_fu_12192_p0;
wire  signed [2:0] mul_ln1345_419_fu_12192_p1;
wire  signed [5:0] mul_ln1345_419_fu_12192_p2;
wire   [2:0] mul_ln1345_420_fu_12200_p0;
wire  signed [2:0] mul_ln1345_420_fu_12200_p1;
wire   [2:0] mul_ln1345_421_fu_12206_p0;
wire  signed [2:0] mul_ln1345_421_fu_12206_p1;
wire  signed [5:0] mul_ln1345_421_fu_12206_p2;
wire   [2:0] mul_ln1345_422_fu_12214_p0;
wire  signed [2:0] mul_ln1345_422_fu_12214_p1;
wire  signed [5:0] mul_ln1345_422_fu_12214_p2;
wire   [2:0] mul_ln1345_423_fu_12222_p0;
wire  signed [2:0] mul_ln1345_423_fu_12222_p1;
wire  signed [5:0] mul_ln1345_423_fu_12222_p2;
wire   [2:0] mul_ln1345_424_fu_12230_p0;
wire  signed [2:0] mul_ln1345_424_fu_12230_p1;
wire  signed [5:0] mul_ln1345_424_fu_12230_p2;
wire   [2:0] mul_ln1345_425_fu_12238_p0;
wire  signed [2:0] mul_ln1345_425_fu_12238_p1;
wire  signed [5:0] mul_ln1345_425_fu_12238_p2;
wire   [2:0] mul_ln1345_426_fu_12246_p0;
wire  signed [2:0] mul_ln1345_426_fu_12246_p1;
wire   [2:0] mul_ln1345_427_fu_12252_p0;
wire  signed [2:0] mul_ln1345_427_fu_12252_p1;
wire  signed [5:0] mul_ln1345_427_fu_12252_p2;
wire   [2:0] mul_ln1345_428_fu_12260_p0;
wire  signed [2:0] mul_ln1345_428_fu_12260_p1;
wire   [2:0] mul_ln1345_429_fu_12266_p0;
wire  signed [2:0] mul_ln1345_429_fu_12266_p1;
wire  signed [5:0] mul_ln1345_429_fu_12266_p2;
wire   [2:0] mul_ln1345_430_fu_12276_p0;
wire  signed [2:0] mul_ln1345_430_fu_12276_p1;
wire  signed [5:0] mul_ln1345_430_fu_12276_p2;
wire   [2:0] mul_ln1345_431_fu_12286_p0;
wire  signed [2:0] mul_ln1345_431_fu_12286_p1;
wire  signed [5:0] mul_ln1345_431_fu_12286_p2;
wire  signed [6:0] sext_ln151_394_fu_12272_p1;
wire  signed [6:0] sext_ln151_395_fu_12282_p1;
wire  signed [6:0] sext_ln151_390_fu_12242_p1;
wire  signed [6:0] sext_ln151_392_fu_12256_p1;
wire  signed [6:0] sext_ln151_384_fu_12196_p1;
wire  signed [6:0] sext_ln151_386_fu_12210_p1;
wire  signed [6:0] sext_ln151_387_fu_12218_p1;
wire  signed [6:0] sext_ln151_389_fu_12234_p1;
wire  signed [6:0] sext_ln151_374_fu_12116_p1;
wire  signed [6:0] sext_ln691_374_fu_12108_p1;
wire   [6:0] add_ln691_419_fu_12318_p2;
wire  signed [7:0] sext_ln691_384_fu_12324_p1;
wire  signed [7:0] sext_ln151_388_fu_12226_p1;
wire  signed [6:0] sext_ln151_377_fu_12140_p1;
wire  signed [6:0] sext_ln151_376_fu_12132_p1;
wire   [6:0] add_ln691_421_fu_12334_p2;
wire  signed [7:0] sext_ln691_386_fu_12340_p1;
wire  signed [7:0] sext_ln151_375_fu_12124_p1;
wire  signed [6:0] sext_ln151_380_fu_12164_p1;
wire  signed [6:0] sext_ln151_379_fu_12156_p1;
wire   [6:0] add_ln691_424_fu_12350_p2;
wire  signed [7:0] sext_ln691_389_fu_12356_p1;
wire  signed [7:0] sext_ln151_378_fu_12148_p1;
wire  signed [6:0] sext_ln151_381_fu_12172_p1;
wire  signed [6:0] sext_ln151_383_fu_12188_p1;
wire   [6:0] add_ln691_426_fu_12366_p2;
wire  signed [6:0] sext_ln151_382_fu_12180_p1;
wire  signed [6:0] sext_ln691_375_fu_12290_p1;
wire   [6:0] add_ln691_427_fu_12376_p2;
wire  signed [7:0] sext_ln691_392_fu_12382_p1;
wire  signed [7:0] sext_ln691_391_fu_12372_p1;
wire   [2:0] mul_ln1345_432_fu_12392_p0;
wire  signed [2:0] mul_ln1345_432_fu_12392_p1;
wire  signed [5:0] mul_ln1345_432_fu_12392_p2;
wire   [2:0] mul_ln1345_433_fu_12400_p0;
wire  signed [2:0] mul_ln1345_433_fu_12400_p1;
wire  signed [5:0] mul_ln1345_433_fu_12400_p2;
wire   [2:0] mul_ln1345_434_fu_12408_p0;
wire  signed [2:0] mul_ln1345_434_fu_12408_p1;
wire  signed [5:0] mul_ln1345_434_fu_12408_p2;
wire   [2:0] mul_ln1345_435_fu_12416_p0;
wire  signed [2:0] mul_ln1345_435_fu_12416_p1;
wire  signed [5:0] mul_ln1345_435_fu_12416_p2;
wire   [2:0] mul_ln1345_436_fu_12424_p0;
wire  signed [2:0] mul_ln1345_436_fu_12424_p1;
wire  signed [5:0] mul_ln1345_436_fu_12424_p2;
wire   [2:0] mul_ln1345_437_fu_12432_p0;
wire  signed [2:0] mul_ln1345_437_fu_12432_p1;
wire  signed [5:0] mul_ln1345_437_fu_12432_p2;
wire   [2:0] mul_ln1345_438_fu_12440_p0;
wire  signed [2:0] mul_ln1345_438_fu_12440_p1;
wire  signed [5:0] mul_ln1345_438_fu_12440_p2;
wire   [2:0] mul_ln1345_439_fu_12448_p0;
wire  signed [2:0] mul_ln1345_439_fu_12448_p1;
wire  signed [5:0] mul_ln1345_439_fu_12448_p2;
wire   [2:0] mul_ln1345_440_fu_12456_p0;
wire  signed [2:0] mul_ln1345_440_fu_12456_p1;
wire  signed [5:0] mul_ln1345_440_fu_12456_p2;
wire   [2:0] mul_ln1345_441_fu_12464_p0;
wire  signed [2:0] mul_ln1345_441_fu_12464_p1;
wire  signed [5:0] mul_ln1345_441_fu_12464_p2;
wire   [2:0] mul_ln1345_442_fu_12472_p0;
wire  signed [2:0] mul_ln1345_442_fu_12472_p1;
wire  signed [5:0] mul_ln1345_442_fu_12472_p2;
wire   [2:0] mul_ln1345_443_fu_12480_p0;
wire  signed [2:0] mul_ln1345_443_fu_12480_p1;
wire  signed [5:0] mul_ln1345_443_fu_12480_p2;
wire   [2:0] mul_ln1345_444_fu_12488_p0;
wire  signed [2:0] mul_ln1345_444_fu_12488_p1;
wire   [2:0] mul_ln1345_445_fu_12494_p0;
wire  signed [2:0] mul_ln1345_445_fu_12494_p1;
wire  signed [5:0] mul_ln1345_445_fu_12494_p2;
wire   [2:0] mul_ln1345_446_fu_12502_p0;
wire  signed [2:0] mul_ln1345_446_fu_12502_p1;
wire  signed [5:0] mul_ln1345_446_fu_12502_p2;
wire   [2:0] mul_ln1345_447_fu_12510_p0;
wire  signed [2:0] mul_ln1345_447_fu_12510_p1;
wire  signed [5:0] mul_ln1345_447_fu_12510_p2;
wire   [2:0] mul_ln1345_448_fu_12518_p0;
wire  signed [2:0] mul_ln1345_448_fu_12518_p1;
wire  signed [5:0] mul_ln1345_448_fu_12518_p2;
wire   [2:0] mul_ln1345_449_fu_12526_p0;
wire  signed [2:0] mul_ln1345_449_fu_12526_p1;
wire  signed [5:0] mul_ln1345_449_fu_12526_p2;
wire   [2:0] mul_ln1345_450_fu_12534_p0;
wire  signed [2:0] mul_ln1345_450_fu_12534_p1;
wire   [2:0] mul_ln1345_451_fu_12540_p0;
wire  signed [2:0] mul_ln1345_451_fu_12540_p1;
wire  signed [5:0] mul_ln1345_451_fu_12540_p2;
wire   [2:0] mul_ln1345_452_fu_12548_p0;
wire  signed [2:0] mul_ln1345_452_fu_12548_p1;
wire   [2:0] mul_ln1345_453_fu_12554_p0;
wire  signed [2:0] mul_ln1345_453_fu_12554_p1;
wire  signed [5:0] mul_ln1345_453_fu_12554_p2;
wire   [2:0] mul_ln1345_454_fu_12564_p0;
wire  signed [2:0] mul_ln1345_454_fu_12564_p1;
wire  signed [5:0] mul_ln1345_454_fu_12564_p2;
wire   [2:0] mul_ln1345_455_fu_12574_p0;
wire  signed [2:0] mul_ln1345_455_fu_12574_p1;
wire  signed [5:0] mul_ln1345_455_fu_12574_p2;
wire  signed [6:0] sext_ln151_416_fu_12560_p1;
wire  signed [6:0] sext_ln151_417_fu_12570_p1;
wire  signed [6:0] sext_ln151_412_fu_12530_p1;
wire  signed [6:0] sext_ln151_414_fu_12544_p1;
wire  signed [6:0] sext_ln151_406_fu_12484_p1;
wire  signed [6:0] sext_ln151_408_fu_12498_p1;
wire  signed [6:0] sext_ln151_409_fu_12506_p1;
wire  signed [6:0] sext_ln151_411_fu_12522_p1;
wire  signed [6:0] sext_ln151_396_fu_12404_p1;
wire  signed [6:0] sext_ln691_396_fu_12396_p1;
wire   [6:0] add_ln691_443_fu_12606_p2;
wire  signed [7:0] sext_ln691_406_fu_12612_p1;
wire  signed [7:0] sext_ln151_410_fu_12514_p1;
wire  signed [6:0] sext_ln151_399_fu_12428_p1;
wire  signed [6:0] sext_ln151_398_fu_12420_p1;
wire   [6:0] add_ln691_445_fu_12622_p2;
wire  signed [7:0] sext_ln691_408_fu_12628_p1;
wire  signed [7:0] sext_ln151_397_fu_12412_p1;
wire  signed [6:0] sext_ln151_402_fu_12452_p1;
wire  signed [6:0] sext_ln151_401_fu_12444_p1;
wire   [6:0] add_ln691_448_fu_12638_p2;
wire  signed [7:0] sext_ln691_411_fu_12644_p1;
wire  signed [7:0] sext_ln151_400_fu_12436_p1;
wire  signed [6:0] sext_ln151_403_fu_12460_p1;
wire  signed [6:0] sext_ln151_405_fu_12476_p1;
wire   [6:0] add_ln691_450_fu_12654_p2;
wire  signed [6:0] sext_ln151_404_fu_12468_p1;
wire  signed [6:0] sext_ln691_397_fu_12578_p1;
wire   [6:0] add_ln691_451_fu_12664_p2;
wire  signed [7:0] sext_ln691_414_fu_12670_p1;
wire  signed [7:0] sext_ln691_413_fu_12660_p1;
wire   [2:0] mul_ln1345_456_fu_12680_p0;
wire  signed [2:0] mul_ln1345_456_fu_12680_p1;
wire  signed [5:0] mul_ln1345_456_fu_12680_p2;
wire   [2:0] mul_ln1345_457_fu_12688_p0;
wire  signed [2:0] mul_ln1345_457_fu_12688_p1;
wire  signed [5:0] mul_ln1345_457_fu_12688_p2;
wire   [2:0] mul_ln1345_458_fu_12696_p0;
wire  signed [2:0] mul_ln1345_458_fu_12696_p1;
wire  signed [5:0] mul_ln1345_458_fu_12696_p2;
wire   [2:0] mul_ln1345_459_fu_12704_p0;
wire  signed [2:0] mul_ln1345_459_fu_12704_p1;
wire  signed [5:0] mul_ln1345_459_fu_12704_p2;
wire   [2:0] mul_ln1345_460_fu_12712_p0;
wire  signed [2:0] mul_ln1345_460_fu_12712_p1;
wire  signed [5:0] mul_ln1345_460_fu_12712_p2;
wire   [2:0] mul_ln1345_461_fu_12720_p0;
wire  signed [2:0] mul_ln1345_461_fu_12720_p1;
wire  signed [5:0] mul_ln1345_461_fu_12720_p2;
wire   [2:0] mul_ln1345_462_fu_12728_p0;
wire  signed [2:0] mul_ln1345_462_fu_12728_p1;
wire  signed [5:0] mul_ln1345_462_fu_12728_p2;
wire   [2:0] mul_ln1345_463_fu_12736_p0;
wire  signed [2:0] mul_ln1345_463_fu_12736_p1;
wire  signed [5:0] mul_ln1345_463_fu_12736_p2;
wire   [2:0] mul_ln1345_464_fu_12744_p0;
wire  signed [2:0] mul_ln1345_464_fu_12744_p1;
wire  signed [5:0] mul_ln1345_464_fu_12744_p2;
wire   [2:0] mul_ln1345_465_fu_12752_p0;
wire  signed [2:0] mul_ln1345_465_fu_12752_p1;
wire  signed [5:0] mul_ln1345_465_fu_12752_p2;
wire   [2:0] mul_ln1345_466_fu_12760_p0;
wire  signed [2:0] mul_ln1345_466_fu_12760_p1;
wire  signed [5:0] mul_ln1345_466_fu_12760_p2;
wire   [2:0] mul_ln1345_467_fu_12768_p0;
wire  signed [2:0] mul_ln1345_467_fu_12768_p1;
wire  signed [5:0] mul_ln1345_467_fu_12768_p2;
wire   [2:0] mul_ln1345_468_fu_12776_p0;
wire  signed [2:0] mul_ln1345_468_fu_12776_p1;
wire   [2:0] mul_ln1345_469_fu_12782_p0;
wire  signed [2:0] mul_ln1345_469_fu_12782_p1;
wire  signed [5:0] mul_ln1345_469_fu_12782_p2;
wire   [2:0] mul_ln1345_470_fu_12790_p0;
wire  signed [2:0] mul_ln1345_470_fu_12790_p1;
wire  signed [5:0] mul_ln1345_470_fu_12790_p2;
wire   [2:0] mul_ln1345_471_fu_12798_p0;
wire  signed [2:0] mul_ln1345_471_fu_12798_p1;
wire  signed [5:0] mul_ln1345_471_fu_12798_p2;
wire   [2:0] mul_ln1345_472_fu_12806_p0;
wire  signed [2:0] mul_ln1345_472_fu_12806_p1;
wire  signed [5:0] mul_ln1345_472_fu_12806_p2;
wire   [2:0] mul_ln1345_473_fu_12814_p0;
wire  signed [2:0] mul_ln1345_473_fu_12814_p1;
wire  signed [5:0] mul_ln1345_473_fu_12814_p2;
wire   [2:0] mul_ln1345_474_fu_12822_p0;
wire  signed [2:0] mul_ln1345_474_fu_12822_p1;
wire   [2:0] mul_ln1345_475_fu_12828_p0;
wire  signed [2:0] mul_ln1345_475_fu_12828_p1;
wire  signed [5:0] mul_ln1345_475_fu_12828_p2;
wire   [2:0] mul_ln1345_476_fu_12836_p0;
wire  signed [2:0] mul_ln1345_476_fu_12836_p1;
wire   [2:0] mul_ln1345_477_fu_12842_p0;
wire  signed [2:0] mul_ln1345_477_fu_12842_p1;
wire  signed [5:0] mul_ln1345_477_fu_12842_p2;
wire   [2:0] mul_ln1345_478_fu_12852_p0;
wire  signed [2:0] mul_ln1345_478_fu_12852_p1;
wire  signed [5:0] mul_ln1345_478_fu_12852_p2;
wire   [2:0] mul_ln1345_479_fu_12862_p0;
wire  signed [2:0] mul_ln1345_479_fu_12862_p1;
wire  signed [5:0] mul_ln1345_479_fu_12862_p2;
wire  signed [6:0] sext_ln151_438_fu_12848_p1;
wire  signed [6:0] sext_ln151_439_fu_12858_p1;
wire  signed [6:0] sext_ln151_434_fu_12818_p1;
wire  signed [6:0] sext_ln151_436_fu_12832_p1;
wire  signed [6:0] sext_ln151_428_fu_12772_p1;
wire  signed [6:0] sext_ln151_430_fu_12786_p1;
wire  signed [6:0] sext_ln151_431_fu_12794_p1;
wire  signed [6:0] sext_ln151_433_fu_12810_p1;
wire  signed [6:0] sext_ln151_418_fu_12692_p1;
wire  signed [6:0] sext_ln691_418_fu_12684_p1;
wire   [6:0] add_ln691_467_fu_12894_p2;
wire  signed [7:0] sext_ln691_428_fu_12900_p1;
wire  signed [7:0] sext_ln151_432_fu_12802_p1;
wire  signed [6:0] sext_ln151_421_fu_12716_p1;
wire  signed [6:0] sext_ln151_420_fu_12708_p1;
wire   [6:0] add_ln691_469_fu_12910_p2;
wire  signed [7:0] sext_ln691_430_fu_12916_p1;
wire  signed [7:0] sext_ln151_419_fu_12700_p1;
wire  signed [6:0] sext_ln151_424_fu_12740_p1;
wire  signed [6:0] sext_ln151_423_fu_12732_p1;
wire   [6:0] add_ln691_472_fu_12926_p2;
wire  signed [7:0] sext_ln691_433_fu_12932_p1;
wire  signed [7:0] sext_ln151_422_fu_12724_p1;
wire  signed [6:0] sext_ln151_425_fu_12748_p1;
wire  signed [6:0] sext_ln151_427_fu_12764_p1;
wire   [6:0] add_ln691_474_fu_12942_p2;
wire  signed [6:0] sext_ln151_426_fu_12756_p1;
wire  signed [6:0] sext_ln691_419_fu_12866_p1;
wire   [6:0] add_ln691_475_fu_12952_p2;
wire  signed [7:0] sext_ln691_436_fu_12958_p1;
wire  signed [7:0] sext_ln691_435_fu_12948_p1;
wire   [2:0] mul_ln1345_480_fu_12968_p0;
wire  signed [2:0] mul_ln1345_480_fu_12968_p1;
wire  signed [5:0] mul_ln1345_480_fu_12968_p2;
wire   [2:0] mul_ln1345_481_fu_12976_p0;
wire  signed [2:0] mul_ln1345_481_fu_12976_p1;
wire  signed [5:0] mul_ln1345_481_fu_12976_p2;
wire   [2:0] mul_ln1345_482_fu_12984_p0;
wire  signed [2:0] mul_ln1345_482_fu_12984_p1;
wire  signed [5:0] mul_ln1345_482_fu_12984_p2;
wire   [2:0] mul_ln1345_483_fu_12992_p0;
wire  signed [2:0] mul_ln1345_483_fu_12992_p1;
wire  signed [5:0] mul_ln1345_483_fu_12992_p2;
wire   [2:0] mul_ln1345_484_fu_13000_p0;
wire  signed [2:0] mul_ln1345_484_fu_13000_p1;
wire  signed [5:0] mul_ln1345_484_fu_13000_p2;
wire   [2:0] mul_ln1345_485_fu_13008_p0;
wire  signed [2:0] mul_ln1345_485_fu_13008_p1;
wire  signed [5:0] mul_ln1345_485_fu_13008_p2;
wire   [2:0] mul_ln1345_486_fu_13016_p0;
wire  signed [2:0] mul_ln1345_486_fu_13016_p1;
wire  signed [5:0] mul_ln1345_486_fu_13016_p2;
wire   [2:0] mul_ln1345_487_fu_13024_p0;
wire  signed [2:0] mul_ln1345_487_fu_13024_p1;
wire  signed [5:0] mul_ln1345_487_fu_13024_p2;
wire   [2:0] mul_ln1345_488_fu_13032_p0;
wire  signed [2:0] mul_ln1345_488_fu_13032_p1;
wire  signed [5:0] mul_ln1345_488_fu_13032_p2;
wire   [2:0] mul_ln1345_489_fu_13040_p0;
wire  signed [2:0] mul_ln1345_489_fu_13040_p1;
wire  signed [5:0] mul_ln1345_489_fu_13040_p2;
wire   [2:0] mul_ln1345_490_fu_13048_p0;
wire  signed [2:0] mul_ln1345_490_fu_13048_p1;
wire  signed [5:0] mul_ln1345_490_fu_13048_p2;
wire   [2:0] mul_ln1345_491_fu_13056_p0;
wire  signed [2:0] mul_ln1345_491_fu_13056_p1;
wire  signed [5:0] mul_ln1345_491_fu_13056_p2;
wire   [2:0] mul_ln1345_492_fu_13064_p0;
wire  signed [2:0] mul_ln1345_492_fu_13064_p1;
wire   [2:0] mul_ln1345_493_fu_13070_p0;
wire  signed [2:0] mul_ln1345_493_fu_13070_p1;
wire  signed [5:0] mul_ln1345_493_fu_13070_p2;
wire   [2:0] mul_ln1345_494_fu_13078_p0;
wire  signed [2:0] mul_ln1345_494_fu_13078_p1;
wire  signed [5:0] mul_ln1345_494_fu_13078_p2;
wire   [2:0] mul_ln1345_495_fu_13086_p0;
wire  signed [2:0] mul_ln1345_495_fu_13086_p1;
wire  signed [5:0] mul_ln1345_495_fu_13086_p2;
wire   [2:0] mul_ln1345_496_fu_13094_p0;
wire  signed [2:0] mul_ln1345_496_fu_13094_p1;
wire  signed [5:0] mul_ln1345_496_fu_13094_p2;
wire   [2:0] mul_ln1345_497_fu_13102_p0;
wire  signed [2:0] mul_ln1345_497_fu_13102_p1;
wire  signed [5:0] mul_ln1345_497_fu_13102_p2;
wire   [2:0] mul_ln1345_498_fu_13110_p0;
wire  signed [2:0] mul_ln1345_498_fu_13110_p1;
wire   [2:0] mul_ln1345_499_fu_13116_p0;
wire  signed [2:0] mul_ln1345_499_fu_13116_p1;
wire  signed [5:0] mul_ln1345_499_fu_13116_p2;
wire   [2:0] mul_ln1345_500_fu_13124_p0;
wire  signed [2:0] mul_ln1345_500_fu_13124_p1;
wire   [2:0] mul_ln1345_501_fu_13130_p0;
wire  signed [2:0] mul_ln1345_501_fu_13130_p1;
wire  signed [5:0] mul_ln1345_501_fu_13130_p2;
wire   [2:0] mul_ln1345_502_fu_13140_p0;
wire  signed [2:0] mul_ln1345_502_fu_13140_p1;
wire  signed [5:0] mul_ln1345_502_fu_13140_p2;
wire   [2:0] mul_ln1345_503_fu_13150_p0;
wire  signed [2:0] mul_ln1345_503_fu_13150_p1;
wire  signed [5:0] mul_ln1345_503_fu_13150_p2;
wire  signed [6:0] sext_ln151_460_fu_13136_p1;
wire  signed [6:0] sext_ln151_461_fu_13146_p1;
wire  signed [6:0] sext_ln151_456_fu_13106_p1;
wire  signed [6:0] sext_ln151_458_fu_13120_p1;
wire  signed [6:0] sext_ln151_450_fu_13060_p1;
wire  signed [6:0] sext_ln151_452_fu_13074_p1;
wire  signed [6:0] sext_ln151_453_fu_13082_p1;
wire  signed [6:0] sext_ln151_455_fu_13098_p1;
wire  signed [6:0] sext_ln151_440_fu_12980_p1;
wire  signed [6:0] sext_ln691_440_fu_12972_p1;
wire   [6:0] add_ln691_491_fu_13182_p2;
wire  signed [7:0] sext_ln691_450_fu_13188_p1;
wire  signed [7:0] sext_ln151_454_fu_13090_p1;
wire  signed [6:0] sext_ln151_443_fu_13004_p1;
wire  signed [6:0] sext_ln151_442_fu_12996_p1;
wire   [6:0] add_ln691_493_fu_13198_p2;
wire  signed [7:0] sext_ln691_452_fu_13204_p1;
wire  signed [7:0] sext_ln151_441_fu_12988_p1;
wire  signed [6:0] sext_ln151_446_fu_13028_p1;
wire  signed [6:0] sext_ln151_445_fu_13020_p1;
wire   [6:0] add_ln691_496_fu_13214_p2;
wire  signed [7:0] sext_ln691_455_fu_13220_p1;
wire  signed [7:0] sext_ln151_444_fu_13012_p1;
wire  signed [6:0] sext_ln151_447_fu_13036_p1;
wire  signed [6:0] sext_ln151_449_fu_13052_p1;
wire   [6:0] add_ln691_498_fu_13230_p2;
wire  signed [6:0] sext_ln151_448_fu_13044_p1;
wire  signed [6:0] sext_ln691_441_fu_13154_p1;
wire   [6:0] add_ln691_499_fu_13240_p2;
wire  signed [7:0] sext_ln691_458_fu_13246_p1;
wire  signed [7:0] sext_ln691_457_fu_13236_p1;
wire   [2:0] mul_ln1345_504_fu_13256_p0;
wire  signed [2:0] mul_ln1345_504_fu_13256_p1;
wire  signed [5:0] mul_ln1345_504_fu_13256_p2;
wire   [2:0] mul_ln1345_505_fu_13264_p0;
wire  signed [2:0] mul_ln1345_505_fu_13264_p1;
wire  signed [5:0] mul_ln1345_505_fu_13264_p2;
wire   [2:0] mul_ln1345_506_fu_13272_p0;
wire  signed [2:0] mul_ln1345_506_fu_13272_p1;
wire  signed [5:0] mul_ln1345_506_fu_13272_p2;
wire   [2:0] mul_ln1345_507_fu_13280_p0;
wire  signed [2:0] mul_ln1345_507_fu_13280_p1;
wire  signed [5:0] mul_ln1345_507_fu_13280_p2;
wire   [2:0] mul_ln1345_508_fu_13288_p0;
wire  signed [2:0] mul_ln1345_508_fu_13288_p1;
wire  signed [5:0] mul_ln1345_508_fu_13288_p2;
wire   [2:0] mul_ln1345_509_fu_13296_p0;
wire  signed [2:0] mul_ln1345_509_fu_13296_p1;
wire  signed [5:0] mul_ln1345_509_fu_13296_p2;
wire   [2:0] mul_ln1345_510_fu_13304_p0;
wire  signed [2:0] mul_ln1345_510_fu_13304_p1;
wire  signed [5:0] mul_ln1345_510_fu_13304_p2;
wire   [2:0] mul_ln1345_511_fu_13312_p0;
wire  signed [2:0] mul_ln1345_511_fu_13312_p1;
wire  signed [5:0] mul_ln1345_511_fu_13312_p2;
wire   [2:0] mul_ln1345_512_fu_13320_p0;
wire  signed [2:0] mul_ln1345_512_fu_13320_p1;
wire  signed [5:0] mul_ln1345_512_fu_13320_p2;
wire   [2:0] mul_ln1345_513_fu_13328_p0;
wire  signed [2:0] mul_ln1345_513_fu_13328_p1;
wire  signed [5:0] mul_ln1345_513_fu_13328_p2;
wire   [2:0] mul_ln1345_514_fu_13336_p0;
wire  signed [2:0] mul_ln1345_514_fu_13336_p1;
wire  signed [5:0] mul_ln1345_514_fu_13336_p2;
wire   [2:0] mul_ln1345_515_fu_13344_p0;
wire  signed [2:0] mul_ln1345_515_fu_13344_p1;
wire  signed [5:0] mul_ln1345_515_fu_13344_p2;
wire   [2:0] mul_ln1345_516_fu_13352_p0;
wire  signed [2:0] mul_ln1345_516_fu_13352_p1;
wire   [2:0] mul_ln1345_517_fu_13358_p0;
wire  signed [2:0] mul_ln1345_517_fu_13358_p1;
wire  signed [5:0] mul_ln1345_517_fu_13358_p2;
wire   [2:0] mul_ln1345_518_fu_13366_p0;
wire  signed [2:0] mul_ln1345_518_fu_13366_p1;
wire  signed [5:0] mul_ln1345_518_fu_13366_p2;
wire   [2:0] mul_ln1345_519_fu_13374_p0;
wire  signed [2:0] mul_ln1345_519_fu_13374_p1;
wire  signed [5:0] mul_ln1345_519_fu_13374_p2;
wire   [2:0] mul_ln1345_520_fu_13382_p0;
wire  signed [2:0] mul_ln1345_520_fu_13382_p1;
wire  signed [5:0] mul_ln1345_520_fu_13382_p2;
wire   [2:0] mul_ln1345_521_fu_13390_p0;
wire  signed [2:0] mul_ln1345_521_fu_13390_p1;
wire  signed [5:0] mul_ln1345_521_fu_13390_p2;
wire   [2:0] mul_ln1345_522_fu_13398_p0;
wire  signed [2:0] mul_ln1345_522_fu_13398_p1;
wire   [2:0] mul_ln1345_523_fu_13404_p0;
wire  signed [2:0] mul_ln1345_523_fu_13404_p1;
wire  signed [5:0] mul_ln1345_523_fu_13404_p2;
wire   [2:0] mul_ln1345_524_fu_13412_p0;
wire  signed [2:0] mul_ln1345_524_fu_13412_p1;
wire   [2:0] mul_ln1345_525_fu_13418_p0;
wire  signed [2:0] mul_ln1345_525_fu_13418_p1;
wire  signed [5:0] mul_ln1345_525_fu_13418_p2;
wire   [2:0] mul_ln1345_526_fu_13428_p0;
wire  signed [2:0] mul_ln1345_526_fu_13428_p1;
wire  signed [5:0] mul_ln1345_526_fu_13428_p2;
wire   [2:0] mul_ln1345_527_fu_13438_p0;
wire  signed [2:0] mul_ln1345_527_fu_13438_p1;
wire  signed [5:0] mul_ln1345_527_fu_13438_p2;
wire  signed [6:0] sext_ln151_482_fu_13424_p1;
wire  signed [6:0] sext_ln151_483_fu_13434_p1;
wire  signed [6:0] sext_ln151_478_fu_13394_p1;
wire  signed [6:0] sext_ln151_480_fu_13408_p1;
wire  signed [6:0] sext_ln151_472_fu_13348_p1;
wire  signed [6:0] sext_ln151_474_fu_13362_p1;
wire  signed [6:0] sext_ln151_475_fu_13370_p1;
wire  signed [6:0] sext_ln151_477_fu_13386_p1;
wire  signed [6:0] sext_ln151_462_fu_13268_p1;
wire  signed [6:0] sext_ln691_462_fu_13260_p1;
wire   [6:0] add_ln691_515_fu_13470_p2;
wire  signed [7:0] sext_ln691_472_fu_13476_p1;
wire  signed [7:0] sext_ln151_476_fu_13378_p1;
wire  signed [6:0] sext_ln151_465_fu_13292_p1;
wire  signed [6:0] sext_ln151_464_fu_13284_p1;
wire   [6:0] add_ln691_517_fu_13486_p2;
wire  signed [7:0] sext_ln691_474_fu_13492_p1;
wire  signed [7:0] sext_ln151_463_fu_13276_p1;
wire  signed [6:0] sext_ln151_468_fu_13316_p1;
wire  signed [6:0] sext_ln151_467_fu_13308_p1;
wire   [6:0] add_ln691_520_fu_13502_p2;
wire  signed [7:0] sext_ln691_477_fu_13508_p1;
wire  signed [7:0] sext_ln151_466_fu_13300_p1;
wire  signed [6:0] sext_ln151_469_fu_13324_p1;
wire  signed [6:0] sext_ln151_471_fu_13340_p1;
wire   [6:0] add_ln691_522_fu_13518_p2;
wire  signed [6:0] sext_ln151_470_fu_13332_p1;
wire  signed [6:0] sext_ln691_463_fu_13442_p1;
wire   [6:0] add_ln691_523_fu_13528_p2;
wire  signed [7:0] sext_ln691_480_fu_13534_p1;
wire  signed [7:0] sext_ln691_479_fu_13524_p1;
wire   [2:0] mul_ln1345_528_fu_13544_p0;
wire  signed [2:0] mul_ln1345_528_fu_13544_p1;
wire  signed [5:0] mul_ln1345_528_fu_13544_p2;
wire   [2:0] mul_ln1345_529_fu_13552_p0;
wire  signed [2:0] mul_ln1345_529_fu_13552_p1;
wire  signed [5:0] mul_ln1345_529_fu_13552_p2;
wire   [2:0] mul_ln1345_530_fu_13560_p0;
wire  signed [2:0] mul_ln1345_530_fu_13560_p1;
wire  signed [5:0] mul_ln1345_530_fu_13560_p2;
wire   [2:0] mul_ln1345_531_fu_13568_p0;
wire  signed [2:0] mul_ln1345_531_fu_13568_p1;
wire  signed [5:0] mul_ln1345_531_fu_13568_p2;
wire   [2:0] mul_ln1345_532_fu_13576_p0;
wire  signed [2:0] mul_ln1345_532_fu_13576_p1;
wire  signed [5:0] mul_ln1345_532_fu_13576_p2;
wire   [2:0] mul_ln1345_533_fu_13584_p0;
wire  signed [2:0] mul_ln1345_533_fu_13584_p1;
wire  signed [5:0] mul_ln1345_533_fu_13584_p2;
wire   [2:0] mul_ln1345_534_fu_13592_p0;
wire  signed [2:0] mul_ln1345_534_fu_13592_p1;
wire  signed [5:0] mul_ln1345_534_fu_13592_p2;
wire   [2:0] mul_ln1345_535_fu_13600_p0;
wire  signed [2:0] mul_ln1345_535_fu_13600_p1;
wire  signed [5:0] mul_ln1345_535_fu_13600_p2;
wire   [2:0] mul_ln1345_536_fu_13608_p0;
wire  signed [2:0] mul_ln1345_536_fu_13608_p1;
wire  signed [5:0] mul_ln1345_536_fu_13608_p2;
wire   [2:0] mul_ln1345_537_fu_13616_p0;
wire  signed [2:0] mul_ln1345_537_fu_13616_p1;
wire  signed [5:0] mul_ln1345_537_fu_13616_p2;
wire   [2:0] mul_ln1345_538_fu_13624_p0;
wire  signed [2:0] mul_ln1345_538_fu_13624_p1;
wire  signed [5:0] mul_ln1345_538_fu_13624_p2;
wire   [2:0] mul_ln1345_539_fu_13632_p0;
wire  signed [2:0] mul_ln1345_539_fu_13632_p1;
wire  signed [5:0] mul_ln1345_539_fu_13632_p2;
wire   [2:0] mul_ln1345_540_fu_13640_p0;
wire  signed [2:0] mul_ln1345_540_fu_13640_p1;
wire   [2:0] mul_ln1345_541_fu_13646_p0;
wire  signed [2:0] mul_ln1345_541_fu_13646_p1;
wire  signed [5:0] mul_ln1345_541_fu_13646_p2;
wire   [2:0] mul_ln1345_542_fu_13654_p0;
wire  signed [2:0] mul_ln1345_542_fu_13654_p1;
wire  signed [5:0] mul_ln1345_542_fu_13654_p2;
wire   [2:0] mul_ln1345_543_fu_13662_p0;
wire  signed [2:0] mul_ln1345_543_fu_13662_p1;
wire  signed [5:0] mul_ln1345_543_fu_13662_p2;
wire   [2:0] mul_ln1345_544_fu_13670_p0;
wire  signed [2:0] mul_ln1345_544_fu_13670_p1;
wire  signed [5:0] mul_ln1345_544_fu_13670_p2;
wire   [2:0] mul_ln1345_545_fu_13678_p0;
wire  signed [2:0] mul_ln1345_545_fu_13678_p1;
wire  signed [5:0] mul_ln1345_545_fu_13678_p2;
wire   [2:0] mul_ln1345_546_fu_13686_p0;
wire  signed [2:0] mul_ln1345_546_fu_13686_p1;
wire   [2:0] mul_ln1345_547_fu_13692_p0;
wire  signed [2:0] mul_ln1345_547_fu_13692_p1;
wire  signed [5:0] mul_ln1345_547_fu_13692_p2;
wire   [2:0] mul_ln1345_548_fu_13700_p0;
wire  signed [2:0] mul_ln1345_548_fu_13700_p1;
wire   [2:0] mul_ln1345_549_fu_13706_p0;
wire  signed [2:0] mul_ln1345_549_fu_13706_p1;
wire  signed [5:0] mul_ln1345_549_fu_13706_p2;
wire   [2:0] mul_ln1345_550_fu_13716_p0;
wire  signed [2:0] mul_ln1345_550_fu_13716_p1;
wire  signed [5:0] mul_ln1345_550_fu_13716_p2;
wire   [2:0] mul_ln1345_551_fu_13726_p0;
wire  signed [2:0] mul_ln1345_551_fu_13726_p1;
wire  signed [5:0] mul_ln1345_551_fu_13726_p2;
wire  signed [6:0] sext_ln151_504_fu_13712_p1;
wire  signed [6:0] sext_ln151_505_fu_13722_p1;
wire  signed [6:0] sext_ln151_500_fu_13682_p1;
wire  signed [6:0] sext_ln151_502_fu_13696_p1;
wire  signed [6:0] sext_ln151_494_fu_13636_p1;
wire  signed [6:0] sext_ln151_496_fu_13650_p1;
wire  signed [6:0] sext_ln151_497_fu_13658_p1;
wire  signed [6:0] sext_ln151_499_fu_13674_p1;
wire  signed [6:0] sext_ln151_484_fu_13556_p1;
wire  signed [6:0] sext_ln691_484_fu_13548_p1;
wire   [6:0] add_ln691_539_fu_13758_p2;
wire  signed [7:0] sext_ln691_494_fu_13764_p1;
wire  signed [7:0] sext_ln151_498_fu_13666_p1;
wire  signed [6:0] sext_ln151_487_fu_13580_p1;
wire  signed [6:0] sext_ln151_486_fu_13572_p1;
wire   [6:0] add_ln691_541_fu_13774_p2;
wire  signed [7:0] sext_ln691_496_fu_13780_p1;
wire  signed [7:0] sext_ln151_485_fu_13564_p1;
wire  signed [6:0] sext_ln151_490_fu_13604_p1;
wire  signed [6:0] sext_ln151_489_fu_13596_p1;
wire   [6:0] add_ln691_544_fu_13790_p2;
wire  signed [7:0] sext_ln691_499_fu_13796_p1;
wire  signed [7:0] sext_ln151_488_fu_13588_p1;
wire  signed [6:0] sext_ln151_491_fu_13612_p1;
wire  signed [6:0] sext_ln151_493_fu_13628_p1;
wire   [6:0] add_ln691_546_fu_13806_p2;
wire  signed [6:0] sext_ln151_492_fu_13620_p1;
wire  signed [6:0] sext_ln691_485_fu_13730_p1;
wire   [6:0] add_ln691_547_fu_13816_p2;
wire  signed [7:0] sext_ln691_502_fu_13822_p1;
wire  signed [7:0] sext_ln691_501_fu_13812_p1;
wire   [2:0] mul_ln1345_552_fu_13832_p0;
wire  signed [2:0] mul_ln1345_552_fu_13832_p1;
wire  signed [5:0] mul_ln1345_552_fu_13832_p2;
wire   [2:0] mul_ln1345_553_fu_13840_p0;
wire  signed [2:0] mul_ln1345_553_fu_13840_p1;
wire  signed [5:0] mul_ln1345_553_fu_13840_p2;
wire   [2:0] mul_ln1345_554_fu_13848_p0;
wire  signed [2:0] mul_ln1345_554_fu_13848_p1;
wire  signed [5:0] mul_ln1345_554_fu_13848_p2;
wire   [2:0] mul_ln1345_555_fu_13856_p0;
wire  signed [2:0] mul_ln1345_555_fu_13856_p1;
wire  signed [5:0] mul_ln1345_555_fu_13856_p2;
wire   [2:0] mul_ln1345_556_fu_13864_p0;
wire  signed [2:0] mul_ln1345_556_fu_13864_p1;
wire  signed [5:0] mul_ln1345_556_fu_13864_p2;
wire   [2:0] mul_ln1345_557_fu_13872_p0;
wire  signed [2:0] mul_ln1345_557_fu_13872_p1;
wire  signed [5:0] mul_ln1345_557_fu_13872_p2;
wire   [2:0] mul_ln1345_558_fu_13880_p0;
wire  signed [2:0] mul_ln1345_558_fu_13880_p1;
wire  signed [5:0] mul_ln1345_558_fu_13880_p2;
wire   [2:0] mul_ln1345_559_fu_13888_p0;
wire  signed [2:0] mul_ln1345_559_fu_13888_p1;
wire  signed [5:0] mul_ln1345_559_fu_13888_p2;
wire   [2:0] mul_ln1345_560_fu_13896_p0;
wire  signed [2:0] mul_ln1345_560_fu_13896_p1;
wire  signed [5:0] mul_ln1345_560_fu_13896_p2;
wire   [2:0] mul_ln1345_561_fu_13904_p0;
wire  signed [2:0] mul_ln1345_561_fu_13904_p1;
wire  signed [5:0] mul_ln1345_561_fu_13904_p2;
wire   [2:0] mul_ln1345_562_fu_13912_p0;
wire  signed [2:0] mul_ln1345_562_fu_13912_p1;
wire  signed [5:0] mul_ln1345_562_fu_13912_p2;
wire   [2:0] mul_ln1345_563_fu_13920_p0;
wire  signed [2:0] mul_ln1345_563_fu_13920_p1;
wire  signed [5:0] mul_ln1345_563_fu_13920_p2;
wire   [2:0] mul_ln1345_564_fu_13928_p0;
wire  signed [2:0] mul_ln1345_564_fu_13928_p1;
wire   [2:0] mul_ln1345_565_fu_13934_p0;
wire  signed [2:0] mul_ln1345_565_fu_13934_p1;
wire  signed [5:0] mul_ln1345_565_fu_13934_p2;
wire   [2:0] mul_ln1345_566_fu_13942_p0;
wire  signed [2:0] mul_ln1345_566_fu_13942_p1;
wire  signed [5:0] mul_ln1345_566_fu_13942_p2;
wire   [2:0] mul_ln1345_567_fu_13950_p0;
wire  signed [2:0] mul_ln1345_567_fu_13950_p1;
wire  signed [5:0] mul_ln1345_567_fu_13950_p2;
wire   [2:0] mul_ln1345_568_fu_13958_p0;
wire  signed [2:0] mul_ln1345_568_fu_13958_p1;
wire  signed [5:0] mul_ln1345_568_fu_13958_p2;
wire   [2:0] mul_ln1345_569_fu_13966_p0;
wire  signed [2:0] mul_ln1345_569_fu_13966_p1;
wire  signed [5:0] mul_ln1345_569_fu_13966_p2;
wire   [2:0] mul_ln1345_570_fu_13974_p0;
wire  signed [2:0] mul_ln1345_570_fu_13974_p1;
wire   [2:0] mul_ln1345_571_fu_13980_p0;
wire  signed [2:0] mul_ln1345_571_fu_13980_p1;
wire  signed [5:0] mul_ln1345_571_fu_13980_p2;
wire   [2:0] mul_ln1345_572_fu_13988_p0;
wire  signed [2:0] mul_ln1345_572_fu_13988_p1;
wire   [2:0] mul_ln1345_573_fu_13994_p0;
wire  signed [2:0] mul_ln1345_573_fu_13994_p1;
wire  signed [5:0] mul_ln1345_573_fu_13994_p2;
wire   [2:0] mul_ln1345_574_fu_14004_p0;
wire  signed [2:0] mul_ln1345_574_fu_14004_p1;
wire  signed [5:0] mul_ln1345_574_fu_14004_p2;
wire   [2:0] mul_ln1345_575_fu_14014_p0;
wire  signed [2:0] mul_ln1345_575_fu_14014_p1;
wire  signed [5:0] mul_ln1345_575_fu_14014_p2;
wire  signed [6:0] sext_ln151_526_fu_14000_p1;
wire  signed [6:0] sext_ln151_527_fu_14010_p1;
wire  signed [6:0] sext_ln151_522_fu_13970_p1;
wire  signed [6:0] sext_ln151_524_fu_13984_p1;
wire  signed [6:0] sext_ln151_516_fu_13924_p1;
wire  signed [6:0] sext_ln151_518_fu_13938_p1;
wire  signed [6:0] sext_ln151_519_fu_13946_p1;
wire  signed [6:0] sext_ln151_521_fu_13962_p1;
wire  signed [6:0] sext_ln151_506_fu_13844_p1;
wire  signed [6:0] sext_ln691_506_fu_13836_p1;
wire   [6:0] add_ln691_563_fu_14046_p2;
wire  signed [7:0] sext_ln691_516_fu_14052_p1;
wire  signed [7:0] sext_ln151_520_fu_13954_p1;
wire  signed [6:0] sext_ln151_509_fu_13868_p1;
wire  signed [6:0] sext_ln151_508_fu_13860_p1;
wire   [6:0] add_ln691_565_fu_14062_p2;
wire  signed [7:0] sext_ln691_518_fu_14068_p1;
wire  signed [7:0] sext_ln151_507_fu_13852_p1;
wire  signed [6:0] sext_ln151_512_fu_13892_p1;
wire  signed [6:0] sext_ln151_511_fu_13884_p1;
wire   [6:0] add_ln691_568_fu_14078_p2;
wire  signed [7:0] sext_ln691_521_fu_14084_p1;
wire  signed [7:0] sext_ln151_510_fu_13876_p1;
wire  signed [6:0] sext_ln151_513_fu_13900_p1;
wire  signed [6:0] sext_ln151_515_fu_13916_p1;
wire   [6:0] add_ln691_570_fu_14094_p2;
wire  signed [6:0] sext_ln151_514_fu_13908_p1;
wire  signed [6:0] sext_ln691_507_fu_14018_p1;
wire   [6:0] add_ln691_571_fu_14104_p2;
wire  signed [7:0] sext_ln691_524_fu_14110_p1;
wire  signed [7:0] sext_ln691_523_fu_14100_p1;
wire   [311:0] vec_o_data_M_elems_V_fu_14123_p3;
wire   [311:0] select_ln126_fu_14129_p3;
wire  signed [12:0] sext_ln691_2_fu_14140_p1;
wire   [12:0] trunc_ln691_fu_14136_p1;
wire  signed [12:0] sext_ln691_4_fu_14149_p1;
wire   [12:0] add_ln691_1_fu_14143_p2;
wire  signed [8:0] sext_ln691_8_fu_14161_p1;
wire  signed [8:0] sext_ln691_6_fu_14158_p1;
wire  signed [8:0] sext_ln691_13_fu_14173_p1;
wire  signed [8:0] sext_ln691_11_fu_14170_p1;
wire   [8:0] add_ln691_15_fu_14176_p2;
wire  signed [8:0] sext_ln691_19_fu_14189_p1;
wire  signed [8:0] sext_ln691_16_fu_14186_p1;
wire   [8:0] add_ln691_21_fu_14192_p2;
wire  signed [9:0] sext_ln691_20_fu_14198_p1;
wire  signed [9:0] sext_ln691_14_fu_14182_p1;
wire  signed [12:0] sext_ln691_24_fu_14218_p1;
wire   [12:0] tmp_26_fu_14208_p4;
wire  signed [12:0] sext_ln691_26_fu_14227_p1;
wire   [12:0] add_ln691_25_fu_14221_p2;
wire  signed [8:0] sext_ln691_30_fu_14239_p1;
wire  signed [8:0] sext_ln691_28_fu_14236_p1;
wire  signed [8:0] sext_ln691_35_fu_14251_p1;
wire  signed [8:0] sext_ln691_33_fu_14248_p1;
wire   [8:0] add_ln691_39_fu_14254_p2;
wire  signed [8:0] sext_ln691_41_fu_14267_p1;
wire  signed [8:0] sext_ln691_38_fu_14264_p1;
wire   [8:0] add_ln691_45_fu_14270_p2;
wire  signed [9:0] sext_ln691_42_fu_14276_p1;
wire  signed [9:0] sext_ln691_36_fu_14260_p1;
wire  signed [12:0] sext_ln691_46_fu_14296_p1;
wire   [12:0] tmp_51_fu_14286_p4;
wire  signed [12:0] sext_ln691_48_fu_14305_p1;
wire   [12:0] add_ln691_49_fu_14299_p2;
wire  signed [8:0] sext_ln691_52_fu_14317_p1;
wire  signed [8:0] sext_ln691_50_fu_14314_p1;
wire  signed [8:0] sext_ln691_57_fu_14329_p1;
wire  signed [8:0] sext_ln691_55_fu_14326_p1;
wire   [8:0] add_ln691_63_fu_14332_p2;
wire  signed [8:0] sext_ln691_63_fu_14345_p1;
wire  signed [8:0] sext_ln691_60_fu_14342_p1;
wire   [8:0] add_ln691_69_fu_14348_p2;
wire  signed [9:0] sext_ln691_64_fu_14354_p1;
wire  signed [9:0] sext_ln691_58_fu_14338_p1;
wire  signed [12:0] sext_ln691_68_fu_14374_p1;
wire   [12:0] tmp_76_fu_14364_p4;
wire  signed [12:0] sext_ln691_70_fu_14383_p1;
wire   [12:0] add_ln691_73_fu_14377_p2;
wire  signed [8:0] sext_ln691_74_fu_14395_p1;
wire  signed [8:0] sext_ln691_72_fu_14392_p1;
wire  signed [8:0] sext_ln691_79_fu_14407_p1;
wire  signed [8:0] sext_ln691_77_fu_14404_p1;
wire   [8:0] add_ln691_87_fu_14410_p2;
wire  signed [8:0] sext_ln691_85_fu_14423_p1;
wire  signed [8:0] sext_ln691_82_fu_14420_p1;
wire   [8:0] add_ln691_93_fu_14426_p2;
wire  signed [9:0] sext_ln691_86_fu_14432_p1;
wire  signed [9:0] sext_ln691_80_fu_14416_p1;
wire  signed [12:0] sext_ln691_90_fu_14452_p1;
wire   [12:0] tmp_101_fu_14442_p4;
wire  signed [12:0] sext_ln691_92_fu_14461_p1;
wire   [12:0] add_ln691_97_fu_14455_p2;
wire  signed [8:0] sext_ln691_96_fu_14473_p1;
wire  signed [8:0] sext_ln691_94_fu_14470_p1;
wire  signed [8:0] sext_ln691_101_fu_14485_p1;
wire  signed [8:0] sext_ln691_99_fu_14482_p1;
wire   [8:0] add_ln691_111_fu_14488_p2;
wire  signed [8:0] sext_ln691_107_fu_14501_p1;
wire  signed [8:0] sext_ln691_104_fu_14498_p1;
wire   [8:0] add_ln691_117_fu_14504_p2;
wire  signed [9:0] sext_ln691_108_fu_14510_p1;
wire  signed [9:0] sext_ln691_102_fu_14494_p1;
wire  signed [12:0] sext_ln691_112_fu_14530_p1;
wire   [12:0] tmp_126_fu_14520_p4;
wire  signed [12:0] sext_ln691_114_fu_14539_p1;
wire   [12:0] add_ln691_121_fu_14533_p2;
wire  signed [8:0] sext_ln691_118_fu_14551_p1;
wire  signed [8:0] sext_ln691_116_fu_14548_p1;
wire  signed [8:0] sext_ln691_123_fu_14563_p1;
wire  signed [8:0] sext_ln691_121_fu_14560_p1;
wire   [8:0] add_ln691_135_fu_14566_p2;
wire  signed [8:0] sext_ln691_129_fu_14579_p1;
wire  signed [8:0] sext_ln691_126_fu_14576_p1;
wire   [8:0] add_ln691_141_fu_14582_p2;
wire  signed [9:0] sext_ln691_130_fu_14588_p1;
wire  signed [9:0] sext_ln691_124_fu_14572_p1;
wire  signed [12:0] sext_ln691_134_fu_14608_p1;
wire   [12:0] tmp_151_fu_14598_p4;
wire  signed [12:0] sext_ln691_136_fu_14617_p1;
wire   [12:0] add_ln691_145_fu_14611_p2;
wire  signed [8:0] sext_ln691_140_fu_14629_p1;
wire  signed [8:0] sext_ln691_138_fu_14626_p1;
wire  signed [8:0] sext_ln691_145_fu_14641_p1;
wire  signed [8:0] sext_ln691_143_fu_14638_p1;
wire   [8:0] add_ln691_159_fu_14644_p2;
wire  signed [8:0] sext_ln691_151_fu_14657_p1;
wire  signed [8:0] sext_ln691_148_fu_14654_p1;
wire   [8:0] add_ln691_165_fu_14660_p2;
wire  signed [9:0] sext_ln691_152_fu_14666_p1;
wire  signed [9:0] sext_ln691_146_fu_14650_p1;
wire  signed [12:0] sext_ln691_156_fu_14686_p1;
wire   [12:0] tmp_176_fu_14676_p4;
wire  signed [12:0] sext_ln691_158_fu_14695_p1;
wire   [12:0] add_ln691_169_fu_14689_p2;
wire  signed [8:0] sext_ln691_162_fu_14707_p1;
wire  signed [8:0] sext_ln691_160_fu_14704_p1;
wire  signed [8:0] sext_ln691_167_fu_14719_p1;
wire  signed [8:0] sext_ln691_165_fu_14716_p1;
wire   [8:0] add_ln691_183_fu_14722_p2;
wire  signed [8:0] sext_ln691_173_fu_14735_p1;
wire  signed [8:0] sext_ln691_170_fu_14732_p1;
wire   [8:0] add_ln691_189_fu_14738_p2;
wire  signed [9:0] sext_ln691_174_fu_14744_p1;
wire  signed [9:0] sext_ln691_168_fu_14728_p1;
wire  signed [12:0] sext_ln691_178_fu_14764_p1;
wire   [12:0] tmp_201_fu_14754_p4;
wire  signed [12:0] sext_ln691_180_fu_14773_p1;
wire   [12:0] add_ln691_193_fu_14767_p2;
wire  signed [8:0] sext_ln691_184_fu_14785_p1;
wire  signed [8:0] sext_ln691_182_fu_14782_p1;
wire  signed [8:0] sext_ln691_189_fu_14797_p1;
wire  signed [8:0] sext_ln691_187_fu_14794_p1;
wire   [8:0] add_ln691_207_fu_14800_p2;
wire  signed [8:0] sext_ln691_195_fu_14813_p1;
wire  signed [8:0] sext_ln691_192_fu_14810_p1;
wire   [8:0] add_ln691_213_fu_14816_p2;
wire  signed [9:0] sext_ln691_196_fu_14822_p1;
wire  signed [9:0] sext_ln691_190_fu_14806_p1;
wire  signed [12:0] sext_ln691_200_fu_14842_p1;
wire   [12:0] tmp_226_fu_14832_p4;
wire  signed [12:0] sext_ln691_202_fu_14851_p1;
wire   [12:0] add_ln691_217_fu_14845_p2;
wire  signed [8:0] sext_ln691_206_fu_14863_p1;
wire  signed [8:0] sext_ln691_204_fu_14860_p1;
wire  signed [8:0] sext_ln691_211_fu_14875_p1;
wire  signed [8:0] sext_ln691_209_fu_14872_p1;
wire   [8:0] add_ln691_231_fu_14878_p2;
wire  signed [8:0] sext_ln691_217_fu_14891_p1;
wire  signed [8:0] sext_ln691_214_fu_14888_p1;
wire   [8:0] add_ln691_237_fu_14894_p2;
wire  signed [9:0] sext_ln691_218_fu_14900_p1;
wire  signed [9:0] sext_ln691_212_fu_14884_p1;
wire  signed [12:0] sext_ln691_222_fu_14920_p1;
wire   [12:0] tmp_251_fu_14910_p4;
wire  signed [12:0] sext_ln691_224_fu_14929_p1;
wire   [12:0] add_ln691_241_fu_14923_p2;
wire  signed [8:0] sext_ln691_228_fu_14941_p1;
wire  signed [8:0] sext_ln691_226_fu_14938_p1;
wire  signed [8:0] sext_ln691_233_fu_14953_p1;
wire  signed [8:0] sext_ln691_231_fu_14950_p1;
wire   [8:0] add_ln691_255_fu_14956_p2;
wire  signed [8:0] sext_ln691_239_fu_14969_p1;
wire  signed [8:0] sext_ln691_236_fu_14966_p1;
wire   [8:0] add_ln691_261_fu_14972_p2;
wire  signed [9:0] sext_ln691_240_fu_14978_p1;
wire  signed [9:0] sext_ln691_234_fu_14962_p1;
wire  signed [12:0] sext_ln691_244_fu_14998_p1;
wire   [12:0] tmp_276_fu_14988_p4;
wire  signed [12:0] sext_ln691_246_fu_15007_p1;
wire   [12:0] add_ln691_265_fu_15001_p2;
wire  signed [8:0] sext_ln691_250_fu_15019_p1;
wire  signed [8:0] sext_ln691_248_fu_15016_p1;
wire  signed [8:0] sext_ln691_255_fu_15031_p1;
wire  signed [8:0] sext_ln691_253_fu_15028_p1;
wire   [8:0] add_ln691_279_fu_15034_p2;
wire  signed [8:0] sext_ln691_261_fu_15047_p1;
wire  signed [8:0] sext_ln691_258_fu_15044_p1;
wire   [8:0] add_ln691_285_fu_15050_p2;
wire  signed [9:0] sext_ln691_262_fu_15056_p1;
wire  signed [9:0] sext_ln691_256_fu_15040_p1;
wire  signed [12:0] sext_ln691_266_fu_15076_p1;
wire   [12:0] tmp_300_fu_15066_p4;
wire  signed [12:0] sext_ln691_268_fu_15085_p1;
wire   [12:0] add_ln691_289_fu_15079_p2;
wire  signed [8:0] sext_ln691_272_fu_15097_p1;
wire  signed [8:0] sext_ln691_270_fu_15094_p1;
wire  signed [8:0] sext_ln691_277_fu_15109_p1;
wire  signed [8:0] sext_ln691_275_fu_15106_p1;
wire   [8:0] add_ln691_303_fu_15112_p2;
wire  signed [8:0] sext_ln691_283_fu_15125_p1;
wire  signed [8:0] sext_ln691_280_fu_15122_p1;
wire   [8:0] add_ln691_309_fu_15128_p2;
wire  signed [9:0] sext_ln691_284_fu_15134_p1;
wire  signed [9:0] sext_ln691_278_fu_15118_p1;
wire  signed [12:0] sext_ln691_288_fu_15154_p1;
wire   [12:0] tmp_301_fu_15144_p4;
wire  signed [12:0] sext_ln691_290_fu_15163_p1;
wire   [12:0] add_ln691_313_fu_15157_p2;
wire  signed [8:0] sext_ln691_294_fu_15175_p1;
wire  signed [8:0] sext_ln691_292_fu_15172_p1;
wire  signed [8:0] sext_ln691_299_fu_15187_p1;
wire  signed [8:0] sext_ln691_297_fu_15184_p1;
wire   [8:0] add_ln691_327_fu_15190_p2;
wire  signed [8:0] sext_ln691_305_fu_15203_p1;
wire  signed [8:0] sext_ln691_302_fu_15200_p1;
wire   [8:0] add_ln691_333_fu_15206_p2;
wire  signed [9:0] sext_ln691_306_fu_15212_p1;
wire  signed [9:0] sext_ln691_300_fu_15196_p1;
wire  signed [12:0] sext_ln691_310_fu_15232_p1;
wire   [12:0] tmp_302_fu_15222_p4;
wire  signed [12:0] sext_ln691_312_fu_15241_p1;
wire   [12:0] add_ln691_337_fu_15235_p2;
wire  signed [8:0] sext_ln691_316_fu_15253_p1;
wire  signed [8:0] sext_ln691_314_fu_15250_p1;
wire  signed [8:0] sext_ln691_321_fu_15265_p1;
wire  signed [8:0] sext_ln691_319_fu_15262_p1;
wire   [8:0] add_ln691_351_fu_15268_p2;
wire  signed [8:0] sext_ln691_327_fu_15281_p1;
wire  signed [8:0] sext_ln691_324_fu_15278_p1;
wire   [8:0] add_ln691_357_fu_15284_p2;
wire  signed [9:0] sext_ln691_328_fu_15290_p1;
wire  signed [9:0] sext_ln691_322_fu_15274_p1;
wire  signed [12:0] sext_ln691_332_fu_15319_p1;
wire   [12:0] tmp_303_fu_15300_p4;
wire  signed [7:0] sext_ln691_333_fu_15328_p1;
wire  signed [7:0] sext_ln151_349_fu_15316_p1;
wire   [7:0] add_ln691_363_fu_15331_p2;
wire  signed [12:0] sext_ln691_334_fu_15337_p1;
wire   [12:0] add_ln691_361_fu_15322_p2;
wire  signed [7:0] sext_ln691_335_fu_15347_p1;
wire  signed [7:0] sext_ln151_347_fu_15313_p1;
wire   [7:0] add_ln691_366_fu_15350_p2;
wire  signed [7:0] sext_ln691_337_fu_15360_p1;
wire  signed [7:0] sext_ln151_341_fu_15310_p1;
wire   [7:0] add_ln691_368_fu_15363_p2;
wire  signed [8:0] sext_ln691_338_fu_15369_p1;
wire  signed [8:0] sext_ln691_336_fu_15356_p1;
wire  signed [8:0] sext_ln691_343_fu_15382_p1;
wire  signed [8:0] sext_ln691_341_fu_15379_p1;
wire   [8:0] add_ln691_375_fu_15385_p2;
wire  signed [8:0] sext_ln691_349_fu_15398_p1;
wire  signed [8:0] sext_ln691_346_fu_15395_p1;
wire   [8:0] add_ln691_381_fu_15401_p2;
wire  signed [9:0] sext_ln691_350_fu_15407_p1;
wire  signed [9:0] sext_ln691_344_fu_15391_p1;
wire  signed [12:0] sext_ln691_354_fu_15436_p1;
wire   [12:0] tmp_304_fu_15417_p4;
wire  signed [7:0] sext_ln691_355_fu_15445_p1;
wire  signed [7:0] sext_ln151_371_fu_15433_p1;
wire   [7:0] add_ln691_387_fu_15448_p2;
wire  signed [12:0] sext_ln691_356_fu_15454_p1;
wire   [12:0] add_ln691_385_fu_15439_p2;
wire  signed [7:0] sext_ln691_357_fu_15464_p1;
wire  signed [7:0] sext_ln151_369_fu_15430_p1;
wire   [7:0] add_ln691_390_fu_15467_p2;
wire  signed [7:0] sext_ln691_359_fu_15477_p1;
wire  signed [7:0] sext_ln151_363_fu_15427_p1;
wire   [7:0] add_ln691_392_fu_15480_p2;
wire  signed [8:0] sext_ln691_360_fu_15486_p1;
wire  signed [8:0] sext_ln691_358_fu_15473_p1;
wire  signed [8:0] sext_ln691_365_fu_15499_p1;
wire  signed [8:0] sext_ln691_363_fu_15496_p1;
wire   [8:0] add_ln691_399_fu_15502_p2;
wire  signed [8:0] sext_ln691_371_fu_15515_p1;
wire  signed [8:0] sext_ln691_368_fu_15512_p1;
wire   [8:0] add_ln691_405_fu_15518_p2;
wire  signed [9:0] sext_ln691_372_fu_15524_p1;
wire  signed [9:0] sext_ln691_366_fu_15508_p1;
wire  signed [12:0] sext_ln691_376_fu_15553_p1;
wire   [12:0] tmp_305_fu_15534_p4;
wire  signed [7:0] sext_ln691_377_fu_15562_p1;
wire  signed [7:0] sext_ln151_393_fu_15550_p1;
wire   [7:0] add_ln691_411_fu_15565_p2;
wire  signed [12:0] sext_ln691_378_fu_15571_p1;
wire   [12:0] add_ln691_409_fu_15556_p2;
wire  signed [7:0] sext_ln691_379_fu_15581_p1;
wire  signed [7:0] sext_ln151_391_fu_15547_p1;
wire   [7:0] add_ln691_414_fu_15584_p2;
wire  signed [7:0] sext_ln691_381_fu_15594_p1;
wire  signed [7:0] sext_ln151_385_fu_15544_p1;
wire   [7:0] add_ln691_416_fu_15597_p2;
wire  signed [8:0] sext_ln691_382_fu_15603_p1;
wire  signed [8:0] sext_ln691_380_fu_15590_p1;
wire  signed [8:0] sext_ln691_387_fu_15616_p1;
wire  signed [8:0] sext_ln691_385_fu_15613_p1;
wire   [8:0] add_ln691_423_fu_15619_p2;
wire  signed [8:0] sext_ln691_393_fu_15632_p1;
wire  signed [8:0] sext_ln691_390_fu_15629_p1;
wire   [8:0] add_ln691_429_fu_15635_p2;
wire  signed [9:0] sext_ln691_394_fu_15641_p1;
wire  signed [9:0] sext_ln691_388_fu_15625_p1;
wire  signed [12:0] sext_ln691_398_fu_15670_p1;
wire   [12:0] tmp_306_fu_15651_p4;
wire  signed [7:0] sext_ln691_399_fu_15679_p1;
wire  signed [7:0] sext_ln151_415_fu_15667_p1;
wire   [7:0] add_ln691_435_fu_15682_p2;
wire  signed [12:0] sext_ln691_400_fu_15688_p1;
wire   [12:0] add_ln691_433_fu_15673_p2;
wire  signed [7:0] sext_ln691_401_fu_15698_p1;
wire  signed [7:0] sext_ln151_413_fu_15664_p1;
wire   [7:0] add_ln691_438_fu_15701_p2;
wire  signed [7:0] sext_ln691_403_fu_15711_p1;
wire  signed [7:0] sext_ln151_407_fu_15661_p1;
wire   [7:0] add_ln691_440_fu_15714_p2;
wire  signed [8:0] sext_ln691_404_fu_15720_p1;
wire  signed [8:0] sext_ln691_402_fu_15707_p1;
wire  signed [8:0] sext_ln691_409_fu_15733_p1;
wire  signed [8:0] sext_ln691_407_fu_15730_p1;
wire   [8:0] add_ln691_447_fu_15736_p2;
wire  signed [8:0] sext_ln691_415_fu_15749_p1;
wire  signed [8:0] sext_ln691_412_fu_15746_p1;
wire   [8:0] add_ln691_453_fu_15752_p2;
wire  signed [9:0] sext_ln691_416_fu_15758_p1;
wire  signed [9:0] sext_ln691_410_fu_15742_p1;
wire  signed [12:0] sext_ln691_420_fu_15787_p1;
wire   [12:0] tmp_307_fu_15768_p4;
wire  signed [7:0] sext_ln691_421_fu_15796_p1;
wire  signed [7:0] sext_ln151_437_fu_15784_p1;
wire   [7:0] add_ln691_459_fu_15799_p2;
wire  signed [12:0] sext_ln691_422_fu_15805_p1;
wire   [12:0] add_ln691_457_fu_15790_p2;
wire  signed [7:0] sext_ln691_423_fu_15815_p1;
wire  signed [7:0] sext_ln151_435_fu_15781_p1;
wire   [7:0] add_ln691_462_fu_15818_p2;
wire  signed [7:0] sext_ln691_425_fu_15828_p1;
wire  signed [7:0] sext_ln151_429_fu_15778_p1;
wire   [7:0] add_ln691_464_fu_15831_p2;
wire  signed [8:0] sext_ln691_426_fu_15837_p1;
wire  signed [8:0] sext_ln691_424_fu_15824_p1;
wire  signed [8:0] sext_ln691_431_fu_15850_p1;
wire  signed [8:0] sext_ln691_429_fu_15847_p1;
wire   [8:0] add_ln691_471_fu_15853_p2;
wire  signed [8:0] sext_ln691_437_fu_15866_p1;
wire  signed [8:0] sext_ln691_434_fu_15863_p1;
wire   [8:0] add_ln691_477_fu_15869_p2;
wire  signed [9:0] sext_ln691_438_fu_15875_p1;
wire  signed [9:0] sext_ln691_432_fu_15859_p1;
wire  signed [12:0] sext_ln691_442_fu_15904_p1;
wire   [12:0] tmp_308_fu_15885_p4;
wire  signed [7:0] sext_ln691_443_fu_15913_p1;
wire  signed [7:0] sext_ln151_459_fu_15901_p1;
wire   [7:0] add_ln691_483_fu_15916_p2;
wire  signed [12:0] sext_ln691_444_fu_15922_p1;
wire   [12:0] add_ln691_481_fu_15907_p2;
wire  signed [7:0] sext_ln691_445_fu_15932_p1;
wire  signed [7:0] sext_ln151_457_fu_15898_p1;
wire   [7:0] add_ln691_486_fu_15935_p2;
wire  signed [7:0] sext_ln691_447_fu_15945_p1;
wire  signed [7:0] sext_ln151_451_fu_15895_p1;
wire   [7:0] add_ln691_488_fu_15948_p2;
wire  signed [8:0] sext_ln691_448_fu_15954_p1;
wire  signed [8:0] sext_ln691_446_fu_15941_p1;
wire  signed [8:0] sext_ln691_453_fu_15967_p1;
wire  signed [8:0] sext_ln691_451_fu_15964_p1;
wire   [8:0] add_ln691_495_fu_15970_p2;
wire  signed [8:0] sext_ln691_459_fu_15983_p1;
wire  signed [8:0] sext_ln691_456_fu_15980_p1;
wire   [8:0] add_ln691_501_fu_15986_p2;
wire  signed [9:0] sext_ln691_460_fu_15992_p1;
wire  signed [9:0] sext_ln691_454_fu_15976_p1;
wire  signed [12:0] sext_ln691_464_fu_16021_p1;
wire   [12:0] tmp_309_fu_16002_p4;
wire  signed [7:0] sext_ln691_465_fu_16030_p1;
wire  signed [7:0] sext_ln151_481_fu_16018_p1;
wire   [7:0] add_ln691_507_fu_16033_p2;
wire  signed [12:0] sext_ln691_466_fu_16039_p1;
wire   [12:0] add_ln691_505_fu_16024_p2;
wire  signed [7:0] sext_ln691_467_fu_16049_p1;
wire  signed [7:0] sext_ln151_479_fu_16015_p1;
wire   [7:0] add_ln691_510_fu_16052_p2;
wire  signed [7:0] sext_ln691_469_fu_16062_p1;
wire  signed [7:0] sext_ln151_473_fu_16012_p1;
wire   [7:0] add_ln691_512_fu_16065_p2;
wire  signed [8:0] sext_ln691_470_fu_16071_p1;
wire  signed [8:0] sext_ln691_468_fu_16058_p1;
wire  signed [8:0] sext_ln691_475_fu_16084_p1;
wire  signed [8:0] sext_ln691_473_fu_16081_p1;
wire   [8:0] add_ln691_519_fu_16087_p2;
wire  signed [8:0] sext_ln691_481_fu_16100_p1;
wire  signed [8:0] sext_ln691_478_fu_16097_p1;
wire   [8:0] add_ln691_525_fu_16103_p2;
wire  signed [9:0] sext_ln691_482_fu_16109_p1;
wire  signed [9:0] sext_ln691_476_fu_16093_p1;
wire  signed [12:0] sext_ln691_486_fu_16138_p1;
wire   [12:0] tmp_310_fu_16119_p4;
wire  signed [7:0] sext_ln691_487_fu_16147_p1;
wire  signed [7:0] sext_ln151_503_fu_16135_p1;
wire   [7:0] add_ln691_531_fu_16150_p2;
wire  signed [12:0] sext_ln691_488_fu_16156_p1;
wire   [12:0] add_ln691_529_fu_16141_p2;
wire  signed [7:0] sext_ln691_489_fu_16166_p1;
wire  signed [7:0] sext_ln151_501_fu_16132_p1;
wire   [7:0] add_ln691_534_fu_16169_p2;
wire  signed [7:0] sext_ln691_491_fu_16179_p1;
wire  signed [7:0] sext_ln151_495_fu_16129_p1;
wire   [7:0] add_ln691_536_fu_16182_p2;
wire  signed [8:0] sext_ln691_492_fu_16188_p1;
wire  signed [8:0] sext_ln691_490_fu_16175_p1;
wire  signed [8:0] sext_ln691_497_fu_16201_p1;
wire  signed [8:0] sext_ln691_495_fu_16198_p1;
wire   [8:0] add_ln691_543_fu_16204_p2;
wire  signed [8:0] sext_ln691_503_fu_16217_p1;
wire  signed [8:0] sext_ln691_500_fu_16214_p1;
wire   [8:0] add_ln691_549_fu_16220_p2;
wire  signed [9:0] sext_ln691_504_fu_16226_p1;
wire  signed [9:0] sext_ln691_498_fu_16210_p1;
wire  signed [12:0] sext_ln691_508_fu_16255_p1;
wire   [12:0] tmp_311_fu_16236_p4;
wire  signed [7:0] sext_ln691_509_fu_16264_p1;
wire  signed [7:0] sext_ln151_525_fu_16252_p1;
wire   [7:0] add_ln691_555_fu_16267_p2;
wire  signed [12:0] sext_ln691_510_fu_16273_p1;
wire   [12:0] add_ln691_553_fu_16258_p2;
wire  signed [7:0] sext_ln691_511_fu_16283_p1;
wire  signed [7:0] sext_ln151_523_fu_16249_p1;
wire   [7:0] add_ln691_558_fu_16286_p2;
wire  signed [7:0] sext_ln691_513_fu_16296_p1;
wire  signed [7:0] sext_ln151_517_fu_16246_p1;
wire   [7:0] add_ln691_560_fu_16299_p2;
wire  signed [8:0] sext_ln691_514_fu_16305_p1;
wire  signed [8:0] sext_ln691_512_fu_16292_p1;
wire  signed [8:0] sext_ln691_519_fu_16318_p1;
wire  signed [8:0] sext_ln691_517_fu_16315_p1;
wire   [8:0] add_ln691_567_fu_16321_p2;
wire  signed [8:0] sext_ln691_525_fu_16334_p1;
wire  signed [8:0] sext_ln691_522_fu_16331_p1;
wire   [8:0] add_ln691_573_fu_16337_p2;
wire  signed [9:0] sext_ln691_526_fu_16343_p1;
wire  signed [9:0] sext_ln691_520_fu_16327_p1;
wire  signed [12:0] sext_ln691_9_fu_16353_p1;
wire  signed [12:0] sext_ln691_21_fu_16361_p1;
wire   [12:0] add_ln691_10_fu_16356_p2;
wire  signed [12:0] sext_ln691_31_fu_16370_p1;
wire  signed [12:0] sext_ln691_43_fu_16378_p1;
wire   [12:0] add_ln691_34_fu_16373_p2;
wire  signed [12:0] sext_ln691_53_fu_16387_p1;
wire  signed [12:0] sext_ln691_65_fu_16395_p1;
wire   [12:0] add_ln691_58_fu_16390_p2;
wire  signed [12:0] sext_ln691_75_fu_16404_p1;
wire  signed [12:0] sext_ln691_87_fu_16412_p1;
wire   [12:0] add_ln691_82_fu_16407_p2;
wire  signed [12:0] sext_ln691_97_fu_16421_p1;
wire  signed [12:0] sext_ln691_109_fu_16429_p1;
wire   [12:0] add_ln691_106_fu_16424_p2;
wire  signed [12:0] sext_ln691_119_fu_16438_p1;
wire  signed [12:0] sext_ln691_131_fu_16446_p1;
wire   [12:0] add_ln691_130_fu_16441_p2;
wire  signed [12:0] sext_ln691_141_fu_16455_p1;
wire  signed [12:0] sext_ln691_153_fu_16463_p1;
wire   [12:0] add_ln691_154_fu_16458_p2;
wire  signed [12:0] sext_ln691_163_fu_16472_p1;
wire  signed [12:0] sext_ln691_175_fu_16480_p1;
wire   [12:0] add_ln691_178_fu_16475_p2;
wire  signed [12:0] sext_ln691_185_fu_16489_p1;
wire  signed [12:0] sext_ln691_197_fu_16497_p1;
wire   [12:0] add_ln691_202_fu_16492_p2;
wire  signed [12:0] sext_ln691_207_fu_16506_p1;
wire  signed [12:0] sext_ln691_219_fu_16514_p1;
wire   [12:0] add_ln691_226_fu_16509_p2;
wire  signed [12:0] sext_ln691_229_fu_16523_p1;
wire  signed [12:0] sext_ln691_241_fu_16531_p1;
wire   [12:0] add_ln691_250_fu_16526_p2;
wire  signed [12:0] sext_ln691_251_fu_16540_p1;
wire  signed [12:0] sext_ln691_263_fu_16548_p1;
wire   [12:0] add_ln691_274_fu_16543_p2;
wire  signed [12:0] sext_ln691_273_fu_16557_p1;
wire  signed [12:0] sext_ln691_285_fu_16565_p1;
wire   [12:0] add_ln691_298_fu_16560_p2;
wire  signed [12:0] sext_ln691_295_fu_16574_p1;
wire  signed [12:0] sext_ln691_307_fu_16582_p1;
wire   [12:0] add_ln691_322_fu_16577_p2;
wire  signed [12:0] sext_ln691_317_fu_16591_p1;
wire  signed [12:0] sext_ln691_329_fu_16599_p1;
wire   [12:0] add_ln691_346_fu_16594_p2;
wire  signed [12:0] sext_ln691_339_fu_16608_p1;
wire  signed [12:0] sext_ln691_351_fu_16616_p1;
wire   [12:0] add_ln691_370_fu_16611_p2;
wire  signed [12:0] sext_ln691_361_fu_16625_p1;
wire  signed [12:0] sext_ln691_373_fu_16633_p1;
wire   [12:0] add_ln691_394_fu_16628_p2;
wire  signed [12:0] sext_ln691_383_fu_16642_p1;
wire  signed [12:0] sext_ln691_395_fu_16650_p1;
wire   [12:0] add_ln691_418_fu_16645_p2;
wire  signed [12:0] sext_ln691_405_fu_16659_p1;
wire  signed [12:0] sext_ln691_417_fu_16667_p1;
wire   [12:0] add_ln691_442_fu_16662_p2;
wire  signed [12:0] sext_ln691_427_fu_16676_p1;
wire  signed [12:0] sext_ln691_439_fu_16684_p1;
wire   [12:0] add_ln691_466_fu_16679_p2;
wire  signed [12:0] sext_ln691_449_fu_16693_p1;
wire  signed [12:0] sext_ln691_461_fu_16701_p1;
wire   [12:0] add_ln691_490_fu_16696_p2;
wire  signed [12:0] sext_ln691_471_fu_16710_p1;
wire  signed [12:0] sext_ln691_483_fu_16718_p1;
wire   [12:0] add_ln691_514_fu_16713_p2;
wire  signed [12:0] sext_ln691_493_fu_16727_p1;
wire  signed [12:0] sext_ln691_505_fu_16735_p1;
wire   [12:0] add_ln691_538_fu_16730_p2;
wire  signed [12:0] sext_ln691_515_fu_16744_p1;
wire  signed [12:0] sext_ln691_527_fu_16752_p1;
wire   [12:0] add_ln691_562_fu_16747_p2;
wire   [12:0] add_ln691_575_fu_16755_p2;
wire   [12:0] add_ln691_551_fu_16738_p2;
wire   [12:0] add_ln691_527_fu_16721_p2;
wire   [12:0] add_ln691_503_fu_16704_p2;
wire   [12:0] add_ln691_479_fu_16687_p2;
wire   [12:0] add_ln691_455_fu_16670_p2;
wire   [12:0] add_ln691_431_fu_16653_p2;
wire   [12:0] add_ln691_407_fu_16636_p2;
wire   [12:0] add_ln691_383_fu_16619_p2;
wire   [12:0] add_ln691_359_fu_16602_p2;
wire   [12:0] add_ln691_335_fu_16585_p2;
wire   [12:0] add_ln691_311_fu_16568_p2;
wire   [12:0] add_ln691_287_fu_16551_p2;
wire   [12:0] add_ln691_263_fu_16534_p2;
wire   [12:0] add_ln691_239_fu_16517_p2;
wire   [12:0] add_ln691_215_fu_16500_p2;
wire   [12:0] add_ln691_191_fu_16483_p2;
wire   [12:0] add_ln691_167_fu_16466_p2;
wire   [12:0] add_ln691_143_fu_16449_p2;
wire   [12:0] add_ln691_119_fu_16432_p2;
wire   [12:0] add_ln691_95_fu_16415_p2;
wire   [12:0] add_ln691_71_fu_16398_p2;
wire   [12:0] add_ln691_47_fu_16381_p2;
wire   [12:0] add_ln691_23_fu_16364_p2;
wire   [380:0] tmp_313_fu_16818_p48;
wire    ap_CS_fsm_state9;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 5'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

MLP0_matmul_step2_mac_mlp_inst_m2_bias_arr_V #(
    .DataWidth( 156 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
mlp_inst_m2_bias_arr_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m2_bias_arr_V_address0),
    .ce0(mlp_inst_m2_bias_arr_V_ce0),
    .q0(mlp_inst_m2_bias_arr_V_q0)
);

MLP0_matmul_step2_mac_mlp_inst_m2_weight_arr_V #(
    .DataWidth( 864 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
mlp_inst_m2_weight_arr_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m2_weight_arr_V_address0),
    .ce0(mlp_inst_m2_weight_arr_V_ce0),
    .q0(mlp_inst_m2_weight_arr_V_q0)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U630(
    .din0(mul_ln1345_fu_1684_p0),
    .din1(mul_ln1345_fu_1684_p1),
    .dout(mul_ln1345_fu_1684_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U631(
    .din0(mul_ln1345_1_fu_1718_p0),
    .din1(mul_ln1345_1_fu_1718_p1),
    .dout(mul_ln1345_1_fu_1718_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U632(
    .din0(mul_ln1345_2_fu_1752_p0),
    .din1(mul_ln1345_2_fu_1752_p1),
    .dout(mul_ln1345_2_fu_1752_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U633(
    .din0(mul_ln1345_3_fu_1786_p0),
    .din1(mul_ln1345_3_fu_1786_p1),
    .dout(mul_ln1345_3_fu_1786_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U634(
    .din0(mul_ln1345_4_fu_1820_p0),
    .din1(mul_ln1345_4_fu_1820_p1),
    .dout(mul_ln1345_4_fu_1820_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U635(
    .din0(mul_ln1345_5_fu_1854_p0),
    .din1(mul_ln1345_5_fu_1854_p1),
    .dout(mul_ln1345_5_fu_1854_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U636(
    .din0(mul_ln1345_6_fu_1888_p0),
    .din1(mul_ln1345_6_fu_1888_p1),
    .dout(mul_ln1345_6_fu_1888_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U637(
    .din0(mul_ln1345_7_fu_1922_p0),
    .din1(mul_ln1345_7_fu_1922_p1),
    .dout(mul_ln1345_7_fu_1922_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U638(
    .din0(mul_ln1345_8_fu_1956_p0),
    .din1(mul_ln1345_8_fu_1956_p1),
    .dout(mul_ln1345_8_fu_1956_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U639(
    .din0(mul_ln1345_9_fu_1990_p0),
    .din1(mul_ln1345_9_fu_1990_p1),
    .dout(mul_ln1345_9_fu_1990_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U640(
    .din0(mul_ln1345_10_fu_2024_p0),
    .din1(mul_ln1345_10_fu_2024_p1),
    .dout(mul_ln1345_10_fu_2024_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U641(
    .din0(mul_ln1345_11_fu_2058_p0),
    .din1(mul_ln1345_11_fu_2058_p1),
    .dout(mul_ln1345_11_fu_2058_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U642(
    .din0(mul_ln1345_13_fu_2112_p0),
    .din1(mul_ln1345_13_fu_2112_p1),
    .dout(mul_ln1345_13_fu_2112_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U643(
    .din0(mul_ln1345_14_fu_2146_p0),
    .din1(mul_ln1345_14_fu_2146_p1),
    .dout(mul_ln1345_14_fu_2146_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U644(
    .din0(mul_ln1345_15_fu_2180_p0),
    .din1(mul_ln1345_15_fu_2180_p1),
    .dout(mul_ln1345_15_fu_2180_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U645(
    .din0(mul_ln1345_16_fu_2214_p0),
    .din1(mul_ln1345_16_fu_2214_p1),
    .dout(mul_ln1345_16_fu_2214_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U646(
    .din0(mul_ln1345_17_fu_2248_p0),
    .din1(mul_ln1345_17_fu_2248_p1),
    .dout(mul_ln1345_17_fu_2248_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U647(
    .din0(mul_ln1345_19_fu_2302_p0),
    .din1(mul_ln1345_19_fu_2302_p1),
    .dout(mul_ln1345_19_fu_2302_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U648(
    .din0(mul_ln1345_23_fu_2396_p0),
    .din1(mul_ln1345_23_fu_2396_p1),
    .dout(mul_ln1345_23_fu_2396_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U649(
    .din0(mul_ln1345_24_fu_2416_p0),
    .din1(mul_ln1345_24_fu_2416_p1),
    .dout(mul_ln1345_24_fu_2416_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U650(
    .din0(mul_ln1345_25_fu_2436_p0),
    .din1(mul_ln1345_25_fu_2436_p1),
    .dout(mul_ln1345_25_fu_2436_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U651(
    .din0(mul_ln1345_26_fu_2456_p0),
    .din1(mul_ln1345_26_fu_2456_p1),
    .dout(mul_ln1345_26_fu_2456_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U652(
    .din0(mul_ln1345_27_fu_2476_p0),
    .din1(mul_ln1345_27_fu_2476_p1),
    .dout(mul_ln1345_27_fu_2476_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U653(
    .din0(mul_ln1345_28_fu_2496_p0),
    .din1(mul_ln1345_28_fu_2496_p1),
    .dout(mul_ln1345_28_fu_2496_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U654(
    .din0(mul_ln1345_29_fu_2516_p0),
    .din1(mul_ln1345_29_fu_2516_p1),
    .dout(mul_ln1345_29_fu_2516_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U655(
    .din0(mul_ln1345_30_fu_2536_p0),
    .din1(mul_ln1345_30_fu_2536_p1),
    .dout(mul_ln1345_30_fu_2536_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U656(
    .din0(mul_ln1345_31_fu_2556_p0),
    .din1(mul_ln1345_31_fu_2556_p1),
    .dout(mul_ln1345_31_fu_2556_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U657(
    .din0(mul_ln1345_32_fu_2576_p0),
    .din1(mul_ln1345_32_fu_2576_p1),
    .dout(mul_ln1345_32_fu_2576_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U658(
    .din0(mul_ln1345_33_fu_2596_p0),
    .din1(mul_ln1345_33_fu_2596_p1),
    .dout(mul_ln1345_33_fu_2596_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U659(
    .din0(mul_ln1345_34_fu_2616_p0),
    .din1(mul_ln1345_34_fu_2616_p1),
    .dout(mul_ln1345_34_fu_2616_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U660(
    .din0(mul_ln1345_35_fu_2636_p0),
    .din1(mul_ln1345_35_fu_2636_p1),
    .dout(mul_ln1345_35_fu_2636_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U661(
    .din0(mul_ln1345_37_fu_2666_p0),
    .din1(mul_ln1345_37_fu_2666_p1),
    .dout(mul_ln1345_37_fu_2666_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U662(
    .din0(mul_ln1345_38_fu_2686_p0),
    .din1(mul_ln1345_38_fu_2686_p1),
    .dout(mul_ln1345_38_fu_2686_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U663(
    .din0(mul_ln1345_39_fu_2706_p0),
    .din1(mul_ln1345_39_fu_2706_p1),
    .dout(mul_ln1345_39_fu_2706_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U664(
    .din0(mul_ln1345_40_fu_2726_p0),
    .din1(mul_ln1345_40_fu_2726_p1),
    .dout(mul_ln1345_40_fu_2726_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U665(
    .din0(mul_ln1345_41_fu_2746_p0),
    .din1(mul_ln1345_41_fu_2746_p1),
    .dout(mul_ln1345_41_fu_2746_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U666(
    .din0(mul_ln1345_43_fu_2776_p0),
    .din1(mul_ln1345_43_fu_2776_p1),
    .dout(mul_ln1345_43_fu_2776_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U667(
    .din0(mul_ln1345_47_fu_2826_p0),
    .din1(mul_ln1345_47_fu_2826_p1),
    .dout(mul_ln1345_47_fu_2826_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U668(
    .din0(mul_ln1345_48_fu_2846_p0),
    .din1(mul_ln1345_48_fu_2846_p1),
    .dout(mul_ln1345_48_fu_2846_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U669(
    .din0(mul_ln1345_49_fu_2866_p0),
    .din1(mul_ln1345_49_fu_2866_p1),
    .dout(mul_ln1345_49_fu_2866_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U670(
    .din0(mul_ln1345_50_fu_2886_p0),
    .din1(mul_ln1345_50_fu_2886_p1),
    .dout(mul_ln1345_50_fu_2886_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U671(
    .din0(mul_ln1345_51_fu_2906_p0),
    .din1(mul_ln1345_51_fu_2906_p1),
    .dout(mul_ln1345_51_fu_2906_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U672(
    .din0(mul_ln1345_52_fu_2926_p0),
    .din1(mul_ln1345_52_fu_2926_p1),
    .dout(mul_ln1345_52_fu_2926_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U673(
    .din0(mul_ln1345_53_fu_2946_p0),
    .din1(mul_ln1345_53_fu_2946_p1),
    .dout(mul_ln1345_53_fu_2946_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U674(
    .din0(mul_ln1345_54_fu_2966_p0),
    .din1(mul_ln1345_54_fu_2966_p1),
    .dout(mul_ln1345_54_fu_2966_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U675(
    .din0(mul_ln1345_55_fu_2986_p0),
    .din1(mul_ln1345_55_fu_2986_p1),
    .dout(mul_ln1345_55_fu_2986_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U676(
    .din0(mul_ln1345_56_fu_3006_p0),
    .din1(mul_ln1345_56_fu_3006_p1),
    .dout(mul_ln1345_56_fu_3006_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U677(
    .din0(mul_ln1345_57_fu_3026_p0),
    .din1(mul_ln1345_57_fu_3026_p1),
    .dout(mul_ln1345_57_fu_3026_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U678(
    .din0(mul_ln1345_58_fu_3046_p0),
    .din1(mul_ln1345_58_fu_3046_p1),
    .dout(mul_ln1345_58_fu_3046_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U679(
    .din0(mul_ln1345_59_fu_3066_p0),
    .din1(mul_ln1345_59_fu_3066_p1),
    .dout(mul_ln1345_59_fu_3066_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U680(
    .din0(mul_ln1345_61_fu_3096_p0),
    .din1(mul_ln1345_61_fu_3096_p1),
    .dout(mul_ln1345_61_fu_3096_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U681(
    .din0(mul_ln1345_62_fu_3116_p0),
    .din1(mul_ln1345_62_fu_3116_p1),
    .dout(mul_ln1345_62_fu_3116_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U682(
    .din0(mul_ln1345_63_fu_3136_p0),
    .din1(mul_ln1345_63_fu_3136_p1),
    .dout(mul_ln1345_63_fu_3136_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U683(
    .din0(mul_ln1345_64_fu_3156_p0),
    .din1(mul_ln1345_64_fu_3156_p1),
    .dout(mul_ln1345_64_fu_3156_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U684(
    .din0(mul_ln1345_65_fu_3176_p0),
    .din1(mul_ln1345_65_fu_3176_p1),
    .dout(mul_ln1345_65_fu_3176_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U685(
    .din0(mul_ln1345_67_fu_3206_p0),
    .din1(mul_ln1345_67_fu_3206_p1),
    .dout(mul_ln1345_67_fu_3206_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U686(
    .din0(mul_ln1345_71_fu_3256_p0),
    .din1(mul_ln1345_71_fu_3256_p1),
    .dout(mul_ln1345_71_fu_3256_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U687(
    .din0(mul_ln1345_72_fu_3276_p0),
    .din1(mul_ln1345_72_fu_3276_p1),
    .dout(mul_ln1345_72_fu_3276_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U688(
    .din0(mul_ln1345_73_fu_3296_p0),
    .din1(mul_ln1345_73_fu_3296_p1),
    .dout(mul_ln1345_73_fu_3296_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U689(
    .din0(mul_ln1345_74_fu_3316_p0),
    .din1(mul_ln1345_74_fu_3316_p1),
    .dout(mul_ln1345_74_fu_3316_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U690(
    .din0(mul_ln1345_75_fu_3336_p0),
    .din1(tmp_79_fu_3322_p4),
    .dout(mul_ln1345_75_fu_3336_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U691(
    .din0(mul_ln1345_76_fu_3356_p0),
    .din1(tmp_80_fu_3342_p4),
    .dout(mul_ln1345_76_fu_3356_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U692(
    .din0(mul_ln1345_77_fu_3376_p0),
    .din1(tmp_81_fu_3362_p4),
    .dout(mul_ln1345_77_fu_3376_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U693(
    .din0(mul_ln1345_78_fu_3396_p0),
    .din1(tmp_82_fu_3382_p4),
    .dout(mul_ln1345_78_fu_3396_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U694(
    .din0(mul_ln1345_79_fu_3416_p0),
    .din1(tmp_83_fu_3402_p4),
    .dout(mul_ln1345_79_fu_3416_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U695(
    .din0(mul_ln1345_80_fu_3436_p0),
    .din1(tmp_84_fu_3422_p4),
    .dout(mul_ln1345_80_fu_3436_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U696(
    .din0(mul_ln1345_81_fu_3456_p0),
    .din1(tmp_85_fu_3442_p4),
    .dout(mul_ln1345_81_fu_3456_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U697(
    .din0(mul_ln1345_82_fu_3476_p0),
    .din1(tmp_86_fu_3462_p4),
    .dout(mul_ln1345_82_fu_3476_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U698(
    .din0(mul_ln1345_83_fu_3496_p0),
    .din1(tmp_87_fu_3482_p4),
    .dout(mul_ln1345_83_fu_3496_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U699(
    .din0(mul_ln1345_85_fu_3526_p0),
    .din1(tmp_89_fu_3512_p4),
    .dout(mul_ln1345_85_fu_3526_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U700(
    .din0(mul_ln1345_86_fu_3546_p0),
    .din1(tmp_90_fu_3532_p4),
    .dout(mul_ln1345_86_fu_3546_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U701(
    .din0(mul_ln1345_87_fu_3566_p0),
    .din1(tmp_91_fu_3552_p4),
    .dout(mul_ln1345_87_fu_3566_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U702(
    .din0(mul_ln1345_88_fu_3586_p0),
    .din1(tmp_92_fu_3572_p4),
    .dout(mul_ln1345_88_fu_3586_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U703(
    .din0(mul_ln1345_89_fu_3606_p0),
    .din1(tmp_93_fu_3592_p4),
    .dout(mul_ln1345_89_fu_3606_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U704(
    .din0(mul_ln1345_91_fu_3636_p0),
    .din1(tmp_95_fu_3622_p4),
    .dout(mul_ln1345_91_fu_3636_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U705(
    .din0(mul_ln1345_95_fu_3686_p0),
    .din1(tmp_99_fu_3672_p4),
    .dout(mul_ln1345_95_fu_3686_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U706(
    .din0(tmp_100_fu_3692_p4),
    .din1(mul_ln1345_96_fu_3706_p1),
    .dout(mul_ln1345_96_fu_3706_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U707(
    .din0(mul_ln1345_97_fu_3726_p0),
    .din1(tmp_102_fu_3712_p4),
    .dout(mul_ln1345_97_fu_3726_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U708(
    .din0(mul_ln1345_98_fu_3746_p0),
    .din1(tmp_103_fu_3732_p4),
    .dout(mul_ln1345_98_fu_3746_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U709(
    .din0(mul_ln1345_99_fu_3766_p0),
    .din1(tmp_104_fu_3752_p4),
    .dout(mul_ln1345_99_fu_3766_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U710(
    .din0(mul_ln1345_100_fu_3786_p0),
    .din1(tmp_105_fu_3772_p4),
    .dout(mul_ln1345_100_fu_3786_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U711(
    .din0(mul_ln1345_101_fu_3806_p0),
    .din1(tmp_106_fu_3792_p4),
    .dout(mul_ln1345_101_fu_3806_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U712(
    .din0(mul_ln1345_102_fu_3826_p0),
    .din1(tmp_107_fu_3812_p4),
    .dout(mul_ln1345_102_fu_3826_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U713(
    .din0(mul_ln1345_103_fu_3846_p0),
    .din1(tmp_108_fu_3832_p4),
    .dout(mul_ln1345_103_fu_3846_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U714(
    .din0(mul_ln1345_104_fu_3866_p0),
    .din1(tmp_109_fu_3852_p4),
    .dout(mul_ln1345_104_fu_3866_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U715(
    .din0(mul_ln1345_105_fu_3886_p0),
    .din1(tmp_110_fu_3872_p4),
    .dout(mul_ln1345_105_fu_3886_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U716(
    .din0(mul_ln1345_106_fu_3906_p0),
    .din1(tmp_111_fu_3892_p4),
    .dout(mul_ln1345_106_fu_3906_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U717(
    .din0(mul_ln1345_107_fu_3926_p0),
    .din1(tmp_112_fu_3912_p4),
    .dout(mul_ln1345_107_fu_3926_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U718(
    .din0(mul_ln1345_109_fu_3956_p0),
    .din1(tmp_114_fu_3942_p4),
    .dout(mul_ln1345_109_fu_3956_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U719(
    .din0(mul_ln1345_110_fu_3976_p0),
    .din1(tmp_115_fu_3962_p4),
    .dout(mul_ln1345_110_fu_3976_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U720(
    .din0(mul_ln1345_111_fu_3996_p0),
    .din1(tmp_116_fu_3982_p4),
    .dout(mul_ln1345_111_fu_3996_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U721(
    .din0(mul_ln1345_112_fu_4016_p0),
    .din1(tmp_117_fu_4002_p4),
    .dout(mul_ln1345_112_fu_4016_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U722(
    .din0(mul_ln1345_113_fu_4036_p0),
    .din1(tmp_118_fu_4022_p4),
    .dout(mul_ln1345_113_fu_4036_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U723(
    .din0(mul_ln1345_115_fu_4066_p0),
    .din1(tmp_120_fu_4052_p4),
    .dout(mul_ln1345_115_fu_4066_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U724(
    .din0(mul_ln1345_119_fu_4116_p0),
    .din1(tmp_124_fu_4102_p4),
    .dout(mul_ln1345_119_fu_4116_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U725(
    .din0(tmp_125_fu_4122_p4),
    .din1(mul_ln1345_120_fu_4136_p1),
    .dout(mul_ln1345_120_fu_4136_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U726(
    .din0(mul_ln1345_121_fu_4156_p0),
    .din1(tmp_127_fu_4142_p4),
    .dout(mul_ln1345_121_fu_4156_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U727(
    .din0(mul_ln1345_122_fu_4176_p0),
    .din1(tmp_128_fu_4162_p4),
    .dout(mul_ln1345_122_fu_4176_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U728(
    .din0(mul_ln1345_123_fu_4196_p0),
    .din1(tmp_129_fu_4182_p4),
    .dout(mul_ln1345_123_fu_4196_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U729(
    .din0(mul_ln1345_124_fu_4216_p0),
    .din1(tmp_130_fu_4202_p4),
    .dout(mul_ln1345_124_fu_4216_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U730(
    .din0(mul_ln1345_125_fu_4236_p0),
    .din1(tmp_131_fu_4222_p4),
    .dout(mul_ln1345_125_fu_4236_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U731(
    .din0(mul_ln1345_126_fu_4256_p0),
    .din1(tmp_132_fu_4242_p4),
    .dout(mul_ln1345_126_fu_4256_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U732(
    .din0(mul_ln1345_127_fu_4276_p0),
    .din1(tmp_133_fu_4262_p4),
    .dout(mul_ln1345_127_fu_4276_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U733(
    .din0(mul_ln1345_128_fu_4296_p0),
    .din1(tmp_134_fu_4282_p4),
    .dout(mul_ln1345_128_fu_4296_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U734(
    .din0(mul_ln1345_129_fu_4316_p0),
    .din1(tmp_135_fu_4302_p4),
    .dout(mul_ln1345_129_fu_4316_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U735(
    .din0(mul_ln1345_130_fu_4336_p0),
    .din1(tmp_136_fu_4322_p4),
    .dout(mul_ln1345_130_fu_4336_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U736(
    .din0(mul_ln1345_131_fu_4356_p0),
    .din1(tmp_137_fu_4342_p4),
    .dout(mul_ln1345_131_fu_4356_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U737(
    .din0(mul_ln1345_133_fu_4386_p0),
    .din1(tmp_139_fu_4372_p4),
    .dout(mul_ln1345_133_fu_4386_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U738(
    .din0(mul_ln1345_134_fu_4406_p0),
    .din1(tmp_140_fu_4392_p4),
    .dout(mul_ln1345_134_fu_4406_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U739(
    .din0(mul_ln1345_135_fu_4426_p0),
    .din1(tmp_141_fu_4412_p4),
    .dout(mul_ln1345_135_fu_4426_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U740(
    .din0(mul_ln1345_136_fu_4446_p0),
    .din1(tmp_142_fu_4432_p4),
    .dout(mul_ln1345_136_fu_4446_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U741(
    .din0(mul_ln1345_137_fu_4466_p0),
    .din1(tmp_143_fu_4452_p4),
    .dout(mul_ln1345_137_fu_4466_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U742(
    .din0(mul_ln1345_139_fu_4496_p0),
    .din1(tmp_145_fu_4482_p4),
    .dout(mul_ln1345_139_fu_4496_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U743(
    .din0(mul_ln1345_143_fu_4546_p0),
    .din1(tmp_149_fu_4532_p4),
    .dout(mul_ln1345_143_fu_4546_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U744(
    .din0(tmp_150_fu_4552_p4),
    .din1(mul_ln1345_144_fu_4566_p1),
    .dout(mul_ln1345_144_fu_4566_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U745(
    .din0(mul_ln1345_145_fu_4586_p0),
    .din1(tmp_152_fu_4572_p4),
    .dout(mul_ln1345_145_fu_4586_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U746(
    .din0(mul_ln1345_146_fu_4606_p0),
    .din1(tmp_153_fu_4592_p4),
    .dout(mul_ln1345_146_fu_4606_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U747(
    .din0(mul_ln1345_147_fu_4626_p0),
    .din1(tmp_154_fu_4612_p4),
    .dout(mul_ln1345_147_fu_4626_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U748(
    .din0(mul_ln1345_148_fu_4646_p0),
    .din1(tmp_155_fu_4632_p4),
    .dout(mul_ln1345_148_fu_4646_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U749(
    .din0(mul_ln1345_149_fu_4666_p0),
    .din1(tmp_156_fu_4652_p4),
    .dout(mul_ln1345_149_fu_4666_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U750(
    .din0(mul_ln1345_150_fu_4686_p0),
    .din1(tmp_157_fu_4672_p4),
    .dout(mul_ln1345_150_fu_4686_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U751(
    .din0(mul_ln1345_151_fu_4706_p0),
    .din1(tmp_158_fu_4692_p4),
    .dout(mul_ln1345_151_fu_4706_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U752(
    .din0(mul_ln1345_152_fu_4726_p0),
    .din1(tmp_159_fu_4712_p4),
    .dout(mul_ln1345_152_fu_4726_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U753(
    .din0(mul_ln1345_153_fu_4746_p0),
    .din1(tmp_160_fu_4732_p4),
    .dout(mul_ln1345_153_fu_4746_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U754(
    .din0(mul_ln1345_154_fu_4766_p0),
    .din1(tmp_161_fu_4752_p4),
    .dout(mul_ln1345_154_fu_4766_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U755(
    .din0(mul_ln1345_155_fu_4786_p0),
    .din1(tmp_162_fu_4772_p4),
    .dout(mul_ln1345_155_fu_4786_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U756(
    .din0(mul_ln1345_157_fu_4816_p0),
    .din1(tmp_164_fu_4802_p4),
    .dout(mul_ln1345_157_fu_4816_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U757(
    .din0(mul_ln1345_158_fu_4836_p0),
    .din1(tmp_165_fu_4822_p4),
    .dout(mul_ln1345_158_fu_4836_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U758(
    .din0(mul_ln1345_159_fu_4856_p0),
    .din1(tmp_166_fu_4842_p4),
    .dout(mul_ln1345_159_fu_4856_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U759(
    .din0(mul_ln1345_160_fu_4876_p0),
    .din1(tmp_167_fu_4862_p4),
    .dout(mul_ln1345_160_fu_4876_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U760(
    .din0(mul_ln1345_161_fu_4896_p0),
    .din1(tmp_168_fu_4882_p4),
    .dout(mul_ln1345_161_fu_4896_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U761(
    .din0(mul_ln1345_163_fu_4926_p0),
    .din1(tmp_170_fu_4912_p4),
    .dout(mul_ln1345_163_fu_4926_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U762(
    .din0(mul_ln1345_167_fu_4976_p0),
    .din1(tmp_174_fu_4962_p4),
    .dout(mul_ln1345_167_fu_4976_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U763(
    .din0(tmp_175_fu_4982_p4),
    .din1(mul_ln1345_168_fu_4996_p1),
    .dout(mul_ln1345_168_fu_4996_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U764(
    .din0(mul_ln1345_169_fu_5016_p0),
    .din1(tmp_177_fu_5002_p4),
    .dout(mul_ln1345_169_fu_5016_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U765(
    .din0(mul_ln1345_170_fu_5036_p0),
    .din1(tmp_178_fu_5022_p4),
    .dout(mul_ln1345_170_fu_5036_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U766(
    .din0(mul_ln1345_171_fu_5056_p0),
    .din1(tmp_179_fu_5042_p4),
    .dout(mul_ln1345_171_fu_5056_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U767(
    .din0(mul_ln1345_172_fu_5076_p0),
    .din1(tmp_180_fu_5062_p4),
    .dout(mul_ln1345_172_fu_5076_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U768(
    .din0(mul_ln1345_173_fu_5096_p0),
    .din1(tmp_181_fu_5082_p4),
    .dout(mul_ln1345_173_fu_5096_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U769(
    .din0(mul_ln1345_174_fu_5116_p0),
    .din1(tmp_182_fu_5102_p4),
    .dout(mul_ln1345_174_fu_5116_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U770(
    .din0(mul_ln1345_175_fu_5136_p0),
    .din1(tmp_183_fu_5122_p4),
    .dout(mul_ln1345_175_fu_5136_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U771(
    .din0(mul_ln1345_176_fu_5156_p0),
    .din1(tmp_184_fu_5142_p4),
    .dout(mul_ln1345_176_fu_5156_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U772(
    .din0(mul_ln1345_177_fu_5176_p0),
    .din1(tmp_185_fu_5162_p4),
    .dout(mul_ln1345_177_fu_5176_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U773(
    .din0(mul_ln1345_178_fu_5196_p0),
    .din1(tmp_186_fu_5182_p4),
    .dout(mul_ln1345_178_fu_5196_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U774(
    .din0(mul_ln1345_179_fu_5216_p0),
    .din1(tmp_187_fu_5202_p4),
    .dout(mul_ln1345_179_fu_5216_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U775(
    .din0(mul_ln1345_181_fu_5246_p0),
    .din1(tmp_189_fu_5232_p4),
    .dout(mul_ln1345_181_fu_5246_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U776(
    .din0(mul_ln1345_182_fu_5266_p0),
    .din1(tmp_190_fu_5252_p4),
    .dout(mul_ln1345_182_fu_5266_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U777(
    .din0(mul_ln1345_183_fu_5286_p0),
    .din1(tmp_191_fu_5272_p4),
    .dout(mul_ln1345_183_fu_5286_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U778(
    .din0(mul_ln1345_184_fu_5306_p0),
    .din1(tmp_192_fu_5292_p4),
    .dout(mul_ln1345_184_fu_5306_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U779(
    .din0(mul_ln1345_185_fu_5326_p0),
    .din1(tmp_193_fu_5312_p4),
    .dout(mul_ln1345_185_fu_5326_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U780(
    .din0(mul_ln1345_187_fu_5356_p0),
    .din1(tmp_195_fu_5342_p4),
    .dout(mul_ln1345_187_fu_5356_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U781(
    .din0(mul_ln1345_191_fu_5406_p0),
    .din1(tmp_199_fu_5392_p4),
    .dout(mul_ln1345_191_fu_5406_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U782(
    .din0(tmp_200_fu_5412_p4),
    .din1(mul_ln1345_192_fu_5426_p1),
    .dout(mul_ln1345_192_fu_5426_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U783(
    .din0(mul_ln1345_193_fu_5446_p0),
    .din1(tmp_202_fu_5432_p4),
    .dout(mul_ln1345_193_fu_5446_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U784(
    .din0(mul_ln1345_194_fu_5466_p0),
    .din1(tmp_203_fu_5452_p4),
    .dout(mul_ln1345_194_fu_5466_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U785(
    .din0(mul_ln1345_195_fu_5486_p0),
    .din1(tmp_204_fu_5472_p4),
    .dout(mul_ln1345_195_fu_5486_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U786(
    .din0(mul_ln1345_196_fu_5506_p0),
    .din1(tmp_205_fu_5492_p4),
    .dout(mul_ln1345_196_fu_5506_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U787(
    .din0(mul_ln1345_197_fu_5526_p0),
    .din1(tmp_206_fu_5512_p4),
    .dout(mul_ln1345_197_fu_5526_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U788(
    .din0(mul_ln1345_198_fu_5546_p0),
    .din1(tmp_207_fu_5532_p4),
    .dout(mul_ln1345_198_fu_5546_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U789(
    .din0(mul_ln1345_199_fu_5566_p0),
    .din1(tmp_208_fu_5552_p4),
    .dout(mul_ln1345_199_fu_5566_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U790(
    .din0(mul_ln1345_200_fu_5586_p0),
    .din1(tmp_209_fu_5572_p4),
    .dout(mul_ln1345_200_fu_5586_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U791(
    .din0(mul_ln1345_201_fu_5606_p0),
    .din1(tmp_210_fu_5592_p4),
    .dout(mul_ln1345_201_fu_5606_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U792(
    .din0(mul_ln1345_202_fu_5626_p0),
    .din1(tmp_211_fu_5612_p4),
    .dout(mul_ln1345_202_fu_5626_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U793(
    .din0(mul_ln1345_203_fu_5646_p0),
    .din1(tmp_212_fu_5632_p4),
    .dout(mul_ln1345_203_fu_5646_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U794(
    .din0(mul_ln1345_205_fu_5676_p0),
    .din1(tmp_214_fu_5662_p4),
    .dout(mul_ln1345_205_fu_5676_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U795(
    .din0(mul_ln1345_206_fu_5696_p0),
    .din1(tmp_215_fu_5682_p4),
    .dout(mul_ln1345_206_fu_5696_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U796(
    .din0(mul_ln1345_207_fu_5716_p0),
    .din1(tmp_216_fu_5702_p4),
    .dout(mul_ln1345_207_fu_5716_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U797(
    .din0(mul_ln1345_208_fu_5736_p0),
    .din1(tmp_217_fu_5722_p4),
    .dout(mul_ln1345_208_fu_5736_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U798(
    .din0(mul_ln1345_209_fu_5756_p0),
    .din1(tmp_218_fu_5742_p4),
    .dout(mul_ln1345_209_fu_5756_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U799(
    .din0(mul_ln1345_211_fu_5786_p0),
    .din1(tmp_220_fu_5772_p4),
    .dout(mul_ln1345_211_fu_5786_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U800(
    .din0(mul_ln1345_215_fu_5836_p0),
    .din1(tmp_224_fu_5822_p4),
    .dout(mul_ln1345_215_fu_5836_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U801(
    .din0(tmp_225_fu_5842_p4),
    .din1(mul_ln1345_216_fu_5856_p1),
    .dout(mul_ln1345_216_fu_5856_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U802(
    .din0(mul_ln1345_217_fu_5876_p0),
    .din1(tmp_227_fu_5862_p4),
    .dout(mul_ln1345_217_fu_5876_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U803(
    .din0(mul_ln1345_218_fu_5896_p0),
    .din1(tmp_228_fu_5882_p4),
    .dout(mul_ln1345_218_fu_5896_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U804(
    .din0(mul_ln1345_219_fu_5916_p0),
    .din1(tmp_229_fu_5902_p4),
    .dout(mul_ln1345_219_fu_5916_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U805(
    .din0(mul_ln1345_220_fu_5936_p0),
    .din1(tmp_230_fu_5922_p4),
    .dout(mul_ln1345_220_fu_5936_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U806(
    .din0(mul_ln1345_221_fu_5956_p0),
    .din1(tmp_231_fu_5942_p4),
    .dout(mul_ln1345_221_fu_5956_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U807(
    .din0(mul_ln1345_222_fu_5976_p0),
    .din1(tmp_232_fu_5962_p4),
    .dout(mul_ln1345_222_fu_5976_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U808(
    .din0(mul_ln1345_223_fu_5996_p0),
    .din1(tmp_233_fu_5982_p4),
    .dout(mul_ln1345_223_fu_5996_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U809(
    .din0(mul_ln1345_224_fu_6016_p0),
    .din1(tmp_234_fu_6002_p4),
    .dout(mul_ln1345_224_fu_6016_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U810(
    .din0(mul_ln1345_225_fu_6036_p0),
    .din1(tmp_235_fu_6022_p4),
    .dout(mul_ln1345_225_fu_6036_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U811(
    .din0(mul_ln1345_226_fu_6056_p0),
    .din1(tmp_236_fu_6042_p4),
    .dout(mul_ln1345_226_fu_6056_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U812(
    .din0(mul_ln1345_227_fu_6076_p0),
    .din1(tmp_237_fu_6062_p4),
    .dout(mul_ln1345_227_fu_6076_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U813(
    .din0(mul_ln1345_229_fu_6106_p0),
    .din1(tmp_239_fu_6092_p4),
    .dout(mul_ln1345_229_fu_6106_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U814(
    .din0(mul_ln1345_230_fu_6126_p0),
    .din1(tmp_240_fu_6112_p4),
    .dout(mul_ln1345_230_fu_6126_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U815(
    .din0(mul_ln1345_231_fu_6146_p0),
    .din1(tmp_241_fu_6132_p4),
    .dout(mul_ln1345_231_fu_6146_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U816(
    .din0(mul_ln1345_232_fu_6166_p0),
    .din1(tmp_242_fu_6152_p4),
    .dout(mul_ln1345_232_fu_6166_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U817(
    .din0(mul_ln1345_233_fu_6186_p0),
    .din1(tmp_243_fu_6172_p4),
    .dout(mul_ln1345_233_fu_6186_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U818(
    .din0(mul_ln1345_235_fu_6216_p0),
    .din1(tmp_245_fu_6202_p4),
    .dout(mul_ln1345_235_fu_6216_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U819(
    .din0(mul_ln1345_239_fu_6266_p0),
    .din1(tmp_249_fu_6252_p4),
    .dout(mul_ln1345_239_fu_6266_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U820(
    .din0(tmp_250_fu_6272_p4),
    .din1(mul_ln1345_240_fu_6286_p1),
    .dout(mul_ln1345_240_fu_6286_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U821(
    .din0(mul_ln1345_241_fu_6306_p0),
    .din1(tmp_252_fu_6292_p4),
    .dout(mul_ln1345_241_fu_6306_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U822(
    .din0(mul_ln1345_242_fu_6326_p0),
    .din1(tmp_253_fu_6312_p4),
    .dout(mul_ln1345_242_fu_6326_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U823(
    .din0(mul_ln1345_243_fu_6346_p0),
    .din1(tmp_254_fu_6332_p4),
    .dout(mul_ln1345_243_fu_6346_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U824(
    .din0(mul_ln1345_244_fu_6366_p0),
    .din1(tmp_255_fu_6352_p4),
    .dout(mul_ln1345_244_fu_6366_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U825(
    .din0(mul_ln1345_245_fu_6386_p0),
    .din1(tmp_256_fu_6372_p4),
    .dout(mul_ln1345_245_fu_6386_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U826(
    .din0(mul_ln1345_246_fu_6406_p0),
    .din1(tmp_257_fu_6392_p4),
    .dout(mul_ln1345_246_fu_6406_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U827(
    .din0(mul_ln1345_247_fu_6426_p0),
    .din1(tmp_258_fu_6412_p4),
    .dout(mul_ln1345_247_fu_6426_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U828(
    .din0(mul_ln1345_248_fu_6446_p0),
    .din1(tmp_259_fu_6432_p4),
    .dout(mul_ln1345_248_fu_6446_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U829(
    .din0(mul_ln1345_249_fu_6466_p0),
    .din1(tmp_260_fu_6452_p4),
    .dout(mul_ln1345_249_fu_6466_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U830(
    .din0(mul_ln1345_250_fu_6486_p0),
    .din1(tmp_261_fu_6472_p4),
    .dout(mul_ln1345_250_fu_6486_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U831(
    .din0(mul_ln1345_251_fu_6506_p0),
    .din1(tmp_262_fu_6492_p4),
    .dout(mul_ln1345_251_fu_6506_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U832(
    .din0(mul_ln1345_253_fu_6536_p0),
    .din1(tmp_264_fu_6522_p4),
    .dout(mul_ln1345_253_fu_6536_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U833(
    .din0(mul_ln1345_254_fu_6556_p0),
    .din1(tmp_265_fu_6542_p4),
    .dout(mul_ln1345_254_fu_6556_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U834(
    .din0(mul_ln1345_255_fu_6576_p0),
    .din1(tmp_266_fu_6562_p4),
    .dout(mul_ln1345_255_fu_6576_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U835(
    .din0(mul_ln1345_256_fu_6596_p0),
    .din1(tmp_267_fu_6582_p4),
    .dout(mul_ln1345_256_fu_6596_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U836(
    .din0(mul_ln1345_257_fu_6616_p0),
    .din1(tmp_268_fu_6602_p4),
    .dout(mul_ln1345_257_fu_6616_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U837(
    .din0(mul_ln1345_259_fu_6646_p0),
    .din1(tmp_270_fu_6632_p4),
    .dout(mul_ln1345_259_fu_6646_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U838(
    .din0(mul_ln1345_263_fu_6696_p0),
    .din1(tmp_274_fu_6682_p4),
    .dout(mul_ln1345_263_fu_6696_p2)
);

MLP0_mul_3s_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3ns_6_1_1_U839(
    .din0(tmp_275_fu_6702_p4),
    .din1(mul_ln1345_264_fu_6716_p1),
    .dout(mul_ln1345_264_fu_6716_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U840(
    .din0(mul_ln1345_265_fu_6736_p0),
    .din1(tmp_277_fu_6722_p4),
    .dout(mul_ln1345_265_fu_6736_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U841(
    .din0(mul_ln1345_266_fu_6756_p0),
    .din1(tmp_278_fu_6742_p4),
    .dout(mul_ln1345_266_fu_6756_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U842(
    .din0(mul_ln1345_267_fu_6776_p0),
    .din1(tmp_279_fu_6762_p4),
    .dout(mul_ln1345_267_fu_6776_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U843(
    .din0(mul_ln1345_268_fu_6796_p0),
    .din1(tmp_280_fu_6782_p4),
    .dout(mul_ln1345_268_fu_6796_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U844(
    .din0(mul_ln1345_269_fu_6816_p0),
    .din1(tmp_281_fu_6802_p4),
    .dout(mul_ln1345_269_fu_6816_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U845(
    .din0(mul_ln1345_270_fu_6836_p0),
    .din1(tmp_282_fu_6822_p4),
    .dout(mul_ln1345_270_fu_6836_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U846(
    .din0(mul_ln1345_271_fu_6856_p0),
    .din1(tmp_283_fu_6842_p4),
    .dout(mul_ln1345_271_fu_6856_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U847(
    .din0(mul_ln1345_272_fu_6876_p0),
    .din1(tmp_284_fu_6862_p4),
    .dout(mul_ln1345_272_fu_6876_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U848(
    .din0(mul_ln1345_273_fu_6896_p0),
    .din1(tmp_285_fu_6882_p4),
    .dout(mul_ln1345_273_fu_6896_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U849(
    .din0(mul_ln1345_274_fu_6916_p0),
    .din1(tmp_286_fu_6902_p4),
    .dout(mul_ln1345_274_fu_6916_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U850(
    .din0(mul_ln1345_275_fu_6936_p0),
    .din1(tmp_287_fu_6922_p4),
    .dout(mul_ln1345_275_fu_6936_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U851(
    .din0(mul_ln1345_277_fu_6966_p0),
    .din1(tmp_289_fu_6952_p4),
    .dout(mul_ln1345_277_fu_6966_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U852(
    .din0(mul_ln1345_278_fu_6986_p0),
    .din1(tmp_290_fu_6972_p4),
    .dout(mul_ln1345_278_fu_6986_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U853(
    .din0(mul_ln1345_279_fu_7006_p0),
    .din1(tmp_291_fu_6992_p4),
    .dout(mul_ln1345_279_fu_7006_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U854(
    .din0(mul_ln1345_280_fu_7026_p0),
    .din1(tmp_292_fu_7012_p4),
    .dout(mul_ln1345_280_fu_7026_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U855(
    .din0(mul_ln1345_281_fu_7046_p0),
    .din1(tmp_293_fu_7032_p4),
    .dout(mul_ln1345_281_fu_7046_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U856(
    .din0(mul_ln1345_283_fu_7076_p0),
    .din1(tmp_295_fu_7062_p4),
    .dout(mul_ln1345_283_fu_7076_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U857(
    .din0(mul_ln1345_287_fu_7126_p0),
    .din1(tmp_299_fu_7112_p4),
    .dout(mul_ln1345_287_fu_7126_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U858(
    .din0(mul_ln1345_288_fu_7146_p0),
    .din1(mul_ln1345_288_fu_7146_p1),
    .dout(mul_ln1345_288_fu_7146_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U859(
    .din0(mul_ln1345_289_fu_7166_p0),
    .din1(mul_ln1345_289_fu_7166_p1),
    .dout(mul_ln1345_289_fu_7166_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U860(
    .din0(mul_ln1345_290_fu_7186_p0),
    .din1(mul_ln1345_290_fu_7186_p1),
    .dout(mul_ln1345_290_fu_7186_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U861(
    .din0(mul_ln1345_291_fu_7206_p0),
    .din1(mul_ln1345_291_fu_7206_p1),
    .dout(mul_ln1345_291_fu_7206_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U862(
    .din0(mul_ln1345_292_fu_7226_p0),
    .din1(mul_ln1345_292_fu_7226_p1),
    .dout(mul_ln1345_292_fu_7226_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U863(
    .din0(mul_ln1345_293_fu_7246_p0),
    .din1(mul_ln1345_293_fu_7246_p1),
    .dout(mul_ln1345_293_fu_7246_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U864(
    .din0(mul_ln1345_294_fu_7266_p0),
    .din1(mul_ln1345_294_fu_7266_p1),
    .dout(mul_ln1345_294_fu_7266_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U865(
    .din0(mul_ln1345_295_fu_7286_p0),
    .din1(mul_ln1345_295_fu_7286_p1),
    .dout(mul_ln1345_295_fu_7286_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U866(
    .din0(mul_ln1345_296_fu_7306_p0),
    .din1(mul_ln1345_296_fu_7306_p1),
    .dout(mul_ln1345_296_fu_7306_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U867(
    .din0(mul_ln1345_297_fu_7326_p0),
    .din1(mul_ln1345_297_fu_7326_p1),
    .dout(mul_ln1345_297_fu_7326_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U868(
    .din0(mul_ln1345_298_fu_7346_p0),
    .din1(mul_ln1345_298_fu_7346_p1),
    .dout(mul_ln1345_298_fu_7346_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U869(
    .din0(mul_ln1345_299_fu_7366_p0),
    .din1(mul_ln1345_299_fu_7366_p1),
    .dout(mul_ln1345_299_fu_7366_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U870(
    .din0(mul_ln1345_301_fu_7396_p0),
    .din1(mul_ln1345_301_fu_7396_p1),
    .dout(mul_ln1345_301_fu_7396_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U871(
    .din0(mul_ln1345_302_fu_7416_p0),
    .din1(mul_ln1345_302_fu_7416_p1),
    .dout(mul_ln1345_302_fu_7416_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U872(
    .din0(mul_ln1345_303_fu_7436_p0),
    .din1(mul_ln1345_303_fu_7436_p1),
    .dout(mul_ln1345_303_fu_7436_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U873(
    .din0(mul_ln1345_304_fu_7456_p0),
    .din1(mul_ln1345_304_fu_7456_p1),
    .dout(mul_ln1345_304_fu_7456_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U874(
    .din0(mul_ln1345_305_fu_7476_p0),
    .din1(mul_ln1345_305_fu_7476_p1),
    .dout(mul_ln1345_305_fu_7476_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U875(
    .din0(mul_ln1345_307_fu_7506_p0),
    .din1(mul_ln1345_307_fu_7506_p1),
    .dout(mul_ln1345_307_fu_7506_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U876(
    .din0(mul_ln1345_311_fu_7556_p0),
    .din1(mul_ln1345_311_fu_7556_p1),
    .dout(mul_ln1345_311_fu_7556_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U877(
    .din0(mul_ln1345_312_fu_7562_p0),
    .din1(mul_ln1345_312_fu_7562_p1),
    .dout(mul_ln1345_312_fu_7562_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U878(
    .din0(mul_ln1345_313_fu_7568_p0),
    .din1(mul_ln1345_313_fu_7568_p1),
    .dout(mul_ln1345_313_fu_7568_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U879(
    .din0(mul_ln1345_314_fu_7574_p0),
    .din1(mul_ln1345_314_fu_7574_p1),
    .dout(mul_ln1345_314_fu_7574_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U880(
    .din0(mul_ln1345_315_fu_7580_p0),
    .din1(mul_ln1345_315_fu_7580_p1),
    .dout(mul_ln1345_315_fu_7580_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U881(
    .din0(mul_ln1345_316_fu_7586_p0),
    .din1(mul_ln1345_316_fu_7586_p1),
    .dout(mul_ln1345_316_fu_7586_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U882(
    .din0(mul_ln1345_317_fu_7592_p0),
    .din1(mul_ln1345_317_fu_7592_p1),
    .dout(mul_ln1345_317_fu_7592_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U883(
    .din0(mul_ln1345_318_fu_7598_p0),
    .din1(mul_ln1345_318_fu_7598_p1),
    .dout(mul_ln1345_318_fu_7598_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U884(
    .din0(mul_ln1345_319_fu_7604_p0),
    .din1(mul_ln1345_319_fu_7604_p1),
    .dout(mul_ln1345_319_fu_7604_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U885(
    .din0(mul_ln1345_320_fu_7610_p0),
    .din1(mul_ln1345_320_fu_7610_p1),
    .dout(mul_ln1345_320_fu_7610_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U886(
    .din0(mul_ln1345_321_fu_7616_p0),
    .din1(mul_ln1345_321_fu_7616_p1),
    .dout(mul_ln1345_321_fu_7616_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U887(
    .din0(mul_ln1345_322_fu_7622_p0),
    .din1(mul_ln1345_322_fu_7622_p1),
    .dout(mul_ln1345_322_fu_7622_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U888(
    .din0(mul_ln1345_323_fu_7628_p0),
    .din1(mul_ln1345_323_fu_7628_p1),
    .dout(mul_ln1345_323_fu_7628_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U889(
    .din0(mul_ln1345_325_fu_7634_p0),
    .din1(mul_ln1345_325_fu_7634_p1),
    .dout(mul_ln1345_325_fu_7634_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U890(
    .din0(mul_ln1345_326_fu_7640_p0),
    .din1(mul_ln1345_326_fu_7640_p1),
    .dout(mul_ln1345_326_fu_7640_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U891(
    .din0(mul_ln1345_327_fu_7646_p0),
    .din1(mul_ln1345_327_fu_7646_p1),
    .dout(mul_ln1345_327_fu_7646_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U892(
    .din0(mul_ln1345_328_fu_7652_p0),
    .din1(mul_ln1345_328_fu_7652_p1),
    .dout(mul_ln1345_328_fu_7652_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U893(
    .din0(mul_ln1345_329_fu_7658_p0),
    .din1(mul_ln1345_329_fu_7658_p1),
    .dout(mul_ln1345_329_fu_7658_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U894(
    .din0(mul_ln1345_331_fu_7664_p0),
    .din1(mul_ln1345_331_fu_7664_p1),
    .dout(mul_ln1345_331_fu_7664_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U895(
    .din0(mul_ln1345_335_fu_7670_p0),
    .din1(mul_ln1345_335_fu_7670_p1),
    .dout(mul_ln1345_335_fu_7670_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U896(
    .din0(mul_ln1345_336_fu_7676_p0),
    .din1(mul_ln1345_336_fu_7676_p1),
    .dout(mul_ln1345_336_fu_7676_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U897(
    .din0(mul_ln1345_337_fu_7682_p0),
    .din1(mul_ln1345_337_fu_7682_p1),
    .dout(mul_ln1345_337_fu_7682_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U898(
    .din0(mul_ln1345_338_fu_7688_p0),
    .din1(mul_ln1345_338_fu_7688_p1),
    .dout(mul_ln1345_338_fu_7688_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U899(
    .din0(mul_ln1345_339_fu_7694_p0),
    .din1(mul_ln1345_339_fu_7694_p1),
    .dout(mul_ln1345_339_fu_7694_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U900(
    .din0(mul_ln1345_340_fu_7700_p0),
    .din1(mul_ln1345_340_fu_7700_p1),
    .dout(mul_ln1345_340_fu_7700_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U901(
    .din0(mul_ln1345_341_fu_7706_p0),
    .din1(mul_ln1345_341_fu_7706_p1),
    .dout(mul_ln1345_341_fu_7706_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U902(
    .din0(mul_ln1345_342_fu_7712_p0),
    .din1(mul_ln1345_342_fu_7712_p1),
    .dout(mul_ln1345_342_fu_7712_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U903(
    .din0(mul_ln1345_343_fu_7718_p0),
    .din1(mul_ln1345_343_fu_7718_p1),
    .dout(mul_ln1345_343_fu_7718_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U904(
    .din0(mul_ln1345_344_fu_7724_p0),
    .din1(mul_ln1345_344_fu_7724_p1),
    .dout(mul_ln1345_344_fu_7724_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U905(
    .din0(mul_ln1345_345_fu_7730_p0),
    .din1(mul_ln1345_345_fu_7730_p1),
    .dout(mul_ln1345_345_fu_7730_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U906(
    .din0(mul_ln1345_346_fu_7736_p0),
    .din1(mul_ln1345_346_fu_7736_p1),
    .dout(mul_ln1345_346_fu_7736_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U907(
    .din0(mul_ln1345_347_fu_7742_p0),
    .din1(mul_ln1345_347_fu_7742_p1),
    .dout(mul_ln1345_347_fu_7742_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U908(
    .din0(mul_ln1345_349_fu_7748_p0),
    .din1(mul_ln1345_349_fu_7748_p1),
    .dout(mul_ln1345_349_fu_7748_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U909(
    .din0(mul_ln1345_350_fu_7754_p0),
    .din1(mul_ln1345_350_fu_7754_p1),
    .dout(mul_ln1345_350_fu_7754_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U910(
    .din0(mul_ln1345_351_fu_7760_p0),
    .din1(mul_ln1345_351_fu_7760_p1),
    .dout(mul_ln1345_351_fu_7760_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U911(
    .din0(mul_ln1345_352_fu_7766_p0),
    .din1(mul_ln1345_352_fu_7766_p1),
    .dout(mul_ln1345_352_fu_7766_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U912(
    .din0(mul_ln1345_353_fu_7772_p0),
    .din1(mul_ln1345_353_fu_7772_p1),
    .dout(mul_ln1345_353_fu_7772_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U913(
    .din0(mul_ln1345_355_fu_7778_p0),
    .din1(mul_ln1345_355_fu_7778_p1),
    .dout(mul_ln1345_355_fu_7778_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U914(
    .din0(mul_ln1345_359_fu_7784_p0),
    .din1(mul_ln1345_359_fu_7784_p1),
    .dout(mul_ln1345_359_fu_7784_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U915(
    .din0(mul_ln1345_360_fu_7790_p0),
    .din1(mul_ln1345_360_fu_7790_p1),
    .dout(mul_ln1345_360_fu_7790_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U916(
    .din0(mul_ln1345_361_fu_7796_p0),
    .din1(mul_ln1345_361_fu_7796_p1),
    .dout(mul_ln1345_361_fu_7796_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U917(
    .din0(mul_ln1345_362_fu_7802_p0),
    .din1(mul_ln1345_362_fu_7802_p1),
    .dout(mul_ln1345_362_fu_7802_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U918(
    .din0(mul_ln1345_12_fu_7850_p0),
    .din1(mul_ln1345_12_fu_7850_p1),
    .dout(mul_ln1345_12_fu_7850_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U919(
    .din0(mul_ln1345_18_fu_7881_p0),
    .din1(mul_ln1345_18_fu_7881_p1),
    .dout(mul_ln1345_18_fu_7881_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U920(
    .din0(mul_ln1345_20_fu_7900_p0),
    .din1(mul_ln1345_20_fu_7900_p1),
    .dout(mul_ln1345_20_fu_7900_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U921(
    .din0(mul_ln1345_21_fu_7916_p0),
    .din1(mul_ln1345_21_fu_7916_p1),
    .dout(mul_ln1345_21_fu_7916_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U922(
    .din0(mul_ln1345_22_fu_7932_p0),
    .din1(mul_ln1345_22_fu_7932_p1),
    .dout(mul_ln1345_22_fu_7932_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U923(
    .din0(mul_ln1345_36_fu_8112_p0),
    .din1(mul_ln1345_36_fu_8112_p1),
    .dout(mul_ln1345_36_fu_8112_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U924(
    .din0(mul_ln1345_42_fu_8140_p0),
    .din1(mul_ln1345_42_fu_8140_p1),
    .dout(mul_ln1345_42_fu_8140_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U925(
    .din0(mul_ln1345_44_fu_8156_p0),
    .din1(mul_ln1345_44_fu_8156_p1),
    .dout(mul_ln1345_44_fu_8156_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U926(
    .din0(mul_ln1345_45_fu_8169_p0),
    .din1(mul_ln1345_45_fu_8169_p1),
    .dout(mul_ln1345_45_fu_8169_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U927(
    .din0(mul_ln1345_46_fu_8182_p0),
    .din1(mul_ln1345_46_fu_8182_p1),
    .dout(mul_ln1345_46_fu_8182_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U928(
    .din0(mul_ln1345_60_fu_8362_p0),
    .din1(mul_ln1345_60_fu_8362_p1),
    .dout(mul_ln1345_60_fu_8362_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U929(
    .din0(mul_ln1345_66_fu_8390_p0),
    .din1(mul_ln1345_66_fu_8390_p1),
    .dout(mul_ln1345_66_fu_8390_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U930(
    .din0(mul_ln1345_68_fu_8406_p0),
    .din1(mul_ln1345_68_fu_8406_p1),
    .dout(mul_ln1345_68_fu_8406_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U931(
    .din0(mul_ln1345_69_fu_8419_p0),
    .din1(mul_ln1345_69_fu_8419_p1),
    .dout(mul_ln1345_69_fu_8419_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U932(
    .din0(mul_ln1345_70_fu_8432_p0),
    .din1(mul_ln1345_70_fu_8432_p1),
    .dout(mul_ln1345_70_fu_8432_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U933(
    .din0(mul_ln1345_84_fu_8612_p0),
    .din1(mul_ln1345_84_fu_8612_p1),
    .dout(mul_ln1345_84_fu_8612_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U934(
    .din0(mul_ln1345_90_fu_8640_p0),
    .din1(mul_ln1345_90_fu_8640_p1),
    .dout(mul_ln1345_90_fu_8640_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U935(
    .din0(mul_ln1345_92_fu_8656_p0),
    .din1(mul_ln1345_92_fu_8656_p1),
    .dout(mul_ln1345_92_fu_8656_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U936(
    .din0(mul_ln1345_93_fu_8669_p0),
    .din1(mul_ln1345_93_fu_8669_p1),
    .dout(mul_ln1345_93_fu_8669_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U937(
    .din0(mul_ln1345_94_fu_8682_p0),
    .din1(mul_ln1345_94_fu_8682_p1),
    .dout(mul_ln1345_94_fu_8682_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U938(
    .din0(mul_ln1345_108_fu_8862_p0),
    .din1(mul_ln1345_108_fu_8862_p1),
    .dout(mul_ln1345_108_fu_8862_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U939(
    .din0(mul_ln1345_114_fu_8890_p0),
    .din1(mul_ln1345_114_fu_8890_p1),
    .dout(mul_ln1345_114_fu_8890_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U940(
    .din0(mul_ln1345_116_fu_8906_p0),
    .din1(mul_ln1345_116_fu_8906_p1),
    .dout(mul_ln1345_116_fu_8906_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U941(
    .din0(mul_ln1345_117_fu_8919_p0),
    .din1(mul_ln1345_117_fu_8919_p1),
    .dout(mul_ln1345_117_fu_8919_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U942(
    .din0(mul_ln1345_118_fu_8932_p0),
    .din1(mul_ln1345_118_fu_8932_p1),
    .dout(mul_ln1345_118_fu_8932_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U943(
    .din0(mul_ln1345_132_fu_9112_p0),
    .din1(mul_ln1345_132_fu_9112_p1),
    .dout(mul_ln1345_132_fu_9112_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U944(
    .din0(mul_ln1345_138_fu_9140_p0),
    .din1(mul_ln1345_138_fu_9140_p1),
    .dout(mul_ln1345_138_fu_9140_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U945(
    .din0(mul_ln1345_140_fu_9156_p0),
    .din1(mul_ln1345_140_fu_9156_p1),
    .dout(mul_ln1345_140_fu_9156_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U946(
    .din0(mul_ln1345_141_fu_9169_p0),
    .din1(mul_ln1345_141_fu_9169_p1),
    .dout(mul_ln1345_141_fu_9169_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U947(
    .din0(mul_ln1345_142_fu_9182_p0),
    .din1(mul_ln1345_142_fu_9182_p1),
    .dout(mul_ln1345_142_fu_9182_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U948(
    .din0(mul_ln1345_156_fu_9362_p0),
    .din1(mul_ln1345_156_fu_9362_p1),
    .dout(mul_ln1345_156_fu_9362_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U949(
    .din0(mul_ln1345_162_fu_9390_p0),
    .din1(mul_ln1345_162_fu_9390_p1),
    .dout(mul_ln1345_162_fu_9390_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U950(
    .din0(mul_ln1345_164_fu_9406_p0),
    .din1(mul_ln1345_164_fu_9406_p1),
    .dout(mul_ln1345_164_fu_9406_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U951(
    .din0(mul_ln1345_165_fu_9419_p0),
    .din1(mul_ln1345_165_fu_9419_p1),
    .dout(mul_ln1345_165_fu_9419_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U952(
    .din0(mul_ln1345_166_fu_9432_p0),
    .din1(mul_ln1345_166_fu_9432_p1),
    .dout(mul_ln1345_166_fu_9432_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U953(
    .din0(mul_ln1345_180_fu_9612_p0),
    .din1(mul_ln1345_180_fu_9612_p1),
    .dout(mul_ln1345_180_fu_9612_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U954(
    .din0(mul_ln1345_186_fu_9640_p0),
    .din1(mul_ln1345_186_fu_9640_p1),
    .dout(mul_ln1345_186_fu_9640_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U955(
    .din0(mul_ln1345_188_fu_9656_p0),
    .din1(mul_ln1345_188_fu_9656_p1),
    .dout(mul_ln1345_188_fu_9656_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U956(
    .din0(mul_ln1345_189_fu_9669_p0),
    .din1(mul_ln1345_189_fu_9669_p1),
    .dout(mul_ln1345_189_fu_9669_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U957(
    .din0(mul_ln1345_190_fu_9682_p0),
    .din1(mul_ln1345_190_fu_9682_p1),
    .dout(mul_ln1345_190_fu_9682_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U958(
    .din0(mul_ln1345_204_fu_9862_p0),
    .din1(mul_ln1345_204_fu_9862_p1),
    .dout(mul_ln1345_204_fu_9862_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U959(
    .din0(mul_ln1345_210_fu_9890_p0),
    .din1(mul_ln1345_210_fu_9890_p1),
    .dout(mul_ln1345_210_fu_9890_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U960(
    .din0(mul_ln1345_212_fu_9906_p0),
    .din1(mul_ln1345_212_fu_9906_p1),
    .dout(mul_ln1345_212_fu_9906_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U961(
    .din0(mul_ln1345_213_fu_9919_p0),
    .din1(mul_ln1345_213_fu_9919_p1),
    .dout(mul_ln1345_213_fu_9919_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U962(
    .din0(mul_ln1345_214_fu_9932_p0),
    .din1(mul_ln1345_214_fu_9932_p1),
    .dout(mul_ln1345_214_fu_9932_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U963(
    .din0(mul_ln1345_228_fu_10112_p0),
    .din1(mul_ln1345_228_fu_10112_p1),
    .dout(mul_ln1345_228_fu_10112_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U964(
    .din0(mul_ln1345_234_fu_10140_p0),
    .din1(mul_ln1345_234_fu_10140_p1),
    .dout(mul_ln1345_234_fu_10140_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U965(
    .din0(mul_ln1345_236_fu_10156_p0),
    .din1(mul_ln1345_236_fu_10156_p1),
    .dout(mul_ln1345_236_fu_10156_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U966(
    .din0(mul_ln1345_237_fu_10169_p0),
    .din1(mul_ln1345_237_fu_10169_p1),
    .dout(mul_ln1345_237_fu_10169_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U967(
    .din0(mul_ln1345_238_fu_10182_p0),
    .din1(mul_ln1345_238_fu_10182_p1),
    .dout(mul_ln1345_238_fu_10182_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U968(
    .din0(mul_ln1345_252_fu_10362_p0),
    .din1(mul_ln1345_252_fu_10362_p1),
    .dout(mul_ln1345_252_fu_10362_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U969(
    .din0(mul_ln1345_258_fu_10390_p0),
    .din1(mul_ln1345_258_fu_10390_p1),
    .dout(mul_ln1345_258_fu_10390_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U970(
    .din0(mul_ln1345_260_fu_10406_p0),
    .din1(mul_ln1345_260_fu_10406_p1),
    .dout(mul_ln1345_260_fu_10406_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U971(
    .din0(mul_ln1345_261_fu_10419_p0),
    .din1(mul_ln1345_261_fu_10419_p1),
    .dout(mul_ln1345_261_fu_10419_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U972(
    .din0(mul_ln1345_262_fu_10432_p0),
    .din1(mul_ln1345_262_fu_10432_p1),
    .dout(mul_ln1345_262_fu_10432_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U973(
    .din0(mul_ln1345_276_fu_10612_p0),
    .din1(mul_ln1345_276_fu_10612_p1),
    .dout(mul_ln1345_276_fu_10612_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U974(
    .din0(mul_ln1345_282_fu_10640_p0),
    .din1(mul_ln1345_282_fu_10640_p1),
    .dout(mul_ln1345_282_fu_10640_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U975(
    .din0(mul_ln1345_284_fu_10656_p0),
    .din1(mul_ln1345_284_fu_10656_p1),
    .dout(mul_ln1345_284_fu_10656_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U976(
    .din0(mul_ln1345_285_fu_10669_p0),
    .din1(mul_ln1345_285_fu_10669_p1),
    .dout(mul_ln1345_285_fu_10669_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U977(
    .din0(mul_ln1345_286_fu_10682_p0),
    .din1(mul_ln1345_286_fu_10682_p1),
    .dout(mul_ln1345_286_fu_10682_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U978(
    .din0(mul_ln1345_300_fu_10862_p0),
    .din1(mul_ln1345_300_fu_10862_p1),
    .dout(mul_ln1345_300_fu_10862_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U979(
    .din0(mul_ln1345_306_fu_10890_p0),
    .din1(mul_ln1345_306_fu_10890_p1),
    .dout(mul_ln1345_306_fu_10890_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U980(
    .din0(mul_ln1345_308_fu_10906_p0),
    .din1(mul_ln1345_308_fu_10906_p1),
    .dout(mul_ln1345_308_fu_10906_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U981(
    .din0(mul_ln1345_309_fu_10919_p0),
    .din1(mul_ln1345_309_fu_10919_p1),
    .dout(mul_ln1345_309_fu_10919_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U982(
    .din0(mul_ln1345_310_fu_10932_p0),
    .din1(mul_ln1345_310_fu_10932_p1),
    .dout(mul_ln1345_310_fu_10932_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U983(
    .din0(mul_ln1345_324_fu_11109_p0),
    .din1(mul_ln1345_324_fu_11109_p1),
    .dout(mul_ln1345_324_fu_11109_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U984(
    .din0(mul_ln1345_330_fu_11134_p0),
    .din1(mul_ln1345_330_fu_11134_p1),
    .dout(mul_ln1345_330_fu_11134_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U985(
    .din0(mul_ln1345_332_fu_11147_p0),
    .din1(mul_ln1345_332_fu_11147_p1),
    .dout(mul_ln1345_332_fu_11147_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U986(
    .din0(mul_ln1345_333_fu_11157_p0),
    .din1(mul_ln1345_333_fu_11157_p1),
    .dout(mul_ln1345_333_fu_11157_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U987(
    .din0(mul_ln1345_334_fu_11167_p0),
    .din1(mul_ln1345_334_fu_11167_p1),
    .dout(mul_ln1345_334_fu_11167_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U988(
    .din0(mul_ln1345_348_fu_11344_p0),
    .din1(mul_ln1345_348_fu_11344_p1),
    .dout(mul_ln1345_348_fu_11344_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U989(
    .din0(mul_ln1345_354_fu_11369_p0),
    .din1(mul_ln1345_354_fu_11369_p1),
    .dout(mul_ln1345_354_fu_11369_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U990(
    .din0(mul_ln1345_356_fu_11382_p0),
    .din1(mul_ln1345_356_fu_11382_p1),
    .dout(mul_ln1345_356_fu_11382_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U991(
    .din0(mul_ln1345_357_fu_11392_p0),
    .din1(mul_ln1345_357_fu_11392_p1),
    .dout(mul_ln1345_357_fu_11392_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U992(
    .din0(mul_ln1345_358_fu_11402_p0),
    .din1(mul_ln1345_358_fu_11402_p1),
    .dout(mul_ln1345_358_fu_11402_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U993(
    .din0(mul_ln1345_363_fu_11552_p0),
    .din1(mul_ln1345_363_fu_11552_p1),
    .dout(mul_ln1345_363_fu_11552_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U994(
    .din0(mul_ln1345_364_fu_11560_p0),
    .din1(mul_ln1345_364_fu_11560_p1),
    .dout(mul_ln1345_364_fu_11560_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U995(
    .din0(mul_ln1345_365_fu_11568_p0),
    .din1(mul_ln1345_365_fu_11568_p1),
    .dout(mul_ln1345_365_fu_11568_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U996(
    .din0(mul_ln1345_366_fu_11576_p0),
    .din1(mul_ln1345_366_fu_11576_p1),
    .dout(mul_ln1345_366_fu_11576_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U997(
    .din0(mul_ln1345_367_fu_11584_p0),
    .din1(mul_ln1345_367_fu_11584_p1),
    .dout(mul_ln1345_367_fu_11584_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U998(
    .din0(mul_ln1345_368_fu_11592_p0),
    .din1(mul_ln1345_368_fu_11592_p1),
    .dout(mul_ln1345_368_fu_11592_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U999(
    .din0(mul_ln1345_369_fu_11600_p0),
    .din1(mul_ln1345_369_fu_11600_p1),
    .dout(mul_ln1345_369_fu_11600_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1000(
    .din0(mul_ln1345_370_fu_11608_p0),
    .din1(mul_ln1345_370_fu_11608_p1),
    .dout(mul_ln1345_370_fu_11608_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1001(
    .din0(mul_ln1345_371_fu_11616_p0),
    .din1(mul_ln1345_371_fu_11616_p1),
    .dout(mul_ln1345_371_fu_11616_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1002(
    .din0(mul_ln1345_372_fu_11624_p0),
    .din1(mul_ln1345_372_fu_11624_p1),
    .dout(mul_ln1345_372_fu_11624_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1003(
    .din0(mul_ln1345_373_fu_11630_p0),
    .din1(mul_ln1345_373_fu_11630_p1),
    .dout(mul_ln1345_373_fu_11630_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1004(
    .din0(mul_ln1345_374_fu_11638_p0),
    .din1(mul_ln1345_374_fu_11638_p1),
    .dout(mul_ln1345_374_fu_11638_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1005(
    .din0(mul_ln1345_375_fu_11646_p0),
    .din1(mul_ln1345_375_fu_11646_p1),
    .dout(mul_ln1345_375_fu_11646_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1006(
    .din0(mul_ln1345_376_fu_11654_p0),
    .din1(mul_ln1345_376_fu_11654_p1),
    .dout(mul_ln1345_376_fu_11654_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1007(
    .din0(mul_ln1345_377_fu_11662_p0),
    .din1(mul_ln1345_377_fu_11662_p1),
    .dout(mul_ln1345_377_fu_11662_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1008(
    .din0(mul_ln1345_378_fu_11670_p0),
    .din1(mul_ln1345_378_fu_11670_p1),
    .dout(mul_ln1345_378_fu_11670_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1009(
    .din0(mul_ln1345_379_fu_11676_p0),
    .din1(mul_ln1345_379_fu_11676_p1),
    .dout(mul_ln1345_379_fu_11676_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1010(
    .din0(mul_ln1345_380_fu_11684_p0),
    .din1(mul_ln1345_380_fu_11684_p1),
    .dout(mul_ln1345_380_fu_11684_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1011(
    .din0(mul_ln1345_381_fu_11690_p0),
    .din1(mul_ln1345_381_fu_11690_p1),
    .dout(mul_ln1345_381_fu_11690_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1012(
    .din0(mul_ln1345_382_fu_11700_p0),
    .din1(mul_ln1345_382_fu_11700_p1),
    .dout(mul_ln1345_382_fu_11700_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1013(
    .din0(mul_ln1345_383_fu_11710_p0),
    .din1(mul_ln1345_383_fu_11710_p1),
    .dout(mul_ln1345_383_fu_11710_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1014(
    .din0(mul_ln1345_384_fu_11816_p0),
    .din1(mul_ln1345_384_fu_11816_p1),
    .dout(mul_ln1345_384_fu_11816_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1015(
    .din0(mul_ln1345_385_fu_11824_p0),
    .din1(mul_ln1345_385_fu_11824_p1),
    .dout(mul_ln1345_385_fu_11824_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1016(
    .din0(mul_ln1345_386_fu_11832_p0),
    .din1(mul_ln1345_386_fu_11832_p1),
    .dout(mul_ln1345_386_fu_11832_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1017(
    .din0(mul_ln1345_387_fu_11840_p0),
    .din1(mul_ln1345_387_fu_11840_p1),
    .dout(mul_ln1345_387_fu_11840_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1018(
    .din0(mul_ln1345_388_fu_11848_p0),
    .din1(mul_ln1345_388_fu_11848_p1),
    .dout(mul_ln1345_388_fu_11848_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1019(
    .din0(mul_ln1345_389_fu_11856_p0),
    .din1(mul_ln1345_389_fu_11856_p1),
    .dout(mul_ln1345_389_fu_11856_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1020(
    .din0(mul_ln1345_390_fu_11864_p0),
    .din1(mul_ln1345_390_fu_11864_p1),
    .dout(mul_ln1345_390_fu_11864_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1021(
    .din0(mul_ln1345_391_fu_11872_p0),
    .din1(mul_ln1345_391_fu_11872_p1),
    .dout(mul_ln1345_391_fu_11872_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1022(
    .din0(mul_ln1345_392_fu_11880_p0),
    .din1(mul_ln1345_392_fu_11880_p1),
    .dout(mul_ln1345_392_fu_11880_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1023(
    .din0(mul_ln1345_393_fu_11888_p0),
    .din1(mul_ln1345_393_fu_11888_p1),
    .dout(mul_ln1345_393_fu_11888_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1024(
    .din0(mul_ln1345_394_fu_11896_p0),
    .din1(mul_ln1345_394_fu_11896_p1),
    .dout(mul_ln1345_394_fu_11896_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1025(
    .din0(mul_ln1345_395_fu_11904_p0),
    .din1(mul_ln1345_395_fu_11904_p1),
    .dout(mul_ln1345_395_fu_11904_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1026(
    .din0(mul_ln1345_396_fu_11912_p0),
    .din1(mul_ln1345_396_fu_11912_p1),
    .dout(mul_ln1345_396_fu_11912_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1027(
    .din0(mul_ln1345_397_fu_11918_p0),
    .din1(mul_ln1345_397_fu_11918_p1),
    .dout(mul_ln1345_397_fu_11918_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1028(
    .din0(mul_ln1345_398_fu_11926_p0),
    .din1(mul_ln1345_398_fu_11926_p1),
    .dout(mul_ln1345_398_fu_11926_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1029(
    .din0(mul_ln1345_399_fu_11934_p0),
    .din1(mul_ln1345_399_fu_11934_p1),
    .dout(mul_ln1345_399_fu_11934_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1030(
    .din0(mul_ln1345_400_fu_11942_p0),
    .din1(mul_ln1345_400_fu_11942_p1),
    .dout(mul_ln1345_400_fu_11942_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1031(
    .din0(mul_ln1345_401_fu_11950_p0),
    .din1(mul_ln1345_401_fu_11950_p1),
    .dout(mul_ln1345_401_fu_11950_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1032(
    .din0(mul_ln1345_402_fu_11958_p0),
    .din1(mul_ln1345_402_fu_11958_p1),
    .dout(mul_ln1345_402_fu_11958_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1033(
    .din0(mul_ln1345_403_fu_11964_p0),
    .din1(mul_ln1345_403_fu_11964_p1),
    .dout(mul_ln1345_403_fu_11964_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1034(
    .din0(mul_ln1345_404_fu_11972_p0),
    .din1(mul_ln1345_404_fu_11972_p1),
    .dout(mul_ln1345_404_fu_11972_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1035(
    .din0(mul_ln1345_405_fu_11978_p0),
    .din1(mul_ln1345_405_fu_11978_p1),
    .dout(mul_ln1345_405_fu_11978_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1036(
    .din0(mul_ln1345_406_fu_11988_p0),
    .din1(mul_ln1345_406_fu_11988_p1),
    .dout(mul_ln1345_406_fu_11988_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1037(
    .din0(mul_ln1345_407_fu_11998_p0),
    .din1(mul_ln1345_407_fu_11998_p1),
    .dout(mul_ln1345_407_fu_11998_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1038(
    .din0(mul_ln1345_408_fu_12104_p0),
    .din1(mul_ln1345_408_fu_12104_p1),
    .dout(mul_ln1345_408_fu_12104_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1039(
    .din0(mul_ln1345_409_fu_12112_p0),
    .din1(mul_ln1345_409_fu_12112_p1),
    .dout(mul_ln1345_409_fu_12112_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1040(
    .din0(mul_ln1345_410_fu_12120_p0),
    .din1(mul_ln1345_410_fu_12120_p1),
    .dout(mul_ln1345_410_fu_12120_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1041(
    .din0(mul_ln1345_411_fu_12128_p0),
    .din1(mul_ln1345_411_fu_12128_p1),
    .dout(mul_ln1345_411_fu_12128_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1042(
    .din0(mul_ln1345_412_fu_12136_p0),
    .din1(mul_ln1345_412_fu_12136_p1),
    .dout(mul_ln1345_412_fu_12136_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1043(
    .din0(mul_ln1345_413_fu_12144_p0),
    .din1(mul_ln1345_413_fu_12144_p1),
    .dout(mul_ln1345_413_fu_12144_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1044(
    .din0(mul_ln1345_414_fu_12152_p0),
    .din1(mul_ln1345_414_fu_12152_p1),
    .dout(mul_ln1345_414_fu_12152_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1045(
    .din0(mul_ln1345_415_fu_12160_p0),
    .din1(mul_ln1345_415_fu_12160_p1),
    .dout(mul_ln1345_415_fu_12160_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1046(
    .din0(mul_ln1345_416_fu_12168_p0),
    .din1(mul_ln1345_416_fu_12168_p1),
    .dout(mul_ln1345_416_fu_12168_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1047(
    .din0(mul_ln1345_417_fu_12176_p0),
    .din1(mul_ln1345_417_fu_12176_p1),
    .dout(mul_ln1345_417_fu_12176_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1048(
    .din0(mul_ln1345_418_fu_12184_p0),
    .din1(mul_ln1345_418_fu_12184_p1),
    .dout(mul_ln1345_418_fu_12184_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1049(
    .din0(mul_ln1345_419_fu_12192_p0),
    .din1(mul_ln1345_419_fu_12192_p1),
    .dout(mul_ln1345_419_fu_12192_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1050(
    .din0(mul_ln1345_420_fu_12200_p0),
    .din1(mul_ln1345_420_fu_12200_p1),
    .dout(mul_ln1345_420_fu_12200_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1051(
    .din0(mul_ln1345_421_fu_12206_p0),
    .din1(mul_ln1345_421_fu_12206_p1),
    .dout(mul_ln1345_421_fu_12206_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1052(
    .din0(mul_ln1345_422_fu_12214_p0),
    .din1(mul_ln1345_422_fu_12214_p1),
    .dout(mul_ln1345_422_fu_12214_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1053(
    .din0(mul_ln1345_423_fu_12222_p0),
    .din1(mul_ln1345_423_fu_12222_p1),
    .dout(mul_ln1345_423_fu_12222_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1054(
    .din0(mul_ln1345_424_fu_12230_p0),
    .din1(mul_ln1345_424_fu_12230_p1),
    .dout(mul_ln1345_424_fu_12230_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1055(
    .din0(mul_ln1345_425_fu_12238_p0),
    .din1(mul_ln1345_425_fu_12238_p1),
    .dout(mul_ln1345_425_fu_12238_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1056(
    .din0(mul_ln1345_426_fu_12246_p0),
    .din1(mul_ln1345_426_fu_12246_p1),
    .dout(mul_ln1345_426_fu_12246_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1057(
    .din0(mul_ln1345_427_fu_12252_p0),
    .din1(mul_ln1345_427_fu_12252_p1),
    .dout(mul_ln1345_427_fu_12252_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1058(
    .din0(mul_ln1345_428_fu_12260_p0),
    .din1(mul_ln1345_428_fu_12260_p1),
    .dout(mul_ln1345_428_fu_12260_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1059(
    .din0(mul_ln1345_429_fu_12266_p0),
    .din1(mul_ln1345_429_fu_12266_p1),
    .dout(mul_ln1345_429_fu_12266_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1060(
    .din0(mul_ln1345_430_fu_12276_p0),
    .din1(mul_ln1345_430_fu_12276_p1),
    .dout(mul_ln1345_430_fu_12276_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1061(
    .din0(mul_ln1345_431_fu_12286_p0),
    .din1(mul_ln1345_431_fu_12286_p1),
    .dout(mul_ln1345_431_fu_12286_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1062(
    .din0(mul_ln1345_432_fu_12392_p0),
    .din1(mul_ln1345_432_fu_12392_p1),
    .dout(mul_ln1345_432_fu_12392_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1063(
    .din0(mul_ln1345_433_fu_12400_p0),
    .din1(mul_ln1345_433_fu_12400_p1),
    .dout(mul_ln1345_433_fu_12400_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1064(
    .din0(mul_ln1345_434_fu_12408_p0),
    .din1(mul_ln1345_434_fu_12408_p1),
    .dout(mul_ln1345_434_fu_12408_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1065(
    .din0(mul_ln1345_435_fu_12416_p0),
    .din1(mul_ln1345_435_fu_12416_p1),
    .dout(mul_ln1345_435_fu_12416_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1066(
    .din0(mul_ln1345_436_fu_12424_p0),
    .din1(mul_ln1345_436_fu_12424_p1),
    .dout(mul_ln1345_436_fu_12424_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1067(
    .din0(mul_ln1345_437_fu_12432_p0),
    .din1(mul_ln1345_437_fu_12432_p1),
    .dout(mul_ln1345_437_fu_12432_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1068(
    .din0(mul_ln1345_438_fu_12440_p0),
    .din1(mul_ln1345_438_fu_12440_p1),
    .dout(mul_ln1345_438_fu_12440_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1069(
    .din0(mul_ln1345_439_fu_12448_p0),
    .din1(mul_ln1345_439_fu_12448_p1),
    .dout(mul_ln1345_439_fu_12448_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1070(
    .din0(mul_ln1345_440_fu_12456_p0),
    .din1(mul_ln1345_440_fu_12456_p1),
    .dout(mul_ln1345_440_fu_12456_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1071(
    .din0(mul_ln1345_441_fu_12464_p0),
    .din1(mul_ln1345_441_fu_12464_p1),
    .dout(mul_ln1345_441_fu_12464_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1072(
    .din0(mul_ln1345_442_fu_12472_p0),
    .din1(mul_ln1345_442_fu_12472_p1),
    .dout(mul_ln1345_442_fu_12472_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1073(
    .din0(mul_ln1345_443_fu_12480_p0),
    .din1(mul_ln1345_443_fu_12480_p1),
    .dout(mul_ln1345_443_fu_12480_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1074(
    .din0(mul_ln1345_444_fu_12488_p0),
    .din1(mul_ln1345_444_fu_12488_p1),
    .dout(mul_ln1345_444_fu_12488_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1075(
    .din0(mul_ln1345_445_fu_12494_p0),
    .din1(mul_ln1345_445_fu_12494_p1),
    .dout(mul_ln1345_445_fu_12494_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1076(
    .din0(mul_ln1345_446_fu_12502_p0),
    .din1(mul_ln1345_446_fu_12502_p1),
    .dout(mul_ln1345_446_fu_12502_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1077(
    .din0(mul_ln1345_447_fu_12510_p0),
    .din1(mul_ln1345_447_fu_12510_p1),
    .dout(mul_ln1345_447_fu_12510_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1078(
    .din0(mul_ln1345_448_fu_12518_p0),
    .din1(mul_ln1345_448_fu_12518_p1),
    .dout(mul_ln1345_448_fu_12518_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1079(
    .din0(mul_ln1345_449_fu_12526_p0),
    .din1(mul_ln1345_449_fu_12526_p1),
    .dout(mul_ln1345_449_fu_12526_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1080(
    .din0(mul_ln1345_450_fu_12534_p0),
    .din1(mul_ln1345_450_fu_12534_p1),
    .dout(mul_ln1345_450_fu_12534_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1081(
    .din0(mul_ln1345_451_fu_12540_p0),
    .din1(mul_ln1345_451_fu_12540_p1),
    .dout(mul_ln1345_451_fu_12540_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1082(
    .din0(mul_ln1345_452_fu_12548_p0),
    .din1(mul_ln1345_452_fu_12548_p1),
    .dout(mul_ln1345_452_fu_12548_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1083(
    .din0(mul_ln1345_453_fu_12554_p0),
    .din1(mul_ln1345_453_fu_12554_p1),
    .dout(mul_ln1345_453_fu_12554_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1084(
    .din0(mul_ln1345_454_fu_12564_p0),
    .din1(mul_ln1345_454_fu_12564_p1),
    .dout(mul_ln1345_454_fu_12564_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1085(
    .din0(mul_ln1345_455_fu_12574_p0),
    .din1(mul_ln1345_455_fu_12574_p1),
    .dout(mul_ln1345_455_fu_12574_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1086(
    .din0(mul_ln1345_456_fu_12680_p0),
    .din1(mul_ln1345_456_fu_12680_p1),
    .dout(mul_ln1345_456_fu_12680_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1087(
    .din0(mul_ln1345_457_fu_12688_p0),
    .din1(mul_ln1345_457_fu_12688_p1),
    .dout(mul_ln1345_457_fu_12688_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1088(
    .din0(mul_ln1345_458_fu_12696_p0),
    .din1(mul_ln1345_458_fu_12696_p1),
    .dout(mul_ln1345_458_fu_12696_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1089(
    .din0(mul_ln1345_459_fu_12704_p0),
    .din1(mul_ln1345_459_fu_12704_p1),
    .dout(mul_ln1345_459_fu_12704_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1090(
    .din0(mul_ln1345_460_fu_12712_p0),
    .din1(mul_ln1345_460_fu_12712_p1),
    .dout(mul_ln1345_460_fu_12712_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1091(
    .din0(mul_ln1345_461_fu_12720_p0),
    .din1(mul_ln1345_461_fu_12720_p1),
    .dout(mul_ln1345_461_fu_12720_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1092(
    .din0(mul_ln1345_462_fu_12728_p0),
    .din1(mul_ln1345_462_fu_12728_p1),
    .dout(mul_ln1345_462_fu_12728_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1093(
    .din0(mul_ln1345_463_fu_12736_p0),
    .din1(mul_ln1345_463_fu_12736_p1),
    .dout(mul_ln1345_463_fu_12736_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1094(
    .din0(mul_ln1345_464_fu_12744_p0),
    .din1(mul_ln1345_464_fu_12744_p1),
    .dout(mul_ln1345_464_fu_12744_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1095(
    .din0(mul_ln1345_465_fu_12752_p0),
    .din1(mul_ln1345_465_fu_12752_p1),
    .dout(mul_ln1345_465_fu_12752_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1096(
    .din0(mul_ln1345_466_fu_12760_p0),
    .din1(mul_ln1345_466_fu_12760_p1),
    .dout(mul_ln1345_466_fu_12760_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1097(
    .din0(mul_ln1345_467_fu_12768_p0),
    .din1(mul_ln1345_467_fu_12768_p1),
    .dout(mul_ln1345_467_fu_12768_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1098(
    .din0(mul_ln1345_468_fu_12776_p0),
    .din1(mul_ln1345_468_fu_12776_p1),
    .dout(mul_ln1345_468_fu_12776_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1099(
    .din0(mul_ln1345_469_fu_12782_p0),
    .din1(mul_ln1345_469_fu_12782_p1),
    .dout(mul_ln1345_469_fu_12782_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1100(
    .din0(mul_ln1345_470_fu_12790_p0),
    .din1(mul_ln1345_470_fu_12790_p1),
    .dout(mul_ln1345_470_fu_12790_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1101(
    .din0(mul_ln1345_471_fu_12798_p0),
    .din1(mul_ln1345_471_fu_12798_p1),
    .dout(mul_ln1345_471_fu_12798_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1102(
    .din0(mul_ln1345_472_fu_12806_p0),
    .din1(mul_ln1345_472_fu_12806_p1),
    .dout(mul_ln1345_472_fu_12806_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1103(
    .din0(mul_ln1345_473_fu_12814_p0),
    .din1(mul_ln1345_473_fu_12814_p1),
    .dout(mul_ln1345_473_fu_12814_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1104(
    .din0(mul_ln1345_474_fu_12822_p0),
    .din1(mul_ln1345_474_fu_12822_p1),
    .dout(mul_ln1345_474_fu_12822_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1105(
    .din0(mul_ln1345_475_fu_12828_p0),
    .din1(mul_ln1345_475_fu_12828_p1),
    .dout(mul_ln1345_475_fu_12828_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1106(
    .din0(mul_ln1345_476_fu_12836_p0),
    .din1(mul_ln1345_476_fu_12836_p1),
    .dout(mul_ln1345_476_fu_12836_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1107(
    .din0(mul_ln1345_477_fu_12842_p0),
    .din1(mul_ln1345_477_fu_12842_p1),
    .dout(mul_ln1345_477_fu_12842_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1108(
    .din0(mul_ln1345_478_fu_12852_p0),
    .din1(mul_ln1345_478_fu_12852_p1),
    .dout(mul_ln1345_478_fu_12852_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1109(
    .din0(mul_ln1345_479_fu_12862_p0),
    .din1(mul_ln1345_479_fu_12862_p1),
    .dout(mul_ln1345_479_fu_12862_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1110(
    .din0(mul_ln1345_480_fu_12968_p0),
    .din1(mul_ln1345_480_fu_12968_p1),
    .dout(mul_ln1345_480_fu_12968_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1111(
    .din0(mul_ln1345_481_fu_12976_p0),
    .din1(mul_ln1345_481_fu_12976_p1),
    .dout(mul_ln1345_481_fu_12976_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1112(
    .din0(mul_ln1345_482_fu_12984_p0),
    .din1(mul_ln1345_482_fu_12984_p1),
    .dout(mul_ln1345_482_fu_12984_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1113(
    .din0(mul_ln1345_483_fu_12992_p0),
    .din1(mul_ln1345_483_fu_12992_p1),
    .dout(mul_ln1345_483_fu_12992_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1114(
    .din0(mul_ln1345_484_fu_13000_p0),
    .din1(mul_ln1345_484_fu_13000_p1),
    .dout(mul_ln1345_484_fu_13000_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1115(
    .din0(mul_ln1345_485_fu_13008_p0),
    .din1(mul_ln1345_485_fu_13008_p1),
    .dout(mul_ln1345_485_fu_13008_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1116(
    .din0(mul_ln1345_486_fu_13016_p0),
    .din1(mul_ln1345_486_fu_13016_p1),
    .dout(mul_ln1345_486_fu_13016_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1117(
    .din0(mul_ln1345_487_fu_13024_p0),
    .din1(mul_ln1345_487_fu_13024_p1),
    .dout(mul_ln1345_487_fu_13024_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1118(
    .din0(mul_ln1345_488_fu_13032_p0),
    .din1(mul_ln1345_488_fu_13032_p1),
    .dout(mul_ln1345_488_fu_13032_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1119(
    .din0(mul_ln1345_489_fu_13040_p0),
    .din1(mul_ln1345_489_fu_13040_p1),
    .dout(mul_ln1345_489_fu_13040_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1120(
    .din0(mul_ln1345_490_fu_13048_p0),
    .din1(mul_ln1345_490_fu_13048_p1),
    .dout(mul_ln1345_490_fu_13048_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1121(
    .din0(mul_ln1345_491_fu_13056_p0),
    .din1(mul_ln1345_491_fu_13056_p1),
    .dout(mul_ln1345_491_fu_13056_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1122(
    .din0(mul_ln1345_492_fu_13064_p0),
    .din1(mul_ln1345_492_fu_13064_p1),
    .dout(mul_ln1345_492_fu_13064_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1123(
    .din0(mul_ln1345_493_fu_13070_p0),
    .din1(mul_ln1345_493_fu_13070_p1),
    .dout(mul_ln1345_493_fu_13070_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1124(
    .din0(mul_ln1345_494_fu_13078_p0),
    .din1(mul_ln1345_494_fu_13078_p1),
    .dout(mul_ln1345_494_fu_13078_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1125(
    .din0(mul_ln1345_495_fu_13086_p0),
    .din1(mul_ln1345_495_fu_13086_p1),
    .dout(mul_ln1345_495_fu_13086_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1126(
    .din0(mul_ln1345_496_fu_13094_p0),
    .din1(mul_ln1345_496_fu_13094_p1),
    .dout(mul_ln1345_496_fu_13094_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1127(
    .din0(mul_ln1345_497_fu_13102_p0),
    .din1(mul_ln1345_497_fu_13102_p1),
    .dout(mul_ln1345_497_fu_13102_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1128(
    .din0(mul_ln1345_498_fu_13110_p0),
    .din1(mul_ln1345_498_fu_13110_p1),
    .dout(mul_ln1345_498_fu_13110_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1129(
    .din0(mul_ln1345_499_fu_13116_p0),
    .din1(mul_ln1345_499_fu_13116_p1),
    .dout(mul_ln1345_499_fu_13116_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1130(
    .din0(mul_ln1345_500_fu_13124_p0),
    .din1(mul_ln1345_500_fu_13124_p1),
    .dout(mul_ln1345_500_fu_13124_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1131(
    .din0(mul_ln1345_501_fu_13130_p0),
    .din1(mul_ln1345_501_fu_13130_p1),
    .dout(mul_ln1345_501_fu_13130_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1132(
    .din0(mul_ln1345_502_fu_13140_p0),
    .din1(mul_ln1345_502_fu_13140_p1),
    .dout(mul_ln1345_502_fu_13140_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1133(
    .din0(mul_ln1345_503_fu_13150_p0),
    .din1(mul_ln1345_503_fu_13150_p1),
    .dout(mul_ln1345_503_fu_13150_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1134(
    .din0(mul_ln1345_504_fu_13256_p0),
    .din1(mul_ln1345_504_fu_13256_p1),
    .dout(mul_ln1345_504_fu_13256_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1135(
    .din0(mul_ln1345_505_fu_13264_p0),
    .din1(mul_ln1345_505_fu_13264_p1),
    .dout(mul_ln1345_505_fu_13264_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1136(
    .din0(mul_ln1345_506_fu_13272_p0),
    .din1(mul_ln1345_506_fu_13272_p1),
    .dout(mul_ln1345_506_fu_13272_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1137(
    .din0(mul_ln1345_507_fu_13280_p0),
    .din1(mul_ln1345_507_fu_13280_p1),
    .dout(mul_ln1345_507_fu_13280_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1138(
    .din0(mul_ln1345_508_fu_13288_p0),
    .din1(mul_ln1345_508_fu_13288_p1),
    .dout(mul_ln1345_508_fu_13288_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1139(
    .din0(mul_ln1345_509_fu_13296_p0),
    .din1(mul_ln1345_509_fu_13296_p1),
    .dout(mul_ln1345_509_fu_13296_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1140(
    .din0(mul_ln1345_510_fu_13304_p0),
    .din1(mul_ln1345_510_fu_13304_p1),
    .dout(mul_ln1345_510_fu_13304_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1141(
    .din0(mul_ln1345_511_fu_13312_p0),
    .din1(mul_ln1345_511_fu_13312_p1),
    .dout(mul_ln1345_511_fu_13312_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1142(
    .din0(mul_ln1345_512_fu_13320_p0),
    .din1(mul_ln1345_512_fu_13320_p1),
    .dout(mul_ln1345_512_fu_13320_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1143(
    .din0(mul_ln1345_513_fu_13328_p0),
    .din1(mul_ln1345_513_fu_13328_p1),
    .dout(mul_ln1345_513_fu_13328_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1144(
    .din0(mul_ln1345_514_fu_13336_p0),
    .din1(mul_ln1345_514_fu_13336_p1),
    .dout(mul_ln1345_514_fu_13336_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1145(
    .din0(mul_ln1345_515_fu_13344_p0),
    .din1(mul_ln1345_515_fu_13344_p1),
    .dout(mul_ln1345_515_fu_13344_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1146(
    .din0(mul_ln1345_516_fu_13352_p0),
    .din1(mul_ln1345_516_fu_13352_p1),
    .dout(mul_ln1345_516_fu_13352_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1147(
    .din0(mul_ln1345_517_fu_13358_p0),
    .din1(mul_ln1345_517_fu_13358_p1),
    .dout(mul_ln1345_517_fu_13358_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1148(
    .din0(mul_ln1345_518_fu_13366_p0),
    .din1(mul_ln1345_518_fu_13366_p1),
    .dout(mul_ln1345_518_fu_13366_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1149(
    .din0(mul_ln1345_519_fu_13374_p0),
    .din1(mul_ln1345_519_fu_13374_p1),
    .dout(mul_ln1345_519_fu_13374_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1150(
    .din0(mul_ln1345_520_fu_13382_p0),
    .din1(mul_ln1345_520_fu_13382_p1),
    .dout(mul_ln1345_520_fu_13382_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1151(
    .din0(mul_ln1345_521_fu_13390_p0),
    .din1(mul_ln1345_521_fu_13390_p1),
    .dout(mul_ln1345_521_fu_13390_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1152(
    .din0(mul_ln1345_522_fu_13398_p0),
    .din1(mul_ln1345_522_fu_13398_p1),
    .dout(mul_ln1345_522_fu_13398_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1153(
    .din0(mul_ln1345_523_fu_13404_p0),
    .din1(mul_ln1345_523_fu_13404_p1),
    .dout(mul_ln1345_523_fu_13404_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1154(
    .din0(mul_ln1345_524_fu_13412_p0),
    .din1(mul_ln1345_524_fu_13412_p1),
    .dout(mul_ln1345_524_fu_13412_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1155(
    .din0(mul_ln1345_525_fu_13418_p0),
    .din1(mul_ln1345_525_fu_13418_p1),
    .dout(mul_ln1345_525_fu_13418_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1156(
    .din0(mul_ln1345_526_fu_13428_p0),
    .din1(mul_ln1345_526_fu_13428_p1),
    .dout(mul_ln1345_526_fu_13428_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1157(
    .din0(mul_ln1345_527_fu_13438_p0),
    .din1(mul_ln1345_527_fu_13438_p1),
    .dout(mul_ln1345_527_fu_13438_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1158(
    .din0(mul_ln1345_528_fu_13544_p0),
    .din1(mul_ln1345_528_fu_13544_p1),
    .dout(mul_ln1345_528_fu_13544_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1159(
    .din0(mul_ln1345_529_fu_13552_p0),
    .din1(mul_ln1345_529_fu_13552_p1),
    .dout(mul_ln1345_529_fu_13552_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1160(
    .din0(mul_ln1345_530_fu_13560_p0),
    .din1(mul_ln1345_530_fu_13560_p1),
    .dout(mul_ln1345_530_fu_13560_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1161(
    .din0(mul_ln1345_531_fu_13568_p0),
    .din1(mul_ln1345_531_fu_13568_p1),
    .dout(mul_ln1345_531_fu_13568_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1162(
    .din0(mul_ln1345_532_fu_13576_p0),
    .din1(mul_ln1345_532_fu_13576_p1),
    .dout(mul_ln1345_532_fu_13576_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1163(
    .din0(mul_ln1345_533_fu_13584_p0),
    .din1(mul_ln1345_533_fu_13584_p1),
    .dout(mul_ln1345_533_fu_13584_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1164(
    .din0(mul_ln1345_534_fu_13592_p0),
    .din1(mul_ln1345_534_fu_13592_p1),
    .dout(mul_ln1345_534_fu_13592_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1165(
    .din0(mul_ln1345_535_fu_13600_p0),
    .din1(mul_ln1345_535_fu_13600_p1),
    .dout(mul_ln1345_535_fu_13600_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1166(
    .din0(mul_ln1345_536_fu_13608_p0),
    .din1(mul_ln1345_536_fu_13608_p1),
    .dout(mul_ln1345_536_fu_13608_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1167(
    .din0(mul_ln1345_537_fu_13616_p0),
    .din1(mul_ln1345_537_fu_13616_p1),
    .dout(mul_ln1345_537_fu_13616_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1168(
    .din0(mul_ln1345_538_fu_13624_p0),
    .din1(mul_ln1345_538_fu_13624_p1),
    .dout(mul_ln1345_538_fu_13624_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1169(
    .din0(mul_ln1345_539_fu_13632_p0),
    .din1(mul_ln1345_539_fu_13632_p1),
    .dout(mul_ln1345_539_fu_13632_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1170(
    .din0(mul_ln1345_540_fu_13640_p0),
    .din1(mul_ln1345_540_fu_13640_p1),
    .dout(mul_ln1345_540_fu_13640_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1171(
    .din0(mul_ln1345_541_fu_13646_p0),
    .din1(mul_ln1345_541_fu_13646_p1),
    .dout(mul_ln1345_541_fu_13646_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1172(
    .din0(mul_ln1345_542_fu_13654_p0),
    .din1(mul_ln1345_542_fu_13654_p1),
    .dout(mul_ln1345_542_fu_13654_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1173(
    .din0(mul_ln1345_543_fu_13662_p0),
    .din1(mul_ln1345_543_fu_13662_p1),
    .dout(mul_ln1345_543_fu_13662_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1174(
    .din0(mul_ln1345_544_fu_13670_p0),
    .din1(mul_ln1345_544_fu_13670_p1),
    .dout(mul_ln1345_544_fu_13670_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1175(
    .din0(mul_ln1345_545_fu_13678_p0),
    .din1(mul_ln1345_545_fu_13678_p1),
    .dout(mul_ln1345_545_fu_13678_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1176(
    .din0(mul_ln1345_546_fu_13686_p0),
    .din1(mul_ln1345_546_fu_13686_p1),
    .dout(mul_ln1345_546_fu_13686_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1177(
    .din0(mul_ln1345_547_fu_13692_p0),
    .din1(mul_ln1345_547_fu_13692_p1),
    .dout(mul_ln1345_547_fu_13692_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1178(
    .din0(mul_ln1345_548_fu_13700_p0),
    .din1(mul_ln1345_548_fu_13700_p1),
    .dout(mul_ln1345_548_fu_13700_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1179(
    .din0(mul_ln1345_549_fu_13706_p0),
    .din1(mul_ln1345_549_fu_13706_p1),
    .dout(mul_ln1345_549_fu_13706_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1180(
    .din0(mul_ln1345_550_fu_13716_p0),
    .din1(mul_ln1345_550_fu_13716_p1),
    .dout(mul_ln1345_550_fu_13716_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1181(
    .din0(mul_ln1345_551_fu_13726_p0),
    .din1(mul_ln1345_551_fu_13726_p1),
    .dout(mul_ln1345_551_fu_13726_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1182(
    .din0(mul_ln1345_552_fu_13832_p0),
    .din1(mul_ln1345_552_fu_13832_p1),
    .dout(mul_ln1345_552_fu_13832_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1183(
    .din0(mul_ln1345_553_fu_13840_p0),
    .din1(mul_ln1345_553_fu_13840_p1),
    .dout(mul_ln1345_553_fu_13840_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1184(
    .din0(mul_ln1345_554_fu_13848_p0),
    .din1(mul_ln1345_554_fu_13848_p1),
    .dout(mul_ln1345_554_fu_13848_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1185(
    .din0(mul_ln1345_555_fu_13856_p0),
    .din1(mul_ln1345_555_fu_13856_p1),
    .dout(mul_ln1345_555_fu_13856_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1186(
    .din0(mul_ln1345_556_fu_13864_p0),
    .din1(mul_ln1345_556_fu_13864_p1),
    .dout(mul_ln1345_556_fu_13864_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1187(
    .din0(mul_ln1345_557_fu_13872_p0),
    .din1(mul_ln1345_557_fu_13872_p1),
    .dout(mul_ln1345_557_fu_13872_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1188(
    .din0(mul_ln1345_558_fu_13880_p0),
    .din1(mul_ln1345_558_fu_13880_p1),
    .dout(mul_ln1345_558_fu_13880_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1189(
    .din0(mul_ln1345_559_fu_13888_p0),
    .din1(mul_ln1345_559_fu_13888_p1),
    .dout(mul_ln1345_559_fu_13888_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1190(
    .din0(mul_ln1345_560_fu_13896_p0),
    .din1(mul_ln1345_560_fu_13896_p1),
    .dout(mul_ln1345_560_fu_13896_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1191(
    .din0(mul_ln1345_561_fu_13904_p0),
    .din1(mul_ln1345_561_fu_13904_p1),
    .dout(mul_ln1345_561_fu_13904_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1192(
    .din0(mul_ln1345_562_fu_13912_p0),
    .din1(mul_ln1345_562_fu_13912_p1),
    .dout(mul_ln1345_562_fu_13912_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1193(
    .din0(mul_ln1345_563_fu_13920_p0),
    .din1(mul_ln1345_563_fu_13920_p1),
    .dout(mul_ln1345_563_fu_13920_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1194(
    .din0(mul_ln1345_564_fu_13928_p0),
    .din1(mul_ln1345_564_fu_13928_p1),
    .dout(mul_ln1345_564_fu_13928_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1195(
    .din0(mul_ln1345_565_fu_13934_p0),
    .din1(mul_ln1345_565_fu_13934_p1),
    .dout(mul_ln1345_565_fu_13934_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1196(
    .din0(mul_ln1345_566_fu_13942_p0),
    .din1(mul_ln1345_566_fu_13942_p1),
    .dout(mul_ln1345_566_fu_13942_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1197(
    .din0(mul_ln1345_567_fu_13950_p0),
    .din1(mul_ln1345_567_fu_13950_p1),
    .dout(mul_ln1345_567_fu_13950_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1198(
    .din0(mul_ln1345_568_fu_13958_p0),
    .din1(mul_ln1345_568_fu_13958_p1),
    .dout(mul_ln1345_568_fu_13958_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1199(
    .din0(mul_ln1345_569_fu_13966_p0),
    .din1(mul_ln1345_569_fu_13966_p1),
    .dout(mul_ln1345_569_fu_13966_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1200(
    .din0(mul_ln1345_570_fu_13974_p0),
    .din1(mul_ln1345_570_fu_13974_p1),
    .dout(mul_ln1345_570_fu_13974_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1201(
    .din0(mul_ln1345_571_fu_13980_p0),
    .din1(mul_ln1345_571_fu_13980_p1),
    .dout(mul_ln1345_571_fu_13980_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1202(
    .din0(mul_ln1345_572_fu_13988_p0),
    .din1(mul_ln1345_572_fu_13988_p1),
    .dout(mul_ln1345_572_fu_13988_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1203(
    .din0(mul_ln1345_573_fu_13994_p0),
    .din1(mul_ln1345_573_fu_13994_p1),
    .dout(mul_ln1345_573_fu_13994_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1204(
    .din0(mul_ln1345_574_fu_14004_p0),
    .din1(mul_ln1345_574_fu_14004_p1),
    .dout(mul_ln1345_574_fu_14004_p2)
);

MLP0_mul_3ns_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3s_6_1_1_U1205(
    .din0(mul_ln1345_575_fu_14014_p0),
    .din1(mul_ln1345_575_fu_14014_p1),
    .dout(mul_ln1345_575_fu_14014_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cit_reg_1497 <= add_ln122_reg_17014;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cit_reg_1497 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cot_reg_1485 <= select_ln121_7_reg_16995;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cot_reg_1485 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten20_reg_1462 <= add_ln120_reg_16980;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten20_reg_1462 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1474 <= select_ln121_8_reg_17019;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_1474 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln120_reg_16980 <= add_ln120_fu_1577_p2;
        mlp_inst_m2_bias_arr_V_load_reg_16985 <= mlp_inst_m2_bias_arr_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln120_fu_1513_p2 == 1'd0))) begin
        add_ln121_2_reg_16975 <= add_ln121_2_fu_1571_p2;
        add_ln121_reg_16960 <= add_ln121_fu_1551_p2;
        and_ln120_reg_16953 <= and_ln120_fu_1545_p2;
        icmp_ln121_reg_16941 <= icmp_ln121_fu_1519_p2;
        select_ln120_reg_16948 <= select_ln120_fu_1525_p3;
        select_ln121_reg_16967 <= select_ln121_fu_1563_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln122_reg_17014 <= add_ln122_fu_1645_p2;
        select_ln121_7_reg_16995 <= select_ln121_7_fu_1616_p3;
        select_ln121_8_reg_17019 <= select_ln121_8_fu_1650_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln120_reg_16937_pp0_iter1_reg == 1'd0))) begin
        add_ln691_100_reg_21059 <= add_ln691_100_fu_14464_p2;
        add_ln691_105_reg_21064 <= add_ln691_105_fu_14476_p2;
        add_ln691_118_reg_21069 <= add_ln691_118_fu_14514_p2;
        add_ln691_124_reg_21074 <= add_ln691_124_fu_14542_p2;
        add_ln691_129_reg_21079 <= add_ln691_129_fu_14554_p2;
        add_ln691_142_reg_21084 <= add_ln691_142_fu_14592_p2;
        add_ln691_148_reg_21089 <= add_ln691_148_fu_14620_p2;
        add_ln691_153_reg_21094 <= add_ln691_153_fu_14632_p2;
        add_ln691_166_reg_21099 <= add_ln691_166_fu_14670_p2;
        add_ln691_172_reg_21104 <= add_ln691_172_fu_14698_p2;
        add_ln691_177_reg_21109 <= add_ln691_177_fu_14710_p2;
        add_ln691_190_reg_21114 <= add_ln691_190_fu_14748_p2;
        add_ln691_196_reg_21119 <= add_ln691_196_fu_14776_p2;
        add_ln691_201_reg_21124 <= add_ln691_201_fu_14788_p2;
        add_ln691_214_reg_21129 <= add_ln691_214_fu_14826_p2;
        add_ln691_220_reg_21134 <= add_ln691_220_fu_14854_p2;
        add_ln691_225_reg_21139 <= add_ln691_225_fu_14866_p2;
        add_ln691_22_reg_21009 <= add_ln691_22_fu_14202_p2;
        add_ln691_238_reg_21144 <= add_ln691_238_fu_14904_p2;
        add_ln691_244_reg_21149 <= add_ln691_244_fu_14932_p2;
        add_ln691_249_reg_21154 <= add_ln691_249_fu_14944_p2;
        add_ln691_262_reg_21159 <= add_ln691_262_fu_14982_p2;
        add_ln691_268_reg_21164 <= add_ln691_268_fu_15010_p2;
        add_ln691_273_reg_21169 <= add_ln691_273_fu_15022_p2;
        add_ln691_286_reg_21174 <= add_ln691_286_fu_15060_p2;
        add_ln691_28_reg_21014 <= add_ln691_28_fu_14230_p2;
        add_ln691_292_reg_21179 <= add_ln691_292_fu_15088_p2;
        add_ln691_297_reg_21184 <= add_ln691_297_fu_15100_p2;
        add_ln691_310_reg_21189 <= add_ln691_310_fu_15138_p2;
        add_ln691_316_reg_21194 <= add_ln691_316_fu_15166_p2;
        add_ln691_321_reg_21199 <= add_ln691_321_fu_15178_p2;
        add_ln691_334_reg_21204 <= add_ln691_334_fu_15216_p2;
        add_ln691_33_reg_21019 <= add_ln691_33_fu_14242_p2;
        add_ln691_340_reg_21209 <= add_ln691_340_fu_15244_p2;
        add_ln691_345_reg_21214 <= add_ln691_345_fu_15256_p2;
        add_ln691_358_reg_21219 <= add_ln691_358_fu_15294_p2;
        add_ln691_364_reg_21224 <= add_ln691_364_fu_15341_p2;
        add_ln691_369_reg_21229 <= add_ln691_369_fu_15373_p2;
        add_ln691_382_reg_21234 <= add_ln691_382_fu_15411_p2;
        add_ln691_388_reg_21239 <= add_ln691_388_fu_15458_p2;
        add_ln691_393_reg_21244 <= add_ln691_393_fu_15490_p2;
        add_ln691_406_reg_21249 <= add_ln691_406_fu_15528_p2;
        add_ln691_412_reg_21254 <= add_ln691_412_fu_15575_p2;
        add_ln691_417_reg_21259 <= add_ln691_417_fu_15607_p2;
        add_ln691_430_reg_21264 <= add_ln691_430_fu_15645_p2;
        add_ln691_436_reg_21269 <= add_ln691_436_fu_15692_p2;
        add_ln691_441_reg_21274 <= add_ln691_441_fu_15724_p2;
        add_ln691_454_reg_21279 <= add_ln691_454_fu_15762_p2;
        add_ln691_460_reg_21284 <= add_ln691_460_fu_15809_p2;
        add_ln691_465_reg_21289 <= add_ln691_465_fu_15841_p2;
        add_ln691_46_reg_21024 <= add_ln691_46_fu_14280_p2;
        add_ln691_478_reg_21294 <= add_ln691_478_fu_15879_p2;
        add_ln691_484_reg_21299 <= add_ln691_484_fu_15926_p2;
        add_ln691_489_reg_21304 <= add_ln691_489_fu_15958_p2;
        add_ln691_4_reg_20999 <= add_ln691_4_fu_14152_p2;
        add_ln691_502_reg_21309 <= add_ln691_502_fu_15996_p2;
        add_ln691_508_reg_21314 <= add_ln691_508_fu_16043_p2;
        add_ln691_513_reg_21319 <= add_ln691_513_fu_16075_p2;
        add_ln691_526_reg_21324 <= add_ln691_526_fu_16113_p2;
        add_ln691_52_reg_21029 <= add_ln691_52_fu_14308_p2;
        add_ln691_532_reg_21329 <= add_ln691_532_fu_16160_p2;
        add_ln691_537_reg_21334 <= add_ln691_537_fu_16192_p2;
        add_ln691_550_reg_21339 <= add_ln691_550_fu_16230_p2;
        add_ln691_556_reg_21344 <= add_ln691_556_fu_16277_p2;
        add_ln691_561_reg_21349 <= add_ln691_561_fu_16309_p2;
        add_ln691_574_reg_21354 <= add_ln691_574_fu_16347_p2;
        add_ln691_57_reg_21034 <= add_ln691_57_fu_14320_p2;
        add_ln691_70_reg_21039 <= add_ln691_70_fu_14358_p2;
        add_ln691_76_reg_21044 <= add_ln691_76_fu_14386_p2;
        add_ln691_81_reg_21049 <= add_ln691_81_fu_14398_p2;
        add_ln691_94_reg_21054 <= add_ln691_94_fu_14436_p2;
        add_ln691_9_reg_21004 <= add_ln691_9_fu_14164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln120_reg_16937_pp0_iter1_reg == 1'd0))) begin
        add_ln691_102_reg_20074 <= add_ln691_102_fu_8977_p2;
        add_ln691_104_reg_20079 <= add_ln691_104_fu_8993_p2;
        add_ln691_108_reg_20084 <= add_ln691_108_fu_9009_p2;
        add_ln691_110_reg_20089 <= add_ln691_110_fu_9025_p2;
        add_ln691_113_reg_20094 <= add_ln691_113_fu_9041_p2;
        add_ln691_116_reg_20099 <= add_ln691_116_fu_9067_p2;
        add_ln691_120_reg_20104 <= add_ln691_120_fu_9195_p2;
        add_ln691_123_reg_20109 <= add_ln691_123_fu_9211_p2;
        add_ln691_126_reg_20114 <= add_ln691_126_fu_9227_p2;
        add_ln691_128_reg_20119 <= add_ln691_128_fu_9243_p2;
        add_ln691_12_reg_19924 <= add_ln691_12_fu_8009_p2;
        add_ln691_132_reg_20124 <= add_ln691_132_fu_9259_p2;
        add_ln691_134_reg_20129 <= add_ln691_134_fu_9275_p2;
        add_ln691_137_reg_20134 <= add_ln691_137_fu_9291_p2;
        add_ln691_140_reg_20139 <= add_ln691_140_fu_9317_p2;
        add_ln691_144_reg_20144 <= add_ln691_144_fu_9445_p2;
        add_ln691_147_reg_20149 <= add_ln691_147_fu_9461_p2;
        add_ln691_14_reg_19929 <= add_ln691_14_fu_8025_p2;
        add_ln691_150_reg_20154 <= add_ln691_150_fu_9477_p2;
        add_ln691_152_reg_20159 <= add_ln691_152_fu_9493_p2;
        add_ln691_156_reg_20164 <= add_ln691_156_fu_9509_p2;
        add_ln691_158_reg_20169 <= add_ln691_158_fu_9525_p2;
        add_ln691_161_reg_20174 <= add_ln691_161_fu_9541_p2;
        add_ln691_164_reg_20179 <= add_ln691_164_fu_9567_p2;
        add_ln691_168_reg_20184 <= add_ln691_168_fu_9695_p2;
        add_ln691_171_reg_20189 <= add_ln691_171_fu_9711_p2;
        add_ln691_174_reg_20194 <= add_ln691_174_fu_9727_p2;
        add_ln691_176_reg_20199 <= add_ln691_176_fu_9743_p2;
        add_ln691_17_reg_19934 <= add_ln691_17_fu_8041_p2;
        add_ln691_180_reg_20204 <= add_ln691_180_fu_9759_p2;
        add_ln691_182_reg_20209 <= add_ln691_182_fu_9775_p2;
        add_ln691_185_reg_20214 <= add_ln691_185_fu_9791_p2;
        add_ln691_188_reg_20219 <= add_ln691_188_fu_9817_p2;
        add_ln691_192_reg_20224 <= add_ln691_192_fu_9945_p2;
        add_ln691_195_reg_20229 <= add_ln691_195_fu_9961_p2;
        add_ln691_198_reg_20234 <= add_ln691_198_fu_9977_p2;
        add_ln691_200_reg_20239 <= add_ln691_200_fu_9993_p2;
        add_ln691_204_reg_20244 <= add_ln691_204_fu_10009_p2;
        add_ln691_206_reg_20249 <= add_ln691_206_fu_10025_p2;
        add_ln691_209_reg_20254 <= add_ln691_209_fu_10041_p2;
        add_ln691_20_reg_19939 <= add_ln691_20_fu_8067_p2;
        add_ln691_212_reg_20259 <= add_ln691_212_fu_10067_p2;
        add_ln691_216_reg_20264 <= add_ln691_216_fu_10195_p2;
        add_ln691_219_reg_20269 <= add_ln691_219_fu_10211_p2;
        add_ln691_222_reg_20274 <= add_ln691_222_fu_10227_p2;
        add_ln691_224_reg_20279 <= add_ln691_224_fu_10243_p2;
        add_ln691_228_reg_20284 <= add_ln691_228_fu_10259_p2;
        add_ln691_230_reg_20289 <= add_ln691_230_fu_10275_p2;
        add_ln691_233_reg_20294 <= add_ln691_233_fu_10291_p2;
        add_ln691_236_reg_20299 <= add_ln691_236_fu_10317_p2;
        add_ln691_240_reg_20304 <= add_ln691_240_fu_10445_p2;
        add_ln691_243_reg_20309 <= add_ln691_243_fu_10461_p2;
        add_ln691_246_reg_20314 <= add_ln691_246_fu_10477_p2;
        add_ln691_248_reg_20319 <= add_ln691_248_fu_10493_p2;
        add_ln691_24_reg_19944 <= add_ln691_24_fu_8195_p2;
        add_ln691_252_reg_20324 <= add_ln691_252_fu_10509_p2;
        add_ln691_254_reg_20329 <= add_ln691_254_fu_10525_p2;
        add_ln691_257_reg_20334 <= add_ln691_257_fu_10541_p2;
        add_ln691_260_reg_20339 <= add_ln691_260_fu_10567_p2;
        add_ln691_264_reg_20344 <= add_ln691_264_fu_10695_p2;
        add_ln691_267_reg_20349 <= add_ln691_267_fu_10711_p2;
        add_ln691_270_reg_20354 <= add_ln691_270_fu_10727_p2;
        add_ln691_272_reg_20359 <= add_ln691_272_fu_10743_p2;
        add_ln691_276_reg_20364 <= add_ln691_276_fu_10759_p2;
        add_ln691_278_reg_20369 <= add_ln691_278_fu_10775_p2;
        add_ln691_27_reg_19949 <= add_ln691_27_fu_8211_p2;
        add_ln691_281_reg_20374 <= add_ln691_281_fu_10791_p2;
        add_ln691_284_reg_20379 <= add_ln691_284_fu_10817_p2;
        add_ln691_288_reg_20384 <= add_ln691_288_fu_10945_p2;
        add_ln691_291_reg_20389 <= add_ln691_291_fu_10961_p2;
        add_ln691_294_reg_20394 <= add_ln691_294_fu_10977_p2;
        add_ln691_296_reg_20399 <= add_ln691_296_fu_10993_p2;
        add_ln691_300_reg_20404 <= add_ln691_300_fu_11009_p2;
        add_ln691_302_reg_20409 <= add_ln691_302_fu_11025_p2;
        add_ln691_305_reg_20414 <= add_ln691_305_fu_11041_p2;
        add_ln691_308_reg_20419 <= add_ln691_308_fu_11067_p2;
        add_ln691_30_reg_19954 <= add_ln691_30_fu_8227_p2;
        add_ln691_312_reg_20424 <= add_ln691_312_fu_11180_p2;
        add_ln691_315_reg_20429 <= add_ln691_315_fu_11196_p2;
        add_ln691_318_reg_20434 <= add_ln691_318_fu_11212_p2;
        add_ln691_320_reg_20439 <= add_ln691_320_fu_11228_p2;
        add_ln691_324_reg_20444 <= add_ln691_324_fu_11244_p2;
        add_ln691_326_reg_20449 <= add_ln691_326_fu_11260_p2;
        add_ln691_329_reg_20454 <= add_ln691_329_fu_11276_p2;
        add_ln691_32_reg_19959 <= add_ln691_32_fu_8243_p2;
        add_ln691_332_reg_20459 <= add_ln691_332_fu_11302_p2;
        add_ln691_336_reg_20464 <= add_ln691_336_fu_11415_p2;
        add_ln691_339_reg_20469 <= add_ln691_339_fu_11431_p2;
        add_ln691_342_reg_20474 <= add_ln691_342_fu_11447_p2;
        add_ln691_344_reg_20479 <= add_ln691_344_fu_11463_p2;
        add_ln691_348_reg_20484 <= add_ln691_348_fu_11479_p2;
        add_ln691_350_reg_20489 <= add_ln691_350_fu_11495_p2;
        add_ln691_353_reg_20494 <= add_ln691_353_fu_11511_p2;
        add_ln691_356_reg_20499 <= add_ln691_356_fu_11537_p2;
        add_ln691_360_reg_20519 <= add_ln691_360_fu_11718_p2;
        add_ln691_362_reg_20524 <= add_ln691_362_fu_11724_p2;
        add_ln691_365_reg_20529 <= add_ln691_365_fu_11730_p2;
        add_ln691_367_reg_20534 <= add_ln691_367_fu_11736_p2;
        add_ln691_36_reg_19964 <= add_ln691_36_fu_8259_p2;
        add_ln691_372_reg_20539 <= add_ln691_372_fu_11752_p2;
        add_ln691_374_reg_20544 <= add_ln691_374_fu_11768_p2;
        add_ln691_377_reg_20549 <= add_ln691_377_fu_11784_p2;
        add_ln691_380_reg_20554 <= add_ln691_380_fu_11810_p2;
        add_ln691_384_reg_20574 <= add_ln691_384_fu_12006_p2;
        add_ln691_386_reg_20579 <= add_ln691_386_fu_12012_p2;
        add_ln691_389_reg_20584 <= add_ln691_389_fu_12018_p2;
        add_ln691_38_reg_19969 <= add_ln691_38_fu_8275_p2;
        add_ln691_391_reg_20589 <= add_ln691_391_fu_12024_p2;
        add_ln691_396_reg_20594 <= add_ln691_396_fu_12040_p2;
        add_ln691_398_reg_20599 <= add_ln691_398_fu_12056_p2;
        add_ln691_3_reg_19909 <= add_ln691_3_fu_7961_p2;
        add_ln691_401_reg_20604 <= add_ln691_401_fu_12072_p2;
        add_ln691_404_reg_20609 <= add_ln691_404_fu_12098_p2;
        add_ln691_408_reg_20629 <= add_ln691_408_fu_12294_p2;
        add_ln691_410_reg_20634 <= add_ln691_410_fu_12300_p2;
        add_ln691_413_reg_20639 <= add_ln691_413_fu_12306_p2;
        add_ln691_415_reg_20644 <= add_ln691_415_fu_12312_p2;
        add_ln691_41_reg_19974 <= add_ln691_41_fu_8291_p2;
        add_ln691_420_reg_20649 <= add_ln691_420_fu_12328_p2;
        add_ln691_422_reg_20654 <= add_ln691_422_fu_12344_p2;
        add_ln691_425_reg_20659 <= add_ln691_425_fu_12360_p2;
        add_ln691_428_reg_20664 <= add_ln691_428_fu_12386_p2;
        add_ln691_432_reg_20684 <= add_ln691_432_fu_12582_p2;
        add_ln691_434_reg_20689 <= add_ln691_434_fu_12588_p2;
        add_ln691_437_reg_20694 <= add_ln691_437_fu_12594_p2;
        add_ln691_439_reg_20699 <= add_ln691_439_fu_12600_p2;
        add_ln691_444_reg_20704 <= add_ln691_444_fu_12616_p2;
        add_ln691_446_reg_20709 <= add_ln691_446_fu_12632_p2;
        add_ln691_449_reg_20714 <= add_ln691_449_fu_12648_p2;
        add_ln691_44_reg_19979 <= add_ln691_44_fu_8317_p2;
        add_ln691_452_reg_20719 <= add_ln691_452_fu_12674_p2;
        add_ln691_456_reg_20739 <= add_ln691_456_fu_12870_p2;
        add_ln691_458_reg_20744 <= add_ln691_458_fu_12876_p2;
        add_ln691_461_reg_20749 <= add_ln691_461_fu_12882_p2;
        add_ln691_463_reg_20754 <= add_ln691_463_fu_12888_p2;
        add_ln691_468_reg_20759 <= add_ln691_468_fu_12904_p2;
        add_ln691_470_reg_20764 <= add_ln691_470_fu_12920_p2;
        add_ln691_473_reg_20769 <= add_ln691_473_fu_12936_p2;
        add_ln691_476_reg_20774 <= add_ln691_476_fu_12962_p2;
        add_ln691_480_reg_20794 <= add_ln691_480_fu_13158_p2;
        add_ln691_482_reg_20799 <= add_ln691_482_fu_13164_p2;
        add_ln691_485_reg_20804 <= add_ln691_485_fu_13170_p2;
        add_ln691_487_reg_20809 <= add_ln691_487_fu_13176_p2;
        add_ln691_48_reg_19984 <= add_ln691_48_fu_8445_p2;
        add_ln691_492_reg_20814 <= add_ln691_492_fu_13192_p2;
        add_ln691_494_reg_20819 <= add_ln691_494_fu_13208_p2;
        add_ln691_497_reg_20824 <= add_ln691_497_fu_13224_p2;
        add_ln691_500_reg_20829 <= add_ln691_500_fu_13250_p2;
        add_ln691_504_reg_20849 <= add_ln691_504_fu_13446_p2;
        add_ln691_506_reg_20854 <= add_ln691_506_fu_13452_p2;
        add_ln691_509_reg_20859 <= add_ln691_509_fu_13458_p2;
        add_ln691_511_reg_20864 <= add_ln691_511_fu_13464_p2;
        add_ln691_516_reg_20869 <= add_ln691_516_fu_13480_p2;
        add_ln691_518_reg_20874 <= add_ln691_518_fu_13496_p2;
        add_ln691_51_reg_19989 <= add_ln691_51_fu_8461_p2;
        add_ln691_521_reg_20879 <= add_ln691_521_fu_13512_p2;
        add_ln691_524_reg_20884 <= add_ln691_524_fu_13538_p2;
        add_ln691_528_reg_20904 <= add_ln691_528_fu_13734_p2;
        add_ln691_530_reg_20909 <= add_ln691_530_fu_13740_p2;
        add_ln691_533_reg_20914 <= add_ln691_533_fu_13746_p2;
        add_ln691_535_reg_20919 <= add_ln691_535_fu_13752_p2;
        add_ln691_540_reg_20924 <= add_ln691_540_fu_13768_p2;
        add_ln691_542_reg_20929 <= add_ln691_542_fu_13784_p2;
        add_ln691_545_reg_20934 <= add_ln691_545_fu_13800_p2;
        add_ln691_548_reg_20939 <= add_ln691_548_fu_13826_p2;
        add_ln691_54_reg_19994 <= add_ln691_54_fu_8477_p2;
        add_ln691_552_reg_20959 <= add_ln691_552_fu_14022_p2;
        add_ln691_554_reg_20964 <= add_ln691_554_fu_14028_p2;
        add_ln691_557_reg_20969 <= add_ln691_557_fu_14034_p2;
        add_ln691_559_reg_20974 <= add_ln691_559_fu_14040_p2;
        add_ln691_564_reg_20979 <= add_ln691_564_fu_14056_p2;
        add_ln691_566_reg_20984 <= add_ln691_566_fu_14072_p2;
        add_ln691_569_reg_20989 <= add_ln691_569_fu_14088_p2;
        add_ln691_56_reg_19999 <= add_ln691_56_fu_8493_p2;
        add_ln691_572_reg_20994 <= add_ln691_572_fu_14114_p2;
        add_ln691_60_reg_20004 <= add_ln691_60_fu_8509_p2;
        add_ln691_62_reg_20009 <= add_ln691_62_fu_8525_p2;
        add_ln691_65_reg_20014 <= add_ln691_65_fu_8541_p2;
        add_ln691_68_reg_20019 <= add_ln691_68_fu_8567_p2;
        add_ln691_6_reg_19914 <= add_ln691_6_fu_7977_p2;
        add_ln691_72_reg_20024 <= add_ln691_72_fu_8695_p2;
        add_ln691_75_reg_20029 <= add_ln691_75_fu_8711_p2;
        add_ln691_78_reg_20034 <= add_ln691_78_fu_8727_p2;
        add_ln691_80_reg_20039 <= add_ln691_80_fu_8743_p2;
        add_ln691_84_reg_20044 <= add_ln691_84_fu_8759_p2;
        add_ln691_86_reg_20049 <= add_ln691_86_fu_8775_p2;
        add_ln691_89_reg_20054 <= add_ln691_89_fu_8791_p2;
        add_ln691_8_reg_19919 <= add_ln691_8_fu_7993_p2;
        add_ln691_92_reg_20059 <= add_ln691_92_fu_8817_p2;
        add_ln691_96_reg_20064 <= add_ln691_96_fu_8945_p2;
        add_ln691_99_reg_20069 <= add_ln691_99_fu_8961_p2;
        add_ln691_reg_19904 <= add_ln691_fu_7945_p2;
        mul_ln1345_372_reg_20504 <= mul_ln1345_372_fu_11624_p2;
        mul_ln1345_378_reg_20509 <= mul_ln1345_378_fu_11670_p2;
        mul_ln1345_380_reg_20514 <= mul_ln1345_380_fu_11684_p2;
        mul_ln1345_396_reg_20559 <= mul_ln1345_396_fu_11912_p2;
        mul_ln1345_402_reg_20564 <= mul_ln1345_402_fu_11958_p2;
        mul_ln1345_404_reg_20569 <= mul_ln1345_404_fu_11972_p2;
        mul_ln1345_420_reg_20614 <= mul_ln1345_420_fu_12200_p2;
        mul_ln1345_426_reg_20619 <= mul_ln1345_426_fu_12246_p2;
        mul_ln1345_428_reg_20624 <= mul_ln1345_428_fu_12260_p2;
        mul_ln1345_444_reg_20669 <= mul_ln1345_444_fu_12488_p2;
        mul_ln1345_450_reg_20674 <= mul_ln1345_450_fu_12534_p2;
        mul_ln1345_452_reg_20679 <= mul_ln1345_452_fu_12548_p2;
        mul_ln1345_468_reg_20724 <= mul_ln1345_468_fu_12776_p2;
        mul_ln1345_474_reg_20729 <= mul_ln1345_474_fu_12822_p2;
        mul_ln1345_476_reg_20734 <= mul_ln1345_476_fu_12836_p2;
        mul_ln1345_492_reg_20779 <= mul_ln1345_492_fu_13064_p2;
        mul_ln1345_498_reg_20784 <= mul_ln1345_498_fu_13110_p2;
        mul_ln1345_500_reg_20789 <= mul_ln1345_500_fu_13124_p2;
        mul_ln1345_516_reg_20834 <= mul_ln1345_516_fu_13352_p2;
        mul_ln1345_522_reg_20839 <= mul_ln1345_522_fu_13398_p2;
        mul_ln1345_524_reg_20844 <= mul_ln1345_524_fu_13412_p2;
        mul_ln1345_540_reg_20889 <= mul_ln1345_540_fu_13640_p2;
        mul_ln1345_546_reg_20894 <= mul_ln1345_546_fu_13686_p2;
        mul_ln1345_548_reg_20899 <= mul_ln1345_548_fu_13700_p2;
        mul_ln1345_564_reg_20944 <= mul_ln1345_564_fu_13928_p2;
        mul_ln1345_570_reg_20949 <= mul_ln1345_570_fu_13974_p2;
        mul_ln1345_572_reg_20954 <= mul_ln1345_572_fu_13988_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln120_reg_16937 <= icmp_ln120_fu_1513_p2;
        icmp_ln120_reg_16937_pp0_iter1_reg <= icmp_ln120_reg_16937;
        icmp_ln120_reg_16937_pp0_iter2_reg <= icmp_ln120_reg_16937_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln126_reg_17005 <= icmp_ln126_fu_1635_p2;
        icmp_ln161_reg_17010 <= icmp_ln161_fu_1640_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln126_reg_17005_pp0_iter1_reg <= icmp_ln126_reg_17005;
        icmp_ln161_reg_17010_pp0_iter1_reg <= icmp_ln161_reg_17010;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_inst_m2_bias_arr_V_load_1_reg_16927 <= mlp_inst_m2_bias_arr_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1345_100_reg_17660 <= mul_ln1345_100_fu_3786_p2;
        mul_ln1345_101_reg_17670 <= mul_ln1345_101_fu_3806_p2;
        mul_ln1345_102_reg_17680 <= mul_ln1345_102_fu_3826_p2;
        mul_ln1345_103_reg_17690 <= mul_ln1345_103_fu_3846_p2;
        mul_ln1345_104_reg_17700 <= mul_ln1345_104_fu_3866_p2;
        mul_ln1345_105_reg_17710 <= mul_ln1345_105_fu_3886_p2;
        mul_ln1345_106_reg_17720 <= mul_ln1345_106_fu_3906_p2;
        mul_ln1345_107_reg_17730 <= mul_ln1345_107_fu_3926_p2;
        mul_ln1345_109_reg_17745 <= mul_ln1345_109_fu_3956_p2;
        mul_ln1345_10_reg_17080 <= mul_ln1345_10_fu_2024_p2;
        mul_ln1345_110_reg_17755 <= mul_ln1345_110_fu_3976_p2;
        mul_ln1345_111_reg_17765 <= mul_ln1345_111_fu_3996_p2;
        mul_ln1345_112_reg_17775 <= mul_ln1345_112_fu_4016_p2;
        mul_ln1345_113_reg_17785 <= mul_ln1345_113_fu_4036_p2;
        mul_ln1345_115_reg_17800 <= mul_ln1345_115_fu_4066_p2;
        mul_ln1345_119_reg_17825 <= mul_ln1345_119_fu_4116_p2;
        mul_ln1345_11_reg_17085 <= mul_ln1345_11_fu_2058_p2;
        mul_ln1345_120_reg_17835 <= mul_ln1345_120_fu_4136_p2;
        mul_ln1345_121_reg_17845 <= mul_ln1345_121_fu_4156_p2;
        mul_ln1345_122_reg_17855 <= mul_ln1345_122_fu_4176_p2;
        mul_ln1345_123_reg_17865 <= mul_ln1345_123_fu_4196_p2;
        mul_ln1345_124_reg_17875 <= mul_ln1345_124_fu_4216_p2;
        mul_ln1345_125_reg_17885 <= mul_ln1345_125_fu_4236_p2;
        mul_ln1345_126_reg_17895 <= mul_ln1345_126_fu_4256_p2;
        mul_ln1345_127_reg_17905 <= mul_ln1345_127_fu_4276_p2;
        mul_ln1345_128_reg_17915 <= mul_ln1345_128_fu_4296_p2;
        mul_ln1345_129_reg_17925 <= mul_ln1345_129_fu_4316_p2;
        mul_ln1345_130_reg_17935 <= mul_ln1345_130_fu_4336_p2;
        mul_ln1345_131_reg_17945 <= mul_ln1345_131_fu_4356_p2;
        mul_ln1345_133_reg_17960 <= mul_ln1345_133_fu_4386_p2;
        mul_ln1345_134_reg_17970 <= mul_ln1345_134_fu_4406_p2;
        mul_ln1345_135_reg_17980 <= mul_ln1345_135_fu_4426_p2;
        mul_ln1345_136_reg_17990 <= mul_ln1345_136_fu_4446_p2;
        mul_ln1345_137_reg_18000 <= mul_ln1345_137_fu_4466_p2;
        mul_ln1345_139_reg_18015 <= mul_ln1345_139_fu_4496_p2;
        mul_ln1345_13_reg_17100 <= mul_ln1345_13_fu_2112_p2;
        mul_ln1345_143_reg_18040 <= mul_ln1345_143_fu_4546_p2;
        mul_ln1345_144_reg_18050 <= mul_ln1345_144_fu_4566_p2;
        mul_ln1345_145_reg_18060 <= mul_ln1345_145_fu_4586_p2;
        mul_ln1345_146_reg_18070 <= mul_ln1345_146_fu_4606_p2;
        mul_ln1345_147_reg_18080 <= mul_ln1345_147_fu_4626_p2;
        mul_ln1345_148_reg_18090 <= mul_ln1345_148_fu_4646_p2;
        mul_ln1345_149_reg_18100 <= mul_ln1345_149_fu_4666_p2;
        mul_ln1345_14_reg_17105 <= mul_ln1345_14_fu_2146_p2;
        mul_ln1345_150_reg_18110 <= mul_ln1345_150_fu_4686_p2;
        mul_ln1345_151_reg_18120 <= mul_ln1345_151_fu_4706_p2;
        mul_ln1345_152_reg_18130 <= mul_ln1345_152_fu_4726_p2;
        mul_ln1345_153_reg_18140 <= mul_ln1345_153_fu_4746_p2;
        mul_ln1345_154_reg_18150 <= mul_ln1345_154_fu_4766_p2;
        mul_ln1345_155_reg_18160 <= mul_ln1345_155_fu_4786_p2;
        mul_ln1345_157_reg_18175 <= mul_ln1345_157_fu_4816_p2;
        mul_ln1345_158_reg_18185 <= mul_ln1345_158_fu_4836_p2;
        mul_ln1345_159_reg_18195 <= mul_ln1345_159_fu_4856_p2;
        mul_ln1345_15_reg_17110 <= mul_ln1345_15_fu_2180_p2;
        mul_ln1345_160_reg_18205 <= mul_ln1345_160_fu_4876_p2;
        mul_ln1345_161_reg_18215 <= mul_ln1345_161_fu_4896_p2;
        mul_ln1345_163_reg_18230 <= mul_ln1345_163_fu_4926_p2;
        mul_ln1345_167_reg_18255 <= mul_ln1345_167_fu_4976_p2;
        mul_ln1345_168_reg_18265 <= mul_ln1345_168_fu_4996_p2;
        mul_ln1345_169_reg_18275 <= mul_ln1345_169_fu_5016_p2;
        mul_ln1345_16_reg_17115 <= mul_ln1345_16_fu_2214_p2;
        mul_ln1345_170_reg_18285 <= mul_ln1345_170_fu_5036_p2;
        mul_ln1345_171_reg_18295 <= mul_ln1345_171_fu_5056_p2;
        mul_ln1345_172_reg_18305 <= mul_ln1345_172_fu_5076_p2;
        mul_ln1345_173_reg_18315 <= mul_ln1345_173_fu_5096_p2;
        mul_ln1345_174_reg_18325 <= mul_ln1345_174_fu_5116_p2;
        mul_ln1345_175_reg_18335 <= mul_ln1345_175_fu_5136_p2;
        mul_ln1345_176_reg_18345 <= mul_ln1345_176_fu_5156_p2;
        mul_ln1345_177_reg_18355 <= mul_ln1345_177_fu_5176_p2;
        mul_ln1345_178_reg_18365 <= mul_ln1345_178_fu_5196_p2;
        mul_ln1345_179_reg_18375 <= mul_ln1345_179_fu_5216_p2;
        mul_ln1345_17_reg_17120 <= mul_ln1345_17_fu_2248_p2;
        mul_ln1345_181_reg_18390 <= mul_ln1345_181_fu_5246_p2;
        mul_ln1345_182_reg_18400 <= mul_ln1345_182_fu_5266_p2;
        mul_ln1345_183_reg_18410 <= mul_ln1345_183_fu_5286_p2;
        mul_ln1345_184_reg_18420 <= mul_ln1345_184_fu_5306_p2;
        mul_ln1345_185_reg_18430 <= mul_ln1345_185_fu_5326_p2;
        mul_ln1345_187_reg_18445 <= mul_ln1345_187_fu_5356_p2;
        mul_ln1345_191_reg_18470 <= mul_ln1345_191_fu_5406_p2;
        mul_ln1345_192_reg_18480 <= mul_ln1345_192_fu_5426_p2;
        mul_ln1345_193_reg_18490 <= mul_ln1345_193_fu_5446_p2;
        mul_ln1345_194_reg_18500 <= mul_ln1345_194_fu_5466_p2;
        mul_ln1345_195_reg_18510 <= mul_ln1345_195_fu_5486_p2;
        mul_ln1345_196_reg_18520 <= mul_ln1345_196_fu_5506_p2;
        mul_ln1345_197_reg_18530 <= mul_ln1345_197_fu_5526_p2;
        mul_ln1345_198_reg_18540 <= mul_ln1345_198_fu_5546_p2;
        mul_ln1345_199_reg_18550 <= mul_ln1345_199_fu_5566_p2;
        mul_ln1345_19_reg_17135 <= mul_ln1345_19_fu_2302_p2;
        mul_ln1345_1_reg_17035 <= mul_ln1345_1_fu_1718_p2;
        mul_ln1345_200_reg_18560 <= mul_ln1345_200_fu_5586_p2;
        mul_ln1345_201_reg_18570 <= mul_ln1345_201_fu_5606_p2;
        mul_ln1345_202_reg_18580 <= mul_ln1345_202_fu_5626_p2;
        mul_ln1345_203_reg_18590 <= mul_ln1345_203_fu_5646_p2;
        mul_ln1345_205_reg_18605 <= mul_ln1345_205_fu_5676_p2;
        mul_ln1345_206_reg_18615 <= mul_ln1345_206_fu_5696_p2;
        mul_ln1345_207_reg_18625 <= mul_ln1345_207_fu_5716_p2;
        mul_ln1345_208_reg_18635 <= mul_ln1345_208_fu_5736_p2;
        mul_ln1345_209_reg_18645 <= mul_ln1345_209_fu_5756_p2;
        mul_ln1345_211_reg_18660 <= mul_ln1345_211_fu_5786_p2;
        mul_ln1345_215_reg_18685 <= mul_ln1345_215_fu_5836_p2;
        mul_ln1345_216_reg_18695 <= mul_ln1345_216_fu_5856_p2;
        mul_ln1345_217_reg_18705 <= mul_ln1345_217_fu_5876_p2;
        mul_ln1345_218_reg_18715 <= mul_ln1345_218_fu_5896_p2;
        mul_ln1345_219_reg_18725 <= mul_ln1345_219_fu_5916_p2;
        mul_ln1345_220_reg_18735 <= mul_ln1345_220_fu_5936_p2;
        mul_ln1345_221_reg_18745 <= mul_ln1345_221_fu_5956_p2;
        mul_ln1345_222_reg_18755 <= mul_ln1345_222_fu_5976_p2;
        mul_ln1345_223_reg_18765 <= mul_ln1345_223_fu_5996_p2;
        mul_ln1345_224_reg_18775 <= mul_ln1345_224_fu_6016_p2;
        mul_ln1345_225_reg_18785 <= mul_ln1345_225_fu_6036_p2;
        mul_ln1345_226_reg_18795 <= mul_ln1345_226_fu_6056_p2;
        mul_ln1345_227_reg_18805 <= mul_ln1345_227_fu_6076_p2;
        mul_ln1345_229_reg_18820 <= mul_ln1345_229_fu_6106_p2;
        mul_ln1345_230_reg_18830 <= mul_ln1345_230_fu_6126_p2;
        mul_ln1345_231_reg_18840 <= mul_ln1345_231_fu_6146_p2;
        mul_ln1345_232_reg_18850 <= mul_ln1345_232_fu_6166_p2;
        mul_ln1345_233_reg_18860 <= mul_ln1345_233_fu_6186_p2;
        mul_ln1345_235_reg_18875 <= mul_ln1345_235_fu_6216_p2;
        mul_ln1345_239_reg_18900 <= mul_ln1345_239_fu_6266_p2;
        mul_ln1345_23_reg_17170 <= mul_ln1345_23_fu_2396_p2;
        mul_ln1345_240_reg_18910 <= mul_ln1345_240_fu_6286_p2;
        mul_ln1345_241_reg_18920 <= mul_ln1345_241_fu_6306_p2;
        mul_ln1345_242_reg_18930 <= mul_ln1345_242_fu_6326_p2;
        mul_ln1345_243_reg_18940 <= mul_ln1345_243_fu_6346_p2;
        mul_ln1345_244_reg_18950 <= mul_ln1345_244_fu_6366_p2;
        mul_ln1345_245_reg_18960 <= mul_ln1345_245_fu_6386_p2;
        mul_ln1345_246_reg_18970 <= mul_ln1345_246_fu_6406_p2;
        mul_ln1345_247_reg_18980 <= mul_ln1345_247_fu_6426_p2;
        mul_ln1345_248_reg_18990 <= mul_ln1345_248_fu_6446_p2;
        mul_ln1345_249_reg_19000 <= mul_ln1345_249_fu_6466_p2;
        mul_ln1345_24_reg_17175 <= mul_ln1345_24_fu_2416_p2;
        mul_ln1345_250_reg_19010 <= mul_ln1345_250_fu_6486_p2;
        mul_ln1345_251_reg_19020 <= mul_ln1345_251_fu_6506_p2;
        mul_ln1345_253_reg_19035 <= mul_ln1345_253_fu_6536_p2;
        mul_ln1345_254_reg_19045 <= mul_ln1345_254_fu_6556_p2;
        mul_ln1345_255_reg_19055 <= mul_ln1345_255_fu_6576_p2;
        mul_ln1345_256_reg_19065 <= mul_ln1345_256_fu_6596_p2;
        mul_ln1345_257_reg_19075 <= mul_ln1345_257_fu_6616_p2;
        mul_ln1345_259_reg_19090 <= mul_ln1345_259_fu_6646_p2;
        mul_ln1345_25_reg_17180 <= mul_ln1345_25_fu_2436_p2;
        mul_ln1345_263_reg_19115 <= mul_ln1345_263_fu_6696_p2;
        mul_ln1345_264_reg_19125 <= mul_ln1345_264_fu_6716_p2;
        mul_ln1345_265_reg_19135 <= mul_ln1345_265_fu_6736_p2;
        mul_ln1345_266_reg_19145 <= mul_ln1345_266_fu_6756_p2;
        mul_ln1345_267_reg_19155 <= mul_ln1345_267_fu_6776_p2;
        mul_ln1345_268_reg_19165 <= mul_ln1345_268_fu_6796_p2;
        mul_ln1345_269_reg_19175 <= mul_ln1345_269_fu_6816_p2;
        mul_ln1345_26_reg_17185 <= mul_ln1345_26_fu_2456_p2;
        mul_ln1345_270_reg_19185 <= mul_ln1345_270_fu_6836_p2;
        mul_ln1345_271_reg_19195 <= mul_ln1345_271_fu_6856_p2;
        mul_ln1345_272_reg_19205 <= mul_ln1345_272_fu_6876_p2;
        mul_ln1345_273_reg_19215 <= mul_ln1345_273_fu_6896_p2;
        mul_ln1345_274_reg_19225 <= mul_ln1345_274_fu_6916_p2;
        mul_ln1345_275_reg_19235 <= mul_ln1345_275_fu_6936_p2;
        mul_ln1345_277_reg_19250 <= mul_ln1345_277_fu_6966_p2;
        mul_ln1345_278_reg_19260 <= mul_ln1345_278_fu_6986_p2;
        mul_ln1345_279_reg_19270 <= mul_ln1345_279_fu_7006_p2;
        mul_ln1345_27_reg_17190 <= mul_ln1345_27_fu_2476_p2;
        mul_ln1345_280_reg_19280 <= mul_ln1345_280_fu_7026_p2;
        mul_ln1345_281_reg_19290 <= mul_ln1345_281_fu_7046_p2;
        mul_ln1345_283_reg_19305 <= mul_ln1345_283_fu_7076_p2;
        mul_ln1345_287_reg_19330 <= mul_ln1345_287_fu_7126_p2;
        mul_ln1345_288_reg_19347 <= mul_ln1345_288_fu_7146_p2;
        mul_ln1345_289_reg_19364 <= mul_ln1345_289_fu_7166_p2;
        mul_ln1345_28_reg_17195 <= mul_ln1345_28_fu_2496_p2;
        mul_ln1345_290_reg_19381 <= mul_ln1345_290_fu_7186_p2;
        mul_ln1345_291_reg_19399 <= mul_ln1345_291_fu_7206_p2;
        mul_ln1345_292_reg_19417 <= mul_ln1345_292_fu_7226_p2;
        mul_ln1345_293_reg_19435 <= mul_ln1345_293_fu_7246_p2;
        mul_ln1345_294_reg_19453 <= mul_ln1345_294_fu_7266_p2;
        mul_ln1345_295_reg_19471 <= mul_ln1345_295_fu_7286_p2;
        mul_ln1345_296_reg_19489 <= mul_ln1345_296_fu_7306_p2;
        mul_ln1345_297_reg_19507 <= mul_ln1345_297_fu_7326_p2;
        mul_ln1345_298_reg_19525 <= mul_ln1345_298_fu_7346_p2;
        mul_ln1345_299_reg_19543 <= mul_ln1345_299_fu_7366_p2;
        mul_ln1345_29_reg_17200 <= mul_ln1345_29_fu_2516_p2;
        mul_ln1345_2_reg_17040 <= mul_ln1345_2_fu_1752_p2;
        mul_ln1345_301_reg_19566 <= mul_ln1345_301_fu_7396_p2;
        mul_ln1345_302_reg_19584 <= mul_ln1345_302_fu_7416_p2;
        mul_ln1345_303_reg_19602 <= mul_ln1345_303_fu_7436_p2;
        mul_ln1345_304_reg_19620 <= mul_ln1345_304_fu_7456_p2;
        mul_ln1345_305_reg_19638 <= mul_ln1345_305_fu_7476_p2;
        mul_ln1345_307_reg_19661 <= mul_ln1345_307_fu_7506_p2;
        mul_ln1345_30_reg_17205 <= mul_ln1345_30_fu_2536_p2;
        mul_ln1345_311_reg_19694 <= mul_ln1345_311_fu_7556_p2;
        mul_ln1345_312_reg_19699 <= mul_ln1345_312_fu_7562_p2;
        mul_ln1345_313_reg_19704 <= mul_ln1345_313_fu_7568_p2;
        mul_ln1345_314_reg_19709 <= mul_ln1345_314_fu_7574_p2;
        mul_ln1345_315_reg_19714 <= mul_ln1345_315_fu_7580_p2;
        mul_ln1345_316_reg_19719 <= mul_ln1345_316_fu_7586_p2;
        mul_ln1345_317_reg_19724 <= mul_ln1345_317_fu_7592_p2;
        mul_ln1345_318_reg_19729 <= mul_ln1345_318_fu_7598_p2;
        mul_ln1345_319_reg_19734 <= mul_ln1345_319_fu_7604_p2;
        mul_ln1345_31_reg_17210 <= mul_ln1345_31_fu_2556_p2;
        mul_ln1345_320_reg_19739 <= mul_ln1345_320_fu_7610_p2;
        mul_ln1345_321_reg_19744 <= mul_ln1345_321_fu_7616_p2;
        mul_ln1345_322_reg_19749 <= mul_ln1345_322_fu_7622_p2;
        mul_ln1345_323_reg_19754 <= mul_ln1345_323_fu_7628_p2;
        mul_ln1345_325_reg_19759 <= mul_ln1345_325_fu_7634_p2;
        mul_ln1345_326_reg_19764 <= mul_ln1345_326_fu_7640_p2;
        mul_ln1345_327_reg_19769 <= mul_ln1345_327_fu_7646_p2;
        mul_ln1345_328_reg_19774 <= mul_ln1345_328_fu_7652_p2;
        mul_ln1345_329_reg_19779 <= mul_ln1345_329_fu_7658_p2;
        mul_ln1345_32_reg_17215 <= mul_ln1345_32_fu_2576_p2;
        mul_ln1345_331_reg_19784 <= mul_ln1345_331_fu_7664_p2;
        mul_ln1345_335_reg_19789 <= mul_ln1345_335_fu_7670_p2;
        mul_ln1345_336_reg_19794 <= mul_ln1345_336_fu_7676_p2;
        mul_ln1345_337_reg_19799 <= mul_ln1345_337_fu_7682_p2;
        mul_ln1345_338_reg_19804 <= mul_ln1345_338_fu_7688_p2;
        mul_ln1345_339_reg_19809 <= mul_ln1345_339_fu_7694_p2;
        mul_ln1345_33_reg_17220 <= mul_ln1345_33_fu_2596_p2;
        mul_ln1345_340_reg_19814 <= mul_ln1345_340_fu_7700_p2;
        mul_ln1345_341_reg_19819 <= mul_ln1345_341_fu_7706_p2;
        mul_ln1345_342_reg_19824 <= mul_ln1345_342_fu_7712_p2;
        mul_ln1345_343_reg_19829 <= mul_ln1345_343_fu_7718_p2;
        mul_ln1345_344_reg_19834 <= mul_ln1345_344_fu_7724_p2;
        mul_ln1345_345_reg_19839 <= mul_ln1345_345_fu_7730_p2;
        mul_ln1345_346_reg_19844 <= mul_ln1345_346_fu_7736_p2;
        mul_ln1345_347_reg_19849 <= mul_ln1345_347_fu_7742_p2;
        mul_ln1345_349_reg_19854 <= mul_ln1345_349_fu_7748_p2;
        mul_ln1345_34_reg_17225 <= mul_ln1345_34_fu_2616_p2;
        mul_ln1345_350_reg_19859 <= mul_ln1345_350_fu_7754_p2;
        mul_ln1345_351_reg_19864 <= mul_ln1345_351_fu_7760_p2;
        mul_ln1345_352_reg_19869 <= mul_ln1345_352_fu_7766_p2;
        mul_ln1345_353_reg_19874 <= mul_ln1345_353_fu_7772_p2;
        mul_ln1345_355_reg_19879 <= mul_ln1345_355_fu_7778_p2;
        mul_ln1345_359_reg_19884 <= mul_ln1345_359_fu_7784_p2;
        mul_ln1345_35_reg_17230 <= mul_ln1345_35_fu_2636_p2;
        mul_ln1345_360_reg_19889 <= mul_ln1345_360_fu_7790_p2;
        mul_ln1345_361_reg_19894 <= mul_ln1345_361_fu_7796_p2;
        mul_ln1345_362_reg_19899 <= mul_ln1345_362_fu_7802_p2;
        mul_ln1345_37_reg_17240 <= mul_ln1345_37_fu_2666_p2;
        mul_ln1345_38_reg_17245 <= mul_ln1345_38_fu_2686_p2;
        mul_ln1345_39_reg_17250 <= mul_ln1345_39_fu_2706_p2;
        mul_ln1345_3_reg_17045 <= mul_ln1345_3_fu_1786_p2;
        mul_ln1345_40_reg_17255 <= mul_ln1345_40_fu_2726_p2;
        mul_ln1345_41_reg_17260 <= mul_ln1345_41_fu_2746_p2;
        mul_ln1345_43_reg_17270 <= mul_ln1345_43_fu_2776_p2;
        mul_ln1345_47_reg_17290 <= mul_ln1345_47_fu_2826_p2;
        mul_ln1345_48_reg_17295 <= mul_ln1345_48_fu_2846_p2;
        mul_ln1345_49_reg_17300 <= mul_ln1345_49_fu_2866_p2;
        mul_ln1345_4_reg_17050 <= mul_ln1345_4_fu_1820_p2;
        mul_ln1345_50_reg_17305 <= mul_ln1345_50_fu_2886_p2;
        mul_ln1345_51_reg_17310 <= mul_ln1345_51_fu_2906_p2;
        mul_ln1345_52_reg_17315 <= mul_ln1345_52_fu_2926_p2;
        mul_ln1345_53_reg_17320 <= mul_ln1345_53_fu_2946_p2;
        mul_ln1345_54_reg_17325 <= mul_ln1345_54_fu_2966_p2;
        mul_ln1345_55_reg_17330 <= mul_ln1345_55_fu_2986_p2;
        mul_ln1345_56_reg_17335 <= mul_ln1345_56_fu_3006_p2;
        mul_ln1345_57_reg_17340 <= mul_ln1345_57_fu_3026_p2;
        mul_ln1345_58_reg_17345 <= mul_ln1345_58_fu_3046_p2;
        mul_ln1345_59_reg_17350 <= mul_ln1345_59_fu_3066_p2;
        mul_ln1345_5_reg_17055 <= mul_ln1345_5_fu_1854_p2;
        mul_ln1345_61_reg_17360 <= mul_ln1345_61_fu_3096_p2;
        mul_ln1345_62_reg_17365 <= mul_ln1345_62_fu_3116_p2;
        mul_ln1345_63_reg_17370 <= mul_ln1345_63_fu_3136_p2;
        mul_ln1345_64_reg_17375 <= mul_ln1345_64_fu_3156_p2;
        mul_ln1345_65_reg_17380 <= mul_ln1345_65_fu_3176_p2;
        mul_ln1345_67_reg_17390 <= mul_ln1345_67_fu_3206_p2;
        mul_ln1345_6_reg_17060 <= mul_ln1345_6_fu_1888_p2;
        mul_ln1345_71_reg_17410 <= mul_ln1345_71_fu_3256_p2;
        mul_ln1345_72_reg_17415 <= mul_ln1345_72_fu_3276_p2;
        mul_ln1345_73_reg_17420 <= mul_ln1345_73_fu_3296_p2;
        mul_ln1345_74_reg_17425 <= mul_ln1345_74_fu_3316_p2;
        mul_ln1345_75_reg_17435 <= mul_ln1345_75_fu_3336_p2;
        mul_ln1345_76_reg_17445 <= mul_ln1345_76_fu_3356_p2;
        mul_ln1345_77_reg_17455 <= mul_ln1345_77_fu_3376_p2;
        mul_ln1345_78_reg_17465 <= mul_ln1345_78_fu_3396_p2;
        mul_ln1345_79_reg_17475 <= mul_ln1345_79_fu_3416_p2;
        mul_ln1345_7_reg_17065 <= mul_ln1345_7_fu_1922_p2;
        mul_ln1345_80_reg_17485 <= mul_ln1345_80_fu_3436_p2;
        mul_ln1345_81_reg_17495 <= mul_ln1345_81_fu_3456_p2;
        mul_ln1345_82_reg_17505 <= mul_ln1345_82_fu_3476_p2;
        mul_ln1345_83_reg_17515 <= mul_ln1345_83_fu_3496_p2;
        mul_ln1345_85_reg_17530 <= mul_ln1345_85_fu_3526_p2;
        mul_ln1345_86_reg_17540 <= mul_ln1345_86_fu_3546_p2;
        mul_ln1345_87_reg_17550 <= mul_ln1345_87_fu_3566_p2;
        mul_ln1345_88_reg_17560 <= mul_ln1345_88_fu_3586_p2;
        mul_ln1345_89_reg_17570 <= mul_ln1345_89_fu_3606_p2;
        mul_ln1345_8_reg_17070 <= mul_ln1345_8_fu_1956_p2;
        mul_ln1345_91_reg_17585 <= mul_ln1345_91_fu_3636_p2;
        mul_ln1345_95_reg_17610 <= mul_ln1345_95_fu_3686_p2;
        mul_ln1345_96_reg_17620 <= mul_ln1345_96_fu_3706_p2;
        mul_ln1345_97_reg_17630 <= mul_ln1345_97_fu_3726_p2;
        mul_ln1345_98_reg_17640 <= mul_ln1345_98_fu_3746_p2;
        mul_ln1345_99_reg_17650 <= mul_ln1345_99_fu_3766_p2;
        mul_ln1345_9_reg_17075 <= mul_ln1345_9_fu_1990_p2;
        mul_ln1345_reg_17030 <= mul_ln1345_fu_1684_p2;
        sext_ln1345_100_reg_17655 <= sext_ln1345_100_fu_3782_p1;
        sext_ln1345_101_reg_17665 <= sext_ln1345_101_fu_3802_p1;
        sext_ln1345_102_reg_17675 <= sext_ln1345_102_fu_3822_p1;
        sext_ln1345_103_reg_17685 <= sext_ln1345_103_fu_3842_p1;
        sext_ln1345_104_reg_17695 <= sext_ln1345_104_fu_3862_p1;
        sext_ln1345_105_reg_17705 <= sext_ln1345_105_fu_3882_p1;
        sext_ln1345_106_reg_17715 <= sext_ln1345_106_fu_3902_p1;
        sext_ln1345_107_reg_17725 <= sext_ln1345_107_fu_3922_p1;
        sext_ln1345_109_reg_17740 <= sext_ln1345_109_fu_3952_p1;
        sext_ln1345_110_reg_17750 <= sext_ln1345_110_fu_3972_p1;
        sext_ln1345_111_reg_17760 <= sext_ln1345_111_fu_3992_p1;
        sext_ln1345_112_reg_17770 <= sext_ln1345_112_fu_4012_p1;
        sext_ln1345_113_reg_17780 <= sext_ln1345_113_fu_4032_p1;
        sext_ln1345_115_reg_17795 <= sext_ln1345_115_fu_4062_p1;
        sext_ln1345_119_reg_17820 <= sext_ln1345_119_fu_4112_p1;
        sext_ln1345_120_reg_17830 <= sext_ln1345_120_fu_4132_p1;
        sext_ln1345_121_reg_17840 <= sext_ln1345_121_fu_4152_p1;
        sext_ln1345_122_reg_17850 <= sext_ln1345_122_fu_4172_p1;
        sext_ln1345_123_reg_17860 <= sext_ln1345_123_fu_4192_p1;
        sext_ln1345_124_reg_17870 <= sext_ln1345_124_fu_4212_p1;
        sext_ln1345_125_reg_17880 <= sext_ln1345_125_fu_4232_p1;
        sext_ln1345_126_reg_17890 <= sext_ln1345_126_fu_4252_p1;
        sext_ln1345_127_reg_17900 <= sext_ln1345_127_fu_4272_p1;
        sext_ln1345_128_reg_17910 <= sext_ln1345_128_fu_4292_p1;
        sext_ln1345_129_reg_17920 <= sext_ln1345_129_fu_4312_p1;
        sext_ln1345_130_reg_17930 <= sext_ln1345_130_fu_4332_p1;
        sext_ln1345_131_reg_17940 <= sext_ln1345_131_fu_4352_p1;
        sext_ln1345_133_reg_17955 <= sext_ln1345_133_fu_4382_p1;
        sext_ln1345_134_reg_17965 <= sext_ln1345_134_fu_4402_p1;
        sext_ln1345_135_reg_17975 <= sext_ln1345_135_fu_4422_p1;
        sext_ln1345_136_reg_17985 <= sext_ln1345_136_fu_4442_p1;
        sext_ln1345_137_reg_17995 <= sext_ln1345_137_fu_4462_p1;
        sext_ln1345_139_reg_18010 <= sext_ln1345_139_fu_4492_p1;
        sext_ln1345_143_reg_18035 <= sext_ln1345_143_fu_4542_p1;
        sext_ln1345_144_reg_18045 <= sext_ln1345_144_fu_4562_p1;
        sext_ln1345_145_reg_18055 <= sext_ln1345_145_fu_4582_p1;
        sext_ln1345_146_reg_18065 <= sext_ln1345_146_fu_4602_p1;
        sext_ln1345_147_reg_18075 <= sext_ln1345_147_fu_4622_p1;
        sext_ln1345_148_reg_18085 <= sext_ln1345_148_fu_4642_p1;
        sext_ln1345_149_reg_18095 <= sext_ln1345_149_fu_4662_p1;
        sext_ln1345_150_reg_18105 <= sext_ln1345_150_fu_4682_p1;
        sext_ln1345_151_reg_18115 <= sext_ln1345_151_fu_4702_p1;
        sext_ln1345_152_reg_18125 <= sext_ln1345_152_fu_4722_p1;
        sext_ln1345_153_reg_18135 <= sext_ln1345_153_fu_4742_p1;
        sext_ln1345_154_reg_18145 <= sext_ln1345_154_fu_4762_p1;
        sext_ln1345_155_reg_18155 <= sext_ln1345_155_fu_4782_p1;
        sext_ln1345_157_reg_18170 <= sext_ln1345_157_fu_4812_p1;
        sext_ln1345_158_reg_18180 <= sext_ln1345_158_fu_4832_p1;
        sext_ln1345_159_reg_18190 <= sext_ln1345_159_fu_4852_p1;
        sext_ln1345_160_reg_18200 <= sext_ln1345_160_fu_4872_p1;
        sext_ln1345_161_reg_18210 <= sext_ln1345_161_fu_4892_p1;
        sext_ln1345_163_reg_18225 <= sext_ln1345_163_fu_4922_p1;
        sext_ln1345_167_reg_18250 <= sext_ln1345_167_fu_4972_p1;
        sext_ln1345_168_reg_18260 <= sext_ln1345_168_fu_4992_p1;
        sext_ln1345_169_reg_18270 <= sext_ln1345_169_fu_5012_p1;
        sext_ln1345_170_reg_18280 <= sext_ln1345_170_fu_5032_p1;
        sext_ln1345_171_reg_18290 <= sext_ln1345_171_fu_5052_p1;
        sext_ln1345_172_reg_18300 <= sext_ln1345_172_fu_5072_p1;
        sext_ln1345_173_reg_18310 <= sext_ln1345_173_fu_5092_p1;
        sext_ln1345_174_reg_18320 <= sext_ln1345_174_fu_5112_p1;
        sext_ln1345_175_reg_18330 <= sext_ln1345_175_fu_5132_p1;
        sext_ln1345_176_reg_18340 <= sext_ln1345_176_fu_5152_p1;
        sext_ln1345_177_reg_18350 <= sext_ln1345_177_fu_5172_p1;
        sext_ln1345_178_reg_18360 <= sext_ln1345_178_fu_5192_p1;
        sext_ln1345_179_reg_18370 <= sext_ln1345_179_fu_5212_p1;
        sext_ln1345_181_reg_18385 <= sext_ln1345_181_fu_5242_p1;
        sext_ln1345_182_reg_18395 <= sext_ln1345_182_fu_5262_p1;
        sext_ln1345_183_reg_18405 <= sext_ln1345_183_fu_5282_p1;
        sext_ln1345_184_reg_18415 <= sext_ln1345_184_fu_5302_p1;
        sext_ln1345_185_reg_18425 <= sext_ln1345_185_fu_5322_p1;
        sext_ln1345_187_reg_18440 <= sext_ln1345_187_fu_5352_p1;
        sext_ln1345_191_reg_18465 <= sext_ln1345_191_fu_5402_p1;
        sext_ln1345_192_reg_18475 <= sext_ln1345_192_fu_5422_p1;
        sext_ln1345_193_reg_18485 <= sext_ln1345_193_fu_5442_p1;
        sext_ln1345_194_reg_18495 <= sext_ln1345_194_fu_5462_p1;
        sext_ln1345_195_reg_18505 <= sext_ln1345_195_fu_5482_p1;
        sext_ln1345_196_reg_18515 <= sext_ln1345_196_fu_5502_p1;
        sext_ln1345_197_reg_18525 <= sext_ln1345_197_fu_5522_p1;
        sext_ln1345_198_reg_18535 <= sext_ln1345_198_fu_5542_p1;
        sext_ln1345_199_reg_18545 <= sext_ln1345_199_fu_5562_p1;
        sext_ln1345_200_reg_18555 <= sext_ln1345_200_fu_5582_p1;
        sext_ln1345_201_reg_18565 <= sext_ln1345_201_fu_5602_p1;
        sext_ln1345_202_reg_18575 <= sext_ln1345_202_fu_5622_p1;
        sext_ln1345_203_reg_18585 <= sext_ln1345_203_fu_5642_p1;
        sext_ln1345_205_reg_18600 <= sext_ln1345_205_fu_5672_p1;
        sext_ln1345_206_reg_18610 <= sext_ln1345_206_fu_5692_p1;
        sext_ln1345_207_reg_18620 <= sext_ln1345_207_fu_5712_p1;
        sext_ln1345_208_reg_18630 <= sext_ln1345_208_fu_5732_p1;
        sext_ln1345_209_reg_18640 <= sext_ln1345_209_fu_5752_p1;
        sext_ln1345_211_reg_18655 <= sext_ln1345_211_fu_5782_p1;
        sext_ln1345_215_reg_18680 <= sext_ln1345_215_fu_5832_p1;
        sext_ln1345_216_reg_18690 <= sext_ln1345_216_fu_5852_p1;
        sext_ln1345_217_reg_18700 <= sext_ln1345_217_fu_5872_p1;
        sext_ln1345_218_reg_18710 <= sext_ln1345_218_fu_5892_p1;
        sext_ln1345_219_reg_18720 <= sext_ln1345_219_fu_5912_p1;
        sext_ln1345_220_reg_18730 <= sext_ln1345_220_fu_5932_p1;
        sext_ln1345_221_reg_18740 <= sext_ln1345_221_fu_5952_p1;
        sext_ln1345_222_reg_18750 <= sext_ln1345_222_fu_5972_p1;
        sext_ln1345_223_reg_18760 <= sext_ln1345_223_fu_5992_p1;
        sext_ln1345_224_reg_18770 <= sext_ln1345_224_fu_6012_p1;
        sext_ln1345_225_reg_18780 <= sext_ln1345_225_fu_6032_p1;
        sext_ln1345_226_reg_18790 <= sext_ln1345_226_fu_6052_p1;
        sext_ln1345_227_reg_18800 <= sext_ln1345_227_fu_6072_p1;
        sext_ln1345_229_reg_18815 <= sext_ln1345_229_fu_6102_p1;
        sext_ln1345_230_reg_18825 <= sext_ln1345_230_fu_6122_p1;
        sext_ln1345_231_reg_18835 <= sext_ln1345_231_fu_6142_p1;
        sext_ln1345_232_reg_18845 <= sext_ln1345_232_fu_6162_p1;
        sext_ln1345_233_reg_18855 <= sext_ln1345_233_fu_6182_p1;
        sext_ln1345_235_reg_18870 <= sext_ln1345_235_fu_6212_p1;
        sext_ln1345_239_reg_18895 <= sext_ln1345_239_fu_6262_p1;
        sext_ln1345_240_reg_18905 <= sext_ln1345_240_fu_6282_p1;
        sext_ln1345_241_reg_18915 <= sext_ln1345_241_fu_6302_p1;
        sext_ln1345_242_reg_18925 <= sext_ln1345_242_fu_6322_p1;
        sext_ln1345_243_reg_18935 <= sext_ln1345_243_fu_6342_p1;
        sext_ln1345_244_reg_18945 <= sext_ln1345_244_fu_6362_p1;
        sext_ln1345_245_reg_18955 <= sext_ln1345_245_fu_6382_p1;
        sext_ln1345_246_reg_18965 <= sext_ln1345_246_fu_6402_p1;
        sext_ln1345_247_reg_18975 <= sext_ln1345_247_fu_6422_p1;
        sext_ln1345_248_reg_18985 <= sext_ln1345_248_fu_6442_p1;
        sext_ln1345_249_reg_18995 <= sext_ln1345_249_fu_6462_p1;
        sext_ln1345_250_reg_19005 <= sext_ln1345_250_fu_6482_p1;
        sext_ln1345_251_reg_19015 <= sext_ln1345_251_fu_6502_p1;
        sext_ln1345_253_reg_19030 <= sext_ln1345_253_fu_6532_p1;
        sext_ln1345_254_reg_19040 <= sext_ln1345_254_fu_6552_p1;
        sext_ln1345_255_reg_19050 <= sext_ln1345_255_fu_6572_p1;
        sext_ln1345_256_reg_19060 <= sext_ln1345_256_fu_6592_p1;
        sext_ln1345_257_reg_19070 <= sext_ln1345_257_fu_6612_p1;
        sext_ln1345_259_reg_19085 <= sext_ln1345_259_fu_6642_p1;
        sext_ln1345_263_reg_19110 <= sext_ln1345_263_fu_6692_p1;
        sext_ln1345_264_reg_19120 <= sext_ln1345_264_fu_6712_p1;
        sext_ln1345_265_reg_19130 <= sext_ln1345_265_fu_6732_p1;
        sext_ln1345_266_reg_19140 <= sext_ln1345_266_fu_6752_p1;
        sext_ln1345_267_reg_19150 <= sext_ln1345_267_fu_6772_p1;
        sext_ln1345_268_reg_19160 <= sext_ln1345_268_fu_6792_p1;
        sext_ln1345_269_reg_19170 <= sext_ln1345_269_fu_6812_p1;
        sext_ln1345_270_reg_19180 <= sext_ln1345_270_fu_6832_p1;
        sext_ln1345_271_reg_19190 <= sext_ln1345_271_fu_6852_p1;
        sext_ln1345_272_reg_19200 <= sext_ln1345_272_fu_6872_p1;
        sext_ln1345_273_reg_19210 <= sext_ln1345_273_fu_6892_p1;
        sext_ln1345_274_reg_19220 <= sext_ln1345_274_fu_6912_p1;
        sext_ln1345_275_reg_19230 <= sext_ln1345_275_fu_6932_p1;
        sext_ln1345_277_reg_19245 <= sext_ln1345_277_fu_6962_p1;
        sext_ln1345_278_reg_19255 <= sext_ln1345_278_fu_6982_p1;
        sext_ln1345_279_reg_19265 <= sext_ln1345_279_fu_7002_p1;
        sext_ln1345_280_reg_19275 <= sext_ln1345_280_fu_7022_p1;
        sext_ln1345_281_reg_19285 <= sext_ln1345_281_fu_7042_p1;
        sext_ln1345_283_reg_19300 <= sext_ln1345_283_fu_7072_p1;
        sext_ln1345_287_reg_19325 <= sext_ln1345_287_fu_7122_p1;
        sext_ln1345_75_reg_17430 <= sext_ln1345_75_fu_3332_p1;
        sext_ln1345_76_reg_17440 <= sext_ln1345_76_fu_3352_p1;
        sext_ln1345_77_reg_17450 <= sext_ln1345_77_fu_3372_p1;
        sext_ln1345_78_reg_17460 <= sext_ln1345_78_fu_3392_p1;
        sext_ln1345_79_reg_17470 <= sext_ln1345_79_fu_3412_p1;
        sext_ln1345_80_reg_17480 <= sext_ln1345_80_fu_3432_p1;
        sext_ln1345_81_reg_17490 <= sext_ln1345_81_fu_3452_p1;
        sext_ln1345_82_reg_17500 <= sext_ln1345_82_fu_3472_p1;
        sext_ln1345_83_reg_17510 <= sext_ln1345_83_fu_3492_p1;
        sext_ln1345_85_reg_17525 <= sext_ln1345_85_fu_3522_p1;
        sext_ln1345_86_reg_17535 <= sext_ln1345_86_fu_3542_p1;
        sext_ln1345_87_reg_17545 <= sext_ln1345_87_fu_3562_p1;
        sext_ln1345_88_reg_17555 <= sext_ln1345_88_fu_3582_p1;
        sext_ln1345_89_reg_17565 <= sext_ln1345_89_fu_3602_p1;
        sext_ln1345_91_reg_17580 <= sext_ln1345_91_fu_3632_p1;
        sext_ln1345_95_reg_17605 <= sext_ln1345_95_fu_3682_p1;
        sext_ln1345_96_reg_17615 <= sext_ln1345_96_fu_3702_p1;
        sext_ln1345_97_reg_17625 <= sext_ln1345_97_fu_3722_p1;
        sext_ln1345_98_reg_17635 <= sext_ln1345_98_fu_3742_p1;
        sext_ln1345_99_reg_17645 <= sext_ln1345_99_fu_3762_p1;
        tmp_113_reg_17735 <= {{mlp_inst_m2_weight_arr_V_q0[446:444]}};
        tmp_119_reg_17790 <= {{mlp_inst_m2_weight_arr_V_q0[662:660]}};
        tmp_121_reg_17805 <= {{mlp_inst_m2_weight_arr_V_q0[734:732]}};
        tmp_122_reg_17810 <= {{mlp_inst_m2_weight_arr_V_q0[770:768]}};
        tmp_123_reg_17815 <= {{mlp_inst_m2_weight_arr_V_q0[806:804]}};
        tmp_138_reg_17950 <= {{mlp_inst_m2_weight_arr_V_q0[449:447]}};
        tmp_13_reg_17090 <= {{mlp_inst_m2_weight_arr_V_q0[434:432]}};
        tmp_144_reg_18005 <= {{mlp_inst_m2_weight_arr_V_q0[665:663]}};
        tmp_146_reg_18020 <= {{mlp_inst_m2_weight_arr_V_q0[737:735]}};
        tmp_147_reg_18025 <= {{mlp_inst_m2_weight_arr_V_q0[773:771]}};
        tmp_148_reg_18030 <= {{mlp_inst_m2_weight_arr_V_q0[809:807]}};
        tmp_163_reg_18165 <= {{mlp_inst_m2_weight_arr_V_q0[452:450]}};
        tmp_169_reg_18220 <= {{mlp_inst_m2_weight_arr_V_q0[668:666]}};
        tmp_171_reg_18235 <= {{mlp_inst_m2_weight_arr_V_q0[740:738]}};
        tmp_172_reg_18240 <= {{mlp_inst_m2_weight_arr_V_q0[776:774]}};
        tmp_173_reg_18245 <= {{mlp_inst_m2_weight_arr_V_q0[812:810]}};
        tmp_188_reg_18380 <= {{mlp_inst_m2_weight_arr_V_q0[455:453]}};
        tmp_194_reg_18435 <= {{mlp_inst_m2_weight_arr_V_q0[671:669]}};
        tmp_196_reg_18450 <= {{mlp_inst_m2_weight_arr_V_q0[743:741]}};
        tmp_197_reg_18455 <= {{mlp_inst_m2_weight_arr_V_q0[779:777]}};
        tmp_198_reg_18460 <= {{mlp_inst_m2_weight_arr_V_q0[815:813]}};
        tmp_19_reg_17125 <= {{mlp_inst_m2_weight_arr_V_q0[650:648]}};
        tmp_213_reg_18595 <= {{mlp_inst_m2_weight_arr_V_q0[458:456]}};
        tmp_219_reg_18650 <= {{mlp_inst_m2_weight_arr_V_q0[674:672]}};
        tmp_21_reg_17140 <= {{mlp_inst_m2_weight_arr_V_q0[722:720]}};
        tmp_221_reg_18665 <= {{mlp_inst_m2_weight_arr_V_q0[746:744]}};
        tmp_222_reg_18670 <= {{mlp_inst_m2_weight_arr_V_q0[782:780]}};
        tmp_223_reg_18675 <= {{mlp_inst_m2_weight_arr_V_q0[818:816]}};
        tmp_22_reg_17150 <= {{mlp_inst_m2_weight_arr_V_q0[758:756]}};
        tmp_238_reg_18810 <= {{mlp_inst_m2_weight_arr_V_q0[461:459]}};
        tmp_23_reg_17160 <= {{mlp_inst_m2_weight_arr_V_q0[794:792]}};
        tmp_244_reg_18865 <= {{mlp_inst_m2_weight_arr_V_q0[677:675]}};
        tmp_246_reg_18880 <= {{mlp_inst_m2_weight_arr_V_q0[749:747]}};
        tmp_247_reg_18885 <= {{mlp_inst_m2_weight_arr_V_q0[785:783]}};
        tmp_248_reg_18890 <= {{mlp_inst_m2_weight_arr_V_q0[821:819]}};
        tmp_263_reg_19025 <= {{mlp_inst_m2_weight_arr_V_q0[464:462]}};
        tmp_269_reg_19080 <= {{mlp_inst_m2_weight_arr_V_q0[680:678]}};
        tmp_271_reg_19095 <= {{mlp_inst_m2_weight_arr_V_q0[752:750]}};
        tmp_272_reg_19100 <= {{mlp_inst_m2_weight_arr_V_q0[788:786]}};
        tmp_273_reg_19105 <= {{mlp_inst_m2_weight_arr_V_q0[824:822]}};
        tmp_288_reg_19240 <= {{mlp_inst_m2_weight_arr_V_q0[467:465]}};
        tmp_294_reg_19295 <= {{mlp_inst_m2_weight_arr_V_q0[683:681]}};
        tmp_296_reg_19310 <= {{mlp_inst_m2_weight_arr_V_q0[755:753]}};
        tmp_297_reg_19315 <= {{mlp_inst_m2_weight_arr_V_q0[791:789]}};
        tmp_298_reg_19320 <= {{mlp_inst_m2_weight_arr_V_q0[827:825]}};
        tmp_325_reg_17095 <= {{cache_window_sm_dout[98:96]}};
        tmp_331_reg_17130 <= {{cache_window_sm_dout[146:144]}};
        tmp_333_reg_17145 <= {{cache_window_sm_dout[162:160]}};
        tmp_334_reg_17155 <= {{cache_window_sm_dout[170:168]}};
        tmp_335_reg_17165 <= {{cache_window_sm_dout[178:176]}};
        tmp_348_reg_19548 <= {{cache_window_sm_dout[290:288]}};
        tmp_354_reg_19643 <= {{cache_window_sm_dout[338:336]}};
        tmp_356_reg_19666 <= {{cache_window_sm_dout[354:352]}};
        tmp_357_reg_19671 <= {{cache_window_sm_dout[362:360]}};
        tmp_358_reg_19676 <= {{cache_window_sm_dout[370:368]}};
        tmp_38_reg_17235 <= {{mlp_inst_m2_weight_arr_V_q0[437:435]}};
        tmp_44_reg_17265 <= {{mlp_inst_m2_weight_arr_V_q0[653:651]}};
        tmp_46_reg_17275 <= {{mlp_inst_m2_weight_arr_V_q0[725:723]}};
        tmp_47_reg_17280 <= {{mlp_inst_m2_weight_arr_V_q0[761:759]}};
        tmp_48_reg_17285 <= {{mlp_inst_m2_weight_arr_V_q0[797:795]}};
        tmp_63_reg_17355 <= {{mlp_inst_m2_weight_arr_V_q0[440:438]}};
        tmp_69_reg_17385 <= {{mlp_inst_m2_weight_arr_V_q0[656:654]}};
        tmp_71_reg_17395 <= {{mlp_inst_m2_weight_arr_V_q0[728:726]}};
        tmp_72_reg_17400 <= {{mlp_inst_m2_weight_arr_V_q0[764:762]}};
        tmp_73_reg_17405 <= {{mlp_inst_m2_weight_arr_V_q0[800:798]}};
        tmp_88_reg_17520 <= {{mlp_inst_m2_weight_arr_V_q0[443:441]}};
        tmp_94_reg_17575 <= {{mlp_inst_m2_weight_arr_V_q0[659:657]}};
        tmp_96_reg_17590 <= {{mlp_inst_m2_weight_arr_V_q0[731:729]}};
        tmp_97_reg_17595 <= {{mlp_inst_m2_weight_arr_V_q0[767:765]}};
        tmp_98_reg_17600 <= {{mlp_inst_m2_weight_arr_V_q0[803:801]}};
        zext_ln1345_24_reg_19335[2 : 0] <= zext_ln1345_24_fu_7142_p1[2 : 0];
        zext_ln1345_25_reg_19352[2 : 0] <= zext_ln1345_25_fu_7162_p1[2 : 0];
        zext_ln1345_26_reg_19369[2 : 0] <= zext_ln1345_26_fu_7182_p1[2 : 0];
        zext_ln1345_27_reg_19386[2 : 0] <= zext_ln1345_27_fu_7202_p1[2 : 0];
        zext_ln1345_28_reg_19404[2 : 0] <= zext_ln1345_28_fu_7222_p1[2 : 0];
        zext_ln1345_29_reg_19422[2 : 0] <= zext_ln1345_29_fu_7242_p1[2 : 0];
        zext_ln1345_30_reg_19440[2 : 0] <= zext_ln1345_30_fu_7262_p1[2 : 0];
        zext_ln1345_31_reg_19458[2 : 0] <= zext_ln1345_31_fu_7282_p1[2 : 0];
        zext_ln1345_32_reg_19476[2 : 0] <= zext_ln1345_32_fu_7302_p1[2 : 0];
        zext_ln1345_33_reg_19494[2 : 0] <= zext_ln1345_33_fu_7322_p1[2 : 0];
        zext_ln1345_34_reg_19512[2 : 0] <= zext_ln1345_34_fu_7342_p1[2 : 0];
        zext_ln1345_35_reg_19530[2 : 0] <= zext_ln1345_35_fu_7362_p1[2 : 0];
        zext_ln1345_37_reg_19553[2 : 0] <= zext_ln1345_37_fu_7392_p1[2 : 0];
        zext_ln1345_38_reg_19571[2 : 0] <= zext_ln1345_38_fu_7412_p1[2 : 0];
        zext_ln1345_39_reg_19589[2 : 0] <= zext_ln1345_39_fu_7432_p1[2 : 0];
        zext_ln1345_40_reg_19607[2 : 0] <= zext_ln1345_40_fu_7452_p1[2 : 0];
        zext_ln1345_41_reg_19625[2 : 0] <= zext_ln1345_41_fu_7472_p1[2 : 0];
        zext_ln1345_43_reg_19648[2 : 0] <= zext_ln1345_43_fu_7502_p1[2 : 0];
        zext_ln1345_47_reg_19681[2 : 0] <= zext_ln1345_47_fu_7552_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln126_reg_17005 == 1'd1))) begin
        select_ln121_6_reg_17024 <= select_ln121_6_fu_1661_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln120_reg_16937_pp0_iter2_reg == 1'd0))) begin
        vec_o_data_M_elems_V_2_fu_1410 <= tmp_312_fu_16761_p25;
    end
end

always @ (*) begin
    if ((icmp_ln120_reg_16937 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cit_phi_fu_1501_p4 = add_ln122_reg_17014;
    end else begin
        ap_phi_mux_cit_phi_fu_1501_p4 = cit_reg_1497;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cot_phi_fu_1489_p4 = select_ln121_7_reg_16995;
    end else begin
        ap_phi_mux_cot_phi_fu_1489_p4 = cot_reg_1485;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten20_phi_fu_1466_p4 = add_ln120_reg_16980;
    end else begin
        ap_phi_mux_indvar_flatten20_phi_fu_1466_p4 = indvar_flatten20_reg_1462;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_1478_p4 = select_ln121_8_reg_17019;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_1478_p4 = indvar_flatten_reg_1474;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cache_window_sm_blk_n = cache_window_sm_empty_n;
    end else begin
        cache_window_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16937 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cache_window_sm_read = 1'b1;
    end else begin
        cache_window_sm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln161_reg_17010_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mac_sm_blk_n = mac_sm_full_n;
    end else begin
        mac_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln161_reg_17010_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mac_sm_write = 1'b1;
    end else begin
        mac_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mlp_inst_m2_bias_arr_V_address0 = zext_ln121_2_fu_1583_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mlp_inst_m2_bias_arr_V_address0 = zext_ln121_fu_1508_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mlp_inst_m2_bias_arr_V_address0 = 4'd0;
    end else begin
        mlp_inst_m2_bias_arr_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        mlp_inst_m2_bias_arr_V_ce0 = 1'b1;
    end else begin
        mlp_inst_m2_bias_arr_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mlp_inst_m2_weight_arr_V_ce0 = 1'b1;
    end else begin
        mlp_inst_m2_weight_arr_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((icmp_ln120_reg_16937 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln120_reg_16937 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln120_fu_1577_p2 = (indvar_flatten20_reg_1462 + 16'd1);

assign add_ln121_2_fu_1571_p2 = (ap_phi_mux_indvar_flatten_phi_fu_1478_p4 + 11'd1);

assign add_ln121_fu_1551_p2 = (select_ln120_fu_1525_p3 + 5'd1);

assign add_ln122_fu_1645_p2 = (select_ln121_reg_16967 + 6'd1);

assign add_ln215_fu_1624_p2 = (tmp_cast_fu_1608_p3 + zext_ln215_fu_1621_p1);

assign add_ln691_100_fu_14464_p2 = ($signed(sext_ln691_92_fu_14461_p1) + $signed(add_ln691_97_fu_14455_p2));

assign add_ln691_101_fu_8967_p2 = ($signed(sext_ln151_98_fu_8856_p1) + $signed(sext_ln151_100_fu_8872_p1));

assign add_ln691_102_fu_8977_p2 = ($signed(sext_ln691_93_fu_8973_p1) + $signed(sext_ln151_105_fu_8896_p1));

assign add_ln691_103_fu_8983_p2 = ($signed(sext_ln151_101_fu_8875_p1) + $signed(sext_ln151_103_fu_8881_p1));

assign add_ln691_104_fu_8993_p2 = ($signed(sext_ln691_95_fu_8989_p1) + $signed(sext_ln151_99_fu_8868_p1));

assign add_ln691_105_fu_14476_p2 = ($signed(sext_ln691_96_fu_14473_p1) + $signed(sext_ln691_94_fu_14470_p1));

assign add_ln691_106_fu_16424_p2 = ($signed(sext_ln691_97_fu_16421_p1) + $signed(add_ln691_100_reg_21059));

assign add_ln691_107_fu_8999_p2 = ($signed(sext_ln151_88_fu_8826_p1) + $signed(sext_ln691_88_fu_8823_p1));

assign add_ln691_108_fu_9009_p2 = ($signed(sext_ln691_98_fu_9005_p1) + $signed(sext_ln151_102_fu_8878_p1));

assign add_ln691_109_fu_9015_p2 = ($signed(sext_ln151_91_fu_8835_p1) + $signed(sext_ln151_90_fu_8832_p1));

assign add_ln691_10_fu_16356_p2 = ($signed(sext_ln691_9_fu_16353_p1) + $signed(add_ln691_4_reg_20999));

assign add_ln691_110_fu_9025_p2 = ($signed(sext_ln691_100_fu_9021_p1) + $signed(sext_ln151_89_fu_8829_p1));

assign add_ln691_111_fu_14488_p2 = ($signed(sext_ln691_101_fu_14485_p1) + $signed(sext_ln691_99_fu_14482_p1));

assign add_ln691_112_fu_9031_p2 = ($signed(sext_ln151_94_fu_8844_p1) + $signed(sext_ln151_93_fu_8841_p1));

assign add_ln691_113_fu_9041_p2 = ($signed(sext_ln691_103_fu_9037_p1) + $signed(sext_ln151_92_fu_8838_p1));

assign add_ln691_114_fu_9047_p2 = ($signed(sext_ln151_95_fu_8847_p1) + $signed(sext_ln151_97_fu_8853_p1));

assign add_ln691_115_fu_9057_p2 = ($signed(sext_ln151_96_fu_8850_p1) + $signed(sext_ln691_89_fu_8942_p1));

assign add_ln691_116_fu_9067_p2 = ($signed(sext_ln691_106_fu_9063_p1) + $signed(sext_ln691_105_fu_9053_p1));

assign add_ln691_117_fu_14504_p2 = ($signed(sext_ln691_107_fu_14501_p1) + $signed(sext_ln691_104_fu_14498_p1));

assign add_ln691_118_fu_14514_p2 = ($signed(sext_ln691_108_fu_14510_p1) + $signed(sext_ln691_102_fu_14494_p1));

assign add_ln691_119_fu_16432_p2 = ($signed(sext_ln691_109_fu_16429_p1) + $signed(add_ln691_106_fu_16424_p2));

assign add_ln691_11_fu_7999_p2 = ($signed(sext_ln151_fu_7811_p1) + $signed(sext_ln691_fu_7808_p1));

assign add_ln691_120_fu_9195_p2 = ($signed(sext_ln151_130_fu_9175_p1) + $signed(sext_ln151_131_fu_9188_p1));

assign add_ln691_121_fu_14533_p2 = ($signed(sext_ln691_112_fu_14530_p1) + $signed(tmp_126_fu_14520_p4));

assign add_ln691_122_fu_9201_p2 = ($signed(sext_ln151_126_fu_9134_p1) + $signed(sext_ln151_128_fu_9150_p1));

assign add_ln691_123_fu_9211_p2 = ($signed(sext_ln691_113_fu_9207_p1) + $signed(sext_ln151_129_fu_9162_p1));

assign add_ln691_124_fu_14542_p2 = ($signed(sext_ln691_114_fu_14539_p1) + $signed(add_ln691_121_fu_14533_p2));

assign add_ln691_125_fu_9217_p2 = ($signed(sext_ln151_120_fu_9106_p1) + $signed(sext_ln151_122_fu_9122_p1));

assign add_ln691_126_fu_9227_p2 = ($signed(sext_ln691_115_fu_9223_p1) + $signed(sext_ln151_127_fu_9146_p1));

assign add_ln691_127_fu_9233_p2 = ($signed(sext_ln151_123_fu_9125_p1) + $signed(sext_ln151_125_fu_9131_p1));

assign add_ln691_128_fu_9243_p2 = ($signed(sext_ln691_117_fu_9239_p1) + $signed(sext_ln151_121_fu_9118_p1));

assign add_ln691_129_fu_14554_p2 = ($signed(sext_ln691_118_fu_14551_p1) + $signed(sext_ln691_116_fu_14548_p1));

assign add_ln691_12_fu_8009_p2 = ($signed(sext_ln691_10_fu_8005_p1) + $signed(sext_ln151_14_fu_7866_p1));

assign add_ln691_130_fu_16441_p2 = ($signed(sext_ln691_119_fu_16438_p1) + $signed(add_ln691_124_reg_21074));

assign add_ln691_131_fu_9249_p2 = ($signed(sext_ln151_110_fu_9076_p1) + $signed(sext_ln691_110_fu_9073_p1));

assign add_ln691_132_fu_9259_p2 = ($signed(sext_ln691_120_fu_9255_p1) + $signed(sext_ln151_124_fu_9128_p1));

assign add_ln691_133_fu_9265_p2 = ($signed(sext_ln151_113_fu_9085_p1) + $signed(sext_ln151_112_fu_9082_p1));

assign add_ln691_134_fu_9275_p2 = ($signed(sext_ln691_122_fu_9271_p1) + $signed(sext_ln151_111_fu_9079_p1));

assign add_ln691_135_fu_14566_p2 = ($signed(sext_ln691_123_fu_14563_p1) + $signed(sext_ln691_121_fu_14560_p1));

assign add_ln691_136_fu_9281_p2 = ($signed(sext_ln151_116_fu_9094_p1) + $signed(sext_ln151_115_fu_9091_p1));

assign add_ln691_137_fu_9291_p2 = ($signed(sext_ln691_125_fu_9287_p1) + $signed(sext_ln151_114_fu_9088_p1));

assign add_ln691_138_fu_9297_p2 = ($signed(sext_ln151_117_fu_9097_p1) + $signed(sext_ln151_119_fu_9103_p1));

assign add_ln691_139_fu_9307_p2 = ($signed(sext_ln151_118_fu_9100_p1) + $signed(sext_ln691_111_fu_9192_p1));

assign add_ln691_13_fu_8015_p2 = ($signed(sext_ln151_3_fu_7820_p1) + $signed(sext_ln151_2_fu_7817_p1));

assign add_ln691_140_fu_9317_p2 = ($signed(sext_ln691_128_fu_9313_p1) + $signed(sext_ln691_127_fu_9303_p1));

assign add_ln691_141_fu_14582_p2 = ($signed(sext_ln691_129_fu_14579_p1) + $signed(sext_ln691_126_fu_14576_p1));

assign add_ln691_142_fu_14592_p2 = ($signed(sext_ln691_130_fu_14588_p1) + $signed(sext_ln691_124_fu_14572_p1));

assign add_ln691_143_fu_16449_p2 = ($signed(sext_ln691_131_fu_16446_p1) + $signed(add_ln691_130_fu_16441_p2));

assign add_ln691_144_fu_9445_p2 = ($signed(sext_ln151_152_fu_9425_p1) + $signed(sext_ln151_153_fu_9438_p1));

assign add_ln691_145_fu_14611_p2 = ($signed(sext_ln691_134_fu_14608_p1) + $signed(tmp_151_fu_14598_p4));

assign add_ln691_146_fu_9451_p2 = ($signed(sext_ln151_148_fu_9384_p1) + $signed(sext_ln151_150_fu_9400_p1));

assign add_ln691_147_fu_9461_p2 = ($signed(sext_ln691_135_fu_9457_p1) + $signed(sext_ln151_151_fu_9412_p1));

assign add_ln691_148_fu_14620_p2 = ($signed(sext_ln691_136_fu_14617_p1) + $signed(add_ln691_145_fu_14611_p2));

assign add_ln691_149_fu_9467_p2 = ($signed(sext_ln151_142_fu_9356_p1) + $signed(sext_ln151_144_fu_9372_p1));

assign add_ln691_14_fu_8025_p2 = ($signed(sext_ln691_12_fu_8021_p1) + $signed(sext_ln151_1_fu_7814_p1));

assign add_ln691_150_fu_9477_p2 = ($signed(sext_ln691_137_fu_9473_p1) + $signed(sext_ln151_149_fu_9396_p1));

assign add_ln691_151_fu_9483_p2 = ($signed(sext_ln151_145_fu_9375_p1) + $signed(sext_ln151_147_fu_9381_p1));

assign add_ln691_152_fu_9493_p2 = ($signed(sext_ln691_139_fu_9489_p1) + $signed(sext_ln151_143_fu_9368_p1));

assign add_ln691_153_fu_14632_p2 = ($signed(sext_ln691_140_fu_14629_p1) + $signed(sext_ln691_138_fu_14626_p1));

assign add_ln691_154_fu_16458_p2 = ($signed(sext_ln691_141_fu_16455_p1) + $signed(add_ln691_148_reg_21089));

assign add_ln691_155_fu_9499_p2 = ($signed(sext_ln151_132_fu_9326_p1) + $signed(sext_ln691_132_fu_9323_p1));

assign add_ln691_156_fu_9509_p2 = ($signed(sext_ln691_142_fu_9505_p1) + $signed(sext_ln151_146_fu_9378_p1));

assign add_ln691_157_fu_9515_p2 = ($signed(sext_ln151_135_fu_9335_p1) + $signed(sext_ln151_134_fu_9332_p1));

assign add_ln691_158_fu_9525_p2 = ($signed(sext_ln691_144_fu_9521_p1) + $signed(sext_ln151_133_fu_9329_p1));

assign add_ln691_159_fu_14644_p2 = ($signed(sext_ln691_145_fu_14641_p1) + $signed(sext_ln691_143_fu_14638_p1));

assign add_ln691_15_fu_14176_p2 = ($signed(sext_ln691_13_fu_14173_p1) + $signed(sext_ln691_11_fu_14170_p1));

assign add_ln691_160_fu_9531_p2 = ($signed(sext_ln151_138_fu_9344_p1) + $signed(sext_ln151_137_fu_9341_p1));

assign add_ln691_161_fu_9541_p2 = ($signed(sext_ln691_147_fu_9537_p1) + $signed(sext_ln151_136_fu_9338_p1));

assign add_ln691_162_fu_9547_p2 = ($signed(sext_ln151_139_fu_9347_p1) + $signed(sext_ln151_141_fu_9353_p1));

assign add_ln691_163_fu_9557_p2 = ($signed(sext_ln151_140_fu_9350_p1) + $signed(sext_ln691_133_fu_9442_p1));

assign add_ln691_164_fu_9567_p2 = ($signed(sext_ln691_150_fu_9563_p1) + $signed(sext_ln691_149_fu_9553_p1));

assign add_ln691_165_fu_14660_p2 = ($signed(sext_ln691_151_fu_14657_p1) + $signed(sext_ln691_148_fu_14654_p1));

assign add_ln691_166_fu_14670_p2 = ($signed(sext_ln691_152_fu_14666_p1) + $signed(sext_ln691_146_fu_14650_p1));

assign add_ln691_167_fu_16466_p2 = ($signed(sext_ln691_153_fu_16463_p1) + $signed(add_ln691_154_fu_16458_p2));

assign add_ln691_168_fu_9695_p2 = ($signed(sext_ln151_174_fu_9675_p1) + $signed(sext_ln151_175_fu_9688_p1));

assign add_ln691_169_fu_14689_p2 = ($signed(sext_ln691_156_fu_14686_p1) + $signed(tmp_176_fu_14676_p4));

assign add_ln691_16_fu_8031_p2 = ($signed(sext_ln151_6_fu_7829_p1) + $signed(sext_ln151_5_fu_7826_p1));

assign add_ln691_170_fu_9701_p2 = ($signed(sext_ln151_170_fu_9634_p1) + $signed(sext_ln151_172_fu_9650_p1));

assign add_ln691_171_fu_9711_p2 = ($signed(sext_ln691_157_fu_9707_p1) + $signed(sext_ln151_173_fu_9662_p1));

assign add_ln691_172_fu_14698_p2 = ($signed(sext_ln691_158_fu_14695_p1) + $signed(add_ln691_169_fu_14689_p2));

assign add_ln691_173_fu_9717_p2 = ($signed(sext_ln151_164_fu_9606_p1) + $signed(sext_ln151_166_fu_9622_p1));

assign add_ln691_174_fu_9727_p2 = ($signed(sext_ln691_159_fu_9723_p1) + $signed(sext_ln151_171_fu_9646_p1));

assign add_ln691_175_fu_9733_p2 = ($signed(sext_ln151_167_fu_9625_p1) + $signed(sext_ln151_169_fu_9631_p1));

assign add_ln691_176_fu_9743_p2 = ($signed(sext_ln691_161_fu_9739_p1) + $signed(sext_ln151_165_fu_9618_p1));

assign add_ln691_177_fu_14710_p2 = ($signed(sext_ln691_162_fu_14707_p1) + $signed(sext_ln691_160_fu_14704_p1));

assign add_ln691_178_fu_16475_p2 = ($signed(sext_ln691_163_fu_16472_p1) + $signed(add_ln691_172_reg_21104));

assign add_ln691_179_fu_9749_p2 = ($signed(sext_ln151_154_fu_9576_p1) + $signed(sext_ln691_154_fu_9573_p1));

assign add_ln691_17_fu_8041_p2 = ($signed(sext_ln691_15_fu_8037_p1) + $signed(sext_ln151_4_fu_7823_p1));

assign add_ln691_180_fu_9759_p2 = ($signed(sext_ln691_164_fu_9755_p1) + $signed(sext_ln151_168_fu_9628_p1));

assign add_ln691_181_fu_9765_p2 = ($signed(sext_ln151_157_fu_9585_p1) + $signed(sext_ln151_156_fu_9582_p1));

assign add_ln691_182_fu_9775_p2 = ($signed(sext_ln691_166_fu_9771_p1) + $signed(sext_ln151_155_fu_9579_p1));

assign add_ln691_183_fu_14722_p2 = ($signed(sext_ln691_167_fu_14719_p1) + $signed(sext_ln691_165_fu_14716_p1));

assign add_ln691_184_fu_9781_p2 = ($signed(sext_ln151_160_fu_9594_p1) + $signed(sext_ln151_159_fu_9591_p1));

assign add_ln691_185_fu_9791_p2 = ($signed(sext_ln691_169_fu_9787_p1) + $signed(sext_ln151_158_fu_9588_p1));

assign add_ln691_186_fu_9797_p2 = ($signed(sext_ln151_161_fu_9597_p1) + $signed(sext_ln151_163_fu_9603_p1));

assign add_ln691_187_fu_9807_p2 = ($signed(sext_ln151_162_fu_9600_p1) + $signed(sext_ln691_155_fu_9692_p1));

assign add_ln691_188_fu_9817_p2 = ($signed(sext_ln691_172_fu_9813_p1) + $signed(sext_ln691_171_fu_9803_p1));

assign add_ln691_189_fu_14738_p2 = ($signed(sext_ln691_173_fu_14735_p1) + $signed(sext_ln691_170_fu_14732_p1));

assign add_ln691_18_fu_8047_p2 = ($signed(sext_ln151_7_fu_7832_p1) + $signed(sext_ln151_9_fu_7838_p1));

assign add_ln691_190_fu_14748_p2 = ($signed(sext_ln691_174_fu_14744_p1) + $signed(sext_ln691_168_fu_14728_p1));

assign add_ln691_191_fu_16483_p2 = ($signed(sext_ln691_175_fu_16480_p1) + $signed(add_ln691_178_fu_16475_p2));

assign add_ln691_192_fu_9945_p2 = ($signed(sext_ln151_196_fu_9925_p1) + $signed(sext_ln151_197_fu_9938_p1));

assign add_ln691_193_fu_14767_p2 = ($signed(sext_ln691_178_fu_14764_p1) + $signed(tmp_201_fu_14754_p4));

assign add_ln691_194_fu_9951_p2 = ($signed(sext_ln151_192_fu_9884_p1) + $signed(sext_ln151_194_fu_9900_p1));

assign add_ln691_195_fu_9961_p2 = ($signed(sext_ln691_179_fu_9957_p1) + $signed(sext_ln151_195_fu_9912_p1));

assign add_ln691_196_fu_14776_p2 = ($signed(sext_ln691_180_fu_14773_p1) + $signed(add_ln691_193_fu_14767_p2));

assign add_ln691_197_fu_9967_p2 = ($signed(sext_ln151_186_fu_9856_p1) + $signed(sext_ln151_188_fu_9872_p1));

assign add_ln691_198_fu_9977_p2 = ($signed(sext_ln691_181_fu_9973_p1) + $signed(sext_ln151_193_fu_9896_p1));

assign add_ln691_199_fu_9983_p2 = ($signed(sext_ln151_189_fu_9875_p1) + $signed(sext_ln151_191_fu_9881_p1));

assign add_ln691_19_fu_8057_p2 = ($signed(sext_ln151_8_fu_7835_p1) + $signed(sext_ln691_1_fu_7942_p1));

assign add_ln691_1_fu_14143_p2 = ($signed(sext_ln691_2_fu_14140_p1) + $signed(trunc_ln691_fu_14136_p1));

assign add_ln691_200_fu_9993_p2 = ($signed(sext_ln691_183_fu_9989_p1) + $signed(sext_ln151_187_fu_9868_p1));

assign add_ln691_201_fu_14788_p2 = ($signed(sext_ln691_184_fu_14785_p1) + $signed(sext_ln691_182_fu_14782_p1));

assign add_ln691_202_fu_16492_p2 = ($signed(sext_ln691_185_fu_16489_p1) + $signed(add_ln691_196_reg_21119));

assign add_ln691_203_fu_9999_p2 = ($signed(sext_ln151_176_fu_9826_p1) + $signed(sext_ln691_176_fu_9823_p1));

assign add_ln691_204_fu_10009_p2 = ($signed(sext_ln691_186_fu_10005_p1) + $signed(sext_ln151_190_fu_9878_p1));

assign add_ln691_205_fu_10015_p2 = ($signed(sext_ln151_179_fu_9835_p1) + $signed(sext_ln151_178_fu_9832_p1));

assign add_ln691_206_fu_10025_p2 = ($signed(sext_ln691_188_fu_10021_p1) + $signed(sext_ln151_177_fu_9829_p1));

assign add_ln691_207_fu_14800_p2 = ($signed(sext_ln691_189_fu_14797_p1) + $signed(sext_ln691_187_fu_14794_p1));

assign add_ln691_208_fu_10031_p2 = ($signed(sext_ln151_182_fu_9844_p1) + $signed(sext_ln151_181_fu_9841_p1));

assign add_ln691_209_fu_10041_p2 = ($signed(sext_ln691_191_fu_10037_p1) + $signed(sext_ln151_180_fu_9838_p1));

assign add_ln691_20_fu_8067_p2 = ($signed(sext_ln691_18_fu_8063_p1) + $signed(sext_ln691_17_fu_8053_p1));

assign add_ln691_210_fu_10047_p2 = ($signed(sext_ln151_183_fu_9847_p1) + $signed(sext_ln151_185_fu_9853_p1));

assign add_ln691_211_fu_10057_p2 = ($signed(sext_ln151_184_fu_9850_p1) + $signed(sext_ln691_177_fu_9942_p1));

assign add_ln691_212_fu_10067_p2 = ($signed(sext_ln691_194_fu_10063_p1) + $signed(sext_ln691_193_fu_10053_p1));

assign add_ln691_213_fu_14816_p2 = ($signed(sext_ln691_195_fu_14813_p1) + $signed(sext_ln691_192_fu_14810_p1));

assign add_ln691_214_fu_14826_p2 = ($signed(sext_ln691_196_fu_14822_p1) + $signed(sext_ln691_190_fu_14806_p1));

assign add_ln691_215_fu_16500_p2 = ($signed(sext_ln691_197_fu_16497_p1) + $signed(add_ln691_202_fu_16492_p2));

assign add_ln691_216_fu_10195_p2 = ($signed(sext_ln151_218_fu_10175_p1) + $signed(sext_ln151_219_fu_10188_p1));

assign add_ln691_217_fu_14845_p2 = ($signed(sext_ln691_200_fu_14842_p1) + $signed(tmp_226_fu_14832_p4));

assign add_ln691_218_fu_10201_p2 = ($signed(sext_ln151_214_fu_10134_p1) + $signed(sext_ln151_216_fu_10150_p1));

assign add_ln691_219_fu_10211_p2 = ($signed(sext_ln691_201_fu_10207_p1) + $signed(sext_ln151_217_fu_10162_p1));

assign add_ln691_21_fu_14192_p2 = ($signed(sext_ln691_19_fu_14189_p1) + $signed(sext_ln691_16_fu_14186_p1));

assign add_ln691_220_fu_14854_p2 = ($signed(sext_ln691_202_fu_14851_p1) + $signed(add_ln691_217_fu_14845_p2));

assign add_ln691_221_fu_10217_p2 = ($signed(sext_ln151_208_fu_10106_p1) + $signed(sext_ln151_210_fu_10122_p1));

assign add_ln691_222_fu_10227_p2 = ($signed(sext_ln691_203_fu_10223_p1) + $signed(sext_ln151_215_fu_10146_p1));

assign add_ln691_223_fu_10233_p2 = ($signed(sext_ln151_211_fu_10125_p1) + $signed(sext_ln151_213_fu_10131_p1));

assign add_ln691_224_fu_10243_p2 = ($signed(sext_ln691_205_fu_10239_p1) + $signed(sext_ln151_209_fu_10118_p1));

assign add_ln691_225_fu_14866_p2 = ($signed(sext_ln691_206_fu_14863_p1) + $signed(sext_ln691_204_fu_14860_p1));

assign add_ln691_226_fu_16509_p2 = ($signed(sext_ln691_207_fu_16506_p1) + $signed(add_ln691_220_reg_21134));

assign add_ln691_227_fu_10249_p2 = ($signed(sext_ln151_198_fu_10076_p1) + $signed(sext_ln691_198_fu_10073_p1));

assign add_ln691_228_fu_10259_p2 = ($signed(sext_ln691_208_fu_10255_p1) + $signed(sext_ln151_212_fu_10128_p1));

assign add_ln691_229_fu_10265_p2 = ($signed(sext_ln151_201_fu_10085_p1) + $signed(sext_ln151_200_fu_10082_p1));

assign add_ln691_22_fu_14202_p2 = ($signed(sext_ln691_20_fu_14198_p1) + $signed(sext_ln691_14_fu_14182_p1));

assign add_ln691_230_fu_10275_p2 = ($signed(sext_ln691_210_fu_10271_p1) + $signed(sext_ln151_199_fu_10079_p1));

assign add_ln691_231_fu_14878_p2 = ($signed(sext_ln691_211_fu_14875_p1) + $signed(sext_ln691_209_fu_14872_p1));

assign add_ln691_232_fu_10281_p2 = ($signed(sext_ln151_204_fu_10094_p1) + $signed(sext_ln151_203_fu_10091_p1));

assign add_ln691_233_fu_10291_p2 = ($signed(sext_ln691_213_fu_10287_p1) + $signed(sext_ln151_202_fu_10088_p1));

assign add_ln691_234_fu_10297_p2 = ($signed(sext_ln151_205_fu_10097_p1) + $signed(sext_ln151_207_fu_10103_p1));

assign add_ln691_235_fu_10307_p2 = ($signed(sext_ln151_206_fu_10100_p1) + $signed(sext_ln691_199_fu_10192_p1));

assign add_ln691_236_fu_10317_p2 = ($signed(sext_ln691_216_fu_10313_p1) + $signed(sext_ln691_215_fu_10303_p1));

assign add_ln691_237_fu_14894_p2 = ($signed(sext_ln691_217_fu_14891_p1) + $signed(sext_ln691_214_fu_14888_p1));

assign add_ln691_238_fu_14904_p2 = ($signed(sext_ln691_218_fu_14900_p1) + $signed(sext_ln691_212_fu_14884_p1));

assign add_ln691_239_fu_16517_p2 = ($signed(sext_ln691_219_fu_16514_p1) + $signed(add_ln691_226_fu_16509_p2));

assign add_ln691_23_fu_16364_p2 = ($signed(sext_ln691_21_fu_16361_p1) + $signed(add_ln691_10_fu_16356_p2));

assign add_ln691_240_fu_10445_p2 = ($signed(sext_ln151_240_fu_10425_p1) + $signed(sext_ln151_241_fu_10438_p1));

assign add_ln691_241_fu_14923_p2 = ($signed(sext_ln691_222_fu_14920_p1) + $signed(tmp_251_fu_14910_p4));

assign add_ln691_242_fu_10451_p2 = ($signed(sext_ln151_236_fu_10384_p1) + $signed(sext_ln151_238_fu_10400_p1));

assign add_ln691_243_fu_10461_p2 = ($signed(sext_ln691_223_fu_10457_p1) + $signed(sext_ln151_239_fu_10412_p1));

assign add_ln691_244_fu_14932_p2 = ($signed(sext_ln691_224_fu_14929_p1) + $signed(add_ln691_241_fu_14923_p2));

assign add_ln691_245_fu_10467_p2 = ($signed(sext_ln151_230_fu_10356_p1) + $signed(sext_ln151_232_fu_10372_p1));

assign add_ln691_246_fu_10477_p2 = ($signed(sext_ln691_225_fu_10473_p1) + $signed(sext_ln151_237_fu_10396_p1));

assign add_ln691_247_fu_10483_p2 = ($signed(sext_ln151_233_fu_10375_p1) + $signed(sext_ln151_235_fu_10381_p1));

assign add_ln691_248_fu_10493_p2 = ($signed(sext_ln691_227_fu_10489_p1) + $signed(sext_ln151_231_fu_10368_p1));

assign add_ln691_249_fu_14944_p2 = ($signed(sext_ln691_228_fu_14941_p1) + $signed(sext_ln691_226_fu_14938_p1));

assign add_ln691_24_fu_8195_p2 = ($signed(sext_ln151_42_fu_8175_p1) + $signed(sext_ln151_43_fu_8188_p1));

assign add_ln691_250_fu_16526_p2 = ($signed(sext_ln691_229_fu_16523_p1) + $signed(add_ln691_244_reg_21149));

assign add_ln691_251_fu_10499_p2 = ($signed(sext_ln151_220_fu_10326_p1) + $signed(sext_ln691_220_fu_10323_p1));

assign add_ln691_252_fu_10509_p2 = ($signed(sext_ln691_230_fu_10505_p1) + $signed(sext_ln151_234_fu_10378_p1));

assign add_ln691_253_fu_10515_p2 = ($signed(sext_ln151_223_fu_10335_p1) + $signed(sext_ln151_222_fu_10332_p1));

assign add_ln691_254_fu_10525_p2 = ($signed(sext_ln691_232_fu_10521_p1) + $signed(sext_ln151_221_fu_10329_p1));

assign add_ln691_255_fu_14956_p2 = ($signed(sext_ln691_233_fu_14953_p1) + $signed(sext_ln691_231_fu_14950_p1));

assign add_ln691_256_fu_10531_p2 = ($signed(sext_ln151_226_fu_10344_p1) + $signed(sext_ln151_225_fu_10341_p1));

assign add_ln691_257_fu_10541_p2 = ($signed(sext_ln691_235_fu_10537_p1) + $signed(sext_ln151_224_fu_10338_p1));

assign add_ln691_258_fu_10547_p2 = ($signed(sext_ln151_227_fu_10347_p1) + $signed(sext_ln151_229_fu_10353_p1));

assign add_ln691_259_fu_10557_p2 = ($signed(sext_ln151_228_fu_10350_p1) + $signed(sext_ln691_221_fu_10442_p1));

assign add_ln691_25_fu_14221_p2 = ($signed(sext_ln691_24_fu_14218_p1) + $signed(tmp_26_fu_14208_p4));

assign add_ln691_260_fu_10567_p2 = ($signed(sext_ln691_238_fu_10563_p1) + $signed(sext_ln691_237_fu_10553_p1));

assign add_ln691_261_fu_14972_p2 = ($signed(sext_ln691_239_fu_14969_p1) + $signed(sext_ln691_236_fu_14966_p1));

assign add_ln691_262_fu_14982_p2 = ($signed(sext_ln691_240_fu_14978_p1) + $signed(sext_ln691_234_fu_14962_p1));

assign add_ln691_263_fu_16534_p2 = ($signed(sext_ln691_241_fu_16531_p1) + $signed(add_ln691_250_fu_16526_p2));

assign add_ln691_264_fu_10695_p2 = ($signed(sext_ln151_262_fu_10675_p1) + $signed(sext_ln151_263_fu_10688_p1));

assign add_ln691_265_fu_15001_p2 = ($signed(sext_ln691_244_fu_14998_p1) + $signed(tmp_276_fu_14988_p4));

assign add_ln691_266_fu_10701_p2 = ($signed(sext_ln151_258_fu_10634_p1) + $signed(sext_ln151_260_fu_10650_p1));

assign add_ln691_267_fu_10711_p2 = ($signed(sext_ln691_245_fu_10707_p1) + $signed(sext_ln151_261_fu_10662_p1));

assign add_ln691_268_fu_15010_p2 = ($signed(sext_ln691_246_fu_15007_p1) + $signed(add_ln691_265_fu_15001_p2));

assign add_ln691_269_fu_10717_p2 = ($signed(sext_ln151_252_fu_10606_p1) + $signed(sext_ln151_254_fu_10622_p1));

assign add_ln691_26_fu_8201_p2 = ($signed(sext_ln151_38_fu_8134_p1) + $signed(sext_ln151_40_fu_8150_p1));

assign add_ln691_270_fu_10727_p2 = ($signed(sext_ln691_247_fu_10723_p1) + $signed(sext_ln151_259_fu_10646_p1));

assign add_ln691_271_fu_10733_p2 = ($signed(sext_ln151_255_fu_10625_p1) + $signed(sext_ln151_257_fu_10631_p1));

assign add_ln691_272_fu_10743_p2 = ($signed(sext_ln691_249_fu_10739_p1) + $signed(sext_ln151_253_fu_10618_p1));

assign add_ln691_273_fu_15022_p2 = ($signed(sext_ln691_250_fu_15019_p1) + $signed(sext_ln691_248_fu_15016_p1));

assign add_ln691_274_fu_16543_p2 = ($signed(sext_ln691_251_fu_16540_p1) + $signed(add_ln691_268_reg_21164));

assign add_ln691_275_fu_10749_p2 = ($signed(sext_ln151_242_fu_10576_p1) + $signed(sext_ln691_242_fu_10573_p1));

assign add_ln691_276_fu_10759_p2 = ($signed(sext_ln691_252_fu_10755_p1) + $signed(sext_ln151_256_fu_10628_p1));

assign add_ln691_277_fu_10765_p2 = ($signed(sext_ln151_245_fu_10585_p1) + $signed(sext_ln151_244_fu_10582_p1));

assign add_ln691_278_fu_10775_p2 = ($signed(sext_ln691_254_fu_10771_p1) + $signed(sext_ln151_243_fu_10579_p1));

assign add_ln691_279_fu_15034_p2 = ($signed(sext_ln691_255_fu_15031_p1) + $signed(sext_ln691_253_fu_15028_p1));

assign add_ln691_27_fu_8211_p2 = ($signed(sext_ln691_25_fu_8207_p1) + $signed(sext_ln151_41_fu_8162_p1));

assign add_ln691_280_fu_10781_p2 = ($signed(sext_ln151_248_fu_10594_p1) + $signed(sext_ln151_247_fu_10591_p1));

assign add_ln691_281_fu_10791_p2 = ($signed(sext_ln691_257_fu_10787_p1) + $signed(sext_ln151_246_fu_10588_p1));

assign add_ln691_282_fu_10797_p2 = ($signed(sext_ln151_249_fu_10597_p1) + $signed(sext_ln151_251_fu_10603_p1));

assign add_ln691_283_fu_10807_p2 = ($signed(sext_ln151_250_fu_10600_p1) + $signed(sext_ln691_243_fu_10692_p1));

assign add_ln691_284_fu_10817_p2 = ($signed(sext_ln691_260_fu_10813_p1) + $signed(sext_ln691_259_fu_10803_p1));

assign add_ln691_285_fu_15050_p2 = ($signed(sext_ln691_261_fu_15047_p1) + $signed(sext_ln691_258_fu_15044_p1));

assign add_ln691_286_fu_15060_p2 = ($signed(sext_ln691_262_fu_15056_p1) + $signed(sext_ln691_256_fu_15040_p1));

assign add_ln691_287_fu_16551_p2 = ($signed(sext_ln691_263_fu_16548_p1) + $signed(add_ln691_274_fu_16543_p2));

assign add_ln691_288_fu_10945_p2 = ($signed(sext_ln151_284_fu_10925_p1) + $signed(sext_ln151_285_fu_10938_p1));

assign add_ln691_289_fu_15079_p2 = ($signed(sext_ln691_266_fu_15076_p1) + $signed(tmp_300_fu_15066_p4));

assign add_ln691_28_fu_14230_p2 = ($signed(sext_ln691_26_fu_14227_p1) + $signed(add_ln691_25_fu_14221_p2));

assign add_ln691_290_fu_10951_p2 = ($signed(sext_ln151_280_fu_10884_p1) + $signed(sext_ln151_282_fu_10900_p1));

assign add_ln691_291_fu_10961_p2 = ($signed(sext_ln691_267_fu_10957_p1) + $signed(sext_ln151_283_fu_10912_p1));

assign add_ln691_292_fu_15088_p2 = ($signed(sext_ln691_268_fu_15085_p1) + $signed(add_ln691_289_fu_15079_p2));

assign add_ln691_293_fu_10967_p2 = ($signed(sext_ln151_274_fu_10856_p1) + $signed(sext_ln151_276_fu_10872_p1));

assign add_ln691_294_fu_10977_p2 = ($signed(sext_ln691_269_fu_10973_p1) + $signed(sext_ln151_281_fu_10896_p1));

assign add_ln691_295_fu_10983_p2 = ($signed(sext_ln151_277_fu_10875_p1) + $signed(sext_ln151_279_fu_10881_p1));

assign add_ln691_296_fu_10993_p2 = ($signed(sext_ln691_271_fu_10989_p1) + $signed(sext_ln151_275_fu_10868_p1));

assign add_ln691_297_fu_15100_p2 = ($signed(sext_ln691_272_fu_15097_p1) + $signed(sext_ln691_270_fu_15094_p1));

assign add_ln691_298_fu_16560_p2 = ($signed(sext_ln691_273_fu_16557_p1) + $signed(add_ln691_292_reg_21179));

assign add_ln691_299_fu_10999_p2 = ($signed(sext_ln151_264_fu_10826_p1) + $signed(sext_ln691_264_fu_10823_p1));

assign add_ln691_29_fu_8217_p2 = ($signed(sext_ln151_32_fu_8106_p1) + $signed(sext_ln151_34_fu_8122_p1));

assign add_ln691_2_fu_7951_p2 = ($signed(sext_ln151_16_fu_7872_p1) + $signed(sext_ln151_18_fu_7891_p1));

assign add_ln691_300_fu_11009_p2 = ($signed(sext_ln691_274_fu_11005_p1) + $signed(sext_ln151_278_fu_10878_p1));

assign add_ln691_301_fu_11015_p2 = ($signed(sext_ln151_267_fu_10835_p1) + $signed(sext_ln151_266_fu_10832_p1));

assign add_ln691_302_fu_11025_p2 = ($signed(sext_ln691_276_fu_11021_p1) + $signed(sext_ln151_265_fu_10829_p1));

assign add_ln691_303_fu_15112_p2 = ($signed(sext_ln691_277_fu_15109_p1) + $signed(sext_ln691_275_fu_15106_p1));

assign add_ln691_304_fu_11031_p2 = ($signed(sext_ln151_270_fu_10844_p1) + $signed(sext_ln151_269_fu_10841_p1));

assign add_ln691_305_fu_11041_p2 = ($signed(sext_ln691_279_fu_11037_p1) + $signed(sext_ln151_268_fu_10838_p1));

assign add_ln691_306_fu_11047_p2 = ($signed(sext_ln151_271_fu_10847_p1) + $signed(sext_ln151_273_fu_10853_p1));

assign add_ln691_307_fu_11057_p2 = ($signed(sext_ln151_272_fu_10850_p1) + $signed(sext_ln691_265_fu_10942_p1));

assign add_ln691_308_fu_11067_p2 = ($signed(sext_ln691_282_fu_11063_p1) + $signed(sext_ln691_281_fu_11053_p1));

assign add_ln691_309_fu_15128_p2 = ($signed(sext_ln691_283_fu_15125_p1) + $signed(sext_ln691_280_fu_15122_p1));

assign add_ln691_30_fu_8227_p2 = ($signed(sext_ln691_27_fu_8223_p1) + $signed(sext_ln151_39_fu_8146_p1));

assign add_ln691_310_fu_15138_p2 = ($signed(sext_ln691_284_fu_15134_p1) + $signed(sext_ln691_278_fu_15118_p1));

assign add_ln691_311_fu_16568_p2 = ($signed(sext_ln691_285_fu_16565_p1) + $signed(add_ln691_298_fu_16560_p2));

assign add_ln691_312_fu_11180_p2 = ($signed(sext_ln151_306_fu_11163_p1) + $signed(sext_ln151_307_fu_11173_p1));

assign add_ln691_313_fu_15157_p2 = ($signed(sext_ln691_288_fu_15154_p1) + $signed(tmp_301_fu_15144_p4));

assign add_ln691_314_fu_11186_p2 = ($signed(sext_ln151_302_fu_11131_p1) + $signed(sext_ln151_304_fu_11144_p1));

assign add_ln691_315_fu_11196_p2 = ($signed(sext_ln691_289_fu_11192_p1) + $signed(sext_ln151_305_fu_11153_p1));

assign add_ln691_316_fu_15166_p2 = ($signed(sext_ln691_290_fu_15163_p1) + $signed(add_ln691_313_fu_15157_p2));

assign add_ln691_317_fu_11202_p2 = ($signed(sext_ln151_296_fu_11106_p1) + $signed(sext_ln151_298_fu_11119_p1));

assign add_ln691_318_fu_11212_p2 = ($signed(sext_ln691_291_fu_11208_p1) + $signed(sext_ln151_303_fu_11140_p1));

assign add_ln691_319_fu_11218_p2 = ($signed(sext_ln151_299_fu_11122_p1) + $signed(sext_ln151_301_fu_11128_p1));

assign add_ln691_31_fu_8233_p2 = ($signed(sext_ln151_35_fu_8125_p1) + $signed(sext_ln151_37_fu_8131_p1));

assign add_ln691_320_fu_11228_p2 = ($signed(sext_ln691_293_fu_11224_p1) + $signed(sext_ln151_297_fu_11115_p1));

assign add_ln691_321_fu_15178_p2 = ($signed(sext_ln691_294_fu_15175_p1) + $signed(sext_ln691_292_fu_15172_p1));

assign add_ln691_322_fu_16577_p2 = ($signed(sext_ln691_295_fu_16574_p1) + $signed(add_ln691_316_reg_21194));

assign add_ln691_323_fu_11234_p2 = ($signed(sext_ln151_286_fu_11076_p1) + $signed(sext_ln691_286_fu_11073_p1));

assign add_ln691_324_fu_11244_p2 = ($signed(sext_ln691_296_fu_11240_p1) + $signed(sext_ln151_300_fu_11125_p1));

assign add_ln691_325_fu_11250_p2 = ($signed(sext_ln151_289_fu_11085_p1) + $signed(sext_ln151_288_fu_11082_p1));

assign add_ln691_326_fu_11260_p2 = ($signed(sext_ln691_298_fu_11256_p1) + $signed(sext_ln151_287_fu_11079_p1));

assign add_ln691_327_fu_15190_p2 = ($signed(sext_ln691_299_fu_15187_p1) + $signed(sext_ln691_297_fu_15184_p1));

assign add_ln691_328_fu_11266_p2 = ($signed(sext_ln151_292_fu_11094_p1) + $signed(sext_ln151_291_fu_11091_p1));

assign add_ln691_329_fu_11276_p2 = ($signed(sext_ln691_301_fu_11272_p1) + $signed(sext_ln151_290_fu_11088_p1));

assign add_ln691_32_fu_8243_p2 = ($signed(sext_ln691_29_fu_8239_p1) + $signed(sext_ln151_33_fu_8118_p1));

assign add_ln691_330_fu_11282_p2 = ($signed(sext_ln151_293_fu_11097_p1) + $signed(sext_ln151_295_fu_11103_p1));

assign add_ln691_331_fu_11292_p2 = ($signed(sext_ln151_294_fu_11100_p1) + $signed(sext_ln691_287_fu_11177_p1));

assign add_ln691_332_fu_11302_p2 = ($signed(sext_ln691_304_fu_11298_p1) + $signed(sext_ln691_303_fu_11288_p1));

assign add_ln691_333_fu_15206_p2 = ($signed(sext_ln691_305_fu_15203_p1) + $signed(sext_ln691_302_fu_15200_p1));

assign add_ln691_334_fu_15216_p2 = ($signed(sext_ln691_306_fu_15212_p1) + $signed(sext_ln691_300_fu_15196_p1));

assign add_ln691_335_fu_16585_p2 = ($signed(sext_ln691_307_fu_16582_p1) + $signed(add_ln691_322_fu_16577_p2));

assign add_ln691_336_fu_11415_p2 = ($signed(sext_ln151_328_fu_11398_p1) + $signed(sext_ln151_329_fu_11408_p1));

assign add_ln691_337_fu_15235_p2 = ($signed(sext_ln691_310_fu_15232_p1) + $signed(tmp_302_fu_15222_p4));

assign add_ln691_338_fu_11421_p2 = ($signed(sext_ln151_324_fu_11366_p1) + $signed(sext_ln151_326_fu_11379_p1));

assign add_ln691_339_fu_11431_p2 = ($signed(sext_ln691_311_fu_11427_p1) + $signed(sext_ln151_327_fu_11388_p1));

assign add_ln691_33_fu_14242_p2 = ($signed(sext_ln691_30_fu_14239_p1) + $signed(sext_ln691_28_fu_14236_p1));

assign add_ln691_340_fu_15244_p2 = ($signed(sext_ln691_312_fu_15241_p1) + $signed(add_ln691_337_fu_15235_p2));

assign add_ln691_341_fu_11437_p2 = ($signed(sext_ln151_318_fu_11341_p1) + $signed(sext_ln151_320_fu_11354_p1));

assign add_ln691_342_fu_11447_p2 = ($signed(sext_ln691_313_fu_11443_p1) + $signed(sext_ln151_325_fu_11375_p1));

assign add_ln691_343_fu_11453_p2 = ($signed(sext_ln151_321_fu_11357_p1) + $signed(sext_ln151_323_fu_11363_p1));

assign add_ln691_344_fu_11463_p2 = ($signed(sext_ln691_315_fu_11459_p1) + $signed(sext_ln151_319_fu_11350_p1));

assign add_ln691_345_fu_15256_p2 = ($signed(sext_ln691_316_fu_15253_p1) + $signed(sext_ln691_314_fu_15250_p1));

assign add_ln691_346_fu_16594_p2 = ($signed(sext_ln691_317_fu_16591_p1) + $signed(add_ln691_340_reg_21209));

assign add_ln691_347_fu_11469_p2 = ($signed(sext_ln151_308_fu_11311_p1) + $signed(sext_ln691_308_fu_11308_p1));

assign add_ln691_348_fu_11479_p2 = ($signed(sext_ln691_318_fu_11475_p1) + $signed(sext_ln151_322_fu_11360_p1));

assign add_ln691_349_fu_11485_p2 = ($signed(sext_ln151_311_fu_11320_p1) + $signed(sext_ln151_310_fu_11317_p1));

assign add_ln691_34_fu_16373_p2 = ($signed(sext_ln691_31_fu_16370_p1) + $signed(add_ln691_28_reg_21014));

assign add_ln691_350_fu_11495_p2 = ($signed(sext_ln691_320_fu_11491_p1) + $signed(sext_ln151_309_fu_11314_p1));

assign add_ln691_351_fu_15268_p2 = ($signed(sext_ln691_321_fu_15265_p1) + $signed(sext_ln691_319_fu_15262_p1));

assign add_ln691_352_fu_11501_p2 = ($signed(sext_ln151_314_fu_11329_p1) + $signed(sext_ln151_313_fu_11326_p1));

assign add_ln691_353_fu_11511_p2 = ($signed(sext_ln691_323_fu_11507_p1) + $signed(sext_ln151_312_fu_11323_p1));

assign add_ln691_354_fu_11517_p2 = ($signed(sext_ln151_315_fu_11332_p1) + $signed(sext_ln151_317_fu_11338_p1));

assign add_ln691_355_fu_11527_p2 = ($signed(sext_ln151_316_fu_11335_p1) + $signed(sext_ln691_309_fu_11412_p1));

assign add_ln691_356_fu_11537_p2 = ($signed(sext_ln691_326_fu_11533_p1) + $signed(sext_ln691_325_fu_11523_p1));

assign add_ln691_357_fu_15284_p2 = ($signed(sext_ln691_327_fu_15281_p1) + $signed(sext_ln691_324_fu_15278_p1));

assign add_ln691_358_fu_15294_p2 = ($signed(sext_ln691_328_fu_15290_p1) + $signed(sext_ln691_322_fu_15274_p1));

assign add_ln691_359_fu_16602_p2 = ($signed(sext_ln691_329_fu_16599_p1) + $signed(add_ln691_346_fu_16594_p2));

assign add_ln691_35_fu_8249_p2 = ($signed(sext_ln151_22_fu_8076_p1) + $signed(sext_ln691_22_fu_8073_p1));

assign add_ln691_360_fu_11718_p2 = ($signed(sext_ln151_350_fu_11696_p1) + $signed(sext_ln151_351_fu_11706_p1));

assign add_ln691_361_fu_15322_p2 = ($signed(sext_ln691_332_fu_15319_p1) + $signed(tmp_303_fu_15300_p4));

assign add_ln691_362_fu_11724_p2 = ($signed(sext_ln151_346_fu_11666_p1) + $signed(sext_ln151_348_fu_11680_p1));

assign add_ln691_363_fu_15331_p2 = ($signed(sext_ln691_333_fu_15328_p1) + $signed(sext_ln151_349_fu_15316_p1));

assign add_ln691_364_fu_15341_p2 = ($signed(sext_ln691_334_fu_15337_p1) + $signed(add_ln691_361_fu_15322_p2));

assign add_ln691_365_fu_11730_p2 = ($signed(sext_ln151_340_fu_11620_p1) + $signed(sext_ln151_342_fu_11634_p1));

assign add_ln691_366_fu_15350_p2 = ($signed(sext_ln691_335_fu_15347_p1) + $signed(sext_ln151_347_fu_15313_p1));

assign add_ln691_367_fu_11736_p2 = ($signed(sext_ln151_343_fu_11642_p1) + $signed(sext_ln151_345_fu_11658_p1));

assign add_ln691_368_fu_15363_p2 = ($signed(sext_ln691_337_fu_15360_p1) + $signed(sext_ln151_341_fu_15310_p1));

assign add_ln691_369_fu_15373_p2 = ($signed(sext_ln691_338_fu_15369_p1) + $signed(sext_ln691_336_fu_15356_p1));

assign add_ln691_36_fu_8259_p2 = ($signed(sext_ln691_32_fu_8255_p1) + $signed(sext_ln151_36_fu_8128_p1));

assign add_ln691_370_fu_16611_p2 = ($signed(sext_ln691_339_fu_16608_p1) + $signed(add_ln691_364_reg_21224));

assign add_ln691_371_fu_11742_p2 = ($signed(sext_ln151_330_fu_11546_p1) + $signed(sext_ln691_330_fu_11543_p1));

assign add_ln691_372_fu_11752_p2 = ($signed(sext_ln691_340_fu_11748_p1) + $signed(sext_ln151_344_fu_11650_p1));

assign add_ln691_373_fu_11758_p2 = ($signed(sext_ln151_333_fu_11564_p1) + $signed(sext_ln151_332_fu_11556_p1));

assign add_ln691_374_fu_11768_p2 = ($signed(sext_ln691_342_fu_11764_p1) + $signed(sext_ln151_331_fu_11549_p1));

assign add_ln691_375_fu_15385_p2 = ($signed(sext_ln691_343_fu_15382_p1) + $signed(sext_ln691_341_fu_15379_p1));

assign add_ln691_376_fu_11774_p2 = ($signed(sext_ln151_336_fu_11588_p1) + $signed(sext_ln151_335_fu_11580_p1));

assign add_ln691_377_fu_11784_p2 = ($signed(sext_ln691_345_fu_11780_p1) + $signed(sext_ln151_334_fu_11572_p1));

assign add_ln691_378_fu_11790_p2 = ($signed(sext_ln151_337_fu_11596_p1) + $signed(sext_ln151_339_fu_11612_p1));

assign add_ln691_379_fu_11800_p2 = ($signed(sext_ln151_338_fu_11604_p1) + $signed(sext_ln691_331_fu_11714_p1));

assign add_ln691_37_fu_8265_p2 = ($signed(sext_ln151_25_fu_8085_p1) + $signed(sext_ln151_24_fu_8082_p1));

assign add_ln691_380_fu_11810_p2 = ($signed(sext_ln691_348_fu_11806_p1) + $signed(sext_ln691_347_fu_11796_p1));

assign add_ln691_381_fu_15401_p2 = ($signed(sext_ln691_349_fu_15398_p1) + $signed(sext_ln691_346_fu_15395_p1));

assign add_ln691_382_fu_15411_p2 = ($signed(sext_ln691_350_fu_15407_p1) + $signed(sext_ln691_344_fu_15391_p1));

assign add_ln691_383_fu_16619_p2 = ($signed(sext_ln691_351_fu_16616_p1) + $signed(add_ln691_370_fu_16611_p2));

assign add_ln691_384_fu_12006_p2 = ($signed(sext_ln151_372_fu_11984_p1) + $signed(sext_ln151_373_fu_11994_p1));

assign add_ln691_385_fu_15439_p2 = ($signed(sext_ln691_354_fu_15436_p1) + $signed(tmp_304_fu_15417_p4));

assign add_ln691_386_fu_12012_p2 = ($signed(sext_ln151_368_fu_11954_p1) + $signed(sext_ln151_370_fu_11968_p1));

assign add_ln691_387_fu_15448_p2 = ($signed(sext_ln691_355_fu_15445_p1) + $signed(sext_ln151_371_fu_15433_p1));

assign add_ln691_388_fu_15458_p2 = ($signed(sext_ln691_356_fu_15454_p1) + $signed(add_ln691_385_fu_15439_p2));

assign add_ln691_389_fu_12018_p2 = ($signed(sext_ln151_362_fu_11908_p1) + $signed(sext_ln151_364_fu_11922_p1));

assign add_ln691_38_fu_8275_p2 = ($signed(sext_ln691_34_fu_8271_p1) + $signed(sext_ln151_23_fu_8079_p1));

assign add_ln691_390_fu_15467_p2 = ($signed(sext_ln691_357_fu_15464_p1) + $signed(sext_ln151_369_fu_15430_p1));

assign add_ln691_391_fu_12024_p2 = ($signed(sext_ln151_365_fu_11930_p1) + $signed(sext_ln151_367_fu_11946_p1));

assign add_ln691_392_fu_15480_p2 = ($signed(sext_ln691_359_fu_15477_p1) + $signed(sext_ln151_363_fu_15427_p1));

assign add_ln691_393_fu_15490_p2 = ($signed(sext_ln691_360_fu_15486_p1) + $signed(sext_ln691_358_fu_15473_p1));

assign add_ln691_394_fu_16628_p2 = ($signed(sext_ln691_361_fu_16625_p1) + $signed(add_ln691_388_reg_21239));

assign add_ln691_395_fu_12030_p2 = ($signed(sext_ln151_352_fu_11828_p1) + $signed(sext_ln691_352_fu_11820_p1));

assign add_ln691_396_fu_12040_p2 = ($signed(sext_ln691_362_fu_12036_p1) + $signed(sext_ln151_366_fu_11938_p1));

assign add_ln691_397_fu_12046_p2 = ($signed(sext_ln151_355_fu_11852_p1) + $signed(sext_ln151_354_fu_11844_p1));

assign add_ln691_398_fu_12056_p2 = ($signed(sext_ln691_364_fu_12052_p1) + $signed(sext_ln151_353_fu_11836_p1));

assign add_ln691_399_fu_15502_p2 = ($signed(sext_ln691_365_fu_15499_p1) + $signed(sext_ln691_363_fu_15496_p1));

assign add_ln691_39_fu_14254_p2 = ($signed(sext_ln691_35_fu_14251_p1) + $signed(sext_ln691_33_fu_14248_p1));

assign add_ln691_3_fu_7961_p2 = ($signed(sext_ln691_3_fu_7957_p1) + $signed(sext_ln151_19_fu_7906_p1));

assign add_ln691_400_fu_12062_p2 = ($signed(sext_ln151_358_fu_11876_p1) + $signed(sext_ln151_357_fu_11868_p1));

assign add_ln691_401_fu_12072_p2 = ($signed(sext_ln691_367_fu_12068_p1) + $signed(sext_ln151_356_fu_11860_p1));

assign add_ln691_402_fu_12078_p2 = ($signed(sext_ln151_359_fu_11884_p1) + $signed(sext_ln151_361_fu_11900_p1));

assign add_ln691_403_fu_12088_p2 = ($signed(sext_ln151_360_fu_11892_p1) + $signed(sext_ln691_353_fu_12002_p1));

assign add_ln691_404_fu_12098_p2 = ($signed(sext_ln691_370_fu_12094_p1) + $signed(sext_ln691_369_fu_12084_p1));

assign add_ln691_405_fu_15518_p2 = ($signed(sext_ln691_371_fu_15515_p1) + $signed(sext_ln691_368_fu_15512_p1));

assign add_ln691_406_fu_15528_p2 = ($signed(sext_ln691_372_fu_15524_p1) + $signed(sext_ln691_366_fu_15508_p1));

assign add_ln691_407_fu_16636_p2 = ($signed(sext_ln691_373_fu_16633_p1) + $signed(add_ln691_394_fu_16628_p2));

assign add_ln691_408_fu_12294_p2 = ($signed(sext_ln151_394_fu_12272_p1) + $signed(sext_ln151_395_fu_12282_p1));

assign add_ln691_409_fu_15556_p2 = ($signed(sext_ln691_376_fu_15553_p1) + $signed(tmp_305_fu_15534_p4));

assign add_ln691_40_fu_8281_p2 = ($signed(sext_ln151_28_fu_8094_p1) + $signed(sext_ln151_27_fu_8091_p1));

assign add_ln691_410_fu_12300_p2 = ($signed(sext_ln151_390_fu_12242_p1) + $signed(sext_ln151_392_fu_12256_p1));

assign add_ln691_411_fu_15565_p2 = ($signed(sext_ln691_377_fu_15562_p1) + $signed(sext_ln151_393_fu_15550_p1));

assign add_ln691_412_fu_15575_p2 = ($signed(sext_ln691_378_fu_15571_p1) + $signed(add_ln691_409_fu_15556_p2));

assign add_ln691_413_fu_12306_p2 = ($signed(sext_ln151_384_fu_12196_p1) + $signed(sext_ln151_386_fu_12210_p1));

assign add_ln691_414_fu_15584_p2 = ($signed(sext_ln691_379_fu_15581_p1) + $signed(sext_ln151_391_fu_15547_p1));

assign add_ln691_415_fu_12312_p2 = ($signed(sext_ln151_387_fu_12218_p1) + $signed(sext_ln151_389_fu_12234_p1));

assign add_ln691_416_fu_15597_p2 = ($signed(sext_ln691_381_fu_15594_p1) + $signed(sext_ln151_385_fu_15544_p1));

assign add_ln691_417_fu_15607_p2 = ($signed(sext_ln691_382_fu_15603_p1) + $signed(sext_ln691_380_fu_15590_p1));

assign add_ln691_418_fu_16645_p2 = ($signed(sext_ln691_383_fu_16642_p1) + $signed(add_ln691_412_reg_21254));

assign add_ln691_419_fu_12318_p2 = ($signed(sext_ln151_374_fu_12116_p1) + $signed(sext_ln691_374_fu_12108_p1));

assign add_ln691_41_fu_8291_p2 = ($signed(sext_ln691_37_fu_8287_p1) + $signed(sext_ln151_26_fu_8088_p1));

assign add_ln691_420_fu_12328_p2 = ($signed(sext_ln691_384_fu_12324_p1) + $signed(sext_ln151_388_fu_12226_p1));

assign add_ln691_421_fu_12334_p2 = ($signed(sext_ln151_377_fu_12140_p1) + $signed(sext_ln151_376_fu_12132_p1));

assign add_ln691_422_fu_12344_p2 = ($signed(sext_ln691_386_fu_12340_p1) + $signed(sext_ln151_375_fu_12124_p1));

assign add_ln691_423_fu_15619_p2 = ($signed(sext_ln691_387_fu_15616_p1) + $signed(sext_ln691_385_fu_15613_p1));

assign add_ln691_424_fu_12350_p2 = ($signed(sext_ln151_380_fu_12164_p1) + $signed(sext_ln151_379_fu_12156_p1));

assign add_ln691_425_fu_12360_p2 = ($signed(sext_ln691_389_fu_12356_p1) + $signed(sext_ln151_378_fu_12148_p1));

assign add_ln691_426_fu_12366_p2 = ($signed(sext_ln151_381_fu_12172_p1) + $signed(sext_ln151_383_fu_12188_p1));

assign add_ln691_427_fu_12376_p2 = ($signed(sext_ln151_382_fu_12180_p1) + $signed(sext_ln691_375_fu_12290_p1));

assign add_ln691_428_fu_12386_p2 = ($signed(sext_ln691_392_fu_12382_p1) + $signed(sext_ln691_391_fu_12372_p1));

assign add_ln691_429_fu_15635_p2 = ($signed(sext_ln691_393_fu_15632_p1) + $signed(sext_ln691_390_fu_15629_p1));

assign add_ln691_42_fu_8297_p2 = ($signed(sext_ln151_29_fu_8097_p1) + $signed(sext_ln151_31_fu_8103_p1));

assign add_ln691_430_fu_15645_p2 = ($signed(sext_ln691_394_fu_15641_p1) + $signed(sext_ln691_388_fu_15625_p1));

assign add_ln691_431_fu_16653_p2 = ($signed(sext_ln691_395_fu_16650_p1) + $signed(add_ln691_418_fu_16645_p2));

assign add_ln691_432_fu_12582_p2 = ($signed(sext_ln151_416_fu_12560_p1) + $signed(sext_ln151_417_fu_12570_p1));

assign add_ln691_433_fu_15673_p2 = ($signed(sext_ln691_398_fu_15670_p1) + $signed(tmp_306_fu_15651_p4));

assign add_ln691_434_fu_12588_p2 = ($signed(sext_ln151_412_fu_12530_p1) + $signed(sext_ln151_414_fu_12544_p1));

assign add_ln691_435_fu_15682_p2 = ($signed(sext_ln691_399_fu_15679_p1) + $signed(sext_ln151_415_fu_15667_p1));

assign add_ln691_436_fu_15692_p2 = ($signed(sext_ln691_400_fu_15688_p1) + $signed(add_ln691_433_fu_15673_p2));

assign add_ln691_437_fu_12594_p2 = ($signed(sext_ln151_406_fu_12484_p1) + $signed(sext_ln151_408_fu_12498_p1));

assign add_ln691_438_fu_15701_p2 = ($signed(sext_ln691_401_fu_15698_p1) + $signed(sext_ln151_413_fu_15664_p1));

assign add_ln691_439_fu_12600_p2 = ($signed(sext_ln151_409_fu_12506_p1) + $signed(sext_ln151_411_fu_12522_p1));

assign add_ln691_43_fu_8307_p2 = ($signed(sext_ln151_30_fu_8100_p1) + $signed(sext_ln691_23_fu_8192_p1));

assign add_ln691_440_fu_15714_p2 = ($signed(sext_ln691_403_fu_15711_p1) + $signed(sext_ln151_407_fu_15661_p1));

assign add_ln691_441_fu_15724_p2 = ($signed(sext_ln691_404_fu_15720_p1) + $signed(sext_ln691_402_fu_15707_p1));

assign add_ln691_442_fu_16662_p2 = ($signed(sext_ln691_405_fu_16659_p1) + $signed(add_ln691_436_reg_21269));

assign add_ln691_443_fu_12606_p2 = ($signed(sext_ln151_396_fu_12404_p1) + $signed(sext_ln691_396_fu_12396_p1));

assign add_ln691_444_fu_12616_p2 = ($signed(sext_ln691_406_fu_12612_p1) + $signed(sext_ln151_410_fu_12514_p1));

assign add_ln691_445_fu_12622_p2 = ($signed(sext_ln151_399_fu_12428_p1) + $signed(sext_ln151_398_fu_12420_p1));

assign add_ln691_446_fu_12632_p2 = ($signed(sext_ln691_408_fu_12628_p1) + $signed(sext_ln151_397_fu_12412_p1));

assign add_ln691_447_fu_15736_p2 = ($signed(sext_ln691_409_fu_15733_p1) + $signed(sext_ln691_407_fu_15730_p1));

assign add_ln691_448_fu_12638_p2 = ($signed(sext_ln151_402_fu_12452_p1) + $signed(sext_ln151_401_fu_12444_p1));

assign add_ln691_449_fu_12648_p2 = ($signed(sext_ln691_411_fu_12644_p1) + $signed(sext_ln151_400_fu_12436_p1));

assign add_ln691_44_fu_8317_p2 = ($signed(sext_ln691_40_fu_8313_p1) + $signed(sext_ln691_39_fu_8303_p1));

assign add_ln691_450_fu_12654_p2 = ($signed(sext_ln151_403_fu_12460_p1) + $signed(sext_ln151_405_fu_12476_p1));

assign add_ln691_451_fu_12664_p2 = ($signed(sext_ln151_404_fu_12468_p1) + $signed(sext_ln691_397_fu_12578_p1));

assign add_ln691_452_fu_12674_p2 = ($signed(sext_ln691_414_fu_12670_p1) + $signed(sext_ln691_413_fu_12660_p1));

assign add_ln691_453_fu_15752_p2 = ($signed(sext_ln691_415_fu_15749_p1) + $signed(sext_ln691_412_fu_15746_p1));

assign add_ln691_454_fu_15762_p2 = ($signed(sext_ln691_416_fu_15758_p1) + $signed(sext_ln691_410_fu_15742_p1));

assign add_ln691_455_fu_16670_p2 = ($signed(sext_ln691_417_fu_16667_p1) + $signed(add_ln691_442_fu_16662_p2));

assign add_ln691_456_fu_12870_p2 = ($signed(sext_ln151_438_fu_12848_p1) + $signed(sext_ln151_439_fu_12858_p1));

assign add_ln691_457_fu_15790_p2 = ($signed(sext_ln691_420_fu_15787_p1) + $signed(tmp_307_fu_15768_p4));

assign add_ln691_458_fu_12876_p2 = ($signed(sext_ln151_434_fu_12818_p1) + $signed(sext_ln151_436_fu_12832_p1));

assign add_ln691_459_fu_15799_p2 = ($signed(sext_ln691_421_fu_15796_p1) + $signed(sext_ln151_437_fu_15784_p1));

assign add_ln691_45_fu_14270_p2 = ($signed(sext_ln691_41_fu_14267_p1) + $signed(sext_ln691_38_fu_14264_p1));

assign add_ln691_460_fu_15809_p2 = ($signed(sext_ln691_422_fu_15805_p1) + $signed(add_ln691_457_fu_15790_p2));

assign add_ln691_461_fu_12882_p2 = ($signed(sext_ln151_428_fu_12772_p1) + $signed(sext_ln151_430_fu_12786_p1));

assign add_ln691_462_fu_15818_p2 = ($signed(sext_ln691_423_fu_15815_p1) + $signed(sext_ln151_435_fu_15781_p1));

assign add_ln691_463_fu_12888_p2 = ($signed(sext_ln151_431_fu_12794_p1) + $signed(sext_ln151_433_fu_12810_p1));

assign add_ln691_464_fu_15831_p2 = ($signed(sext_ln691_425_fu_15828_p1) + $signed(sext_ln151_429_fu_15778_p1));

assign add_ln691_465_fu_15841_p2 = ($signed(sext_ln691_426_fu_15837_p1) + $signed(sext_ln691_424_fu_15824_p1));

assign add_ln691_466_fu_16679_p2 = ($signed(sext_ln691_427_fu_16676_p1) + $signed(add_ln691_460_reg_21284));

assign add_ln691_467_fu_12894_p2 = ($signed(sext_ln151_418_fu_12692_p1) + $signed(sext_ln691_418_fu_12684_p1));

assign add_ln691_468_fu_12904_p2 = ($signed(sext_ln691_428_fu_12900_p1) + $signed(sext_ln151_432_fu_12802_p1));

assign add_ln691_469_fu_12910_p2 = ($signed(sext_ln151_421_fu_12716_p1) + $signed(sext_ln151_420_fu_12708_p1));

assign add_ln691_46_fu_14280_p2 = ($signed(sext_ln691_42_fu_14276_p1) + $signed(sext_ln691_36_fu_14260_p1));

assign add_ln691_470_fu_12920_p2 = ($signed(sext_ln691_430_fu_12916_p1) + $signed(sext_ln151_419_fu_12700_p1));

assign add_ln691_471_fu_15853_p2 = ($signed(sext_ln691_431_fu_15850_p1) + $signed(sext_ln691_429_fu_15847_p1));

assign add_ln691_472_fu_12926_p2 = ($signed(sext_ln151_424_fu_12740_p1) + $signed(sext_ln151_423_fu_12732_p1));

assign add_ln691_473_fu_12936_p2 = ($signed(sext_ln691_433_fu_12932_p1) + $signed(sext_ln151_422_fu_12724_p1));

assign add_ln691_474_fu_12942_p2 = ($signed(sext_ln151_425_fu_12748_p1) + $signed(sext_ln151_427_fu_12764_p1));

assign add_ln691_475_fu_12952_p2 = ($signed(sext_ln151_426_fu_12756_p1) + $signed(sext_ln691_419_fu_12866_p1));

assign add_ln691_476_fu_12962_p2 = ($signed(sext_ln691_436_fu_12958_p1) + $signed(sext_ln691_435_fu_12948_p1));

assign add_ln691_477_fu_15869_p2 = ($signed(sext_ln691_437_fu_15866_p1) + $signed(sext_ln691_434_fu_15863_p1));

assign add_ln691_478_fu_15879_p2 = ($signed(sext_ln691_438_fu_15875_p1) + $signed(sext_ln691_432_fu_15859_p1));

assign add_ln691_479_fu_16687_p2 = ($signed(sext_ln691_439_fu_16684_p1) + $signed(add_ln691_466_fu_16679_p2));

assign add_ln691_47_fu_16381_p2 = ($signed(sext_ln691_43_fu_16378_p1) + $signed(add_ln691_34_fu_16373_p2));

assign add_ln691_480_fu_13158_p2 = ($signed(sext_ln151_460_fu_13136_p1) + $signed(sext_ln151_461_fu_13146_p1));

assign add_ln691_481_fu_15907_p2 = ($signed(sext_ln691_442_fu_15904_p1) + $signed(tmp_308_fu_15885_p4));

assign add_ln691_482_fu_13164_p2 = ($signed(sext_ln151_456_fu_13106_p1) + $signed(sext_ln151_458_fu_13120_p1));

assign add_ln691_483_fu_15916_p2 = ($signed(sext_ln691_443_fu_15913_p1) + $signed(sext_ln151_459_fu_15901_p1));

assign add_ln691_484_fu_15926_p2 = ($signed(sext_ln691_444_fu_15922_p1) + $signed(add_ln691_481_fu_15907_p2));

assign add_ln691_485_fu_13170_p2 = ($signed(sext_ln151_450_fu_13060_p1) + $signed(sext_ln151_452_fu_13074_p1));

assign add_ln691_486_fu_15935_p2 = ($signed(sext_ln691_445_fu_15932_p1) + $signed(sext_ln151_457_fu_15898_p1));

assign add_ln691_487_fu_13176_p2 = ($signed(sext_ln151_453_fu_13082_p1) + $signed(sext_ln151_455_fu_13098_p1));

assign add_ln691_488_fu_15948_p2 = ($signed(sext_ln691_447_fu_15945_p1) + $signed(sext_ln151_451_fu_15895_p1));

assign add_ln691_489_fu_15958_p2 = ($signed(sext_ln691_448_fu_15954_p1) + $signed(sext_ln691_446_fu_15941_p1));

assign add_ln691_48_fu_8445_p2 = ($signed(sext_ln151_64_fu_8425_p1) + $signed(sext_ln151_65_fu_8438_p1));

assign add_ln691_490_fu_16696_p2 = ($signed(sext_ln691_449_fu_16693_p1) + $signed(add_ln691_484_reg_21299));

assign add_ln691_491_fu_13182_p2 = ($signed(sext_ln151_440_fu_12980_p1) + $signed(sext_ln691_440_fu_12972_p1));

assign add_ln691_492_fu_13192_p2 = ($signed(sext_ln691_450_fu_13188_p1) + $signed(sext_ln151_454_fu_13090_p1));

assign add_ln691_493_fu_13198_p2 = ($signed(sext_ln151_443_fu_13004_p1) + $signed(sext_ln151_442_fu_12996_p1));

assign add_ln691_494_fu_13208_p2 = ($signed(sext_ln691_452_fu_13204_p1) + $signed(sext_ln151_441_fu_12988_p1));

assign add_ln691_495_fu_15970_p2 = ($signed(sext_ln691_453_fu_15967_p1) + $signed(sext_ln691_451_fu_15964_p1));

assign add_ln691_496_fu_13214_p2 = ($signed(sext_ln151_446_fu_13028_p1) + $signed(sext_ln151_445_fu_13020_p1));

assign add_ln691_497_fu_13224_p2 = ($signed(sext_ln691_455_fu_13220_p1) + $signed(sext_ln151_444_fu_13012_p1));

assign add_ln691_498_fu_13230_p2 = ($signed(sext_ln151_447_fu_13036_p1) + $signed(sext_ln151_449_fu_13052_p1));

assign add_ln691_499_fu_13240_p2 = ($signed(sext_ln151_448_fu_13044_p1) + $signed(sext_ln691_441_fu_13154_p1));

assign add_ln691_49_fu_14299_p2 = ($signed(sext_ln691_46_fu_14296_p1) + $signed(tmp_51_fu_14286_p4));

assign add_ln691_4_fu_14152_p2 = ($signed(sext_ln691_4_fu_14149_p1) + $signed(add_ln691_1_fu_14143_p2));

assign add_ln691_500_fu_13250_p2 = ($signed(sext_ln691_458_fu_13246_p1) + $signed(sext_ln691_457_fu_13236_p1));

assign add_ln691_501_fu_15986_p2 = ($signed(sext_ln691_459_fu_15983_p1) + $signed(sext_ln691_456_fu_15980_p1));

assign add_ln691_502_fu_15996_p2 = ($signed(sext_ln691_460_fu_15992_p1) + $signed(sext_ln691_454_fu_15976_p1));

assign add_ln691_503_fu_16704_p2 = ($signed(sext_ln691_461_fu_16701_p1) + $signed(add_ln691_490_fu_16696_p2));

assign add_ln691_504_fu_13446_p2 = ($signed(sext_ln151_482_fu_13424_p1) + $signed(sext_ln151_483_fu_13434_p1));

assign add_ln691_505_fu_16024_p2 = ($signed(sext_ln691_464_fu_16021_p1) + $signed(tmp_309_fu_16002_p4));

assign add_ln691_506_fu_13452_p2 = ($signed(sext_ln151_478_fu_13394_p1) + $signed(sext_ln151_480_fu_13408_p1));

assign add_ln691_507_fu_16033_p2 = ($signed(sext_ln691_465_fu_16030_p1) + $signed(sext_ln151_481_fu_16018_p1));

assign add_ln691_508_fu_16043_p2 = ($signed(sext_ln691_466_fu_16039_p1) + $signed(add_ln691_505_fu_16024_p2));

assign add_ln691_509_fu_13458_p2 = ($signed(sext_ln151_472_fu_13348_p1) + $signed(sext_ln151_474_fu_13362_p1));

assign add_ln691_50_fu_8451_p2 = ($signed(sext_ln151_60_fu_8384_p1) + $signed(sext_ln151_62_fu_8400_p1));

assign add_ln691_510_fu_16052_p2 = ($signed(sext_ln691_467_fu_16049_p1) + $signed(sext_ln151_479_fu_16015_p1));

assign add_ln691_511_fu_13464_p2 = ($signed(sext_ln151_475_fu_13370_p1) + $signed(sext_ln151_477_fu_13386_p1));

assign add_ln691_512_fu_16065_p2 = ($signed(sext_ln691_469_fu_16062_p1) + $signed(sext_ln151_473_fu_16012_p1));

assign add_ln691_513_fu_16075_p2 = ($signed(sext_ln691_470_fu_16071_p1) + $signed(sext_ln691_468_fu_16058_p1));

assign add_ln691_514_fu_16713_p2 = ($signed(sext_ln691_471_fu_16710_p1) + $signed(add_ln691_508_reg_21314));

assign add_ln691_515_fu_13470_p2 = ($signed(sext_ln151_462_fu_13268_p1) + $signed(sext_ln691_462_fu_13260_p1));

assign add_ln691_516_fu_13480_p2 = ($signed(sext_ln691_472_fu_13476_p1) + $signed(sext_ln151_476_fu_13378_p1));

assign add_ln691_517_fu_13486_p2 = ($signed(sext_ln151_465_fu_13292_p1) + $signed(sext_ln151_464_fu_13284_p1));

assign add_ln691_518_fu_13496_p2 = ($signed(sext_ln691_474_fu_13492_p1) + $signed(sext_ln151_463_fu_13276_p1));

assign add_ln691_519_fu_16087_p2 = ($signed(sext_ln691_475_fu_16084_p1) + $signed(sext_ln691_473_fu_16081_p1));

assign add_ln691_51_fu_8461_p2 = ($signed(sext_ln691_47_fu_8457_p1) + $signed(sext_ln151_63_fu_8412_p1));

assign add_ln691_520_fu_13502_p2 = ($signed(sext_ln151_468_fu_13316_p1) + $signed(sext_ln151_467_fu_13308_p1));

assign add_ln691_521_fu_13512_p2 = ($signed(sext_ln691_477_fu_13508_p1) + $signed(sext_ln151_466_fu_13300_p1));

assign add_ln691_522_fu_13518_p2 = ($signed(sext_ln151_469_fu_13324_p1) + $signed(sext_ln151_471_fu_13340_p1));

assign add_ln691_523_fu_13528_p2 = ($signed(sext_ln151_470_fu_13332_p1) + $signed(sext_ln691_463_fu_13442_p1));

assign add_ln691_524_fu_13538_p2 = ($signed(sext_ln691_480_fu_13534_p1) + $signed(sext_ln691_479_fu_13524_p1));

assign add_ln691_525_fu_16103_p2 = ($signed(sext_ln691_481_fu_16100_p1) + $signed(sext_ln691_478_fu_16097_p1));

assign add_ln691_526_fu_16113_p2 = ($signed(sext_ln691_482_fu_16109_p1) + $signed(sext_ln691_476_fu_16093_p1));

assign add_ln691_527_fu_16721_p2 = ($signed(sext_ln691_483_fu_16718_p1) + $signed(add_ln691_514_fu_16713_p2));

assign add_ln691_528_fu_13734_p2 = ($signed(sext_ln151_504_fu_13712_p1) + $signed(sext_ln151_505_fu_13722_p1));

assign add_ln691_529_fu_16141_p2 = ($signed(sext_ln691_486_fu_16138_p1) + $signed(tmp_310_fu_16119_p4));

assign add_ln691_52_fu_14308_p2 = ($signed(sext_ln691_48_fu_14305_p1) + $signed(add_ln691_49_fu_14299_p2));

assign add_ln691_530_fu_13740_p2 = ($signed(sext_ln151_500_fu_13682_p1) + $signed(sext_ln151_502_fu_13696_p1));

assign add_ln691_531_fu_16150_p2 = ($signed(sext_ln691_487_fu_16147_p1) + $signed(sext_ln151_503_fu_16135_p1));

assign add_ln691_532_fu_16160_p2 = ($signed(sext_ln691_488_fu_16156_p1) + $signed(add_ln691_529_fu_16141_p2));

assign add_ln691_533_fu_13746_p2 = ($signed(sext_ln151_494_fu_13636_p1) + $signed(sext_ln151_496_fu_13650_p1));

assign add_ln691_534_fu_16169_p2 = ($signed(sext_ln691_489_fu_16166_p1) + $signed(sext_ln151_501_fu_16132_p1));

assign add_ln691_535_fu_13752_p2 = ($signed(sext_ln151_497_fu_13658_p1) + $signed(sext_ln151_499_fu_13674_p1));

assign add_ln691_536_fu_16182_p2 = ($signed(sext_ln691_491_fu_16179_p1) + $signed(sext_ln151_495_fu_16129_p1));

assign add_ln691_537_fu_16192_p2 = ($signed(sext_ln691_492_fu_16188_p1) + $signed(sext_ln691_490_fu_16175_p1));

assign add_ln691_538_fu_16730_p2 = ($signed(sext_ln691_493_fu_16727_p1) + $signed(add_ln691_532_reg_21329));

assign add_ln691_539_fu_13758_p2 = ($signed(sext_ln151_484_fu_13556_p1) + $signed(sext_ln691_484_fu_13548_p1));

assign add_ln691_53_fu_8467_p2 = ($signed(sext_ln151_54_fu_8356_p1) + $signed(sext_ln151_56_fu_8372_p1));

assign add_ln691_540_fu_13768_p2 = ($signed(sext_ln691_494_fu_13764_p1) + $signed(sext_ln151_498_fu_13666_p1));

assign add_ln691_541_fu_13774_p2 = ($signed(sext_ln151_487_fu_13580_p1) + $signed(sext_ln151_486_fu_13572_p1));

assign add_ln691_542_fu_13784_p2 = ($signed(sext_ln691_496_fu_13780_p1) + $signed(sext_ln151_485_fu_13564_p1));

assign add_ln691_543_fu_16204_p2 = ($signed(sext_ln691_497_fu_16201_p1) + $signed(sext_ln691_495_fu_16198_p1));

assign add_ln691_544_fu_13790_p2 = ($signed(sext_ln151_490_fu_13604_p1) + $signed(sext_ln151_489_fu_13596_p1));

assign add_ln691_545_fu_13800_p2 = ($signed(sext_ln691_499_fu_13796_p1) + $signed(sext_ln151_488_fu_13588_p1));

assign add_ln691_546_fu_13806_p2 = ($signed(sext_ln151_491_fu_13612_p1) + $signed(sext_ln151_493_fu_13628_p1));

assign add_ln691_547_fu_13816_p2 = ($signed(sext_ln151_492_fu_13620_p1) + $signed(sext_ln691_485_fu_13730_p1));

assign add_ln691_548_fu_13826_p2 = ($signed(sext_ln691_502_fu_13822_p1) + $signed(sext_ln691_501_fu_13812_p1));

assign add_ln691_549_fu_16220_p2 = ($signed(sext_ln691_503_fu_16217_p1) + $signed(sext_ln691_500_fu_16214_p1));

assign add_ln691_54_fu_8477_p2 = ($signed(sext_ln691_49_fu_8473_p1) + $signed(sext_ln151_61_fu_8396_p1));

assign add_ln691_550_fu_16230_p2 = ($signed(sext_ln691_504_fu_16226_p1) + $signed(sext_ln691_498_fu_16210_p1));

assign add_ln691_551_fu_16738_p2 = ($signed(sext_ln691_505_fu_16735_p1) + $signed(add_ln691_538_fu_16730_p2));

assign add_ln691_552_fu_14022_p2 = ($signed(sext_ln151_526_fu_14000_p1) + $signed(sext_ln151_527_fu_14010_p1));

assign add_ln691_553_fu_16258_p2 = ($signed(sext_ln691_508_fu_16255_p1) + $signed(tmp_311_fu_16236_p4));

assign add_ln691_554_fu_14028_p2 = ($signed(sext_ln151_522_fu_13970_p1) + $signed(sext_ln151_524_fu_13984_p1));

assign add_ln691_555_fu_16267_p2 = ($signed(sext_ln691_509_fu_16264_p1) + $signed(sext_ln151_525_fu_16252_p1));

assign add_ln691_556_fu_16277_p2 = ($signed(sext_ln691_510_fu_16273_p1) + $signed(add_ln691_553_fu_16258_p2));

assign add_ln691_557_fu_14034_p2 = ($signed(sext_ln151_516_fu_13924_p1) + $signed(sext_ln151_518_fu_13938_p1));

assign add_ln691_558_fu_16286_p2 = ($signed(sext_ln691_511_fu_16283_p1) + $signed(sext_ln151_523_fu_16249_p1));

assign add_ln691_559_fu_14040_p2 = ($signed(sext_ln151_519_fu_13946_p1) + $signed(sext_ln151_521_fu_13962_p1));

assign add_ln691_55_fu_8483_p2 = ($signed(sext_ln151_57_fu_8375_p1) + $signed(sext_ln151_59_fu_8381_p1));

assign add_ln691_560_fu_16299_p2 = ($signed(sext_ln691_513_fu_16296_p1) + $signed(sext_ln151_517_fu_16246_p1));

assign add_ln691_561_fu_16309_p2 = ($signed(sext_ln691_514_fu_16305_p1) + $signed(sext_ln691_512_fu_16292_p1));

assign add_ln691_562_fu_16747_p2 = ($signed(sext_ln691_515_fu_16744_p1) + $signed(add_ln691_556_reg_21344));

assign add_ln691_563_fu_14046_p2 = ($signed(sext_ln151_506_fu_13844_p1) + $signed(sext_ln691_506_fu_13836_p1));

assign add_ln691_564_fu_14056_p2 = ($signed(sext_ln691_516_fu_14052_p1) + $signed(sext_ln151_520_fu_13954_p1));

assign add_ln691_565_fu_14062_p2 = ($signed(sext_ln151_509_fu_13868_p1) + $signed(sext_ln151_508_fu_13860_p1));

assign add_ln691_566_fu_14072_p2 = ($signed(sext_ln691_518_fu_14068_p1) + $signed(sext_ln151_507_fu_13852_p1));

assign add_ln691_567_fu_16321_p2 = ($signed(sext_ln691_519_fu_16318_p1) + $signed(sext_ln691_517_fu_16315_p1));

assign add_ln691_568_fu_14078_p2 = ($signed(sext_ln151_512_fu_13892_p1) + $signed(sext_ln151_511_fu_13884_p1));

assign add_ln691_569_fu_14088_p2 = ($signed(sext_ln691_521_fu_14084_p1) + $signed(sext_ln151_510_fu_13876_p1));

assign add_ln691_56_fu_8493_p2 = ($signed(sext_ln691_51_fu_8489_p1) + $signed(sext_ln151_55_fu_8368_p1));

assign add_ln691_570_fu_14094_p2 = ($signed(sext_ln151_513_fu_13900_p1) + $signed(sext_ln151_515_fu_13916_p1));

assign add_ln691_571_fu_14104_p2 = ($signed(sext_ln151_514_fu_13908_p1) + $signed(sext_ln691_507_fu_14018_p1));

assign add_ln691_572_fu_14114_p2 = ($signed(sext_ln691_524_fu_14110_p1) + $signed(sext_ln691_523_fu_14100_p1));

assign add_ln691_573_fu_16337_p2 = ($signed(sext_ln691_525_fu_16334_p1) + $signed(sext_ln691_522_fu_16331_p1));

assign add_ln691_574_fu_16347_p2 = ($signed(sext_ln691_526_fu_16343_p1) + $signed(sext_ln691_520_fu_16327_p1));

assign add_ln691_575_fu_16755_p2 = ($signed(sext_ln691_527_fu_16752_p1) + $signed(add_ln691_562_fu_16747_p2));

assign add_ln691_57_fu_14320_p2 = ($signed(sext_ln691_52_fu_14317_p1) + $signed(sext_ln691_50_fu_14314_p1));

assign add_ln691_58_fu_16390_p2 = ($signed(sext_ln691_53_fu_16387_p1) + $signed(add_ln691_52_reg_21029));

assign add_ln691_59_fu_8499_p2 = ($signed(sext_ln151_44_fu_8326_p1) + $signed(sext_ln691_44_fu_8323_p1));

assign add_ln691_5_fu_7967_p2 = ($signed(sext_ln151_10_fu_7841_p1) + $signed(sext_ln151_12_fu_7860_p1));

assign add_ln691_60_fu_8509_p2 = ($signed(sext_ln691_54_fu_8505_p1) + $signed(sext_ln151_58_fu_8378_p1));

assign add_ln691_61_fu_8515_p2 = ($signed(sext_ln151_47_fu_8335_p1) + $signed(sext_ln151_46_fu_8332_p1));

assign add_ln691_62_fu_8525_p2 = ($signed(sext_ln691_56_fu_8521_p1) + $signed(sext_ln151_45_fu_8329_p1));

assign add_ln691_63_fu_14332_p2 = ($signed(sext_ln691_57_fu_14329_p1) + $signed(sext_ln691_55_fu_14326_p1));

assign add_ln691_64_fu_8531_p2 = ($signed(sext_ln151_50_fu_8344_p1) + $signed(sext_ln151_49_fu_8341_p1));

assign add_ln691_65_fu_8541_p2 = ($signed(sext_ln691_59_fu_8537_p1) + $signed(sext_ln151_48_fu_8338_p1));

assign add_ln691_66_fu_8547_p2 = ($signed(sext_ln151_51_fu_8347_p1) + $signed(sext_ln151_53_fu_8353_p1));

assign add_ln691_67_fu_8557_p2 = ($signed(sext_ln151_52_fu_8350_p1) + $signed(sext_ln691_45_fu_8442_p1));

assign add_ln691_68_fu_8567_p2 = ($signed(sext_ln691_62_fu_8563_p1) + $signed(sext_ln691_61_fu_8553_p1));

assign add_ln691_69_fu_14348_p2 = ($signed(sext_ln691_63_fu_14345_p1) + $signed(sext_ln691_60_fu_14342_p1));

assign add_ln691_6_fu_7977_p2 = ($signed(sext_ln691_5_fu_7973_p1) + $signed(sext_ln151_17_fu_7887_p1));

assign add_ln691_70_fu_14358_p2 = ($signed(sext_ln691_64_fu_14354_p1) + $signed(sext_ln691_58_fu_14338_p1));

assign add_ln691_71_fu_16398_p2 = ($signed(sext_ln691_65_fu_16395_p1) + $signed(add_ln691_58_fu_16390_p2));

assign add_ln691_72_fu_8695_p2 = ($signed(sext_ln151_86_fu_8675_p1) + $signed(sext_ln151_87_fu_8688_p1));

assign add_ln691_73_fu_14377_p2 = ($signed(sext_ln691_68_fu_14374_p1) + $signed(tmp_76_fu_14364_p4));

assign add_ln691_74_fu_8701_p2 = ($signed(sext_ln151_82_fu_8634_p1) + $signed(sext_ln151_84_fu_8650_p1));

assign add_ln691_75_fu_8711_p2 = ($signed(sext_ln691_69_fu_8707_p1) + $signed(sext_ln151_85_fu_8662_p1));

assign add_ln691_76_fu_14386_p2 = ($signed(sext_ln691_70_fu_14383_p1) + $signed(add_ln691_73_fu_14377_p2));

assign add_ln691_77_fu_8717_p2 = ($signed(sext_ln151_76_fu_8606_p1) + $signed(sext_ln151_78_fu_8622_p1));

assign add_ln691_78_fu_8727_p2 = ($signed(sext_ln691_71_fu_8723_p1) + $signed(sext_ln151_83_fu_8646_p1));

assign add_ln691_79_fu_8733_p2 = ($signed(sext_ln151_79_fu_8625_p1) + $signed(sext_ln151_81_fu_8631_p1));

assign add_ln691_7_fu_7983_p2 = ($signed(sext_ln151_13_fu_7863_p1) + $signed(sext_ln151_15_fu_7869_p1));

assign add_ln691_80_fu_8743_p2 = ($signed(sext_ln691_73_fu_8739_p1) + $signed(sext_ln151_77_fu_8618_p1));

assign add_ln691_81_fu_14398_p2 = ($signed(sext_ln691_74_fu_14395_p1) + $signed(sext_ln691_72_fu_14392_p1));

assign add_ln691_82_fu_16407_p2 = ($signed(sext_ln691_75_fu_16404_p1) + $signed(add_ln691_76_reg_21044));

assign add_ln691_83_fu_8749_p2 = ($signed(sext_ln151_66_fu_8576_p1) + $signed(sext_ln691_66_fu_8573_p1));

assign add_ln691_84_fu_8759_p2 = ($signed(sext_ln691_76_fu_8755_p1) + $signed(sext_ln151_80_fu_8628_p1));

assign add_ln691_85_fu_8765_p2 = ($signed(sext_ln151_69_fu_8585_p1) + $signed(sext_ln151_68_fu_8582_p1));

assign add_ln691_86_fu_8775_p2 = ($signed(sext_ln691_78_fu_8771_p1) + $signed(sext_ln151_67_fu_8579_p1));

assign add_ln691_87_fu_14410_p2 = ($signed(sext_ln691_79_fu_14407_p1) + $signed(sext_ln691_77_fu_14404_p1));

assign add_ln691_88_fu_8781_p2 = ($signed(sext_ln151_72_fu_8594_p1) + $signed(sext_ln151_71_fu_8591_p1));

assign add_ln691_89_fu_8791_p2 = ($signed(sext_ln691_81_fu_8787_p1) + $signed(sext_ln151_70_fu_8588_p1));

assign add_ln691_8_fu_7993_p2 = ($signed(sext_ln691_7_fu_7989_p1) + $signed(sext_ln151_11_fu_7856_p1));

assign add_ln691_90_fu_8797_p2 = ($signed(sext_ln151_73_fu_8597_p1) + $signed(sext_ln151_75_fu_8603_p1));

assign add_ln691_91_fu_8807_p2 = ($signed(sext_ln151_74_fu_8600_p1) + $signed(sext_ln691_67_fu_8692_p1));

assign add_ln691_92_fu_8817_p2 = ($signed(sext_ln691_84_fu_8813_p1) + $signed(sext_ln691_83_fu_8803_p1));

assign add_ln691_93_fu_14426_p2 = ($signed(sext_ln691_85_fu_14423_p1) + $signed(sext_ln691_82_fu_14420_p1));

assign add_ln691_94_fu_14436_p2 = ($signed(sext_ln691_86_fu_14432_p1) + $signed(sext_ln691_80_fu_14416_p1));

assign add_ln691_95_fu_16415_p2 = ($signed(sext_ln691_87_fu_16412_p1) + $signed(add_ln691_82_fu_16407_p2));

assign add_ln691_96_fu_8945_p2 = ($signed(sext_ln151_108_fu_8925_p1) + $signed(sext_ln151_109_fu_8938_p1));

assign add_ln691_97_fu_14455_p2 = ($signed(sext_ln691_90_fu_14452_p1) + $signed(tmp_101_fu_14442_p4));

assign add_ln691_98_fu_8951_p2 = ($signed(sext_ln151_104_fu_8884_p1) + $signed(sext_ln151_106_fu_8900_p1));

assign add_ln691_99_fu_8961_p2 = ($signed(sext_ln691_91_fu_8957_p1) + $signed(sext_ln151_107_fu_8912_p1));

assign add_ln691_9_fu_14164_p2 = ($signed(sext_ln691_8_fu_14161_p1) + $signed(sext_ln691_6_fu_14158_p1));

assign add_ln691_fu_7945_p2 = ($signed(sext_ln151_20_fu_7922_p1) + $signed(sext_ln151_21_fu_7938_p1));

assign and_ln120_fu_1545_p2 = (xor_ln120_fu_1533_p2 & icmp_ln122_fu_1539_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln120_reg_16937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln120_reg_16937 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_empty_n == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln161_reg_17010_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln161_reg_17010_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln161_reg_17010_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((icmp_ln120_reg_16937 == 1'd0) & (cache_window_sm_empty_n == 1'b0));
end

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage1_iter2 = ((icmp_ln161_reg_17010_pp0_iter1_reg == 1'd1) & (mac_sm_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign icmp_ln120_fu_1513_p2 = ((ap_phi_mux_indvar_flatten20_phi_fu_1466_p4 == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_1519_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_1478_p4 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_1539_p2 = ((ap_phi_mux_cit_phi_fu_1501_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_1635_p2 = ((select_ln121_reg_16967 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_1640_p2 = ((select_ln121_reg_16967 == 6'd31) ? 1'b1 : 1'b0);

assign mac_sm_din = tmp_313_fu_16818_p48;

assign mlp_inst_m2_weight_arr_V_address0 = zext_ln215_2_fu_1630_p1;

assign mul_ln1345_100_fu_3786_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_101_fu_3806_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_102_fu_3826_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_103_fu_3846_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_104_fu_3866_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_105_fu_3886_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_106_fu_3906_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_107_fu_3926_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_108_fu_8862_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_108_fu_8862_p1 = sext_ln1345_108_fu_8859_p1;

assign mul_ln1345_109_fu_3956_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_10_fu_2024_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_10_fu_2024_p1 = sext_ln1345_10_fu_2020_p1;

assign mul_ln1345_110_fu_3976_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_111_fu_3996_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_112_fu_4016_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_113_fu_4036_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_114_fu_8890_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_114_fu_8890_p1 = sext_ln1345_114_fu_8887_p1;

assign mul_ln1345_115_fu_4066_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_116_fu_8906_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_116_fu_8906_p1 = sext_ln1345_116_fu_8903_p1;

assign mul_ln1345_117_fu_8919_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_117_fu_8919_p1 = sext_ln1345_117_fu_8916_p1;

assign mul_ln1345_118_fu_8932_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_118_fu_8932_p1 = sext_ln1345_118_fu_8929_p1;

assign mul_ln1345_119_fu_4116_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_11_fu_2058_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_11_fu_2058_p1 = sext_ln1345_11_fu_2054_p1;

assign mul_ln1345_120_fu_4136_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_121_fu_4156_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_122_fu_4176_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_123_fu_4196_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_124_fu_4216_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_125_fu_4236_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_126_fu_4256_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_127_fu_4276_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_128_fu_4296_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_129_fu_4316_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_12_fu_7850_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_12_fu_7850_p1 = sext_ln1345_12_fu_7847_p1;

assign mul_ln1345_130_fu_4336_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_131_fu_4356_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_132_fu_9112_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_132_fu_9112_p1 = sext_ln1345_132_fu_9109_p1;

assign mul_ln1345_133_fu_4386_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_134_fu_4406_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_135_fu_4426_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_136_fu_4446_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_137_fu_4466_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_138_fu_9140_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_138_fu_9140_p1 = sext_ln1345_138_fu_9137_p1;

assign mul_ln1345_139_fu_4496_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_13_fu_2112_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_13_fu_2112_p1 = sext_ln1345_13_fu_2108_p1;

assign mul_ln1345_140_fu_9156_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_140_fu_9156_p1 = sext_ln1345_140_fu_9153_p1;

assign mul_ln1345_141_fu_9169_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_141_fu_9169_p1 = sext_ln1345_141_fu_9166_p1;

assign mul_ln1345_142_fu_9182_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_142_fu_9182_p1 = sext_ln1345_142_fu_9179_p1;

assign mul_ln1345_143_fu_4546_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_144_fu_4566_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_145_fu_4586_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_146_fu_4606_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_147_fu_4626_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_148_fu_4646_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_149_fu_4666_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_14_fu_2146_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_14_fu_2146_p1 = sext_ln1345_14_fu_2142_p1;

assign mul_ln1345_150_fu_4686_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_151_fu_4706_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_152_fu_4726_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_153_fu_4746_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_154_fu_4766_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_155_fu_4786_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_156_fu_9362_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_156_fu_9362_p1 = sext_ln1345_156_fu_9359_p1;

assign mul_ln1345_157_fu_4816_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_158_fu_4836_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_159_fu_4856_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_15_fu_2180_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_15_fu_2180_p1 = sext_ln1345_15_fu_2176_p1;

assign mul_ln1345_160_fu_4876_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_161_fu_4896_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_162_fu_9390_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_162_fu_9390_p1 = sext_ln1345_162_fu_9387_p1;

assign mul_ln1345_163_fu_4926_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_164_fu_9406_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_164_fu_9406_p1 = sext_ln1345_164_fu_9403_p1;

assign mul_ln1345_165_fu_9419_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_165_fu_9419_p1 = sext_ln1345_165_fu_9416_p1;

assign mul_ln1345_166_fu_9432_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_166_fu_9432_p1 = sext_ln1345_166_fu_9429_p1;

assign mul_ln1345_167_fu_4976_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_168_fu_4996_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_169_fu_5016_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_16_fu_2214_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_16_fu_2214_p1 = sext_ln1345_16_fu_2210_p1;

assign mul_ln1345_170_fu_5036_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_171_fu_5056_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_172_fu_5076_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_173_fu_5096_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_174_fu_5116_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_175_fu_5136_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_176_fu_5156_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_177_fu_5176_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_178_fu_5196_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_179_fu_5216_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_17_fu_2248_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_17_fu_2248_p1 = sext_ln1345_17_fu_2244_p1;

assign mul_ln1345_180_fu_9612_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_180_fu_9612_p1 = sext_ln1345_180_fu_9609_p1;

assign mul_ln1345_181_fu_5246_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_182_fu_5266_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_183_fu_5286_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_184_fu_5306_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_185_fu_5326_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_186_fu_9640_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_186_fu_9640_p1 = sext_ln1345_186_fu_9637_p1;

assign mul_ln1345_187_fu_5356_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_188_fu_9656_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_188_fu_9656_p1 = sext_ln1345_188_fu_9653_p1;

assign mul_ln1345_189_fu_9669_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_189_fu_9669_p1 = sext_ln1345_189_fu_9666_p1;

assign mul_ln1345_18_fu_7881_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_18_fu_7881_p1 = sext_ln1345_18_fu_7878_p1;

assign mul_ln1345_190_fu_9682_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_190_fu_9682_p1 = sext_ln1345_190_fu_9679_p1;

assign mul_ln1345_191_fu_5406_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_192_fu_5426_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_193_fu_5446_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_194_fu_5466_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_195_fu_5486_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_196_fu_5506_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_197_fu_5526_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_198_fu_5546_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_199_fu_5566_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_19_fu_2302_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_19_fu_2302_p1 = sext_ln1345_19_fu_2298_p1;

assign mul_ln1345_1_fu_1718_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_1_fu_1718_p1 = sext_ln1345_1_fu_1714_p1;

assign mul_ln1345_200_fu_5586_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_201_fu_5606_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_202_fu_5626_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_203_fu_5646_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_204_fu_9862_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_204_fu_9862_p1 = sext_ln1345_204_fu_9859_p1;

assign mul_ln1345_205_fu_5676_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_206_fu_5696_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_207_fu_5716_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_208_fu_5736_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_209_fu_5756_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_20_fu_7900_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_20_fu_7900_p1 = sext_ln1345_20_fu_7897_p1;

assign mul_ln1345_210_fu_9890_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_210_fu_9890_p1 = sext_ln1345_210_fu_9887_p1;

assign mul_ln1345_211_fu_5786_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_212_fu_9906_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_212_fu_9906_p1 = sext_ln1345_212_fu_9903_p1;

assign mul_ln1345_213_fu_9919_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_213_fu_9919_p1 = sext_ln1345_213_fu_9916_p1;

assign mul_ln1345_214_fu_9932_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_214_fu_9932_p1 = sext_ln1345_214_fu_9929_p1;

assign mul_ln1345_215_fu_5836_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_216_fu_5856_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_217_fu_5876_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_218_fu_5896_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_219_fu_5916_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_21_fu_7916_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_21_fu_7916_p1 = sext_ln1345_21_fu_7913_p1;

assign mul_ln1345_220_fu_5936_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_221_fu_5956_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_222_fu_5976_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_223_fu_5996_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_224_fu_6016_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_225_fu_6036_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_226_fu_6056_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_227_fu_6076_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_228_fu_10112_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_228_fu_10112_p1 = sext_ln1345_228_fu_10109_p1;

assign mul_ln1345_229_fu_6106_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_22_fu_7932_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_22_fu_7932_p1 = sext_ln1345_22_fu_7929_p1;

assign mul_ln1345_230_fu_6126_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_231_fu_6146_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_232_fu_6166_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_233_fu_6186_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_234_fu_10140_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_234_fu_10140_p1 = sext_ln1345_234_fu_10137_p1;

assign mul_ln1345_235_fu_6216_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_236_fu_10156_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_236_fu_10156_p1 = sext_ln1345_236_fu_10153_p1;

assign mul_ln1345_237_fu_10169_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_237_fu_10169_p1 = sext_ln1345_237_fu_10166_p1;

assign mul_ln1345_238_fu_10182_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_238_fu_10182_p1 = sext_ln1345_238_fu_10179_p1;

assign mul_ln1345_239_fu_6266_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_23_fu_2396_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_23_fu_2396_p1 = sext_ln1345_23_fu_2392_p1;

assign mul_ln1345_240_fu_6286_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_241_fu_6306_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_242_fu_6326_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_243_fu_6346_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_244_fu_6366_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_245_fu_6386_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_246_fu_6406_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_247_fu_6426_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_248_fu_6446_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_249_fu_6466_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_24_fu_2416_p0 = sext_ln1345_24_fu_2412_p1;

assign mul_ln1345_24_fu_2416_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_250_fu_6486_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_251_fu_6506_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_252_fu_10362_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_252_fu_10362_p1 = sext_ln1345_252_fu_10359_p1;

assign mul_ln1345_253_fu_6536_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_254_fu_6556_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_255_fu_6576_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_256_fu_6596_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_257_fu_6616_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_258_fu_10390_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_258_fu_10390_p1 = sext_ln1345_258_fu_10387_p1;

assign mul_ln1345_259_fu_6646_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_25_fu_2436_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_25_fu_2436_p1 = sext_ln1345_25_fu_2432_p1;

assign mul_ln1345_260_fu_10406_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_260_fu_10406_p1 = sext_ln1345_260_fu_10403_p1;

assign mul_ln1345_261_fu_10419_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_261_fu_10419_p1 = sext_ln1345_261_fu_10416_p1;

assign mul_ln1345_262_fu_10432_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_262_fu_10432_p1 = sext_ln1345_262_fu_10429_p1;

assign mul_ln1345_263_fu_6696_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_264_fu_6716_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_265_fu_6736_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_266_fu_6756_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_267_fu_6776_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_268_fu_6796_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_269_fu_6816_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_26_fu_2456_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_26_fu_2456_p1 = sext_ln1345_26_fu_2452_p1;

assign mul_ln1345_270_fu_6836_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_271_fu_6856_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_272_fu_6876_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_273_fu_6896_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_274_fu_6916_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_275_fu_6936_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_276_fu_10612_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_276_fu_10612_p1 = sext_ln1345_276_fu_10609_p1;

assign mul_ln1345_277_fu_6966_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_278_fu_6986_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_279_fu_7006_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_27_fu_2476_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_27_fu_2476_p1 = sext_ln1345_27_fu_2472_p1;

assign mul_ln1345_280_fu_7026_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_281_fu_7046_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_282_fu_10640_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_282_fu_10640_p1 = sext_ln1345_282_fu_10637_p1;

assign mul_ln1345_283_fu_7076_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_284_fu_10656_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_284_fu_10656_p1 = sext_ln1345_284_fu_10653_p1;

assign mul_ln1345_285_fu_10669_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_285_fu_10669_p1 = sext_ln1345_285_fu_10666_p1;

assign mul_ln1345_286_fu_10682_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_286_fu_10682_p1 = sext_ln1345_286_fu_10679_p1;

assign mul_ln1345_287_fu_7126_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_288_fu_7146_p0 = zext_ln1345_24_fu_7142_p1;

assign mul_ln1345_288_fu_7146_p1 = sext_ln1345_fu_1680_p1;

assign mul_ln1345_289_fu_7166_p0 = zext_ln1345_25_fu_7162_p1;

assign mul_ln1345_289_fu_7166_p1 = sext_ln1345_1_fu_1714_p1;

assign mul_ln1345_28_fu_2496_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_28_fu_2496_p1 = sext_ln1345_28_fu_2492_p1;

assign mul_ln1345_290_fu_7186_p0 = zext_ln1345_26_fu_7182_p1;

assign mul_ln1345_290_fu_7186_p1 = sext_ln1345_2_fu_1748_p1;

assign mul_ln1345_291_fu_7206_p0 = zext_ln1345_27_fu_7202_p1;

assign mul_ln1345_291_fu_7206_p1 = sext_ln1345_3_fu_1782_p1;

assign mul_ln1345_292_fu_7226_p0 = zext_ln1345_28_fu_7222_p1;

assign mul_ln1345_292_fu_7226_p1 = sext_ln1345_4_fu_1816_p1;

assign mul_ln1345_293_fu_7246_p0 = zext_ln1345_29_fu_7242_p1;

assign mul_ln1345_293_fu_7246_p1 = sext_ln1345_5_fu_1850_p1;

assign mul_ln1345_294_fu_7266_p0 = zext_ln1345_30_fu_7262_p1;

assign mul_ln1345_294_fu_7266_p1 = sext_ln1345_6_fu_1884_p1;

assign mul_ln1345_295_fu_7286_p0 = zext_ln1345_31_fu_7282_p1;

assign mul_ln1345_295_fu_7286_p1 = sext_ln1345_7_fu_1918_p1;

assign mul_ln1345_296_fu_7306_p0 = zext_ln1345_32_fu_7302_p1;

assign mul_ln1345_296_fu_7306_p1 = sext_ln1345_8_fu_1952_p1;

assign mul_ln1345_297_fu_7326_p0 = zext_ln1345_33_fu_7322_p1;

assign mul_ln1345_297_fu_7326_p1 = sext_ln1345_9_fu_1986_p1;

assign mul_ln1345_298_fu_7346_p0 = zext_ln1345_34_fu_7342_p1;

assign mul_ln1345_298_fu_7346_p1 = sext_ln1345_10_fu_2020_p1;

assign mul_ln1345_299_fu_7366_p0 = zext_ln1345_35_fu_7362_p1;

assign mul_ln1345_299_fu_7366_p1 = sext_ln1345_11_fu_2054_p1;

assign mul_ln1345_29_fu_2516_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_29_fu_2516_p1 = sext_ln1345_29_fu_2512_p1;

assign mul_ln1345_2_fu_1752_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_2_fu_1752_p1 = sext_ln1345_2_fu_1748_p1;

assign mul_ln1345_300_fu_10862_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_300_fu_10862_p1 = sext_ln1345_12_fu_7847_p1;

assign mul_ln1345_301_fu_7396_p0 = zext_ln1345_37_fu_7392_p1;

assign mul_ln1345_301_fu_7396_p1 = sext_ln1345_13_fu_2108_p1;

assign mul_ln1345_302_fu_7416_p0 = zext_ln1345_38_fu_7412_p1;

assign mul_ln1345_302_fu_7416_p1 = sext_ln1345_14_fu_2142_p1;

assign mul_ln1345_303_fu_7436_p0 = zext_ln1345_39_fu_7432_p1;

assign mul_ln1345_303_fu_7436_p1 = sext_ln1345_15_fu_2176_p1;

assign mul_ln1345_304_fu_7456_p0 = zext_ln1345_40_fu_7452_p1;

assign mul_ln1345_304_fu_7456_p1 = sext_ln1345_16_fu_2210_p1;

assign mul_ln1345_305_fu_7476_p0 = zext_ln1345_41_fu_7472_p1;

assign mul_ln1345_305_fu_7476_p1 = sext_ln1345_17_fu_2244_p1;

assign mul_ln1345_306_fu_10890_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_306_fu_10890_p1 = sext_ln1345_18_fu_7878_p1;

assign mul_ln1345_307_fu_7506_p0 = zext_ln1345_43_fu_7502_p1;

assign mul_ln1345_307_fu_7506_p1 = sext_ln1345_19_fu_2298_p1;

assign mul_ln1345_308_fu_10906_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_308_fu_10906_p1 = sext_ln1345_20_fu_7897_p1;

assign mul_ln1345_309_fu_10919_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_309_fu_10919_p1 = sext_ln1345_21_fu_7913_p1;

assign mul_ln1345_30_fu_2536_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_30_fu_2536_p1 = sext_ln1345_30_fu_2532_p1;

assign mul_ln1345_310_fu_10932_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_310_fu_10932_p1 = sext_ln1345_22_fu_7929_p1;

assign mul_ln1345_311_fu_7556_p0 = zext_ln1345_47_fu_7552_p1;

assign mul_ln1345_311_fu_7556_p1 = sext_ln1345_23_fu_2392_p1;

assign mul_ln1345_312_fu_7562_p0 = zext_ln1345_24_fu_7142_p1;

assign mul_ln1345_312_fu_7562_p1 = sext_ln1345_24_fu_2412_p1;

assign mul_ln1345_313_fu_7568_p0 = zext_ln1345_25_fu_7162_p1;

assign mul_ln1345_313_fu_7568_p1 = sext_ln1345_25_fu_2432_p1;

assign mul_ln1345_314_fu_7574_p0 = zext_ln1345_26_fu_7182_p1;

assign mul_ln1345_314_fu_7574_p1 = sext_ln1345_26_fu_2452_p1;

assign mul_ln1345_315_fu_7580_p0 = zext_ln1345_27_fu_7202_p1;

assign mul_ln1345_315_fu_7580_p1 = sext_ln1345_27_fu_2472_p1;

assign mul_ln1345_316_fu_7586_p0 = zext_ln1345_28_fu_7222_p1;

assign mul_ln1345_316_fu_7586_p1 = sext_ln1345_28_fu_2492_p1;

assign mul_ln1345_317_fu_7592_p0 = zext_ln1345_29_fu_7242_p1;

assign mul_ln1345_317_fu_7592_p1 = sext_ln1345_29_fu_2512_p1;

assign mul_ln1345_318_fu_7598_p0 = zext_ln1345_30_fu_7262_p1;

assign mul_ln1345_318_fu_7598_p1 = sext_ln1345_30_fu_2532_p1;

assign mul_ln1345_319_fu_7604_p0 = zext_ln1345_31_fu_7282_p1;

assign mul_ln1345_319_fu_7604_p1 = sext_ln1345_31_fu_2552_p1;

assign mul_ln1345_31_fu_2556_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_31_fu_2556_p1 = sext_ln1345_31_fu_2552_p1;

assign mul_ln1345_320_fu_7610_p0 = zext_ln1345_32_fu_7302_p1;

assign mul_ln1345_320_fu_7610_p1 = sext_ln1345_32_fu_2572_p1;

assign mul_ln1345_321_fu_7616_p0 = zext_ln1345_33_fu_7322_p1;

assign mul_ln1345_321_fu_7616_p1 = sext_ln1345_33_fu_2592_p1;

assign mul_ln1345_322_fu_7622_p0 = zext_ln1345_34_fu_7342_p1;

assign mul_ln1345_322_fu_7622_p1 = sext_ln1345_34_fu_2612_p1;

assign mul_ln1345_323_fu_7628_p0 = zext_ln1345_35_fu_7362_p1;

assign mul_ln1345_323_fu_7628_p1 = sext_ln1345_35_fu_2632_p1;

assign mul_ln1345_324_fu_11109_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_324_fu_11109_p1 = sext_ln1345_36_fu_8109_p1;

assign mul_ln1345_325_fu_7634_p0 = zext_ln1345_37_fu_7392_p1;

assign mul_ln1345_325_fu_7634_p1 = sext_ln1345_37_fu_2662_p1;

assign mul_ln1345_326_fu_7640_p0 = zext_ln1345_38_fu_7412_p1;

assign mul_ln1345_326_fu_7640_p1 = sext_ln1345_38_fu_2682_p1;

assign mul_ln1345_327_fu_7646_p0 = zext_ln1345_39_fu_7432_p1;

assign mul_ln1345_327_fu_7646_p1 = sext_ln1345_39_fu_2702_p1;

assign mul_ln1345_328_fu_7652_p0 = zext_ln1345_40_fu_7452_p1;

assign mul_ln1345_328_fu_7652_p1 = sext_ln1345_40_fu_2722_p1;

assign mul_ln1345_329_fu_7658_p0 = zext_ln1345_41_fu_7472_p1;

assign mul_ln1345_329_fu_7658_p1 = sext_ln1345_41_fu_2742_p1;

assign mul_ln1345_32_fu_2576_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_32_fu_2576_p1 = sext_ln1345_32_fu_2572_p1;

assign mul_ln1345_330_fu_11134_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_330_fu_11134_p1 = sext_ln1345_42_fu_8137_p1;

assign mul_ln1345_331_fu_7664_p0 = zext_ln1345_43_fu_7502_p1;

assign mul_ln1345_331_fu_7664_p1 = sext_ln1345_43_fu_2772_p1;

assign mul_ln1345_332_fu_11147_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_332_fu_11147_p1 = sext_ln1345_44_fu_8153_p1;

assign mul_ln1345_333_fu_11157_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_333_fu_11157_p1 = sext_ln1345_45_fu_8166_p1;

assign mul_ln1345_334_fu_11167_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_334_fu_11167_p1 = sext_ln1345_46_fu_8179_p1;

assign mul_ln1345_335_fu_7670_p0 = zext_ln1345_47_fu_7552_p1;

assign mul_ln1345_335_fu_7670_p1 = sext_ln1345_47_fu_2822_p1;

assign mul_ln1345_336_fu_7676_p0 = zext_ln1345_24_fu_7142_p1;

assign mul_ln1345_336_fu_7676_p1 = sext_ln1345_48_fu_2842_p1;

assign mul_ln1345_337_fu_7682_p0 = zext_ln1345_25_fu_7162_p1;

assign mul_ln1345_337_fu_7682_p1 = sext_ln1345_49_fu_2862_p1;

assign mul_ln1345_338_fu_7688_p0 = zext_ln1345_26_fu_7182_p1;

assign mul_ln1345_338_fu_7688_p1 = sext_ln1345_50_fu_2882_p1;

assign mul_ln1345_339_fu_7694_p0 = zext_ln1345_27_fu_7202_p1;

assign mul_ln1345_339_fu_7694_p1 = sext_ln1345_51_fu_2902_p1;

assign mul_ln1345_33_fu_2596_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_33_fu_2596_p1 = sext_ln1345_33_fu_2592_p1;

assign mul_ln1345_340_fu_7700_p0 = zext_ln1345_28_fu_7222_p1;

assign mul_ln1345_340_fu_7700_p1 = sext_ln1345_52_fu_2922_p1;

assign mul_ln1345_341_fu_7706_p0 = zext_ln1345_29_fu_7242_p1;

assign mul_ln1345_341_fu_7706_p1 = sext_ln1345_53_fu_2942_p1;

assign mul_ln1345_342_fu_7712_p0 = zext_ln1345_30_fu_7262_p1;

assign mul_ln1345_342_fu_7712_p1 = sext_ln1345_54_fu_2962_p1;

assign mul_ln1345_343_fu_7718_p0 = zext_ln1345_31_fu_7282_p1;

assign mul_ln1345_343_fu_7718_p1 = sext_ln1345_55_fu_2982_p1;

assign mul_ln1345_344_fu_7724_p0 = zext_ln1345_32_fu_7302_p1;

assign mul_ln1345_344_fu_7724_p1 = sext_ln1345_56_fu_3002_p1;

assign mul_ln1345_345_fu_7730_p0 = zext_ln1345_33_fu_7322_p1;

assign mul_ln1345_345_fu_7730_p1 = sext_ln1345_57_fu_3022_p1;

assign mul_ln1345_346_fu_7736_p0 = zext_ln1345_34_fu_7342_p1;

assign mul_ln1345_346_fu_7736_p1 = sext_ln1345_58_fu_3042_p1;

assign mul_ln1345_347_fu_7742_p0 = zext_ln1345_35_fu_7362_p1;

assign mul_ln1345_347_fu_7742_p1 = sext_ln1345_59_fu_3062_p1;

assign mul_ln1345_348_fu_11344_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_348_fu_11344_p1 = sext_ln1345_60_fu_8359_p1;

assign mul_ln1345_349_fu_7748_p0 = zext_ln1345_37_fu_7392_p1;

assign mul_ln1345_349_fu_7748_p1 = sext_ln1345_61_fu_3092_p1;

assign mul_ln1345_34_fu_2616_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_34_fu_2616_p1 = sext_ln1345_34_fu_2612_p1;

assign mul_ln1345_350_fu_7754_p0 = zext_ln1345_38_fu_7412_p1;

assign mul_ln1345_350_fu_7754_p1 = sext_ln1345_62_fu_3112_p1;

assign mul_ln1345_351_fu_7760_p0 = zext_ln1345_39_fu_7432_p1;

assign mul_ln1345_351_fu_7760_p1 = sext_ln1345_63_fu_3132_p1;

assign mul_ln1345_352_fu_7766_p0 = zext_ln1345_40_fu_7452_p1;

assign mul_ln1345_352_fu_7766_p1 = sext_ln1345_64_fu_3152_p1;

assign mul_ln1345_353_fu_7772_p0 = zext_ln1345_41_fu_7472_p1;

assign mul_ln1345_353_fu_7772_p1 = sext_ln1345_65_fu_3172_p1;

assign mul_ln1345_354_fu_11369_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_354_fu_11369_p1 = sext_ln1345_66_fu_8387_p1;

assign mul_ln1345_355_fu_7778_p0 = zext_ln1345_43_fu_7502_p1;

assign mul_ln1345_355_fu_7778_p1 = sext_ln1345_67_fu_3202_p1;

assign mul_ln1345_356_fu_11382_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_356_fu_11382_p1 = sext_ln1345_68_fu_8403_p1;

assign mul_ln1345_357_fu_11392_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_357_fu_11392_p1 = sext_ln1345_69_fu_8416_p1;

assign mul_ln1345_358_fu_11402_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_358_fu_11402_p1 = sext_ln1345_70_fu_8429_p1;

assign mul_ln1345_359_fu_7784_p0 = zext_ln1345_47_fu_7552_p1;

assign mul_ln1345_359_fu_7784_p1 = sext_ln1345_71_fu_3252_p1;

assign mul_ln1345_35_fu_2636_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_35_fu_2636_p1 = sext_ln1345_35_fu_2632_p1;

assign mul_ln1345_360_fu_7790_p0 = zext_ln1345_24_fu_7142_p1;

assign mul_ln1345_360_fu_7790_p1 = sext_ln1345_72_fu_3272_p1;

assign mul_ln1345_361_fu_7796_p0 = zext_ln1345_25_fu_7162_p1;

assign mul_ln1345_361_fu_7796_p1 = sext_ln1345_73_fu_3292_p1;

assign mul_ln1345_362_fu_7802_p0 = zext_ln1345_26_fu_7182_p1;

assign mul_ln1345_362_fu_7802_p1 = sext_ln1345_74_fu_3312_p1;

assign mul_ln1345_363_fu_11552_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_363_fu_11552_p1 = sext_ln1345_75_reg_17430;

assign mul_ln1345_364_fu_11560_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_364_fu_11560_p1 = sext_ln1345_76_reg_17440;

assign mul_ln1345_365_fu_11568_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_365_fu_11568_p1 = sext_ln1345_77_reg_17450;

assign mul_ln1345_366_fu_11576_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_366_fu_11576_p1 = sext_ln1345_78_reg_17460;

assign mul_ln1345_367_fu_11584_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_367_fu_11584_p1 = sext_ln1345_79_reg_17470;

assign mul_ln1345_368_fu_11592_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_368_fu_11592_p1 = sext_ln1345_80_reg_17480;

assign mul_ln1345_369_fu_11600_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_369_fu_11600_p1 = sext_ln1345_81_reg_17490;

assign mul_ln1345_36_fu_8112_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_36_fu_8112_p1 = sext_ln1345_36_fu_8109_p1;

assign mul_ln1345_370_fu_11608_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_370_fu_11608_p1 = sext_ln1345_82_reg_17500;

assign mul_ln1345_371_fu_11616_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_371_fu_11616_p1 = sext_ln1345_83_reg_17510;

assign mul_ln1345_372_fu_11624_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_372_fu_11624_p1 = sext_ln1345_84_fu_8609_p1;

assign mul_ln1345_373_fu_11630_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_373_fu_11630_p1 = sext_ln1345_85_reg_17525;

assign mul_ln1345_374_fu_11638_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_374_fu_11638_p1 = sext_ln1345_86_reg_17535;

assign mul_ln1345_375_fu_11646_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_375_fu_11646_p1 = sext_ln1345_87_reg_17545;

assign mul_ln1345_376_fu_11654_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_376_fu_11654_p1 = sext_ln1345_88_reg_17555;

assign mul_ln1345_377_fu_11662_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_377_fu_11662_p1 = sext_ln1345_89_reg_17565;

assign mul_ln1345_378_fu_11670_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_378_fu_11670_p1 = sext_ln1345_90_fu_8637_p1;

assign mul_ln1345_379_fu_11676_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_379_fu_11676_p1 = sext_ln1345_91_reg_17580;

assign mul_ln1345_37_fu_2666_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_37_fu_2666_p1 = sext_ln1345_37_fu_2662_p1;

assign mul_ln1345_380_fu_11684_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_380_fu_11684_p1 = sext_ln1345_92_fu_8653_p1;

assign mul_ln1345_381_fu_11690_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_381_fu_11690_p1 = sext_ln1345_93_fu_8666_p1;

assign mul_ln1345_382_fu_11700_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_382_fu_11700_p1 = sext_ln1345_94_fu_8679_p1;

assign mul_ln1345_383_fu_11710_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_383_fu_11710_p1 = sext_ln1345_95_reg_17605;

assign mul_ln1345_384_fu_11816_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_384_fu_11816_p1 = sext_ln1345_96_reg_17615;

assign mul_ln1345_385_fu_11824_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_385_fu_11824_p1 = sext_ln1345_97_reg_17625;

assign mul_ln1345_386_fu_11832_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_386_fu_11832_p1 = sext_ln1345_98_reg_17635;

assign mul_ln1345_387_fu_11840_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_387_fu_11840_p1 = sext_ln1345_99_reg_17645;

assign mul_ln1345_388_fu_11848_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_388_fu_11848_p1 = sext_ln1345_100_reg_17655;

assign mul_ln1345_389_fu_11856_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_389_fu_11856_p1 = sext_ln1345_101_reg_17665;

assign mul_ln1345_38_fu_2686_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_38_fu_2686_p1 = sext_ln1345_38_fu_2682_p1;

assign mul_ln1345_390_fu_11864_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_390_fu_11864_p1 = sext_ln1345_102_reg_17675;

assign mul_ln1345_391_fu_11872_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_391_fu_11872_p1 = sext_ln1345_103_reg_17685;

assign mul_ln1345_392_fu_11880_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_392_fu_11880_p1 = sext_ln1345_104_reg_17695;

assign mul_ln1345_393_fu_11888_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_393_fu_11888_p1 = sext_ln1345_105_reg_17705;

assign mul_ln1345_394_fu_11896_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_394_fu_11896_p1 = sext_ln1345_106_reg_17715;

assign mul_ln1345_395_fu_11904_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_395_fu_11904_p1 = sext_ln1345_107_reg_17725;

assign mul_ln1345_396_fu_11912_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_396_fu_11912_p1 = sext_ln1345_108_fu_8859_p1;

assign mul_ln1345_397_fu_11918_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_397_fu_11918_p1 = sext_ln1345_109_reg_17740;

assign mul_ln1345_398_fu_11926_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_398_fu_11926_p1 = sext_ln1345_110_reg_17750;

assign mul_ln1345_399_fu_11934_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_399_fu_11934_p1 = sext_ln1345_111_reg_17760;

assign mul_ln1345_39_fu_2706_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_39_fu_2706_p1 = sext_ln1345_39_fu_2702_p1;

assign mul_ln1345_3_fu_1786_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_3_fu_1786_p1 = sext_ln1345_3_fu_1782_p1;

assign mul_ln1345_400_fu_11942_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_400_fu_11942_p1 = sext_ln1345_112_reg_17770;

assign mul_ln1345_401_fu_11950_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_401_fu_11950_p1 = sext_ln1345_113_reg_17780;

assign mul_ln1345_402_fu_11958_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_402_fu_11958_p1 = sext_ln1345_114_fu_8887_p1;

assign mul_ln1345_403_fu_11964_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_403_fu_11964_p1 = sext_ln1345_115_reg_17795;

assign mul_ln1345_404_fu_11972_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_404_fu_11972_p1 = sext_ln1345_116_fu_8903_p1;

assign mul_ln1345_405_fu_11978_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_405_fu_11978_p1 = sext_ln1345_117_fu_8916_p1;

assign mul_ln1345_406_fu_11988_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_406_fu_11988_p1 = sext_ln1345_118_fu_8929_p1;

assign mul_ln1345_407_fu_11998_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_407_fu_11998_p1 = sext_ln1345_119_reg_17820;

assign mul_ln1345_408_fu_12104_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_408_fu_12104_p1 = sext_ln1345_120_reg_17830;

assign mul_ln1345_409_fu_12112_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_409_fu_12112_p1 = sext_ln1345_121_reg_17840;

assign mul_ln1345_40_fu_2726_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_40_fu_2726_p1 = sext_ln1345_40_fu_2722_p1;

assign mul_ln1345_410_fu_12120_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_410_fu_12120_p1 = sext_ln1345_122_reg_17850;

assign mul_ln1345_411_fu_12128_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_411_fu_12128_p1 = sext_ln1345_123_reg_17860;

assign mul_ln1345_412_fu_12136_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_412_fu_12136_p1 = sext_ln1345_124_reg_17870;

assign mul_ln1345_413_fu_12144_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_413_fu_12144_p1 = sext_ln1345_125_reg_17880;

assign mul_ln1345_414_fu_12152_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_414_fu_12152_p1 = sext_ln1345_126_reg_17890;

assign mul_ln1345_415_fu_12160_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_415_fu_12160_p1 = sext_ln1345_127_reg_17900;

assign mul_ln1345_416_fu_12168_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_416_fu_12168_p1 = sext_ln1345_128_reg_17910;

assign mul_ln1345_417_fu_12176_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_417_fu_12176_p1 = sext_ln1345_129_reg_17920;

assign mul_ln1345_418_fu_12184_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_418_fu_12184_p1 = sext_ln1345_130_reg_17930;

assign mul_ln1345_419_fu_12192_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_419_fu_12192_p1 = sext_ln1345_131_reg_17940;

assign mul_ln1345_41_fu_2746_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_41_fu_2746_p1 = sext_ln1345_41_fu_2742_p1;

assign mul_ln1345_420_fu_12200_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_420_fu_12200_p1 = sext_ln1345_132_fu_9109_p1;

assign mul_ln1345_421_fu_12206_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_421_fu_12206_p1 = sext_ln1345_133_reg_17955;

assign mul_ln1345_422_fu_12214_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_422_fu_12214_p1 = sext_ln1345_134_reg_17965;

assign mul_ln1345_423_fu_12222_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_423_fu_12222_p1 = sext_ln1345_135_reg_17975;

assign mul_ln1345_424_fu_12230_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_424_fu_12230_p1 = sext_ln1345_136_reg_17985;

assign mul_ln1345_425_fu_12238_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_425_fu_12238_p1 = sext_ln1345_137_reg_17995;

assign mul_ln1345_426_fu_12246_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_426_fu_12246_p1 = sext_ln1345_138_fu_9137_p1;

assign mul_ln1345_427_fu_12252_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_427_fu_12252_p1 = sext_ln1345_139_reg_18010;

assign mul_ln1345_428_fu_12260_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_428_fu_12260_p1 = sext_ln1345_140_fu_9153_p1;

assign mul_ln1345_429_fu_12266_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_429_fu_12266_p1 = sext_ln1345_141_fu_9166_p1;

assign mul_ln1345_42_fu_8140_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_42_fu_8140_p1 = sext_ln1345_42_fu_8137_p1;

assign mul_ln1345_430_fu_12276_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_430_fu_12276_p1 = sext_ln1345_142_fu_9179_p1;

assign mul_ln1345_431_fu_12286_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_431_fu_12286_p1 = sext_ln1345_143_reg_18035;

assign mul_ln1345_432_fu_12392_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_432_fu_12392_p1 = sext_ln1345_144_reg_18045;

assign mul_ln1345_433_fu_12400_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_433_fu_12400_p1 = sext_ln1345_145_reg_18055;

assign mul_ln1345_434_fu_12408_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_434_fu_12408_p1 = sext_ln1345_146_reg_18065;

assign mul_ln1345_435_fu_12416_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_435_fu_12416_p1 = sext_ln1345_147_reg_18075;

assign mul_ln1345_436_fu_12424_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_436_fu_12424_p1 = sext_ln1345_148_reg_18085;

assign mul_ln1345_437_fu_12432_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_437_fu_12432_p1 = sext_ln1345_149_reg_18095;

assign mul_ln1345_438_fu_12440_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_438_fu_12440_p1 = sext_ln1345_150_reg_18105;

assign mul_ln1345_439_fu_12448_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_439_fu_12448_p1 = sext_ln1345_151_reg_18115;

assign mul_ln1345_43_fu_2776_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_43_fu_2776_p1 = sext_ln1345_43_fu_2772_p1;

assign mul_ln1345_440_fu_12456_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_440_fu_12456_p1 = sext_ln1345_152_reg_18125;

assign mul_ln1345_441_fu_12464_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_441_fu_12464_p1 = sext_ln1345_153_reg_18135;

assign mul_ln1345_442_fu_12472_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_442_fu_12472_p1 = sext_ln1345_154_reg_18145;

assign mul_ln1345_443_fu_12480_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_443_fu_12480_p1 = sext_ln1345_155_reg_18155;

assign mul_ln1345_444_fu_12488_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_444_fu_12488_p1 = sext_ln1345_156_fu_9359_p1;

assign mul_ln1345_445_fu_12494_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_445_fu_12494_p1 = sext_ln1345_157_reg_18170;

assign mul_ln1345_446_fu_12502_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_446_fu_12502_p1 = sext_ln1345_158_reg_18180;

assign mul_ln1345_447_fu_12510_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_447_fu_12510_p1 = sext_ln1345_159_reg_18190;

assign mul_ln1345_448_fu_12518_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_448_fu_12518_p1 = sext_ln1345_160_reg_18200;

assign mul_ln1345_449_fu_12526_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_449_fu_12526_p1 = sext_ln1345_161_reg_18210;

assign mul_ln1345_44_fu_8156_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_44_fu_8156_p1 = sext_ln1345_44_fu_8153_p1;

assign mul_ln1345_450_fu_12534_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_450_fu_12534_p1 = sext_ln1345_162_fu_9387_p1;

assign mul_ln1345_451_fu_12540_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_451_fu_12540_p1 = sext_ln1345_163_reg_18225;

assign mul_ln1345_452_fu_12548_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_452_fu_12548_p1 = sext_ln1345_164_fu_9403_p1;

assign mul_ln1345_453_fu_12554_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_453_fu_12554_p1 = sext_ln1345_165_fu_9416_p1;

assign mul_ln1345_454_fu_12564_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_454_fu_12564_p1 = sext_ln1345_166_fu_9429_p1;

assign mul_ln1345_455_fu_12574_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_455_fu_12574_p1 = sext_ln1345_167_reg_18250;

assign mul_ln1345_456_fu_12680_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_456_fu_12680_p1 = sext_ln1345_168_reg_18260;

assign mul_ln1345_457_fu_12688_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_457_fu_12688_p1 = sext_ln1345_169_reg_18270;

assign mul_ln1345_458_fu_12696_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_458_fu_12696_p1 = sext_ln1345_170_reg_18280;

assign mul_ln1345_459_fu_12704_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_459_fu_12704_p1 = sext_ln1345_171_reg_18290;

assign mul_ln1345_45_fu_8169_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_45_fu_8169_p1 = sext_ln1345_45_fu_8166_p1;

assign mul_ln1345_460_fu_12712_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_460_fu_12712_p1 = sext_ln1345_172_reg_18300;

assign mul_ln1345_461_fu_12720_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_461_fu_12720_p1 = sext_ln1345_173_reg_18310;

assign mul_ln1345_462_fu_12728_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_462_fu_12728_p1 = sext_ln1345_174_reg_18320;

assign mul_ln1345_463_fu_12736_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_463_fu_12736_p1 = sext_ln1345_175_reg_18330;

assign mul_ln1345_464_fu_12744_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_464_fu_12744_p1 = sext_ln1345_176_reg_18340;

assign mul_ln1345_465_fu_12752_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_465_fu_12752_p1 = sext_ln1345_177_reg_18350;

assign mul_ln1345_466_fu_12760_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_466_fu_12760_p1 = sext_ln1345_178_reg_18360;

assign mul_ln1345_467_fu_12768_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_467_fu_12768_p1 = sext_ln1345_179_reg_18370;

assign mul_ln1345_468_fu_12776_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_468_fu_12776_p1 = sext_ln1345_180_fu_9609_p1;

assign mul_ln1345_469_fu_12782_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_469_fu_12782_p1 = sext_ln1345_181_reg_18385;

assign mul_ln1345_46_fu_8182_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_46_fu_8182_p1 = sext_ln1345_46_fu_8179_p1;

assign mul_ln1345_470_fu_12790_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_470_fu_12790_p1 = sext_ln1345_182_reg_18395;

assign mul_ln1345_471_fu_12798_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_471_fu_12798_p1 = sext_ln1345_183_reg_18405;

assign mul_ln1345_472_fu_12806_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_472_fu_12806_p1 = sext_ln1345_184_reg_18415;

assign mul_ln1345_473_fu_12814_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_473_fu_12814_p1 = sext_ln1345_185_reg_18425;

assign mul_ln1345_474_fu_12822_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_474_fu_12822_p1 = sext_ln1345_186_fu_9637_p1;

assign mul_ln1345_475_fu_12828_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_475_fu_12828_p1 = sext_ln1345_187_reg_18440;

assign mul_ln1345_476_fu_12836_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_476_fu_12836_p1 = sext_ln1345_188_fu_9653_p1;

assign mul_ln1345_477_fu_12842_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_477_fu_12842_p1 = sext_ln1345_189_fu_9666_p1;

assign mul_ln1345_478_fu_12852_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_478_fu_12852_p1 = sext_ln1345_190_fu_9679_p1;

assign mul_ln1345_479_fu_12862_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_479_fu_12862_p1 = sext_ln1345_191_reg_18465;

assign mul_ln1345_47_fu_2826_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_47_fu_2826_p1 = sext_ln1345_47_fu_2822_p1;

assign mul_ln1345_480_fu_12968_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_480_fu_12968_p1 = sext_ln1345_192_reg_18475;

assign mul_ln1345_481_fu_12976_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_481_fu_12976_p1 = sext_ln1345_193_reg_18485;

assign mul_ln1345_482_fu_12984_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_482_fu_12984_p1 = sext_ln1345_194_reg_18495;

assign mul_ln1345_483_fu_12992_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_483_fu_12992_p1 = sext_ln1345_195_reg_18505;

assign mul_ln1345_484_fu_13000_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_484_fu_13000_p1 = sext_ln1345_196_reg_18515;

assign mul_ln1345_485_fu_13008_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_485_fu_13008_p1 = sext_ln1345_197_reg_18525;

assign mul_ln1345_486_fu_13016_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_486_fu_13016_p1 = sext_ln1345_198_reg_18535;

assign mul_ln1345_487_fu_13024_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_487_fu_13024_p1 = sext_ln1345_199_reg_18545;

assign mul_ln1345_488_fu_13032_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_488_fu_13032_p1 = sext_ln1345_200_reg_18555;

assign mul_ln1345_489_fu_13040_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_489_fu_13040_p1 = sext_ln1345_201_reg_18565;

assign mul_ln1345_48_fu_2846_p0 = sext_ln1345_48_fu_2842_p1;

assign mul_ln1345_48_fu_2846_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_490_fu_13048_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_490_fu_13048_p1 = sext_ln1345_202_reg_18575;

assign mul_ln1345_491_fu_13056_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_491_fu_13056_p1 = sext_ln1345_203_reg_18585;

assign mul_ln1345_492_fu_13064_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_492_fu_13064_p1 = sext_ln1345_204_fu_9859_p1;

assign mul_ln1345_493_fu_13070_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_493_fu_13070_p1 = sext_ln1345_205_reg_18600;

assign mul_ln1345_494_fu_13078_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_494_fu_13078_p1 = sext_ln1345_206_reg_18610;

assign mul_ln1345_495_fu_13086_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_495_fu_13086_p1 = sext_ln1345_207_reg_18620;

assign mul_ln1345_496_fu_13094_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_496_fu_13094_p1 = sext_ln1345_208_reg_18630;

assign mul_ln1345_497_fu_13102_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_497_fu_13102_p1 = sext_ln1345_209_reg_18640;

assign mul_ln1345_498_fu_13110_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_498_fu_13110_p1 = sext_ln1345_210_fu_9887_p1;

assign mul_ln1345_499_fu_13116_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_499_fu_13116_p1 = sext_ln1345_211_reg_18655;

assign mul_ln1345_49_fu_2866_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_49_fu_2866_p1 = sext_ln1345_49_fu_2862_p1;

assign mul_ln1345_4_fu_1820_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_4_fu_1820_p1 = sext_ln1345_4_fu_1816_p1;

assign mul_ln1345_500_fu_13124_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_500_fu_13124_p1 = sext_ln1345_212_fu_9903_p1;

assign mul_ln1345_501_fu_13130_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_501_fu_13130_p1 = sext_ln1345_213_fu_9916_p1;

assign mul_ln1345_502_fu_13140_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_502_fu_13140_p1 = sext_ln1345_214_fu_9929_p1;

assign mul_ln1345_503_fu_13150_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_503_fu_13150_p1 = sext_ln1345_215_reg_18680;

assign mul_ln1345_504_fu_13256_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_504_fu_13256_p1 = sext_ln1345_216_reg_18690;

assign mul_ln1345_505_fu_13264_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_505_fu_13264_p1 = sext_ln1345_217_reg_18700;

assign mul_ln1345_506_fu_13272_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_506_fu_13272_p1 = sext_ln1345_218_reg_18710;

assign mul_ln1345_507_fu_13280_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_507_fu_13280_p1 = sext_ln1345_219_reg_18720;

assign mul_ln1345_508_fu_13288_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_508_fu_13288_p1 = sext_ln1345_220_reg_18730;

assign mul_ln1345_509_fu_13296_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_509_fu_13296_p1 = sext_ln1345_221_reg_18740;

assign mul_ln1345_50_fu_2886_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_50_fu_2886_p1 = sext_ln1345_50_fu_2882_p1;

assign mul_ln1345_510_fu_13304_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_510_fu_13304_p1 = sext_ln1345_222_reg_18750;

assign mul_ln1345_511_fu_13312_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_511_fu_13312_p1 = sext_ln1345_223_reg_18760;

assign mul_ln1345_512_fu_13320_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_512_fu_13320_p1 = sext_ln1345_224_reg_18770;

assign mul_ln1345_513_fu_13328_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_513_fu_13328_p1 = sext_ln1345_225_reg_18780;

assign mul_ln1345_514_fu_13336_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_514_fu_13336_p1 = sext_ln1345_226_reg_18790;

assign mul_ln1345_515_fu_13344_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_515_fu_13344_p1 = sext_ln1345_227_reg_18800;

assign mul_ln1345_516_fu_13352_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_516_fu_13352_p1 = sext_ln1345_228_fu_10109_p1;

assign mul_ln1345_517_fu_13358_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_517_fu_13358_p1 = sext_ln1345_229_reg_18815;

assign mul_ln1345_518_fu_13366_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_518_fu_13366_p1 = sext_ln1345_230_reg_18825;

assign mul_ln1345_519_fu_13374_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_519_fu_13374_p1 = sext_ln1345_231_reg_18835;

assign mul_ln1345_51_fu_2906_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_51_fu_2906_p1 = sext_ln1345_51_fu_2902_p1;

assign mul_ln1345_520_fu_13382_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_520_fu_13382_p1 = sext_ln1345_232_reg_18845;

assign mul_ln1345_521_fu_13390_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_521_fu_13390_p1 = sext_ln1345_233_reg_18855;

assign mul_ln1345_522_fu_13398_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_522_fu_13398_p1 = sext_ln1345_234_fu_10137_p1;

assign mul_ln1345_523_fu_13404_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_523_fu_13404_p1 = sext_ln1345_235_reg_18870;

assign mul_ln1345_524_fu_13412_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_524_fu_13412_p1 = sext_ln1345_236_fu_10153_p1;

assign mul_ln1345_525_fu_13418_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_525_fu_13418_p1 = sext_ln1345_237_fu_10166_p1;

assign mul_ln1345_526_fu_13428_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_526_fu_13428_p1 = sext_ln1345_238_fu_10179_p1;

assign mul_ln1345_527_fu_13438_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_527_fu_13438_p1 = sext_ln1345_239_reg_18895;

assign mul_ln1345_528_fu_13544_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_528_fu_13544_p1 = sext_ln1345_240_reg_18905;

assign mul_ln1345_529_fu_13552_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_529_fu_13552_p1 = sext_ln1345_241_reg_18915;

assign mul_ln1345_52_fu_2926_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_52_fu_2926_p1 = sext_ln1345_52_fu_2922_p1;

assign mul_ln1345_530_fu_13560_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_530_fu_13560_p1 = sext_ln1345_242_reg_18925;

assign mul_ln1345_531_fu_13568_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_531_fu_13568_p1 = sext_ln1345_243_reg_18935;

assign mul_ln1345_532_fu_13576_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_532_fu_13576_p1 = sext_ln1345_244_reg_18945;

assign mul_ln1345_533_fu_13584_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_533_fu_13584_p1 = sext_ln1345_245_reg_18955;

assign mul_ln1345_534_fu_13592_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_534_fu_13592_p1 = sext_ln1345_246_reg_18965;

assign mul_ln1345_535_fu_13600_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_535_fu_13600_p1 = sext_ln1345_247_reg_18975;

assign mul_ln1345_536_fu_13608_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_536_fu_13608_p1 = sext_ln1345_248_reg_18985;

assign mul_ln1345_537_fu_13616_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_537_fu_13616_p1 = sext_ln1345_249_reg_18995;

assign mul_ln1345_538_fu_13624_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_538_fu_13624_p1 = sext_ln1345_250_reg_19005;

assign mul_ln1345_539_fu_13632_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_539_fu_13632_p1 = sext_ln1345_251_reg_19015;

assign mul_ln1345_53_fu_2946_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_53_fu_2946_p1 = sext_ln1345_53_fu_2942_p1;

assign mul_ln1345_540_fu_13640_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_540_fu_13640_p1 = sext_ln1345_252_fu_10359_p1;

assign mul_ln1345_541_fu_13646_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_541_fu_13646_p1 = sext_ln1345_253_reg_19030;

assign mul_ln1345_542_fu_13654_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_542_fu_13654_p1 = sext_ln1345_254_reg_19040;

assign mul_ln1345_543_fu_13662_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_543_fu_13662_p1 = sext_ln1345_255_reg_19050;

assign mul_ln1345_544_fu_13670_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_544_fu_13670_p1 = sext_ln1345_256_reg_19060;

assign mul_ln1345_545_fu_13678_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_545_fu_13678_p1 = sext_ln1345_257_reg_19070;

assign mul_ln1345_546_fu_13686_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_546_fu_13686_p1 = sext_ln1345_258_fu_10387_p1;

assign mul_ln1345_547_fu_13692_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_547_fu_13692_p1 = sext_ln1345_259_reg_19085;

assign mul_ln1345_548_fu_13700_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_548_fu_13700_p1 = sext_ln1345_260_fu_10403_p1;

assign mul_ln1345_549_fu_13706_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_549_fu_13706_p1 = sext_ln1345_261_fu_10416_p1;

assign mul_ln1345_54_fu_2966_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_54_fu_2966_p1 = sext_ln1345_54_fu_2962_p1;

assign mul_ln1345_550_fu_13716_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_550_fu_13716_p1 = sext_ln1345_262_fu_10429_p1;

assign mul_ln1345_551_fu_13726_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_551_fu_13726_p1 = sext_ln1345_263_reg_19110;

assign mul_ln1345_552_fu_13832_p0 = zext_ln1345_24_reg_19335;

assign mul_ln1345_552_fu_13832_p1 = sext_ln1345_264_reg_19120;

assign mul_ln1345_553_fu_13840_p0 = zext_ln1345_25_reg_19352;

assign mul_ln1345_553_fu_13840_p1 = sext_ln1345_265_reg_19130;

assign mul_ln1345_554_fu_13848_p0 = zext_ln1345_26_reg_19369;

assign mul_ln1345_554_fu_13848_p1 = sext_ln1345_266_reg_19140;

assign mul_ln1345_555_fu_13856_p0 = zext_ln1345_27_reg_19386;

assign mul_ln1345_555_fu_13856_p1 = sext_ln1345_267_reg_19150;

assign mul_ln1345_556_fu_13864_p0 = zext_ln1345_28_reg_19404;

assign mul_ln1345_556_fu_13864_p1 = sext_ln1345_268_reg_19160;

assign mul_ln1345_557_fu_13872_p0 = zext_ln1345_29_reg_19422;

assign mul_ln1345_557_fu_13872_p1 = sext_ln1345_269_reg_19170;

assign mul_ln1345_558_fu_13880_p0 = zext_ln1345_30_reg_19440;

assign mul_ln1345_558_fu_13880_p1 = sext_ln1345_270_reg_19180;

assign mul_ln1345_559_fu_13888_p0 = zext_ln1345_31_reg_19458;

assign mul_ln1345_559_fu_13888_p1 = sext_ln1345_271_reg_19190;

assign mul_ln1345_55_fu_2986_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_55_fu_2986_p1 = sext_ln1345_55_fu_2982_p1;

assign mul_ln1345_560_fu_13896_p0 = zext_ln1345_32_reg_19476;

assign mul_ln1345_560_fu_13896_p1 = sext_ln1345_272_reg_19200;

assign mul_ln1345_561_fu_13904_p0 = zext_ln1345_33_reg_19494;

assign mul_ln1345_561_fu_13904_p1 = sext_ln1345_273_reg_19210;

assign mul_ln1345_562_fu_13912_p0 = zext_ln1345_34_reg_19512;

assign mul_ln1345_562_fu_13912_p1 = sext_ln1345_274_reg_19220;

assign mul_ln1345_563_fu_13920_p0 = zext_ln1345_35_reg_19530;

assign mul_ln1345_563_fu_13920_p1 = sext_ln1345_275_reg_19230;

assign mul_ln1345_564_fu_13928_p0 = zext_ln1345_36_fu_10859_p1;

assign mul_ln1345_564_fu_13928_p1 = sext_ln1345_276_fu_10609_p1;

assign mul_ln1345_565_fu_13934_p0 = zext_ln1345_37_reg_19553;

assign mul_ln1345_565_fu_13934_p1 = sext_ln1345_277_reg_19245;

assign mul_ln1345_566_fu_13942_p0 = zext_ln1345_38_reg_19571;

assign mul_ln1345_566_fu_13942_p1 = sext_ln1345_278_reg_19255;

assign mul_ln1345_567_fu_13950_p0 = zext_ln1345_39_reg_19589;

assign mul_ln1345_567_fu_13950_p1 = sext_ln1345_279_reg_19265;

assign mul_ln1345_568_fu_13958_p0 = zext_ln1345_40_reg_19607;

assign mul_ln1345_568_fu_13958_p1 = sext_ln1345_280_reg_19275;

assign mul_ln1345_569_fu_13966_p0 = zext_ln1345_41_reg_19625;

assign mul_ln1345_569_fu_13966_p1 = sext_ln1345_281_reg_19285;

assign mul_ln1345_56_fu_3006_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_56_fu_3006_p1 = sext_ln1345_56_fu_3002_p1;

assign mul_ln1345_570_fu_13974_p0 = zext_ln1345_42_fu_10887_p1;

assign mul_ln1345_570_fu_13974_p1 = sext_ln1345_282_fu_10637_p1;

assign mul_ln1345_571_fu_13980_p0 = zext_ln1345_43_reg_19648;

assign mul_ln1345_571_fu_13980_p1 = sext_ln1345_283_reg_19300;

assign mul_ln1345_572_fu_13988_p0 = zext_ln1345_44_fu_10903_p1;

assign mul_ln1345_572_fu_13988_p1 = sext_ln1345_284_fu_10653_p1;

assign mul_ln1345_573_fu_13994_p0 = zext_ln1345_45_fu_10916_p1;

assign mul_ln1345_573_fu_13994_p1 = sext_ln1345_285_fu_10666_p1;

assign mul_ln1345_574_fu_14004_p0 = zext_ln1345_46_fu_10929_p1;

assign mul_ln1345_574_fu_14004_p1 = sext_ln1345_286_fu_10679_p1;

assign mul_ln1345_575_fu_14014_p0 = zext_ln1345_47_reg_19681;

assign mul_ln1345_575_fu_14014_p1 = sext_ln1345_287_reg_19325;

assign mul_ln1345_57_fu_3026_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_57_fu_3026_p1 = sext_ln1345_57_fu_3022_p1;

assign mul_ln1345_58_fu_3046_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_58_fu_3046_p1 = sext_ln1345_58_fu_3042_p1;

assign mul_ln1345_59_fu_3066_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_59_fu_3066_p1 = sext_ln1345_59_fu_3062_p1;

assign mul_ln1345_5_fu_1854_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_5_fu_1854_p1 = sext_ln1345_5_fu_1850_p1;

assign mul_ln1345_60_fu_8362_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_60_fu_8362_p1 = sext_ln1345_60_fu_8359_p1;

assign mul_ln1345_61_fu_3096_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_61_fu_3096_p1 = sext_ln1345_61_fu_3092_p1;

assign mul_ln1345_62_fu_3116_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_62_fu_3116_p1 = sext_ln1345_62_fu_3112_p1;

assign mul_ln1345_63_fu_3136_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_63_fu_3136_p1 = sext_ln1345_63_fu_3132_p1;

assign mul_ln1345_64_fu_3156_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_64_fu_3156_p1 = sext_ln1345_64_fu_3152_p1;

assign mul_ln1345_65_fu_3176_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_65_fu_3176_p1 = sext_ln1345_65_fu_3172_p1;

assign mul_ln1345_66_fu_8390_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_66_fu_8390_p1 = sext_ln1345_66_fu_8387_p1;

assign mul_ln1345_67_fu_3206_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_67_fu_3206_p1 = sext_ln1345_67_fu_3202_p1;

assign mul_ln1345_68_fu_8406_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_68_fu_8406_p1 = sext_ln1345_68_fu_8403_p1;

assign mul_ln1345_69_fu_8419_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_69_fu_8419_p1 = sext_ln1345_69_fu_8416_p1;

assign mul_ln1345_6_fu_1888_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_6_fu_1888_p1 = sext_ln1345_6_fu_1884_p1;

assign mul_ln1345_70_fu_8432_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_70_fu_8432_p1 = sext_ln1345_70_fu_8429_p1;

assign mul_ln1345_71_fu_3256_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_71_fu_3256_p1 = sext_ln1345_71_fu_3252_p1;

assign mul_ln1345_72_fu_3276_p0 = sext_ln1345_72_fu_3272_p1;

assign mul_ln1345_72_fu_3276_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_73_fu_3296_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_73_fu_3296_p1 = sext_ln1345_73_fu_3292_p1;

assign mul_ln1345_74_fu_3316_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_74_fu_3316_p1 = sext_ln1345_74_fu_3312_p1;

assign mul_ln1345_75_fu_3336_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_76_fu_3356_p0 = zext_ln1345_4_fu_1812_p1;

assign mul_ln1345_77_fu_3376_p0 = zext_ln1345_5_fu_1846_p1;

assign mul_ln1345_78_fu_3396_p0 = zext_ln1345_6_fu_1880_p1;

assign mul_ln1345_79_fu_3416_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_7_fu_1922_p0 = zext_ln1345_7_fu_1914_p1;

assign mul_ln1345_7_fu_1922_p1 = sext_ln1345_7_fu_1918_p1;

assign mul_ln1345_80_fu_3436_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_81_fu_3456_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_82_fu_3476_p0 = zext_ln1345_10_fu_2016_p1;

assign mul_ln1345_83_fu_3496_p0 = zext_ln1345_11_fu_2050_p1;

assign mul_ln1345_84_fu_8612_p0 = zext_ln1345_12_fu_7844_p1;

assign mul_ln1345_84_fu_8612_p1 = sext_ln1345_84_fu_8609_p1;

assign mul_ln1345_85_fu_3526_p0 = zext_ln1345_13_fu_2104_p1;

assign mul_ln1345_86_fu_3546_p0 = zext_ln1345_14_fu_2138_p1;

assign mul_ln1345_87_fu_3566_p0 = zext_ln1345_15_fu_2172_p1;

assign mul_ln1345_88_fu_3586_p0 = zext_ln1345_16_fu_2206_p1;

assign mul_ln1345_89_fu_3606_p0 = zext_ln1345_17_fu_2240_p1;

assign mul_ln1345_8_fu_1956_p0 = zext_ln1345_8_fu_1948_p1;

assign mul_ln1345_8_fu_1956_p1 = sext_ln1345_8_fu_1952_p1;

assign mul_ln1345_90_fu_8640_p0 = zext_ln1345_18_fu_7875_p1;

assign mul_ln1345_90_fu_8640_p1 = sext_ln1345_90_fu_8637_p1;

assign mul_ln1345_91_fu_3636_p0 = zext_ln1345_19_fu_2294_p1;

assign mul_ln1345_92_fu_8656_p0 = zext_ln1345_20_fu_7894_p1;

assign mul_ln1345_92_fu_8656_p1 = sext_ln1345_92_fu_8653_p1;

assign mul_ln1345_93_fu_8669_p0 = zext_ln1345_21_fu_7910_p1;

assign mul_ln1345_93_fu_8669_p1 = sext_ln1345_93_fu_8666_p1;

assign mul_ln1345_94_fu_8682_p0 = zext_ln1345_22_fu_7926_p1;

assign mul_ln1345_94_fu_8682_p1 = sext_ln1345_94_fu_8679_p1;

assign mul_ln1345_95_fu_3686_p0 = zext_ln1345_23_fu_2388_p1;

assign mul_ln1345_96_fu_3706_p1 = zext_ln1345_fu_1676_p1;

assign mul_ln1345_97_fu_3726_p0 = zext_ln1345_1_fu_1710_p1;

assign mul_ln1345_98_fu_3746_p0 = zext_ln1345_2_fu_1744_p1;

assign mul_ln1345_99_fu_3766_p0 = zext_ln1345_3_fu_1778_p1;

assign mul_ln1345_9_fu_1990_p0 = zext_ln1345_9_fu_1982_p1;

assign mul_ln1345_9_fu_1990_p1 = sext_ln1345_9_fu_1986_p1;

assign mul_ln1345_fu_1684_p0 = sext_ln1345_fu_1680_p1;

assign mul_ln1345_fu_1684_p1 = zext_ln1345_fu_1676_p1;

assign or_ln121_fu_1557_p2 = (icmp_ln121_fu_1519_p2 | and_ln120_fu_1545_p2);

assign select_ln120_3_fu_1656_p3 = ((icmp_ln121_reg_16941[0:0] == 1'b1) ? mlp_inst_m2_bias_arr_V_load_1_reg_16927 : mlp_inst_m2_bias_arr_V_load_reg_16985);

assign select_ln120_4_fu_1594_p3 = ((icmp_ln121_reg_16941[0:0] == 1'b1) ? 4'd0 : trunc_ln215_3_fu_1590_p1);

assign select_ln120_fu_1525_p3 = ((icmp_ln121_fu_1519_p2[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_cot_phi_fu_1489_p4);

assign select_ln121_5_fu_1601_p3 = ((and_ln120_reg_16953[0:0] == 1'b1) ? trunc_ln215_fu_1587_p1 : select_ln120_4_fu_1594_p3);

assign select_ln121_6_fu_1661_p3 = ((and_ln120_reg_16953[0:0] == 1'b1) ? mlp_inst_m2_bias_arr_V_q0 : select_ln120_3_fu_1656_p3);

assign select_ln121_7_fu_1616_p3 = ((and_ln120_reg_16953[0:0] == 1'b1) ? add_ln121_reg_16960 : select_ln120_reg_16948);

assign select_ln121_8_fu_1650_p3 = ((icmp_ln121_reg_16941[0:0] == 1'b1) ? 11'd1 : add_ln121_2_reg_16975);

assign select_ln121_fu_1563_p3 = ((or_ln121_fu_1557_p2[0:0] == 1'b1) ? 6'd0 : ap_phi_mux_cit_phi_fu_1501_p4);

assign select_ln126_fu_14129_p3 = ((icmp_ln126_reg_17005_pp0_iter1_reg[0:0] == 1'b1) ? vec_o_data_M_elems_V_fu_14123_p3 : vec_o_data_M_elems_V_2_fu_1410);

assign sext_ln1345_100_fu_3782_p1 = tmp_105_fu_3772_p4;

assign sext_ln1345_101_fu_3802_p1 = tmp_106_fu_3792_p4;

assign sext_ln1345_102_fu_3822_p1 = tmp_107_fu_3812_p4;

assign sext_ln1345_103_fu_3842_p1 = tmp_108_fu_3832_p4;

assign sext_ln1345_104_fu_3862_p1 = tmp_109_fu_3852_p4;

assign sext_ln1345_105_fu_3882_p1 = tmp_110_fu_3872_p4;

assign sext_ln1345_106_fu_3902_p1 = tmp_111_fu_3892_p4;

assign sext_ln1345_107_fu_3922_p1 = tmp_112_fu_3912_p4;

assign sext_ln1345_108_fu_8859_p1 = $signed(tmp_113_reg_17735);

assign sext_ln1345_109_fu_3952_p1 = tmp_114_fu_3942_p4;

assign sext_ln1345_10_fu_2020_p1 = $signed(tmp_11_fu_1996_p4);

assign sext_ln1345_110_fu_3972_p1 = tmp_115_fu_3962_p4;

assign sext_ln1345_111_fu_3992_p1 = tmp_116_fu_3982_p4;

assign sext_ln1345_112_fu_4012_p1 = tmp_117_fu_4002_p4;

assign sext_ln1345_113_fu_4032_p1 = tmp_118_fu_4022_p4;

assign sext_ln1345_114_fu_8887_p1 = $signed(tmp_119_reg_17790);

assign sext_ln1345_115_fu_4062_p1 = tmp_120_fu_4052_p4;

assign sext_ln1345_116_fu_8903_p1 = $signed(tmp_121_reg_17805);

assign sext_ln1345_117_fu_8916_p1 = $signed(tmp_122_reg_17810);

assign sext_ln1345_118_fu_8929_p1 = $signed(tmp_123_reg_17815);

assign sext_ln1345_119_fu_4112_p1 = tmp_124_fu_4102_p4;

assign sext_ln1345_11_fu_2054_p1 = $signed(tmp_12_fu_2030_p4);

assign sext_ln1345_120_fu_4132_p1 = tmp_125_fu_4122_p4;

assign sext_ln1345_121_fu_4152_p1 = tmp_127_fu_4142_p4;

assign sext_ln1345_122_fu_4172_p1 = tmp_128_fu_4162_p4;

assign sext_ln1345_123_fu_4192_p1 = tmp_129_fu_4182_p4;

assign sext_ln1345_124_fu_4212_p1 = tmp_130_fu_4202_p4;

assign sext_ln1345_125_fu_4232_p1 = tmp_131_fu_4222_p4;

assign sext_ln1345_126_fu_4252_p1 = tmp_132_fu_4242_p4;

assign sext_ln1345_127_fu_4272_p1 = tmp_133_fu_4262_p4;

assign sext_ln1345_128_fu_4292_p1 = tmp_134_fu_4282_p4;

assign sext_ln1345_129_fu_4312_p1 = tmp_135_fu_4302_p4;

assign sext_ln1345_12_fu_7847_p1 = $signed(tmp_13_reg_17090);

assign sext_ln1345_130_fu_4332_p1 = tmp_136_fu_4322_p4;

assign sext_ln1345_131_fu_4352_p1 = tmp_137_fu_4342_p4;

assign sext_ln1345_132_fu_9109_p1 = $signed(tmp_138_reg_17950);

assign sext_ln1345_133_fu_4382_p1 = tmp_139_fu_4372_p4;

assign sext_ln1345_134_fu_4402_p1 = tmp_140_fu_4392_p4;

assign sext_ln1345_135_fu_4422_p1 = tmp_141_fu_4412_p4;

assign sext_ln1345_136_fu_4442_p1 = tmp_142_fu_4432_p4;

assign sext_ln1345_137_fu_4462_p1 = tmp_143_fu_4452_p4;

assign sext_ln1345_138_fu_9137_p1 = $signed(tmp_144_reg_18005);

assign sext_ln1345_139_fu_4492_p1 = tmp_145_fu_4482_p4;

assign sext_ln1345_13_fu_2108_p1 = $signed(tmp_14_fu_2084_p4);

assign sext_ln1345_140_fu_9153_p1 = $signed(tmp_146_reg_18020);

assign sext_ln1345_141_fu_9166_p1 = $signed(tmp_147_reg_18025);

assign sext_ln1345_142_fu_9179_p1 = $signed(tmp_148_reg_18030);

assign sext_ln1345_143_fu_4542_p1 = tmp_149_fu_4532_p4;

assign sext_ln1345_144_fu_4562_p1 = tmp_150_fu_4552_p4;

assign sext_ln1345_145_fu_4582_p1 = tmp_152_fu_4572_p4;

assign sext_ln1345_146_fu_4602_p1 = tmp_153_fu_4592_p4;

assign sext_ln1345_147_fu_4622_p1 = tmp_154_fu_4612_p4;

assign sext_ln1345_148_fu_4642_p1 = tmp_155_fu_4632_p4;

assign sext_ln1345_149_fu_4662_p1 = tmp_156_fu_4652_p4;

assign sext_ln1345_14_fu_2142_p1 = $signed(tmp_15_fu_2118_p4);

assign sext_ln1345_150_fu_4682_p1 = tmp_157_fu_4672_p4;

assign sext_ln1345_151_fu_4702_p1 = tmp_158_fu_4692_p4;

assign sext_ln1345_152_fu_4722_p1 = tmp_159_fu_4712_p4;

assign sext_ln1345_153_fu_4742_p1 = tmp_160_fu_4732_p4;

assign sext_ln1345_154_fu_4762_p1 = tmp_161_fu_4752_p4;

assign sext_ln1345_155_fu_4782_p1 = tmp_162_fu_4772_p4;

assign sext_ln1345_156_fu_9359_p1 = $signed(tmp_163_reg_18165);

assign sext_ln1345_157_fu_4812_p1 = tmp_164_fu_4802_p4;

assign sext_ln1345_158_fu_4832_p1 = tmp_165_fu_4822_p4;

assign sext_ln1345_159_fu_4852_p1 = tmp_166_fu_4842_p4;

assign sext_ln1345_15_fu_2176_p1 = $signed(tmp_16_fu_2152_p4);

assign sext_ln1345_160_fu_4872_p1 = tmp_167_fu_4862_p4;

assign sext_ln1345_161_fu_4892_p1 = tmp_168_fu_4882_p4;

assign sext_ln1345_162_fu_9387_p1 = $signed(tmp_169_reg_18220);

assign sext_ln1345_163_fu_4922_p1 = tmp_170_fu_4912_p4;

assign sext_ln1345_164_fu_9403_p1 = $signed(tmp_171_reg_18235);

assign sext_ln1345_165_fu_9416_p1 = $signed(tmp_172_reg_18240);

assign sext_ln1345_166_fu_9429_p1 = $signed(tmp_173_reg_18245);

assign sext_ln1345_167_fu_4972_p1 = tmp_174_fu_4962_p4;

assign sext_ln1345_168_fu_4992_p1 = tmp_175_fu_4982_p4;

assign sext_ln1345_169_fu_5012_p1 = tmp_177_fu_5002_p4;

assign sext_ln1345_16_fu_2210_p1 = $signed(tmp_17_fu_2186_p4);

assign sext_ln1345_170_fu_5032_p1 = tmp_178_fu_5022_p4;

assign sext_ln1345_171_fu_5052_p1 = tmp_179_fu_5042_p4;

assign sext_ln1345_172_fu_5072_p1 = tmp_180_fu_5062_p4;

assign sext_ln1345_173_fu_5092_p1 = tmp_181_fu_5082_p4;

assign sext_ln1345_174_fu_5112_p1 = tmp_182_fu_5102_p4;

assign sext_ln1345_175_fu_5132_p1 = tmp_183_fu_5122_p4;

assign sext_ln1345_176_fu_5152_p1 = tmp_184_fu_5142_p4;

assign sext_ln1345_177_fu_5172_p1 = tmp_185_fu_5162_p4;

assign sext_ln1345_178_fu_5192_p1 = tmp_186_fu_5182_p4;

assign sext_ln1345_179_fu_5212_p1 = tmp_187_fu_5202_p4;

assign sext_ln1345_17_fu_2244_p1 = $signed(tmp_18_fu_2220_p4);

assign sext_ln1345_180_fu_9609_p1 = $signed(tmp_188_reg_18380);

assign sext_ln1345_181_fu_5242_p1 = tmp_189_fu_5232_p4;

assign sext_ln1345_182_fu_5262_p1 = tmp_190_fu_5252_p4;

assign sext_ln1345_183_fu_5282_p1 = tmp_191_fu_5272_p4;

assign sext_ln1345_184_fu_5302_p1 = tmp_192_fu_5292_p4;

assign sext_ln1345_185_fu_5322_p1 = tmp_193_fu_5312_p4;

assign sext_ln1345_186_fu_9637_p1 = $signed(tmp_194_reg_18435);

assign sext_ln1345_187_fu_5352_p1 = tmp_195_fu_5342_p4;

assign sext_ln1345_188_fu_9653_p1 = $signed(tmp_196_reg_18450);

assign sext_ln1345_189_fu_9666_p1 = $signed(tmp_197_reg_18455);

assign sext_ln1345_18_fu_7878_p1 = $signed(tmp_19_reg_17125);

assign sext_ln1345_190_fu_9679_p1 = $signed(tmp_198_reg_18460);

assign sext_ln1345_191_fu_5402_p1 = tmp_199_fu_5392_p4;

assign sext_ln1345_192_fu_5422_p1 = tmp_200_fu_5412_p4;

assign sext_ln1345_193_fu_5442_p1 = tmp_202_fu_5432_p4;

assign sext_ln1345_194_fu_5462_p1 = tmp_203_fu_5452_p4;

assign sext_ln1345_195_fu_5482_p1 = tmp_204_fu_5472_p4;

assign sext_ln1345_196_fu_5502_p1 = tmp_205_fu_5492_p4;

assign sext_ln1345_197_fu_5522_p1 = tmp_206_fu_5512_p4;

assign sext_ln1345_198_fu_5542_p1 = tmp_207_fu_5532_p4;

assign sext_ln1345_199_fu_5562_p1 = tmp_208_fu_5552_p4;

assign sext_ln1345_19_fu_2298_p1 = $signed(tmp_20_fu_2274_p4);

assign sext_ln1345_1_fu_1714_p1 = $signed(tmp_2_fu_1690_p4);

assign sext_ln1345_200_fu_5582_p1 = tmp_209_fu_5572_p4;

assign sext_ln1345_201_fu_5602_p1 = tmp_210_fu_5592_p4;

assign sext_ln1345_202_fu_5622_p1 = tmp_211_fu_5612_p4;

assign sext_ln1345_203_fu_5642_p1 = tmp_212_fu_5632_p4;

assign sext_ln1345_204_fu_9859_p1 = $signed(tmp_213_reg_18595);

assign sext_ln1345_205_fu_5672_p1 = tmp_214_fu_5662_p4;

assign sext_ln1345_206_fu_5692_p1 = tmp_215_fu_5682_p4;

assign sext_ln1345_207_fu_5712_p1 = tmp_216_fu_5702_p4;

assign sext_ln1345_208_fu_5732_p1 = tmp_217_fu_5722_p4;

assign sext_ln1345_209_fu_5752_p1 = tmp_218_fu_5742_p4;

assign sext_ln1345_20_fu_7897_p1 = $signed(tmp_21_reg_17140);

assign sext_ln1345_210_fu_9887_p1 = $signed(tmp_219_reg_18650);

assign sext_ln1345_211_fu_5782_p1 = tmp_220_fu_5772_p4;

assign sext_ln1345_212_fu_9903_p1 = $signed(tmp_221_reg_18665);

assign sext_ln1345_213_fu_9916_p1 = $signed(tmp_222_reg_18670);

assign sext_ln1345_214_fu_9929_p1 = $signed(tmp_223_reg_18675);

assign sext_ln1345_215_fu_5832_p1 = tmp_224_fu_5822_p4;

assign sext_ln1345_216_fu_5852_p1 = tmp_225_fu_5842_p4;

assign sext_ln1345_217_fu_5872_p1 = tmp_227_fu_5862_p4;

assign sext_ln1345_218_fu_5892_p1 = tmp_228_fu_5882_p4;

assign sext_ln1345_219_fu_5912_p1 = tmp_229_fu_5902_p4;

assign sext_ln1345_21_fu_7913_p1 = $signed(tmp_22_reg_17150);

assign sext_ln1345_220_fu_5932_p1 = tmp_230_fu_5922_p4;

assign sext_ln1345_221_fu_5952_p1 = tmp_231_fu_5942_p4;

assign sext_ln1345_222_fu_5972_p1 = tmp_232_fu_5962_p4;

assign sext_ln1345_223_fu_5992_p1 = tmp_233_fu_5982_p4;

assign sext_ln1345_224_fu_6012_p1 = tmp_234_fu_6002_p4;

assign sext_ln1345_225_fu_6032_p1 = tmp_235_fu_6022_p4;

assign sext_ln1345_226_fu_6052_p1 = tmp_236_fu_6042_p4;

assign sext_ln1345_227_fu_6072_p1 = tmp_237_fu_6062_p4;

assign sext_ln1345_228_fu_10109_p1 = $signed(tmp_238_reg_18810);

assign sext_ln1345_229_fu_6102_p1 = tmp_239_fu_6092_p4;

assign sext_ln1345_22_fu_7929_p1 = $signed(tmp_23_reg_17160);

assign sext_ln1345_230_fu_6122_p1 = tmp_240_fu_6112_p4;

assign sext_ln1345_231_fu_6142_p1 = tmp_241_fu_6132_p4;

assign sext_ln1345_232_fu_6162_p1 = tmp_242_fu_6152_p4;

assign sext_ln1345_233_fu_6182_p1 = tmp_243_fu_6172_p4;

assign sext_ln1345_234_fu_10137_p1 = $signed(tmp_244_reg_18865);

assign sext_ln1345_235_fu_6212_p1 = tmp_245_fu_6202_p4;

assign sext_ln1345_236_fu_10153_p1 = $signed(tmp_246_reg_18880);

assign sext_ln1345_237_fu_10166_p1 = $signed(tmp_247_reg_18885);

assign sext_ln1345_238_fu_10179_p1 = $signed(tmp_248_reg_18890);

assign sext_ln1345_239_fu_6262_p1 = tmp_249_fu_6252_p4;

assign sext_ln1345_23_fu_2392_p1 = $signed(tmp_24_fu_2368_p4);

assign sext_ln1345_240_fu_6282_p1 = tmp_250_fu_6272_p4;

assign sext_ln1345_241_fu_6302_p1 = tmp_252_fu_6292_p4;

assign sext_ln1345_242_fu_6322_p1 = tmp_253_fu_6312_p4;

assign sext_ln1345_243_fu_6342_p1 = tmp_254_fu_6332_p4;

assign sext_ln1345_244_fu_6362_p1 = tmp_255_fu_6352_p4;

assign sext_ln1345_245_fu_6382_p1 = tmp_256_fu_6372_p4;

assign sext_ln1345_246_fu_6402_p1 = tmp_257_fu_6392_p4;

assign sext_ln1345_247_fu_6422_p1 = tmp_258_fu_6412_p4;

assign sext_ln1345_248_fu_6442_p1 = tmp_259_fu_6432_p4;

assign sext_ln1345_249_fu_6462_p1 = tmp_260_fu_6452_p4;

assign sext_ln1345_24_fu_2412_p1 = $signed(tmp_25_fu_2402_p4);

assign sext_ln1345_250_fu_6482_p1 = tmp_261_fu_6472_p4;

assign sext_ln1345_251_fu_6502_p1 = tmp_262_fu_6492_p4;

assign sext_ln1345_252_fu_10359_p1 = $signed(tmp_263_reg_19025);

assign sext_ln1345_253_fu_6532_p1 = tmp_264_fu_6522_p4;

assign sext_ln1345_254_fu_6552_p1 = tmp_265_fu_6542_p4;

assign sext_ln1345_255_fu_6572_p1 = tmp_266_fu_6562_p4;

assign sext_ln1345_256_fu_6592_p1 = tmp_267_fu_6582_p4;

assign sext_ln1345_257_fu_6612_p1 = tmp_268_fu_6602_p4;

assign sext_ln1345_258_fu_10387_p1 = $signed(tmp_269_reg_19080);

assign sext_ln1345_259_fu_6642_p1 = tmp_270_fu_6632_p4;

assign sext_ln1345_25_fu_2432_p1 = $signed(tmp_27_fu_2422_p4);

assign sext_ln1345_260_fu_10403_p1 = $signed(tmp_271_reg_19095);

assign sext_ln1345_261_fu_10416_p1 = $signed(tmp_272_reg_19100);

assign sext_ln1345_262_fu_10429_p1 = $signed(tmp_273_reg_19105);

assign sext_ln1345_263_fu_6692_p1 = tmp_274_fu_6682_p4;

assign sext_ln1345_264_fu_6712_p1 = tmp_275_fu_6702_p4;

assign sext_ln1345_265_fu_6732_p1 = tmp_277_fu_6722_p4;

assign sext_ln1345_266_fu_6752_p1 = tmp_278_fu_6742_p4;

assign sext_ln1345_267_fu_6772_p1 = tmp_279_fu_6762_p4;

assign sext_ln1345_268_fu_6792_p1 = tmp_280_fu_6782_p4;

assign sext_ln1345_269_fu_6812_p1 = tmp_281_fu_6802_p4;

assign sext_ln1345_26_fu_2452_p1 = $signed(tmp_28_fu_2442_p4);

assign sext_ln1345_270_fu_6832_p1 = tmp_282_fu_6822_p4;

assign sext_ln1345_271_fu_6852_p1 = tmp_283_fu_6842_p4;

assign sext_ln1345_272_fu_6872_p1 = tmp_284_fu_6862_p4;

assign sext_ln1345_273_fu_6892_p1 = tmp_285_fu_6882_p4;

assign sext_ln1345_274_fu_6912_p1 = tmp_286_fu_6902_p4;

assign sext_ln1345_275_fu_6932_p1 = tmp_287_fu_6922_p4;

assign sext_ln1345_276_fu_10609_p1 = $signed(tmp_288_reg_19240);

assign sext_ln1345_277_fu_6962_p1 = tmp_289_fu_6952_p4;

assign sext_ln1345_278_fu_6982_p1 = tmp_290_fu_6972_p4;

assign sext_ln1345_279_fu_7002_p1 = tmp_291_fu_6992_p4;

assign sext_ln1345_27_fu_2472_p1 = $signed(tmp_29_fu_2462_p4);

assign sext_ln1345_280_fu_7022_p1 = tmp_292_fu_7012_p4;

assign sext_ln1345_281_fu_7042_p1 = tmp_293_fu_7032_p4;

assign sext_ln1345_282_fu_10637_p1 = $signed(tmp_294_reg_19295);

assign sext_ln1345_283_fu_7072_p1 = tmp_295_fu_7062_p4;

assign sext_ln1345_284_fu_10653_p1 = $signed(tmp_296_reg_19310);

assign sext_ln1345_285_fu_10666_p1 = $signed(tmp_297_reg_19315);

assign sext_ln1345_286_fu_10679_p1 = $signed(tmp_298_reg_19320);

assign sext_ln1345_287_fu_7122_p1 = tmp_299_fu_7112_p4;

assign sext_ln1345_28_fu_2492_p1 = $signed(tmp_30_fu_2482_p4);

assign sext_ln1345_29_fu_2512_p1 = $signed(tmp_31_fu_2502_p4);

assign sext_ln1345_2_fu_1748_p1 = $signed(tmp_3_fu_1724_p4);

assign sext_ln1345_30_fu_2532_p1 = $signed(tmp_32_fu_2522_p4);

assign sext_ln1345_31_fu_2552_p1 = $signed(tmp_33_fu_2542_p4);

assign sext_ln1345_32_fu_2572_p1 = $signed(tmp_34_fu_2562_p4);

assign sext_ln1345_33_fu_2592_p1 = $signed(tmp_35_fu_2582_p4);

assign sext_ln1345_34_fu_2612_p1 = $signed(tmp_36_fu_2602_p4);

assign sext_ln1345_35_fu_2632_p1 = $signed(tmp_37_fu_2622_p4);

assign sext_ln1345_36_fu_8109_p1 = $signed(tmp_38_reg_17235);

assign sext_ln1345_37_fu_2662_p1 = $signed(tmp_39_fu_2652_p4);

assign sext_ln1345_38_fu_2682_p1 = $signed(tmp_40_fu_2672_p4);

assign sext_ln1345_39_fu_2702_p1 = $signed(tmp_41_fu_2692_p4);

assign sext_ln1345_3_fu_1782_p1 = $signed(tmp_4_fu_1758_p4);

assign sext_ln1345_40_fu_2722_p1 = $signed(tmp_42_fu_2712_p4);

assign sext_ln1345_41_fu_2742_p1 = $signed(tmp_43_fu_2732_p4);

assign sext_ln1345_42_fu_8137_p1 = $signed(tmp_44_reg_17265);

assign sext_ln1345_43_fu_2772_p1 = $signed(tmp_45_fu_2762_p4);

assign sext_ln1345_44_fu_8153_p1 = $signed(tmp_46_reg_17275);

assign sext_ln1345_45_fu_8166_p1 = $signed(tmp_47_reg_17280);

assign sext_ln1345_46_fu_8179_p1 = $signed(tmp_48_reg_17285);

assign sext_ln1345_47_fu_2822_p1 = $signed(tmp_49_fu_2812_p4);

assign sext_ln1345_48_fu_2842_p1 = $signed(tmp_50_fu_2832_p4);

assign sext_ln1345_49_fu_2862_p1 = $signed(tmp_52_fu_2852_p4);

assign sext_ln1345_4_fu_1816_p1 = $signed(tmp_5_fu_1792_p4);

assign sext_ln1345_50_fu_2882_p1 = $signed(tmp_53_fu_2872_p4);

assign sext_ln1345_51_fu_2902_p1 = $signed(tmp_54_fu_2892_p4);

assign sext_ln1345_52_fu_2922_p1 = $signed(tmp_55_fu_2912_p4);

assign sext_ln1345_53_fu_2942_p1 = $signed(tmp_56_fu_2932_p4);

assign sext_ln1345_54_fu_2962_p1 = $signed(tmp_57_fu_2952_p4);

assign sext_ln1345_55_fu_2982_p1 = $signed(tmp_58_fu_2972_p4);

assign sext_ln1345_56_fu_3002_p1 = $signed(tmp_59_fu_2992_p4);

assign sext_ln1345_57_fu_3022_p1 = $signed(tmp_60_fu_3012_p4);

assign sext_ln1345_58_fu_3042_p1 = $signed(tmp_61_fu_3032_p4);

assign sext_ln1345_59_fu_3062_p1 = $signed(tmp_62_fu_3052_p4);

assign sext_ln1345_5_fu_1850_p1 = $signed(tmp_6_fu_1826_p4);

assign sext_ln1345_60_fu_8359_p1 = $signed(tmp_63_reg_17355);

assign sext_ln1345_61_fu_3092_p1 = $signed(tmp_64_fu_3082_p4);

assign sext_ln1345_62_fu_3112_p1 = $signed(tmp_65_fu_3102_p4);

assign sext_ln1345_63_fu_3132_p1 = $signed(tmp_66_fu_3122_p4);

assign sext_ln1345_64_fu_3152_p1 = $signed(tmp_67_fu_3142_p4);

assign sext_ln1345_65_fu_3172_p1 = $signed(tmp_68_fu_3162_p4);

assign sext_ln1345_66_fu_8387_p1 = $signed(tmp_69_reg_17385);

assign sext_ln1345_67_fu_3202_p1 = $signed(tmp_70_fu_3192_p4);

assign sext_ln1345_68_fu_8403_p1 = $signed(tmp_71_reg_17395);

assign sext_ln1345_69_fu_8416_p1 = $signed(tmp_72_reg_17400);

assign sext_ln1345_6_fu_1884_p1 = $signed(tmp_7_fu_1860_p4);

assign sext_ln1345_70_fu_8429_p1 = $signed(tmp_73_reg_17405);

assign sext_ln1345_71_fu_3252_p1 = $signed(tmp_74_fu_3242_p4);

assign sext_ln1345_72_fu_3272_p1 = $signed(tmp_75_fu_3262_p4);

assign sext_ln1345_73_fu_3292_p1 = $signed(tmp_77_fu_3282_p4);

assign sext_ln1345_74_fu_3312_p1 = $signed(tmp_78_fu_3302_p4);

assign sext_ln1345_75_fu_3332_p1 = tmp_79_fu_3322_p4;

assign sext_ln1345_76_fu_3352_p1 = tmp_80_fu_3342_p4;

assign sext_ln1345_77_fu_3372_p1 = tmp_81_fu_3362_p4;

assign sext_ln1345_78_fu_3392_p1 = tmp_82_fu_3382_p4;

assign sext_ln1345_79_fu_3412_p1 = tmp_83_fu_3402_p4;

assign sext_ln1345_7_fu_1918_p1 = $signed(tmp_8_fu_1894_p4);

assign sext_ln1345_80_fu_3432_p1 = tmp_84_fu_3422_p4;

assign sext_ln1345_81_fu_3452_p1 = tmp_85_fu_3442_p4;

assign sext_ln1345_82_fu_3472_p1 = tmp_86_fu_3462_p4;

assign sext_ln1345_83_fu_3492_p1 = tmp_87_fu_3482_p4;

assign sext_ln1345_84_fu_8609_p1 = $signed(tmp_88_reg_17520);

assign sext_ln1345_85_fu_3522_p1 = tmp_89_fu_3512_p4;

assign sext_ln1345_86_fu_3542_p1 = tmp_90_fu_3532_p4;

assign sext_ln1345_87_fu_3562_p1 = tmp_91_fu_3552_p4;

assign sext_ln1345_88_fu_3582_p1 = tmp_92_fu_3572_p4;

assign sext_ln1345_89_fu_3602_p1 = tmp_93_fu_3592_p4;

assign sext_ln1345_8_fu_1952_p1 = $signed(tmp_9_fu_1928_p4);

assign sext_ln1345_90_fu_8637_p1 = $signed(tmp_94_reg_17575);

assign sext_ln1345_91_fu_3632_p1 = tmp_95_fu_3622_p4;

assign sext_ln1345_92_fu_8653_p1 = $signed(tmp_96_reg_17590);

assign sext_ln1345_93_fu_8666_p1 = $signed(tmp_97_reg_17595);

assign sext_ln1345_94_fu_8679_p1 = $signed(tmp_98_reg_17600);

assign sext_ln1345_95_fu_3682_p1 = tmp_99_fu_3672_p4;

assign sext_ln1345_96_fu_3702_p1 = tmp_100_fu_3692_p4;

assign sext_ln1345_97_fu_3722_p1 = tmp_102_fu_3712_p4;

assign sext_ln1345_98_fu_3742_p1 = tmp_103_fu_3732_p4;

assign sext_ln1345_99_fu_3762_p1 = tmp_104_fu_3752_p4;

assign sext_ln1345_9_fu_1986_p1 = $signed(tmp_10_fu_1962_p4);

assign sext_ln1345_fu_1680_p1 = $signed(trunc_ln215_4_fu_1672_p1);

assign sext_ln151_100_fu_8872_p1 = mul_ln1345_109_reg_17745;

assign sext_ln151_101_fu_8875_p1 = mul_ln1345_110_reg_17755;

assign sext_ln151_102_fu_8878_p1 = mul_ln1345_111_reg_17765;

assign sext_ln151_103_fu_8881_p1 = mul_ln1345_112_reg_17775;

assign sext_ln151_104_fu_8884_p1 = mul_ln1345_113_reg_17785;

assign sext_ln151_105_fu_8896_p1 = mul_ln1345_114_fu_8890_p2;

assign sext_ln151_106_fu_8900_p1 = mul_ln1345_115_reg_17800;

assign sext_ln151_107_fu_8912_p1 = mul_ln1345_116_fu_8906_p2;

assign sext_ln151_108_fu_8925_p1 = mul_ln1345_117_fu_8919_p2;

assign sext_ln151_109_fu_8938_p1 = mul_ln1345_118_fu_8932_p2;

assign sext_ln151_10_fu_7841_p1 = mul_ln1345_11_reg_17085;

assign sext_ln151_110_fu_9076_p1 = mul_ln1345_121_reg_17845;

assign sext_ln151_111_fu_9079_p1 = mul_ln1345_122_reg_17855;

assign sext_ln151_112_fu_9082_p1 = mul_ln1345_123_reg_17865;

assign sext_ln151_113_fu_9085_p1 = mul_ln1345_124_reg_17875;

assign sext_ln151_114_fu_9088_p1 = mul_ln1345_125_reg_17885;

assign sext_ln151_115_fu_9091_p1 = mul_ln1345_126_reg_17895;

assign sext_ln151_116_fu_9094_p1 = mul_ln1345_127_reg_17905;

assign sext_ln151_117_fu_9097_p1 = mul_ln1345_128_reg_17915;

assign sext_ln151_118_fu_9100_p1 = mul_ln1345_129_reg_17925;

assign sext_ln151_119_fu_9103_p1 = mul_ln1345_130_reg_17935;

assign sext_ln151_11_fu_7856_p1 = mul_ln1345_12_fu_7850_p2;

assign sext_ln151_120_fu_9106_p1 = mul_ln1345_131_reg_17945;

assign sext_ln151_121_fu_9118_p1 = mul_ln1345_132_fu_9112_p2;

assign sext_ln151_122_fu_9122_p1 = mul_ln1345_133_reg_17960;

assign sext_ln151_123_fu_9125_p1 = mul_ln1345_134_reg_17970;

assign sext_ln151_124_fu_9128_p1 = mul_ln1345_135_reg_17980;

assign sext_ln151_125_fu_9131_p1 = mul_ln1345_136_reg_17990;

assign sext_ln151_126_fu_9134_p1 = mul_ln1345_137_reg_18000;

assign sext_ln151_127_fu_9146_p1 = mul_ln1345_138_fu_9140_p2;

assign sext_ln151_128_fu_9150_p1 = mul_ln1345_139_reg_18015;

assign sext_ln151_129_fu_9162_p1 = mul_ln1345_140_fu_9156_p2;

assign sext_ln151_12_fu_7860_p1 = mul_ln1345_13_reg_17100;

assign sext_ln151_130_fu_9175_p1 = mul_ln1345_141_fu_9169_p2;

assign sext_ln151_131_fu_9188_p1 = mul_ln1345_142_fu_9182_p2;

assign sext_ln151_132_fu_9326_p1 = mul_ln1345_145_reg_18060;

assign sext_ln151_133_fu_9329_p1 = mul_ln1345_146_reg_18070;

assign sext_ln151_134_fu_9332_p1 = mul_ln1345_147_reg_18080;

assign sext_ln151_135_fu_9335_p1 = mul_ln1345_148_reg_18090;

assign sext_ln151_136_fu_9338_p1 = mul_ln1345_149_reg_18100;

assign sext_ln151_137_fu_9341_p1 = mul_ln1345_150_reg_18110;

assign sext_ln151_138_fu_9344_p1 = mul_ln1345_151_reg_18120;

assign sext_ln151_139_fu_9347_p1 = mul_ln1345_152_reg_18130;

assign sext_ln151_13_fu_7863_p1 = mul_ln1345_14_reg_17105;

assign sext_ln151_140_fu_9350_p1 = mul_ln1345_153_reg_18140;

assign sext_ln151_141_fu_9353_p1 = mul_ln1345_154_reg_18150;

assign sext_ln151_142_fu_9356_p1 = mul_ln1345_155_reg_18160;

assign sext_ln151_143_fu_9368_p1 = mul_ln1345_156_fu_9362_p2;

assign sext_ln151_144_fu_9372_p1 = mul_ln1345_157_reg_18175;

assign sext_ln151_145_fu_9375_p1 = mul_ln1345_158_reg_18185;

assign sext_ln151_146_fu_9378_p1 = mul_ln1345_159_reg_18195;

assign sext_ln151_147_fu_9381_p1 = mul_ln1345_160_reg_18205;

assign sext_ln151_148_fu_9384_p1 = mul_ln1345_161_reg_18215;

assign sext_ln151_149_fu_9396_p1 = mul_ln1345_162_fu_9390_p2;

assign sext_ln151_14_fu_7866_p1 = mul_ln1345_15_reg_17110;

assign sext_ln151_150_fu_9400_p1 = mul_ln1345_163_reg_18230;

assign sext_ln151_151_fu_9412_p1 = mul_ln1345_164_fu_9406_p2;

assign sext_ln151_152_fu_9425_p1 = mul_ln1345_165_fu_9419_p2;

assign sext_ln151_153_fu_9438_p1 = mul_ln1345_166_fu_9432_p2;

assign sext_ln151_154_fu_9576_p1 = mul_ln1345_169_reg_18275;

assign sext_ln151_155_fu_9579_p1 = mul_ln1345_170_reg_18285;

assign sext_ln151_156_fu_9582_p1 = mul_ln1345_171_reg_18295;

assign sext_ln151_157_fu_9585_p1 = mul_ln1345_172_reg_18305;

assign sext_ln151_158_fu_9588_p1 = mul_ln1345_173_reg_18315;

assign sext_ln151_159_fu_9591_p1 = mul_ln1345_174_reg_18325;

assign sext_ln151_15_fu_7869_p1 = mul_ln1345_16_reg_17115;

assign sext_ln151_160_fu_9594_p1 = mul_ln1345_175_reg_18335;

assign sext_ln151_161_fu_9597_p1 = mul_ln1345_176_reg_18345;

assign sext_ln151_162_fu_9600_p1 = mul_ln1345_177_reg_18355;

assign sext_ln151_163_fu_9603_p1 = mul_ln1345_178_reg_18365;

assign sext_ln151_164_fu_9606_p1 = mul_ln1345_179_reg_18375;

assign sext_ln151_165_fu_9618_p1 = mul_ln1345_180_fu_9612_p2;

assign sext_ln151_166_fu_9622_p1 = mul_ln1345_181_reg_18390;

assign sext_ln151_167_fu_9625_p1 = mul_ln1345_182_reg_18400;

assign sext_ln151_168_fu_9628_p1 = mul_ln1345_183_reg_18410;

assign sext_ln151_169_fu_9631_p1 = mul_ln1345_184_reg_18420;

assign sext_ln151_16_fu_7872_p1 = mul_ln1345_17_reg_17120;

assign sext_ln151_170_fu_9634_p1 = mul_ln1345_185_reg_18430;

assign sext_ln151_171_fu_9646_p1 = mul_ln1345_186_fu_9640_p2;

assign sext_ln151_172_fu_9650_p1 = mul_ln1345_187_reg_18445;

assign sext_ln151_173_fu_9662_p1 = mul_ln1345_188_fu_9656_p2;

assign sext_ln151_174_fu_9675_p1 = mul_ln1345_189_fu_9669_p2;

assign sext_ln151_175_fu_9688_p1 = mul_ln1345_190_fu_9682_p2;

assign sext_ln151_176_fu_9826_p1 = mul_ln1345_193_reg_18490;

assign sext_ln151_177_fu_9829_p1 = mul_ln1345_194_reg_18500;

assign sext_ln151_178_fu_9832_p1 = mul_ln1345_195_reg_18510;

assign sext_ln151_179_fu_9835_p1 = mul_ln1345_196_reg_18520;

assign sext_ln151_17_fu_7887_p1 = mul_ln1345_18_fu_7881_p2;

assign sext_ln151_180_fu_9838_p1 = mul_ln1345_197_reg_18530;

assign sext_ln151_181_fu_9841_p1 = mul_ln1345_198_reg_18540;

assign sext_ln151_182_fu_9844_p1 = mul_ln1345_199_reg_18550;

assign sext_ln151_183_fu_9847_p1 = mul_ln1345_200_reg_18560;

assign sext_ln151_184_fu_9850_p1 = mul_ln1345_201_reg_18570;

assign sext_ln151_185_fu_9853_p1 = mul_ln1345_202_reg_18580;

assign sext_ln151_186_fu_9856_p1 = mul_ln1345_203_reg_18590;

assign sext_ln151_187_fu_9868_p1 = mul_ln1345_204_fu_9862_p2;

assign sext_ln151_188_fu_9872_p1 = mul_ln1345_205_reg_18605;

assign sext_ln151_189_fu_9875_p1 = mul_ln1345_206_reg_18615;

assign sext_ln151_18_fu_7891_p1 = mul_ln1345_19_reg_17135;

assign sext_ln151_190_fu_9878_p1 = mul_ln1345_207_reg_18625;

assign sext_ln151_191_fu_9881_p1 = mul_ln1345_208_reg_18635;

assign sext_ln151_192_fu_9884_p1 = mul_ln1345_209_reg_18645;

assign sext_ln151_193_fu_9896_p1 = mul_ln1345_210_fu_9890_p2;

assign sext_ln151_194_fu_9900_p1 = mul_ln1345_211_reg_18660;

assign sext_ln151_195_fu_9912_p1 = mul_ln1345_212_fu_9906_p2;

assign sext_ln151_196_fu_9925_p1 = mul_ln1345_213_fu_9919_p2;

assign sext_ln151_197_fu_9938_p1 = mul_ln1345_214_fu_9932_p2;

assign sext_ln151_198_fu_10076_p1 = mul_ln1345_217_reg_18705;

assign sext_ln151_199_fu_10079_p1 = mul_ln1345_218_reg_18715;

assign sext_ln151_19_fu_7906_p1 = mul_ln1345_20_fu_7900_p2;

assign sext_ln151_1_fu_7814_p1 = mul_ln1345_2_reg_17040;

assign sext_ln151_200_fu_10082_p1 = mul_ln1345_219_reg_18725;

assign sext_ln151_201_fu_10085_p1 = mul_ln1345_220_reg_18735;

assign sext_ln151_202_fu_10088_p1 = mul_ln1345_221_reg_18745;

assign sext_ln151_203_fu_10091_p1 = mul_ln1345_222_reg_18755;

assign sext_ln151_204_fu_10094_p1 = mul_ln1345_223_reg_18765;

assign sext_ln151_205_fu_10097_p1 = mul_ln1345_224_reg_18775;

assign sext_ln151_206_fu_10100_p1 = mul_ln1345_225_reg_18785;

assign sext_ln151_207_fu_10103_p1 = mul_ln1345_226_reg_18795;

assign sext_ln151_208_fu_10106_p1 = mul_ln1345_227_reg_18805;

assign sext_ln151_209_fu_10118_p1 = mul_ln1345_228_fu_10112_p2;

assign sext_ln151_20_fu_7922_p1 = mul_ln1345_21_fu_7916_p2;

assign sext_ln151_210_fu_10122_p1 = mul_ln1345_229_reg_18820;

assign sext_ln151_211_fu_10125_p1 = mul_ln1345_230_reg_18830;

assign sext_ln151_212_fu_10128_p1 = mul_ln1345_231_reg_18840;

assign sext_ln151_213_fu_10131_p1 = mul_ln1345_232_reg_18850;

assign sext_ln151_214_fu_10134_p1 = mul_ln1345_233_reg_18860;

assign sext_ln151_215_fu_10146_p1 = mul_ln1345_234_fu_10140_p2;

assign sext_ln151_216_fu_10150_p1 = mul_ln1345_235_reg_18875;

assign sext_ln151_217_fu_10162_p1 = mul_ln1345_236_fu_10156_p2;

assign sext_ln151_218_fu_10175_p1 = mul_ln1345_237_fu_10169_p2;

assign sext_ln151_219_fu_10188_p1 = mul_ln1345_238_fu_10182_p2;

assign sext_ln151_21_fu_7938_p1 = mul_ln1345_22_fu_7932_p2;

assign sext_ln151_220_fu_10326_p1 = mul_ln1345_241_reg_18920;

assign sext_ln151_221_fu_10329_p1 = mul_ln1345_242_reg_18930;

assign sext_ln151_222_fu_10332_p1 = mul_ln1345_243_reg_18940;

assign sext_ln151_223_fu_10335_p1 = mul_ln1345_244_reg_18950;

assign sext_ln151_224_fu_10338_p1 = mul_ln1345_245_reg_18960;

assign sext_ln151_225_fu_10341_p1 = mul_ln1345_246_reg_18970;

assign sext_ln151_226_fu_10344_p1 = mul_ln1345_247_reg_18980;

assign sext_ln151_227_fu_10347_p1 = mul_ln1345_248_reg_18990;

assign sext_ln151_228_fu_10350_p1 = mul_ln1345_249_reg_19000;

assign sext_ln151_229_fu_10353_p1 = mul_ln1345_250_reg_19010;

assign sext_ln151_22_fu_8076_p1 = mul_ln1345_25_reg_17180;

assign sext_ln151_230_fu_10356_p1 = mul_ln1345_251_reg_19020;

assign sext_ln151_231_fu_10368_p1 = mul_ln1345_252_fu_10362_p2;

assign sext_ln151_232_fu_10372_p1 = mul_ln1345_253_reg_19035;

assign sext_ln151_233_fu_10375_p1 = mul_ln1345_254_reg_19045;

assign sext_ln151_234_fu_10378_p1 = mul_ln1345_255_reg_19055;

assign sext_ln151_235_fu_10381_p1 = mul_ln1345_256_reg_19065;

assign sext_ln151_236_fu_10384_p1 = mul_ln1345_257_reg_19075;

assign sext_ln151_237_fu_10396_p1 = mul_ln1345_258_fu_10390_p2;

assign sext_ln151_238_fu_10400_p1 = mul_ln1345_259_reg_19090;

assign sext_ln151_239_fu_10412_p1 = mul_ln1345_260_fu_10406_p2;

assign sext_ln151_23_fu_8079_p1 = mul_ln1345_26_reg_17185;

assign sext_ln151_240_fu_10425_p1 = mul_ln1345_261_fu_10419_p2;

assign sext_ln151_241_fu_10438_p1 = mul_ln1345_262_fu_10432_p2;

assign sext_ln151_242_fu_10576_p1 = mul_ln1345_265_reg_19135;

assign sext_ln151_243_fu_10579_p1 = mul_ln1345_266_reg_19145;

assign sext_ln151_244_fu_10582_p1 = mul_ln1345_267_reg_19155;

assign sext_ln151_245_fu_10585_p1 = mul_ln1345_268_reg_19165;

assign sext_ln151_246_fu_10588_p1 = mul_ln1345_269_reg_19175;

assign sext_ln151_247_fu_10591_p1 = mul_ln1345_270_reg_19185;

assign sext_ln151_248_fu_10594_p1 = mul_ln1345_271_reg_19195;

assign sext_ln151_249_fu_10597_p1 = mul_ln1345_272_reg_19205;

assign sext_ln151_24_fu_8082_p1 = mul_ln1345_27_reg_17190;

assign sext_ln151_250_fu_10600_p1 = mul_ln1345_273_reg_19215;

assign sext_ln151_251_fu_10603_p1 = mul_ln1345_274_reg_19225;

assign sext_ln151_252_fu_10606_p1 = mul_ln1345_275_reg_19235;

assign sext_ln151_253_fu_10618_p1 = mul_ln1345_276_fu_10612_p2;

assign sext_ln151_254_fu_10622_p1 = mul_ln1345_277_reg_19250;

assign sext_ln151_255_fu_10625_p1 = mul_ln1345_278_reg_19260;

assign sext_ln151_256_fu_10628_p1 = mul_ln1345_279_reg_19270;

assign sext_ln151_257_fu_10631_p1 = mul_ln1345_280_reg_19280;

assign sext_ln151_258_fu_10634_p1 = mul_ln1345_281_reg_19290;

assign sext_ln151_259_fu_10646_p1 = mul_ln1345_282_fu_10640_p2;

assign sext_ln151_25_fu_8085_p1 = mul_ln1345_28_reg_17195;

assign sext_ln151_260_fu_10650_p1 = mul_ln1345_283_reg_19305;

assign sext_ln151_261_fu_10662_p1 = mul_ln1345_284_fu_10656_p2;

assign sext_ln151_262_fu_10675_p1 = mul_ln1345_285_fu_10669_p2;

assign sext_ln151_263_fu_10688_p1 = mul_ln1345_286_fu_10682_p2;

assign sext_ln151_264_fu_10826_p1 = mul_ln1345_289_reg_19364;

assign sext_ln151_265_fu_10829_p1 = mul_ln1345_290_reg_19381;

assign sext_ln151_266_fu_10832_p1 = mul_ln1345_291_reg_19399;

assign sext_ln151_267_fu_10835_p1 = mul_ln1345_292_reg_19417;

assign sext_ln151_268_fu_10838_p1 = mul_ln1345_293_reg_19435;

assign sext_ln151_269_fu_10841_p1 = mul_ln1345_294_reg_19453;

assign sext_ln151_26_fu_8088_p1 = mul_ln1345_29_reg_17200;

assign sext_ln151_270_fu_10844_p1 = mul_ln1345_295_reg_19471;

assign sext_ln151_271_fu_10847_p1 = mul_ln1345_296_reg_19489;

assign sext_ln151_272_fu_10850_p1 = mul_ln1345_297_reg_19507;

assign sext_ln151_273_fu_10853_p1 = mul_ln1345_298_reg_19525;

assign sext_ln151_274_fu_10856_p1 = mul_ln1345_299_reg_19543;

assign sext_ln151_275_fu_10868_p1 = mul_ln1345_300_fu_10862_p2;

assign sext_ln151_276_fu_10872_p1 = mul_ln1345_301_reg_19566;

assign sext_ln151_277_fu_10875_p1 = mul_ln1345_302_reg_19584;

assign sext_ln151_278_fu_10878_p1 = mul_ln1345_303_reg_19602;

assign sext_ln151_279_fu_10881_p1 = mul_ln1345_304_reg_19620;

assign sext_ln151_27_fu_8091_p1 = mul_ln1345_30_reg_17205;

assign sext_ln151_280_fu_10884_p1 = mul_ln1345_305_reg_19638;

assign sext_ln151_281_fu_10896_p1 = mul_ln1345_306_fu_10890_p2;

assign sext_ln151_282_fu_10900_p1 = mul_ln1345_307_reg_19661;

assign sext_ln151_283_fu_10912_p1 = mul_ln1345_308_fu_10906_p2;

assign sext_ln151_284_fu_10925_p1 = mul_ln1345_309_fu_10919_p2;

assign sext_ln151_285_fu_10938_p1 = mul_ln1345_310_fu_10932_p2;

assign sext_ln151_286_fu_11076_p1 = mul_ln1345_313_reg_19704;

assign sext_ln151_287_fu_11079_p1 = mul_ln1345_314_reg_19709;

assign sext_ln151_288_fu_11082_p1 = mul_ln1345_315_reg_19714;

assign sext_ln151_289_fu_11085_p1 = mul_ln1345_316_reg_19719;

assign sext_ln151_28_fu_8094_p1 = mul_ln1345_31_reg_17210;

assign sext_ln151_290_fu_11088_p1 = mul_ln1345_317_reg_19724;

assign sext_ln151_291_fu_11091_p1 = mul_ln1345_318_reg_19729;

assign sext_ln151_292_fu_11094_p1 = mul_ln1345_319_reg_19734;

assign sext_ln151_293_fu_11097_p1 = mul_ln1345_320_reg_19739;

assign sext_ln151_294_fu_11100_p1 = mul_ln1345_321_reg_19744;

assign sext_ln151_295_fu_11103_p1 = mul_ln1345_322_reg_19749;

assign sext_ln151_296_fu_11106_p1 = mul_ln1345_323_reg_19754;

assign sext_ln151_297_fu_11115_p1 = mul_ln1345_324_fu_11109_p2;

assign sext_ln151_298_fu_11119_p1 = mul_ln1345_325_reg_19759;

assign sext_ln151_299_fu_11122_p1 = mul_ln1345_326_reg_19764;

assign sext_ln151_29_fu_8097_p1 = mul_ln1345_32_reg_17215;

assign sext_ln151_2_fu_7817_p1 = mul_ln1345_3_reg_17045;

assign sext_ln151_300_fu_11125_p1 = mul_ln1345_327_reg_19769;

assign sext_ln151_301_fu_11128_p1 = mul_ln1345_328_reg_19774;

assign sext_ln151_302_fu_11131_p1 = mul_ln1345_329_reg_19779;

assign sext_ln151_303_fu_11140_p1 = mul_ln1345_330_fu_11134_p2;

assign sext_ln151_304_fu_11144_p1 = mul_ln1345_331_reg_19784;

assign sext_ln151_305_fu_11153_p1 = mul_ln1345_332_fu_11147_p2;

assign sext_ln151_306_fu_11163_p1 = mul_ln1345_333_fu_11157_p2;

assign sext_ln151_307_fu_11173_p1 = mul_ln1345_334_fu_11167_p2;

assign sext_ln151_308_fu_11311_p1 = mul_ln1345_337_reg_19799;

assign sext_ln151_309_fu_11314_p1 = mul_ln1345_338_reg_19804;

assign sext_ln151_30_fu_8100_p1 = mul_ln1345_33_reg_17220;

assign sext_ln151_310_fu_11317_p1 = mul_ln1345_339_reg_19809;

assign sext_ln151_311_fu_11320_p1 = mul_ln1345_340_reg_19814;

assign sext_ln151_312_fu_11323_p1 = mul_ln1345_341_reg_19819;

assign sext_ln151_313_fu_11326_p1 = mul_ln1345_342_reg_19824;

assign sext_ln151_314_fu_11329_p1 = mul_ln1345_343_reg_19829;

assign sext_ln151_315_fu_11332_p1 = mul_ln1345_344_reg_19834;

assign sext_ln151_316_fu_11335_p1 = mul_ln1345_345_reg_19839;

assign sext_ln151_317_fu_11338_p1 = mul_ln1345_346_reg_19844;

assign sext_ln151_318_fu_11341_p1 = mul_ln1345_347_reg_19849;

assign sext_ln151_319_fu_11350_p1 = mul_ln1345_348_fu_11344_p2;

assign sext_ln151_31_fu_8103_p1 = mul_ln1345_34_reg_17225;

assign sext_ln151_320_fu_11354_p1 = mul_ln1345_349_reg_19854;

assign sext_ln151_321_fu_11357_p1 = mul_ln1345_350_reg_19859;

assign sext_ln151_322_fu_11360_p1 = mul_ln1345_351_reg_19864;

assign sext_ln151_323_fu_11363_p1 = mul_ln1345_352_reg_19869;

assign sext_ln151_324_fu_11366_p1 = mul_ln1345_353_reg_19874;

assign sext_ln151_325_fu_11375_p1 = mul_ln1345_354_fu_11369_p2;

assign sext_ln151_326_fu_11379_p1 = mul_ln1345_355_reg_19879;

assign sext_ln151_327_fu_11388_p1 = mul_ln1345_356_fu_11382_p2;

assign sext_ln151_328_fu_11398_p1 = mul_ln1345_357_fu_11392_p2;

assign sext_ln151_329_fu_11408_p1 = mul_ln1345_358_fu_11402_p2;

assign sext_ln151_32_fu_8106_p1 = mul_ln1345_35_reg_17230;

assign sext_ln151_330_fu_11546_p1 = mul_ln1345_361_reg_19894;

assign sext_ln151_331_fu_11549_p1 = mul_ln1345_362_reg_19899;

assign sext_ln151_332_fu_11556_p1 = mul_ln1345_363_fu_11552_p2;

assign sext_ln151_333_fu_11564_p1 = mul_ln1345_364_fu_11560_p2;

assign sext_ln151_334_fu_11572_p1 = mul_ln1345_365_fu_11568_p2;

assign sext_ln151_335_fu_11580_p1 = mul_ln1345_366_fu_11576_p2;

assign sext_ln151_336_fu_11588_p1 = mul_ln1345_367_fu_11584_p2;

assign sext_ln151_337_fu_11596_p1 = mul_ln1345_368_fu_11592_p2;

assign sext_ln151_338_fu_11604_p1 = mul_ln1345_369_fu_11600_p2;

assign sext_ln151_339_fu_11612_p1 = mul_ln1345_370_fu_11608_p2;

assign sext_ln151_33_fu_8118_p1 = mul_ln1345_36_fu_8112_p2;

assign sext_ln151_340_fu_11620_p1 = mul_ln1345_371_fu_11616_p2;

assign sext_ln151_341_fu_15310_p1 = mul_ln1345_372_reg_20504;

assign sext_ln151_342_fu_11634_p1 = mul_ln1345_373_fu_11630_p2;

assign sext_ln151_343_fu_11642_p1 = mul_ln1345_374_fu_11638_p2;

assign sext_ln151_344_fu_11650_p1 = mul_ln1345_375_fu_11646_p2;

assign sext_ln151_345_fu_11658_p1 = mul_ln1345_376_fu_11654_p2;

assign sext_ln151_346_fu_11666_p1 = mul_ln1345_377_fu_11662_p2;

assign sext_ln151_347_fu_15313_p1 = mul_ln1345_378_reg_20509;

assign sext_ln151_348_fu_11680_p1 = mul_ln1345_379_fu_11676_p2;

assign sext_ln151_349_fu_15316_p1 = mul_ln1345_380_reg_20514;

assign sext_ln151_34_fu_8122_p1 = mul_ln1345_37_reg_17240;

assign sext_ln151_350_fu_11696_p1 = mul_ln1345_381_fu_11690_p2;

assign sext_ln151_351_fu_11706_p1 = mul_ln1345_382_fu_11700_p2;

assign sext_ln151_352_fu_11828_p1 = mul_ln1345_385_fu_11824_p2;

assign sext_ln151_353_fu_11836_p1 = mul_ln1345_386_fu_11832_p2;

assign sext_ln151_354_fu_11844_p1 = mul_ln1345_387_fu_11840_p2;

assign sext_ln151_355_fu_11852_p1 = mul_ln1345_388_fu_11848_p2;

assign sext_ln151_356_fu_11860_p1 = mul_ln1345_389_fu_11856_p2;

assign sext_ln151_357_fu_11868_p1 = mul_ln1345_390_fu_11864_p2;

assign sext_ln151_358_fu_11876_p1 = mul_ln1345_391_fu_11872_p2;

assign sext_ln151_359_fu_11884_p1 = mul_ln1345_392_fu_11880_p2;

assign sext_ln151_35_fu_8125_p1 = mul_ln1345_38_reg_17245;

assign sext_ln151_360_fu_11892_p1 = mul_ln1345_393_fu_11888_p2;

assign sext_ln151_361_fu_11900_p1 = mul_ln1345_394_fu_11896_p2;

assign sext_ln151_362_fu_11908_p1 = mul_ln1345_395_fu_11904_p2;

assign sext_ln151_363_fu_15427_p1 = mul_ln1345_396_reg_20559;

assign sext_ln151_364_fu_11922_p1 = mul_ln1345_397_fu_11918_p2;

assign sext_ln151_365_fu_11930_p1 = mul_ln1345_398_fu_11926_p2;

assign sext_ln151_366_fu_11938_p1 = mul_ln1345_399_fu_11934_p2;

assign sext_ln151_367_fu_11946_p1 = mul_ln1345_400_fu_11942_p2;

assign sext_ln151_368_fu_11954_p1 = mul_ln1345_401_fu_11950_p2;

assign sext_ln151_369_fu_15430_p1 = mul_ln1345_402_reg_20564;

assign sext_ln151_36_fu_8128_p1 = mul_ln1345_39_reg_17250;

assign sext_ln151_370_fu_11968_p1 = mul_ln1345_403_fu_11964_p2;

assign sext_ln151_371_fu_15433_p1 = mul_ln1345_404_reg_20569;

assign sext_ln151_372_fu_11984_p1 = mul_ln1345_405_fu_11978_p2;

assign sext_ln151_373_fu_11994_p1 = mul_ln1345_406_fu_11988_p2;

assign sext_ln151_374_fu_12116_p1 = mul_ln1345_409_fu_12112_p2;

assign sext_ln151_375_fu_12124_p1 = mul_ln1345_410_fu_12120_p2;

assign sext_ln151_376_fu_12132_p1 = mul_ln1345_411_fu_12128_p2;

assign sext_ln151_377_fu_12140_p1 = mul_ln1345_412_fu_12136_p2;

assign sext_ln151_378_fu_12148_p1 = mul_ln1345_413_fu_12144_p2;

assign sext_ln151_379_fu_12156_p1 = mul_ln1345_414_fu_12152_p2;

assign sext_ln151_37_fu_8131_p1 = mul_ln1345_40_reg_17255;

assign sext_ln151_380_fu_12164_p1 = mul_ln1345_415_fu_12160_p2;

assign sext_ln151_381_fu_12172_p1 = mul_ln1345_416_fu_12168_p2;

assign sext_ln151_382_fu_12180_p1 = mul_ln1345_417_fu_12176_p2;

assign sext_ln151_383_fu_12188_p1 = mul_ln1345_418_fu_12184_p2;

assign sext_ln151_384_fu_12196_p1 = mul_ln1345_419_fu_12192_p2;

assign sext_ln151_385_fu_15544_p1 = mul_ln1345_420_reg_20614;

assign sext_ln151_386_fu_12210_p1 = mul_ln1345_421_fu_12206_p2;

assign sext_ln151_387_fu_12218_p1 = mul_ln1345_422_fu_12214_p2;

assign sext_ln151_388_fu_12226_p1 = mul_ln1345_423_fu_12222_p2;

assign sext_ln151_389_fu_12234_p1 = mul_ln1345_424_fu_12230_p2;

assign sext_ln151_38_fu_8134_p1 = mul_ln1345_41_reg_17260;

assign sext_ln151_390_fu_12242_p1 = mul_ln1345_425_fu_12238_p2;

assign sext_ln151_391_fu_15547_p1 = mul_ln1345_426_reg_20619;

assign sext_ln151_392_fu_12256_p1 = mul_ln1345_427_fu_12252_p2;

assign sext_ln151_393_fu_15550_p1 = mul_ln1345_428_reg_20624;

assign sext_ln151_394_fu_12272_p1 = mul_ln1345_429_fu_12266_p2;

assign sext_ln151_395_fu_12282_p1 = mul_ln1345_430_fu_12276_p2;

assign sext_ln151_396_fu_12404_p1 = mul_ln1345_433_fu_12400_p2;

assign sext_ln151_397_fu_12412_p1 = mul_ln1345_434_fu_12408_p2;

assign sext_ln151_398_fu_12420_p1 = mul_ln1345_435_fu_12416_p2;

assign sext_ln151_399_fu_12428_p1 = mul_ln1345_436_fu_12424_p2;

assign sext_ln151_39_fu_8146_p1 = mul_ln1345_42_fu_8140_p2;

assign sext_ln151_3_fu_7820_p1 = mul_ln1345_4_reg_17050;

assign sext_ln151_400_fu_12436_p1 = mul_ln1345_437_fu_12432_p2;

assign sext_ln151_401_fu_12444_p1 = mul_ln1345_438_fu_12440_p2;

assign sext_ln151_402_fu_12452_p1 = mul_ln1345_439_fu_12448_p2;

assign sext_ln151_403_fu_12460_p1 = mul_ln1345_440_fu_12456_p2;

assign sext_ln151_404_fu_12468_p1 = mul_ln1345_441_fu_12464_p2;

assign sext_ln151_405_fu_12476_p1 = mul_ln1345_442_fu_12472_p2;

assign sext_ln151_406_fu_12484_p1 = mul_ln1345_443_fu_12480_p2;

assign sext_ln151_407_fu_15661_p1 = mul_ln1345_444_reg_20669;

assign sext_ln151_408_fu_12498_p1 = mul_ln1345_445_fu_12494_p2;

assign sext_ln151_409_fu_12506_p1 = mul_ln1345_446_fu_12502_p2;

assign sext_ln151_40_fu_8150_p1 = mul_ln1345_43_reg_17270;

assign sext_ln151_410_fu_12514_p1 = mul_ln1345_447_fu_12510_p2;

assign sext_ln151_411_fu_12522_p1 = mul_ln1345_448_fu_12518_p2;

assign sext_ln151_412_fu_12530_p1 = mul_ln1345_449_fu_12526_p2;

assign sext_ln151_413_fu_15664_p1 = mul_ln1345_450_reg_20674;

assign sext_ln151_414_fu_12544_p1 = mul_ln1345_451_fu_12540_p2;

assign sext_ln151_415_fu_15667_p1 = mul_ln1345_452_reg_20679;

assign sext_ln151_416_fu_12560_p1 = mul_ln1345_453_fu_12554_p2;

assign sext_ln151_417_fu_12570_p1 = mul_ln1345_454_fu_12564_p2;

assign sext_ln151_418_fu_12692_p1 = mul_ln1345_457_fu_12688_p2;

assign sext_ln151_419_fu_12700_p1 = mul_ln1345_458_fu_12696_p2;

assign sext_ln151_41_fu_8162_p1 = mul_ln1345_44_fu_8156_p2;

assign sext_ln151_420_fu_12708_p1 = mul_ln1345_459_fu_12704_p2;

assign sext_ln151_421_fu_12716_p1 = mul_ln1345_460_fu_12712_p2;

assign sext_ln151_422_fu_12724_p1 = mul_ln1345_461_fu_12720_p2;

assign sext_ln151_423_fu_12732_p1 = mul_ln1345_462_fu_12728_p2;

assign sext_ln151_424_fu_12740_p1 = mul_ln1345_463_fu_12736_p2;

assign sext_ln151_425_fu_12748_p1 = mul_ln1345_464_fu_12744_p2;

assign sext_ln151_426_fu_12756_p1 = mul_ln1345_465_fu_12752_p2;

assign sext_ln151_427_fu_12764_p1 = mul_ln1345_466_fu_12760_p2;

assign sext_ln151_428_fu_12772_p1 = mul_ln1345_467_fu_12768_p2;

assign sext_ln151_429_fu_15778_p1 = mul_ln1345_468_reg_20724;

assign sext_ln151_42_fu_8175_p1 = mul_ln1345_45_fu_8169_p2;

assign sext_ln151_430_fu_12786_p1 = mul_ln1345_469_fu_12782_p2;

assign sext_ln151_431_fu_12794_p1 = mul_ln1345_470_fu_12790_p2;

assign sext_ln151_432_fu_12802_p1 = mul_ln1345_471_fu_12798_p2;

assign sext_ln151_433_fu_12810_p1 = mul_ln1345_472_fu_12806_p2;

assign sext_ln151_434_fu_12818_p1 = mul_ln1345_473_fu_12814_p2;

assign sext_ln151_435_fu_15781_p1 = mul_ln1345_474_reg_20729;

assign sext_ln151_436_fu_12832_p1 = mul_ln1345_475_fu_12828_p2;

assign sext_ln151_437_fu_15784_p1 = mul_ln1345_476_reg_20734;

assign sext_ln151_438_fu_12848_p1 = mul_ln1345_477_fu_12842_p2;

assign sext_ln151_439_fu_12858_p1 = mul_ln1345_478_fu_12852_p2;

assign sext_ln151_43_fu_8188_p1 = mul_ln1345_46_fu_8182_p2;

assign sext_ln151_440_fu_12980_p1 = mul_ln1345_481_fu_12976_p2;

assign sext_ln151_441_fu_12988_p1 = mul_ln1345_482_fu_12984_p2;

assign sext_ln151_442_fu_12996_p1 = mul_ln1345_483_fu_12992_p2;

assign sext_ln151_443_fu_13004_p1 = mul_ln1345_484_fu_13000_p2;

assign sext_ln151_444_fu_13012_p1 = mul_ln1345_485_fu_13008_p2;

assign sext_ln151_445_fu_13020_p1 = mul_ln1345_486_fu_13016_p2;

assign sext_ln151_446_fu_13028_p1 = mul_ln1345_487_fu_13024_p2;

assign sext_ln151_447_fu_13036_p1 = mul_ln1345_488_fu_13032_p2;

assign sext_ln151_448_fu_13044_p1 = mul_ln1345_489_fu_13040_p2;

assign sext_ln151_449_fu_13052_p1 = mul_ln1345_490_fu_13048_p2;

assign sext_ln151_44_fu_8326_p1 = mul_ln1345_49_reg_17300;

assign sext_ln151_450_fu_13060_p1 = mul_ln1345_491_fu_13056_p2;

assign sext_ln151_451_fu_15895_p1 = mul_ln1345_492_reg_20779;

assign sext_ln151_452_fu_13074_p1 = mul_ln1345_493_fu_13070_p2;

assign sext_ln151_453_fu_13082_p1 = mul_ln1345_494_fu_13078_p2;

assign sext_ln151_454_fu_13090_p1 = mul_ln1345_495_fu_13086_p2;

assign sext_ln151_455_fu_13098_p1 = mul_ln1345_496_fu_13094_p2;

assign sext_ln151_456_fu_13106_p1 = mul_ln1345_497_fu_13102_p2;

assign sext_ln151_457_fu_15898_p1 = mul_ln1345_498_reg_20784;

assign sext_ln151_458_fu_13120_p1 = mul_ln1345_499_fu_13116_p2;

assign sext_ln151_459_fu_15901_p1 = mul_ln1345_500_reg_20789;

assign sext_ln151_45_fu_8329_p1 = mul_ln1345_50_reg_17305;

assign sext_ln151_460_fu_13136_p1 = mul_ln1345_501_fu_13130_p2;

assign sext_ln151_461_fu_13146_p1 = mul_ln1345_502_fu_13140_p2;

assign sext_ln151_462_fu_13268_p1 = mul_ln1345_505_fu_13264_p2;

assign sext_ln151_463_fu_13276_p1 = mul_ln1345_506_fu_13272_p2;

assign sext_ln151_464_fu_13284_p1 = mul_ln1345_507_fu_13280_p2;

assign sext_ln151_465_fu_13292_p1 = mul_ln1345_508_fu_13288_p2;

assign sext_ln151_466_fu_13300_p1 = mul_ln1345_509_fu_13296_p2;

assign sext_ln151_467_fu_13308_p1 = mul_ln1345_510_fu_13304_p2;

assign sext_ln151_468_fu_13316_p1 = mul_ln1345_511_fu_13312_p2;

assign sext_ln151_469_fu_13324_p1 = mul_ln1345_512_fu_13320_p2;

assign sext_ln151_46_fu_8332_p1 = mul_ln1345_51_reg_17310;

assign sext_ln151_470_fu_13332_p1 = mul_ln1345_513_fu_13328_p2;

assign sext_ln151_471_fu_13340_p1 = mul_ln1345_514_fu_13336_p2;

assign sext_ln151_472_fu_13348_p1 = mul_ln1345_515_fu_13344_p2;

assign sext_ln151_473_fu_16012_p1 = mul_ln1345_516_reg_20834;

assign sext_ln151_474_fu_13362_p1 = mul_ln1345_517_fu_13358_p2;

assign sext_ln151_475_fu_13370_p1 = mul_ln1345_518_fu_13366_p2;

assign sext_ln151_476_fu_13378_p1 = mul_ln1345_519_fu_13374_p2;

assign sext_ln151_477_fu_13386_p1 = mul_ln1345_520_fu_13382_p2;

assign sext_ln151_478_fu_13394_p1 = mul_ln1345_521_fu_13390_p2;

assign sext_ln151_479_fu_16015_p1 = mul_ln1345_522_reg_20839;

assign sext_ln151_47_fu_8335_p1 = mul_ln1345_52_reg_17315;

assign sext_ln151_480_fu_13408_p1 = mul_ln1345_523_fu_13404_p2;

assign sext_ln151_481_fu_16018_p1 = mul_ln1345_524_reg_20844;

assign sext_ln151_482_fu_13424_p1 = mul_ln1345_525_fu_13418_p2;

assign sext_ln151_483_fu_13434_p1 = mul_ln1345_526_fu_13428_p2;

assign sext_ln151_484_fu_13556_p1 = mul_ln1345_529_fu_13552_p2;

assign sext_ln151_485_fu_13564_p1 = mul_ln1345_530_fu_13560_p2;

assign sext_ln151_486_fu_13572_p1 = mul_ln1345_531_fu_13568_p2;

assign sext_ln151_487_fu_13580_p1 = mul_ln1345_532_fu_13576_p2;

assign sext_ln151_488_fu_13588_p1 = mul_ln1345_533_fu_13584_p2;

assign sext_ln151_489_fu_13596_p1 = mul_ln1345_534_fu_13592_p2;

assign sext_ln151_48_fu_8338_p1 = mul_ln1345_53_reg_17320;

assign sext_ln151_490_fu_13604_p1 = mul_ln1345_535_fu_13600_p2;

assign sext_ln151_491_fu_13612_p1 = mul_ln1345_536_fu_13608_p2;

assign sext_ln151_492_fu_13620_p1 = mul_ln1345_537_fu_13616_p2;

assign sext_ln151_493_fu_13628_p1 = mul_ln1345_538_fu_13624_p2;

assign sext_ln151_494_fu_13636_p1 = mul_ln1345_539_fu_13632_p2;

assign sext_ln151_495_fu_16129_p1 = mul_ln1345_540_reg_20889;

assign sext_ln151_496_fu_13650_p1 = mul_ln1345_541_fu_13646_p2;

assign sext_ln151_497_fu_13658_p1 = mul_ln1345_542_fu_13654_p2;

assign sext_ln151_498_fu_13666_p1 = mul_ln1345_543_fu_13662_p2;

assign sext_ln151_499_fu_13674_p1 = mul_ln1345_544_fu_13670_p2;

assign sext_ln151_49_fu_8341_p1 = mul_ln1345_54_reg_17325;

assign sext_ln151_4_fu_7823_p1 = mul_ln1345_5_reg_17055;

assign sext_ln151_500_fu_13682_p1 = mul_ln1345_545_fu_13678_p2;

assign sext_ln151_501_fu_16132_p1 = mul_ln1345_546_reg_20894;

assign sext_ln151_502_fu_13696_p1 = mul_ln1345_547_fu_13692_p2;

assign sext_ln151_503_fu_16135_p1 = mul_ln1345_548_reg_20899;

assign sext_ln151_504_fu_13712_p1 = mul_ln1345_549_fu_13706_p2;

assign sext_ln151_505_fu_13722_p1 = mul_ln1345_550_fu_13716_p2;

assign sext_ln151_506_fu_13844_p1 = mul_ln1345_553_fu_13840_p2;

assign sext_ln151_507_fu_13852_p1 = mul_ln1345_554_fu_13848_p2;

assign sext_ln151_508_fu_13860_p1 = mul_ln1345_555_fu_13856_p2;

assign sext_ln151_509_fu_13868_p1 = mul_ln1345_556_fu_13864_p2;

assign sext_ln151_50_fu_8344_p1 = mul_ln1345_55_reg_17330;

assign sext_ln151_510_fu_13876_p1 = mul_ln1345_557_fu_13872_p2;

assign sext_ln151_511_fu_13884_p1 = mul_ln1345_558_fu_13880_p2;

assign sext_ln151_512_fu_13892_p1 = mul_ln1345_559_fu_13888_p2;

assign sext_ln151_513_fu_13900_p1 = mul_ln1345_560_fu_13896_p2;

assign sext_ln151_514_fu_13908_p1 = mul_ln1345_561_fu_13904_p2;

assign sext_ln151_515_fu_13916_p1 = mul_ln1345_562_fu_13912_p2;

assign sext_ln151_516_fu_13924_p1 = mul_ln1345_563_fu_13920_p2;

assign sext_ln151_517_fu_16246_p1 = mul_ln1345_564_reg_20944;

assign sext_ln151_518_fu_13938_p1 = mul_ln1345_565_fu_13934_p2;

assign sext_ln151_519_fu_13946_p1 = mul_ln1345_566_fu_13942_p2;

assign sext_ln151_51_fu_8347_p1 = mul_ln1345_56_reg_17335;

assign sext_ln151_520_fu_13954_p1 = mul_ln1345_567_fu_13950_p2;

assign sext_ln151_521_fu_13962_p1 = mul_ln1345_568_fu_13958_p2;

assign sext_ln151_522_fu_13970_p1 = mul_ln1345_569_fu_13966_p2;

assign sext_ln151_523_fu_16249_p1 = mul_ln1345_570_reg_20949;

assign sext_ln151_524_fu_13984_p1 = mul_ln1345_571_fu_13980_p2;

assign sext_ln151_525_fu_16252_p1 = mul_ln1345_572_reg_20954;

assign sext_ln151_526_fu_14000_p1 = mul_ln1345_573_fu_13994_p2;

assign sext_ln151_527_fu_14010_p1 = mul_ln1345_574_fu_14004_p2;

assign sext_ln151_52_fu_8350_p1 = mul_ln1345_57_reg_17340;

assign sext_ln151_53_fu_8353_p1 = mul_ln1345_58_reg_17345;

assign sext_ln151_54_fu_8356_p1 = mul_ln1345_59_reg_17350;

assign sext_ln151_55_fu_8368_p1 = mul_ln1345_60_fu_8362_p2;

assign sext_ln151_56_fu_8372_p1 = mul_ln1345_61_reg_17360;

assign sext_ln151_57_fu_8375_p1 = mul_ln1345_62_reg_17365;

assign sext_ln151_58_fu_8378_p1 = mul_ln1345_63_reg_17370;

assign sext_ln151_59_fu_8381_p1 = mul_ln1345_64_reg_17375;

assign sext_ln151_5_fu_7826_p1 = mul_ln1345_6_reg_17060;

assign sext_ln151_60_fu_8384_p1 = mul_ln1345_65_reg_17380;

assign sext_ln151_61_fu_8396_p1 = mul_ln1345_66_fu_8390_p2;

assign sext_ln151_62_fu_8400_p1 = mul_ln1345_67_reg_17390;

assign sext_ln151_63_fu_8412_p1 = mul_ln1345_68_fu_8406_p2;

assign sext_ln151_64_fu_8425_p1 = mul_ln1345_69_fu_8419_p2;

assign sext_ln151_65_fu_8438_p1 = mul_ln1345_70_fu_8432_p2;

assign sext_ln151_66_fu_8576_p1 = mul_ln1345_73_reg_17420;

assign sext_ln151_67_fu_8579_p1 = mul_ln1345_74_reg_17425;

assign sext_ln151_68_fu_8582_p1 = mul_ln1345_75_reg_17435;

assign sext_ln151_69_fu_8585_p1 = mul_ln1345_76_reg_17445;

assign sext_ln151_6_fu_7829_p1 = mul_ln1345_7_reg_17065;

assign sext_ln151_70_fu_8588_p1 = mul_ln1345_77_reg_17455;

assign sext_ln151_71_fu_8591_p1 = mul_ln1345_78_reg_17465;

assign sext_ln151_72_fu_8594_p1 = mul_ln1345_79_reg_17475;

assign sext_ln151_73_fu_8597_p1 = mul_ln1345_80_reg_17485;

assign sext_ln151_74_fu_8600_p1 = mul_ln1345_81_reg_17495;

assign sext_ln151_75_fu_8603_p1 = mul_ln1345_82_reg_17505;

assign sext_ln151_76_fu_8606_p1 = mul_ln1345_83_reg_17515;

assign sext_ln151_77_fu_8618_p1 = mul_ln1345_84_fu_8612_p2;

assign sext_ln151_78_fu_8622_p1 = mul_ln1345_85_reg_17530;

assign sext_ln151_79_fu_8625_p1 = mul_ln1345_86_reg_17540;

assign sext_ln151_7_fu_7832_p1 = mul_ln1345_8_reg_17070;

assign sext_ln151_80_fu_8628_p1 = mul_ln1345_87_reg_17550;

assign sext_ln151_81_fu_8631_p1 = mul_ln1345_88_reg_17560;

assign sext_ln151_82_fu_8634_p1 = mul_ln1345_89_reg_17570;

assign sext_ln151_83_fu_8646_p1 = mul_ln1345_90_fu_8640_p2;

assign sext_ln151_84_fu_8650_p1 = mul_ln1345_91_reg_17585;

assign sext_ln151_85_fu_8662_p1 = mul_ln1345_92_fu_8656_p2;

assign sext_ln151_86_fu_8675_p1 = mul_ln1345_93_fu_8669_p2;

assign sext_ln151_87_fu_8688_p1 = mul_ln1345_94_fu_8682_p2;

assign sext_ln151_88_fu_8826_p1 = mul_ln1345_97_reg_17630;

assign sext_ln151_89_fu_8829_p1 = mul_ln1345_98_reg_17640;

assign sext_ln151_8_fu_7835_p1 = mul_ln1345_9_reg_17075;

assign sext_ln151_90_fu_8832_p1 = mul_ln1345_99_reg_17650;

assign sext_ln151_91_fu_8835_p1 = mul_ln1345_100_reg_17660;

assign sext_ln151_92_fu_8838_p1 = mul_ln1345_101_reg_17670;

assign sext_ln151_93_fu_8841_p1 = mul_ln1345_102_reg_17680;

assign sext_ln151_94_fu_8844_p1 = mul_ln1345_103_reg_17690;

assign sext_ln151_95_fu_8847_p1 = mul_ln1345_104_reg_17700;

assign sext_ln151_96_fu_8850_p1 = mul_ln1345_105_reg_17710;

assign sext_ln151_97_fu_8853_p1 = mul_ln1345_106_reg_17720;

assign sext_ln151_98_fu_8856_p1 = mul_ln1345_107_reg_17730;

assign sext_ln151_99_fu_8868_p1 = mul_ln1345_108_fu_8862_p2;

assign sext_ln151_9_fu_7838_p1 = mul_ln1345_10_reg_17080;

assign sext_ln151_fu_7811_p1 = mul_ln1345_1_reg_17035;

assign sext_ln691_100_fu_9021_p1 = $signed(add_ln691_109_fu_9015_p2);

assign sext_ln691_101_fu_14485_p1 = $signed(add_ln691_110_reg_20089);

assign sext_ln691_102_fu_14494_p1 = $signed(add_ln691_111_fu_14488_p2);

assign sext_ln691_103_fu_9037_p1 = $signed(add_ln691_112_fu_9031_p2);

assign sext_ln691_104_fu_14498_p1 = $signed(add_ln691_113_reg_20094);

assign sext_ln691_105_fu_9053_p1 = $signed(add_ln691_114_fu_9047_p2);

assign sext_ln691_106_fu_9063_p1 = $signed(add_ln691_115_fu_9057_p2);

assign sext_ln691_107_fu_14501_p1 = $signed(add_ln691_116_reg_20099);

assign sext_ln691_108_fu_14510_p1 = $signed(add_ln691_117_fu_14504_p2);

assign sext_ln691_109_fu_16429_p1 = $signed(add_ln691_118_reg_21069);

assign sext_ln691_10_fu_8005_p1 = $signed(add_ln691_11_fu_7999_p2);

assign sext_ln691_110_fu_9073_p1 = mul_ln1345_120_reg_17835;

assign sext_ln691_111_fu_9192_p1 = mul_ln1345_143_reg_18040;

assign sext_ln691_112_fu_14530_p1 = $signed(add_ln691_120_reg_20104);

assign sext_ln691_113_fu_9207_p1 = $signed(add_ln691_122_fu_9201_p2);

assign sext_ln691_114_fu_14539_p1 = $signed(add_ln691_123_reg_20109);

assign sext_ln691_115_fu_9223_p1 = $signed(add_ln691_125_fu_9217_p2);

assign sext_ln691_116_fu_14548_p1 = $signed(add_ln691_126_reg_20114);

assign sext_ln691_117_fu_9239_p1 = $signed(add_ln691_127_fu_9233_p2);

assign sext_ln691_118_fu_14551_p1 = $signed(add_ln691_128_reg_20119);

assign sext_ln691_119_fu_16438_p1 = $signed(add_ln691_129_reg_21079);

assign sext_ln691_11_fu_14170_p1 = $signed(add_ln691_12_reg_19924);

assign sext_ln691_120_fu_9255_p1 = $signed(add_ln691_131_fu_9249_p2);

assign sext_ln691_121_fu_14560_p1 = $signed(add_ln691_132_reg_20124);

assign sext_ln691_122_fu_9271_p1 = $signed(add_ln691_133_fu_9265_p2);

assign sext_ln691_123_fu_14563_p1 = $signed(add_ln691_134_reg_20129);

assign sext_ln691_124_fu_14572_p1 = $signed(add_ln691_135_fu_14566_p2);

assign sext_ln691_125_fu_9287_p1 = $signed(add_ln691_136_fu_9281_p2);

assign sext_ln691_126_fu_14576_p1 = $signed(add_ln691_137_reg_20134);

assign sext_ln691_127_fu_9303_p1 = $signed(add_ln691_138_fu_9297_p2);

assign sext_ln691_128_fu_9313_p1 = $signed(add_ln691_139_fu_9307_p2);

assign sext_ln691_129_fu_14579_p1 = $signed(add_ln691_140_reg_20139);

assign sext_ln691_12_fu_8021_p1 = $signed(add_ln691_13_fu_8015_p2);

assign sext_ln691_130_fu_14588_p1 = $signed(add_ln691_141_fu_14582_p2);

assign sext_ln691_131_fu_16446_p1 = $signed(add_ln691_142_reg_21084);

assign sext_ln691_132_fu_9323_p1 = mul_ln1345_144_reg_18050;

assign sext_ln691_133_fu_9442_p1 = mul_ln1345_167_reg_18255;

assign sext_ln691_134_fu_14608_p1 = $signed(add_ln691_144_reg_20144);

assign sext_ln691_135_fu_9457_p1 = $signed(add_ln691_146_fu_9451_p2);

assign sext_ln691_136_fu_14617_p1 = $signed(add_ln691_147_reg_20149);

assign sext_ln691_137_fu_9473_p1 = $signed(add_ln691_149_fu_9467_p2);

assign sext_ln691_138_fu_14626_p1 = $signed(add_ln691_150_reg_20154);

assign sext_ln691_139_fu_9489_p1 = $signed(add_ln691_151_fu_9483_p2);

assign sext_ln691_13_fu_14173_p1 = $signed(add_ln691_14_reg_19929);

assign sext_ln691_140_fu_14629_p1 = $signed(add_ln691_152_reg_20159);

assign sext_ln691_141_fu_16455_p1 = $signed(add_ln691_153_reg_21094);

assign sext_ln691_142_fu_9505_p1 = $signed(add_ln691_155_fu_9499_p2);

assign sext_ln691_143_fu_14638_p1 = $signed(add_ln691_156_reg_20164);

assign sext_ln691_144_fu_9521_p1 = $signed(add_ln691_157_fu_9515_p2);

assign sext_ln691_145_fu_14641_p1 = $signed(add_ln691_158_reg_20169);

assign sext_ln691_146_fu_14650_p1 = $signed(add_ln691_159_fu_14644_p2);

assign sext_ln691_147_fu_9537_p1 = $signed(add_ln691_160_fu_9531_p2);

assign sext_ln691_148_fu_14654_p1 = $signed(add_ln691_161_reg_20174);

assign sext_ln691_149_fu_9553_p1 = $signed(add_ln691_162_fu_9547_p2);

assign sext_ln691_14_fu_14182_p1 = $signed(add_ln691_15_fu_14176_p2);

assign sext_ln691_150_fu_9563_p1 = $signed(add_ln691_163_fu_9557_p2);

assign sext_ln691_151_fu_14657_p1 = $signed(add_ln691_164_reg_20179);

assign sext_ln691_152_fu_14666_p1 = $signed(add_ln691_165_fu_14660_p2);

assign sext_ln691_153_fu_16463_p1 = $signed(add_ln691_166_reg_21099);

assign sext_ln691_154_fu_9573_p1 = mul_ln1345_168_reg_18265;

assign sext_ln691_155_fu_9692_p1 = mul_ln1345_191_reg_18470;

assign sext_ln691_156_fu_14686_p1 = $signed(add_ln691_168_reg_20184);

assign sext_ln691_157_fu_9707_p1 = $signed(add_ln691_170_fu_9701_p2);

assign sext_ln691_158_fu_14695_p1 = $signed(add_ln691_171_reg_20189);

assign sext_ln691_159_fu_9723_p1 = $signed(add_ln691_173_fu_9717_p2);

assign sext_ln691_15_fu_8037_p1 = $signed(add_ln691_16_fu_8031_p2);

assign sext_ln691_160_fu_14704_p1 = $signed(add_ln691_174_reg_20194);

assign sext_ln691_161_fu_9739_p1 = $signed(add_ln691_175_fu_9733_p2);

assign sext_ln691_162_fu_14707_p1 = $signed(add_ln691_176_reg_20199);

assign sext_ln691_163_fu_16472_p1 = $signed(add_ln691_177_reg_21109);

assign sext_ln691_164_fu_9755_p1 = $signed(add_ln691_179_fu_9749_p2);

assign sext_ln691_165_fu_14716_p1 = $signed(add_ln691_180_reg_20204);

assign sext_ln691_166_fu_9771_p1 = $signed(add_ln691_181_fu_9765_p2);

assign sext_ln691_167_fu_14719_p1 = $signed(add_ln691_182_reg_20209);

assign sext_ln691_168_fu_14728_p1 = $signed(add_ln691_183_fu_14722_p2);

assign sext_ln691_169_fu_9787_p1 = $signed(add_ln691_184_fu_9781_p2);

assign sext_ln691_16_fu_14186_p1 = $signed(add_ln691_17_reg_19934);

assign sext_ln691_170_fu_14732_p1 = $signed(add_ln691_185_reg_20214);

assign sext_ln691_171_fu_9803_p1 = $signed(add_ln691_186_fu_9797_p2);

assign sext_ln691_172_fu_9813_p1 = $signed(add_ln691_187_fu_9807_p2);

assign sext_ln691_173_fu_14735_p1 = $signed(add_ln691_188_reg_20219);

assign sext_ln691_174_fu_14744_p1 = $signed(add_ln691_189_fu_14738_p2);

assign sext_ln691_175_fu_16480_p1 = $signed(add_ln691_190_reg_21114);

assign sext_ln691_176_fu_9823_p1 = mul_ln1345_192_reg_18480;

assign sext_ln691_177_fu_9942_p1 = mul_ln1345_215_reg_18685;

assign sext_ln691_178_fu_14764_p1 = $signed(add_ln691_192_reg_20224);

assign sext_ln691_179_fu_9957_p1 = $signed(add_ln691_194_fu_9951_p2);

assign sext_ln691_17_fu_8053_p1 = $signed(add_ln691_18_fu_8047_p2);

assign sext_ln691_180_fu_14773_p1 = $signed(add_ln691_195_reg_20229);

assign sext_ln691_181_fu_9973_p1 = $signed(add_ln691_197_fu_9967_p2);

assign sext_ln691_182_fu_14782_p1 = $signed(add_ln691_198_reg_20234);

assign sext_ln691_183_fu_9989_p1 = $signed(add_ln691_199_fu_9983_p2);

assign sext_ln691_184_fu_14785_p1 = $signed(add_ln691_200_reg_20239);

assign sext_ln691_185_fu_16489_p1 = $signed(add_ln691_201_reg_21124);

assign sext_ln691_186_fu_10005_p1 = $signed(add_ln691_203_fu_9999_p2);

assign sext_ln691_187_fu_14794_p1 = $signed(add_ln691_204_reg_20244);

assign sext_ln691_188_fu_10021_p1 = $signed(add_ln691_205_fu_10015_p2);

assign sext_ln691_189_fu_14797_p1 = $signed(add_ln691_206_reg_20249);

assign sext_ln691_18_fu_8063_p1 = $signed(add_ln691_19_fu_8057_p2);

assign sext_ln691_190_fu_14806_p1 = $signed(add_ln691_207_fu_14800_p2);

assign sext_ln691_191_fu_10037_p1 = $signed(add_ln691_208_fu_10031_p2);

assign sext_ln691_192_fu_14810_p1 = $signed(add_ln691_209_reg_20254);

assign sext_ln691_193_fu_10053_p1 = $signed(add_ln691_210_fu_10047_p2);

assign sext_ln691_194_fu_10063_p1 = $signed(add_ln691_211_fu_10057_p2);

assign sext_ln691_195_fu_14813_p1 = $signed(add_ln691_212_reg_20259);

assign sext_ln691_196_fu_14822_p1 = $signed(add_ln691_213_fu_14816_p2);

assign sext_ln691_197_fu_16497_p1 = $signed(add_ln691_214_reg_21129);

assign sext_ln691_198_fu_10073_p1 = mul_ln1345_216_reg_18695;

assign sext_ln691_199_fu_10192_p1 = mul_ln1345_239_reg_18900;

assign sext_ln691_19_fu_14189_p1 = $signed(add_ln691_20_reg_19939);

assign sext_ln691_1_fu_7942_p1 = mul_ln1345_23_reg_17170;

assign sext_ln691_200_fu_14842_p1 = $signed(add_ln691_216_reg_20264);

assign sext_ln691_201_fu_10207_p1 = $signed(add_ln691_218_fu_10201_p2);

assign sext_ln691_202_fu_14851_p1 = $signed(add_ln691_219_reg_20269);

assign sext_ln691_203_fu_10223_p1 = $signed(add_ln691_221_fu_10217_p2);

assign sext_ln691_204_fu_14860_p1 = $signed(add_ln691_222_reg_20274);

assign sext_ln691_205_fu_10239_p1 = $signed(add_ln691_223_fu_10233_p2);

assign sext_ln691_206_fu_14863_p1 = $signed(add_ln691_224_reg_20279);

assign sext_ln691_207_fu_16506_p1 = $signed(add_ln691_225_reg_21139);

assign sext_ln691_208_fu_10255_p1 = $signed(add_ln691_227_fu_10249_p2);

assign sext_ln691_209_fu_14872_p1 = $signed(add_ln691_228_reg_20284);

assign sext_ln691_20_fu_14198_p1 = $signed(add_ln691_21_fu_14192_p2);

assign sext_ln691_210_fu_10271_p1 = $signed(add_ln691_229_fu_10265_p2);

assign sext_ln691_211_fu_14875_p1 = $signed(add_ln691_230_reg_20289);

assign sext_ln691_212_fu_14884_p1 = $signed(add_ln691_231_fu_14878_p2);

assign sext_ln691_213_fu_10287_p1 = $signed(add_ln691_232_fu_10281_p2);

assign sext_ln691_214_fu_14888_p1 = $signed(add_ln691_233_reg_20294);

assign sext_ln691_215_fu_10303_p1 = $signed(add_ln691_234_fu_10297_p2);

assign sext_ln691_216_fu_10313_p1 = $signed(add_ln691_235_fu_10307_p2);

assign sext_ln691_217_fu_14891_p1 = $signed(add_ln691_236_reg_20299);

assign sext_ln691_218_fu_14900_p1 = $signed(add_ln691_237_fu_14894_p2);

assign sext_ln691_219_fu_16514_p1 = $signed(add_ln691_238_reg_21144);

assign sext_ln691_21_fu_16361_p1 = $signed(add_ln691_22_reg_21009);

assign sext_ln691_220_fu_10323_p1 = mul_ln1345_240_reg_18910;

assign sext_ln691_221_fu_10442_p1 = mul_ln1345_263_reg_19115;

assign sext_ln691_222_fu_14920_p1 = $signed(add_ln691_240_reg_20304);

assign sext_ln691_223_fu_10457_p1 = $signed(add_ln691_242_fu_10451_p2);

assign sext_ln691_224_fu_14929_p1 = $signed(add_ln691_243_reg_20309);

assign sext_ln691_225_fu_10473_p1 = $signed(add_ln691_245_fu_10467_p2);

assign sext_ln691_226_fu_14938_p1 = $signed(add_ln691_246_reg_20314);

assign sext_ln691_227_fu_10489_p1 = $signed(add_ln691_247_fu_10483_p2);

assign sext_ln691_228_fu_14941_p1 = $signed(add_ln691_248_reg_20319);

assign sext_ln691_229_fu_16523_p1 = $signed(add_ln691_249_reg_21154);

assign sext_ln691_22_fu_8073_p1 = mul_ln1345_24_reg_17175;

assign sext_ln691_230_fu_10505_p1 = $signed(add_ln691_251_fu_10499_p2);

assign sext_ln691_231_fu_14950_p1 = $signed(add_ln691_252_reg_20324);

assign sext_ln691_232_fu_10521_p1 = $signed(add_ln691_253_fu_10515_p2);

assign sext_ln691_233_fu_14953_p1 = $signed(add_ln691_254_reg_20329);

assign sext_ln691_234_fu_14962_p1 = $signed(add_ln691_255_fu_14956_p2);

assign sext_ln691_235_fu_10537_p1 = $signed(add_ln691_256_fu_10531_p2);

assign sext_ln691_236_fu_14966_p1 = $signed(add_ln691_257_reg_20334);

assign sext_ln691_237_fu_10553_p1 = $signed(add_ln691_258_fu_10547_p2);

assign sext_ln691_238_fu_10563_p1 = $signed(add_ln691_259_fu_10557_p2);

assign sext_ln691_239_fu_14969_p1 = $signed(add_ln691_260_reg_20339);

assign sext_ln691_23_fu_8192_p1 = mul_ln1345_47_reg_17290;

assign sext_ln691_240_fu_14978_p1 = $signed(add_ln691_261_fu_14972_p2);

assign sext_ln691_241_fu_16531_p1 = $signed(add_ln691_262_reg_21159);

assign sext_ln691_242_fu_10573_p1 = mul_ln1345_264_reg_19125;

assign sext_ln691_243_fu_10692_p1 = mul_ln1345_287_reg_19330;

assign sext_ln691_244_fu_14998_p1 = $signed(add_ln691_264_reg_20344);

assign sext_ln691_245_fu_10707_p1 = $signed(add_ln691_266_fu_10701_p2);

assign sext_ln691_246_fu_15007_p1 = $signed(add_ln691_267_reg_20349);

assign sext_ln691_247_fu_10723_p1 = $signed(add_ln691_269_fu_10717_p2);

assign sext_ln691_248_fu_15016_p1 = $signed(add_ln691_270_reg_20354);

assign sext_ln691_249_fu_10739_p1 = $signed(add_ln691_271_fu_10733_p2);

assign sext_ln691_24_fu_14218_p1 = $signed(add_ln691_24_reg_19944);

assign sext_ln691_250_fu_15019_p1 = $signed(add_ln691_272_reg_20359);

assign sext_ln691_251_fu_16540_p1 = $signed(add_ln691_273_reg_21169);

assign sext_ln691_252_fu_10755_p1 = $signed(add_ln691_275_fu_10749_p2);

assign sext_ln691_253_fu_15028_p1 = $signed(add_ln691_276_reg_20364);

assign sext_ln691_254_fu_10771_p1 = $signed(add_ln691_277_fu_10765_p2);

assign sext_ln691_255_fu_15031_p1 = $signed(add_ln691_278_reg_20369);

assign sext_ln691_256_fu_15040_p1 = $signed(add_ln691_279_fu_15034_p2);

assign sext_ln691_257_fu_10787_p1 = $signed(add_ln691_280_fu_10781_p2);

assign sext_ln691_258_fu_15044_p1 = $signed(add_ln691_281_reg_20374);

assign sext_ln691_259_fu_10803_p1 = $signed(add_ln691_282_fu_10797_p2);

assign sext_ln691_25_fu_8207_p1 = $signed(add_ln691_26_fu_8201_p2);

assign sext_ln691_260_fu_10813_p1 = $signed(add_ln691_283_fu_10807_p2);

assign sext_ln691_261_fu_15047_p1 = $signed(add_ln691_284_reg_20379);

assign sext_ln691_262_fu_15056_p1 = $signed(add_ln691_285_fu_15050_p2);

assign sext_ln691_263_fu_16548_p1 = $signed(add_ln691_286_reg_21174);

assign sext_ln691_264_fu_10823_p1 = mul_ln1345_288_reg_19347;

assign sext_ln691_265_fu_10942_p1 = mul_ln1345_311_reg_19694;

assign sext_ln691_266_fu_15076_p1 = $signed(add_ln691_288_reg_20384);

assign sext_ln691_267_fu_10957_p1 = $signed(add_ln691_290_fu_10951_p2);

assign sext_ln691_268_fu_15085_p1 = $signed(add_ln691_291_reg_20389);

assign sext_ln691_269_fu_10973_p1 = $signed(add_ln691_293_fu_10967_p2);

assign sext_ln691_26_fu_14227_p1 = $signed(add_ln691_27_reg_19949);

assign sext_ln691_270_fu_15094_p1 = $signed(add_ln691_294_reg_20394);

assign sext_ln691_271_fu_10989_p1 = $signed(add_ln691_295_fu_10983_p2);

assign sext_ln691_272_fu_15097_p1 = $signed(add_ln691_296_reg_20399);

assign sext_ln691_273_fu_16557_p1 = $signed(add_ln691_297_reg_21184);

assign sext_ln691_274_fu_11005_p1 = $signed(add_ln691_299_fu_10999_p2);

assign sext_ln691_275_fu_15106_p1 = $signed(add_ln691_300_reg_20404);

assign sext_ln691_276_fu_11021_p1 = $signed(add_ln691_301_fu_11015_p2);

assign sext_ln691_277_fu_15109_p1 = $signed(add_ln691_302_reg_20409);

assign sext_ln691_278_fu_15118_p1 = $signed(add_ln691_303_fu_15112_p2);

assign sext_ln691_279_fu_11037_p1 = $signed(add_ln691_304_fu_11031_p2);

assign sext_ln691_27_fu_8223_p1 = $signed(add_ln691_29_fu_8217_p2);

assign sext_ln691_280_fu_15122_p1 = $signed(add_ln691_305_reg_20414);

assign sext_ln691_281_fu_11053_p1 = $signed(add_ln691_306_fu_11047_p2);

assign sext_ln691_282_fu_11063_p1 = $signed(add_ln691_307_fu_11057_p2);

assign sext_ln691_283_fu_15125_p1 = $signed(add_ln691_308_reg_20419);

assign sext_ln691_284_fu_15134_p1 = $signed(add_ln691_309_fu_15128_p2);

assign sext_ln691_285_fu_16565_p1 = $signed(add_ln691_310_reg_21189);

assign sext_ln691_286_fu_11073_p1 = mul_ln1345_312_reg_19699;

assign sext_ln691_287_fu_11177_p1 = mul_ln1345_335_reg_19789;

assign sext_ln691_288_fu_15154_p1 = $signed(add_ln691_312_reg_20424);

assign sext_ln691_289_fu_11192_p1 = $signed(add_ln691_314_fu_11186_p2);

assign sext_ln691_28_fu_14236_p1 = $signed(add_ln691_30_reg_19954);

assign sext_ln691_290_fu_15163_p1 = $signed(add_ln691_315_reg_20429);

assign sext_ln691_291_fu_11208_p1 = $signed(add_ln691_317_fu_11202_p2);

assign sext_ln691_292_fu_15172_p1 = $signed(add_ln691_318_reg_20434);

assign sext_ln691_293_fu_11224_p1 = $signed(add_ln691_319_fu_11218_p2);

assign sext_ln691_294_fu_15175_p1 = $signed(add_ln691_320_reg_20439);

assign sext_ln691_295_fu_16574_p1 = $signed(add_ln691_321_reg_21199);

assign sext_ln691_296_fu_11240_p1 = $signed(add_ln691_323_fu_11234_p2);

assign sext_ln691_297_fu_15184_p1 = $signed(add_ln691_324_reg_20444);

assign sext_ln691_298_fu_11256_p1 = $signed(add_ln691_325_fu_11250_p2);

assign sext_ln691_299_fu_15187_p1 = $signed(add_ln691_326_reg_20449);

assign sext_ln691_29_fu_8239_p1 = $signed(add_ln691_31_fu_8233_p2);

assign sext_ln691_2_fu_14140_p1 = $signed(add_ln691_reg_19904);

assign sext_ln691_300_fu_15196_p1 = $signed(add_ln691_327_fu_15190_p2);

assign sext_ln691_301_fu_11272_p1 = $signed(add_ln691_328_fu_11266_p2);

assign sext_ln691_302_fu_15200_p1 = $signed(add_ln691_329_reg_20454);

assign sext_ln691_303_fu_11288_p1 = $signed(add_ln691_330_fu_11282_p2);

assign sext_ln691_304_fu_11298_p1 = $signed(add_ln691_331_fu_11292_p2);

assign sext_ln691_305_fu_15203_p1 = $signed(add_ln691_332_reg_20459);

assign sext_ln691_306_fu_15212_p1 = $signed(add_ln691_333_fu_15206_p2);

assign sext_ln691_307_fu_16582_p1 = $signed(add_ln691_334_reg_21204);

assign sext_ln691_308_fu_11308_p1 = mul_ln1345_336_reg_19794;

assign sext_ln691_309_fu_11412_p1 = mul_ln1345_359_reg_19884;

assign sext_ln691_30_fu_14239_p1 = $signed(add_ln691_32_reg_19959);

assign sext_ln691_310_fu_15232_p1 = $signed(add_ln691_336_reg_20464);

assign sext_ln691_311_fu_11427_p1 = $signed(add_ln691_338_fu_11421_p2);

assign sext_ln691_312_fu_15241_p1 = $signed(add_ln691_339_reg_20469);

assign sext_ln691_313_fu_11443_p1 = $signed(add_ln691_341_fu_11437_p2);

assign sext_ln691_314_fu_15250_p1 = $signed(add_ln691_342_reg_20474);

assign sext_ln691_315_fu_11459_p1 = $signed(add_ln691_343_fu_11453_p2);

assign sext_ln691_316_fu_15253_p1 = $signed(add_ln691_344_reg_20479);

assign sext_ln691_317_fu_16591_p1 = $signed(add_ln691_345_reg_21214);

assign sext_ln691_318_fu_11475_p1 = $signed(add_ln691_347_fu_11469_p2);

assign sext_ln691_319_fu_15262_p1 = $signed(add_ln691_348_reg_20484);

assign sext_ln691_31_fu_16370_p1 = $signed(add_ln691_33_reg_21019);

assign sext_ln691_320_fu_11491_p1 = $signed(add_ln691_349_fu_11485_p2);

assign sext_ln691_321_fu_15265_p1 = $signed(add_ln691_350_reg_20489);

assign sext_ln691_322_fu_15274_p1 = $signed(add_ln691_351_fu_15268_p2);

assign sext_ln691_323_fu_11507_p1 = $signed(add_ln691_352_fu_11501_p2);

assign sext_ln691_324_fu_15278_p1 = $signed(add_ln691_353_reg_20494);

assign sext_ln691_325_fu_11523_p1 = $signed(add_ln691_354_fu_11517_p2);

assign sext_ln691_326_fu_11533_p1 = $signed(add_ln691_355_fu_11527_p2);

assign sext_ln691_327_fu_15281_p1 = $signed(add_ln691_356_reg_20499);

assign sext_ln691_328_fu_15290_p1 = $signed(add_ln691_357_fu_15284_p2);

assign sext_ln691_329_fu_16599_p1 = $signed(add_ln691_358_reg_21219);

assign sext_ln691_32_fu_8255_p1 = $signed(add_ln691_35_fu_8249_p2);

assign sext_ln691_330_fu_11543_p1 = mul_ln1345_360_reg_19889;

assign sext_ln691_331_fu_11714_p1 = mul_ln1345_383_fu_11710_p2;

assign sext_ln691_332_fu_15319_p1 = $signed(add_ln691_360_reg_20519);

assign sext_ln691_333_fu_15328_p1 = $signed(add_ln691_362_reg_20524);

assign sext_ln691_334_fu_15337_p1 = $signed(add_ln691_363_fu_15331_p2);

assign sext_ln691_335_fu_15347_p1 = $signed(add_ln691_365_reg_20529);

assign sext_ln691_336_fu_15356_p1 = $signed(add_ln691_366_fu_15350_p2);

assign sext_ln691_337_fu_15360_p1 = $signed(add_ln691_367_reg_20534);

assign sext_ln691_338_fu_15369_p1 = $signed(add_ln691_368_fu_15363_p2);

assign sext_ln691_339_fu_16608_p1 = $signed(add_ln691_369_reg_21229);

assign sext_ln691_33_fu_14248_p1 = $signed(add_ln691_36_reg_19964);

assign sext_ln691_340_fu_11748_p1 = $signed(add_ln691_371_fu_11742_p2);

assign sext_ln691_341_fu_15379_p1 = $signed(add_ln691_372_reg_20539);

assign sext_ln691_342_fu_11764_p1 = $signed(add_ln691_373_fu_11758_p2);

assign sext_ln691_343_fu_15382_p1 = $signed(add_ln691_374_reg_20544);

assign sext_ln691_344_fu_15391_p1 = $signed(add_ln691_375_fu_15385_p2);

assign sext_ln691_345_fu_11780_p1 = $signed(add_ln691_376_fu_11774_p2);

assign sext_ln691_346_fu_15395_p1 = $signed(add_ln691_377_reg_20549);

assign sext_ln691_347_fu_11796_p1 = $signed(add_ln691_378_fu_11790_p2);

assign sext_ln691_348_fu_11806_p1 = $signed(add_ln691_379_fu_11800_p2);

assign sext_ln691_349_fu_15398_p1 = $signed(add_ln691_380_reg_20554);

assign sext_ln691_34_fu_8271_p1 = $signed(add_ln691_37_fu_8265_p2);

assign sext_ln691_350_fu_15407_p1 = $signed(add_ln691_381_fu_15401_p2);

assign sext_ln691_351_fu_16616_p1 = $signed(add_ln691_382_reg_21234);

assign sext_ln691_352_fu_11820_p1 = mul_ln1345_384_fu_11816_p2;

assign sext_ln691_353_fu_12002_p1 = mul_ln1345_407_fu_11998_p2;

assign sext_ln691_354_fu_15436_p1 = $signed(add_ln691_384_reg_20574);

assign sext_ln691_355_fu_15445_p1 = $signed(add_ln691_386_reg_20579);

assign sext_ln691_356_fu_15454_p1 = $signed(add_ln691_387_fu_15448_p2);

assign sext_ln691_357_fu_15464_p1 = $signed(add_ln691_389_reg_20584);

assign sext_ln691_358_fu_15473_p1 = $signed(add_ln691_390_fu_15467_p2);

assign sext_ln691_359_fu_15477_p1 = $signed(add_ln691_391_reg_20589);

assign sext_ln691_35_fu_14251_p1 = $signed(add_ln691_38_reg_19969);

assign sext_ln691_360_fu_15486_p1 = $signed(add_ln691_392_fu_15480_p2);

assign sext_ln691_361_fu_16625_p1 = $signed(add_ln691_393_reg_21244);

assign sext_ln691_362_fu_12036_p1 = $signed(add_ln691_395_fu_12030_p2);

assign sext_ln691_363_fu_15496_p1 = $signed(add_ln691_396_reg_20594);

assign sext_ln691_364_fu_12052_p1 = $signed(add_ln691_397_fu_12046_p2);

assign sext_ln691_365_fu_15499_p1 = $signed(add_ln691_398_reg_20599);

assign sext_ln691_366_fu_15508_p1 = $signed(add_ln691_399_fu_15502_p2);

assign sext_ln691_367_fu_12068_p1 = $signed(add_ln691_400_fu_12062_p2);

assign sext_ln691_368_fu_15512_p1 = $signed(add_ln691_401_reg_20604);

assign sext_ln691_369_fu_12084_p1 = $signed(add_ln691_402_fu_12078_p2);

assign sext_ln691_36_fu_14260_p1 = $signed(add_ln691_39_fu_14254_p2);

assign sext_ln691_370_fu_12094_p1 = $signed(add_ln691_403_fu_12088_p2);

assign sext_ln691_371_fu_15515_p1 = $signed(add_ln691_404_reg_20609);

assign sext_ln691_372_fu_15524_p1 = $signed(add_ln691_405_fu_15518_p2);

assign sext_ln691_373_fu_16633_p1 = $signed(add_ln691_406_reg_21249);

assign sext_ln691_374_fu_12108_p1 = mul_ln1345_408_fu_12104_p2;

assign sext_ln691_375_fu_12290_p1 = mul_ln1345_431_fu_12286_p2;

assign sext_ln691_376_fu_15553_p1 = $signed(add_ln691_408_reg_20629);

assign sext_ln691_377_fu_15562_p1 = $signed(add_ln691_410_reg_20634);

assign sext_ln691_378_fu_15571_p1 = $signed(add_ln691_411_fu_15565_p2);

assign sext_ln691_379_fu_15581_p1 = $signed(add_ln691_413_reg_20639);

assign sext_ln691_37_fu_8287_p1 = $signed(add_ln691_40_fu_8281_p2);

assign sext_ln691_380_fu_15590_p1 = $signed(add_ln691_414_fu_15584_p2);

assign sext_ln691_381_fu_15594_p1 = $signed(add_ln691_415_reg_20644);

assign sext_ln691_382_fu_15603_p1 = $signed(add_ln691_416_fu_15597_p2);

assign sext_ln691_383_fu_16642_p1 = $signed(add_ln691_417_reg_21259);

assign sext_ln691_384_fu_12324_p1 = $signed(add_ln691_419_fu_12318_p2);

assign sext_ln691_385_fu_15613_p1 = $signed(add_ln691_420_reg_20649);

assign sext_ln691_386_fu_12340_p1 = $signed(add_ln691_421_fu_12334_p2);

assign sext_ln691_387_fu_15616_p1 = $signed(add_ln691_422_reg_20654);

assign sext_ln691_388_fu_15625_p1 = $signed(add_ln691_423_fu_15619_p2);

assign sext_ln691_389_fu_12356_p1 = $signed(add_ln691_424_fu_12350_p2);

assign sext_ln691_38_fu_14264_p1 = $signed(add_ln691_41_reg_19974);

assign sext_ln691_390_fu_15629_p1 = $signed(add_ln691_425_reg_20659);

assign sext_ln691_391_fu_12372_p1 = $signed(add_ln691_426_fu_12366_p2);

assign sext_ln691_392_fu_12382_p1 = $signed(add_ln691_427_fu_12376_p2);

assign sext_ln691_393_fu_15632_p1 = $signed(add_ln691_428_reg_20664);

assign sext_ln691_394_fu_15641_p1 = $signed(add_ln691_429_fu_15635_p2);

assign sext_ln691_395_fu_16650_p1 = $signed(add_ln691_430_reg_21264);

assign sext_ln691_396_fu_12396_p1 = mul_ln1345_432_fu_12392_p2;

assign sext_ln691_397_fu_12578_p1 = mul_ln1345_455_fu_12574_p2;

assign sext_ln691_398_fu_15670_p1 = $signed(add_ln691_432_reg_20684);

assign sext_ln691_399_fu_15679_p1 = $signed(add_ln691_434_reg_20689);

assign sext_ln691_39_fu_8303_p1 = $signed(add_ln691_42_fu_8297_p2);

assign sext_ln691_3_fu_7957_p1 = $signed(add_ln691_2_fu_7951_p2);

assign sext_ln691_400_fu_15688_p1 = $signed(add_ln691_435_fu_15682_p2);

assign sext_ln691_401_fu_15698_p1 = $signed(add_ln691_437_reg_20694);

assign sext_ln691_402_fu_15707_p1 = $signed(add_ln691_438_fu_15701_p2);

assign sext_ln691_403_fu_15711_p1 = $signed(add_ln691_439_reg_20699);

assign sext_ln691_404_fu_15720_p1 = $signed(add_ln691_440_fu_15714_p2);

assign sext_ln691_405_fu_16659_p1 = $signed(add_ln691_441_reg_21274);

assign sext_ln691_406_fu_12612_p1 = $signed(add_ln691_443_fu_12606_p2);

assign sext_ln691_407_fu_15730_p1 = $signed(add_ln691_444_reg_20704);

assign sext_ln691_408_fu_12628_p1 = $signed(add_ln691_445_fu_12622_p2);

assign sext_ln691_409_fu_15733_p1 = $signed(add_ln691_446_reg_20709);

assign sext_ln691_40_fu_8313_p1 = $signed(add_ln691_43_fu_8307_p2);

assign sext_ln691_410_fu_15742_p1 = $signed(add_ln691_447_fu_15736_p2);

assign sext_ln691_411_fu_12644_p1 = $signed(add_ln691_448_fu_12638_p2);

assign sext_ln691_412_fu_15746_p1 = $signed(add_ln691_449_reg_20714);

assign sext_ln691_413_fu_12660_p1 = $signed(add_ln691_450_fu_12654_p2);

assign sext_ln691_414_fu_12670_p1 = $signed(add_ln691_451_fu_12664_p2);

assign sext_ln691_415_fu_15749_p1 = $signed(add_ln691_452_reg_20719);

assign sext_ln691_416_fu_15758_p1 = $signed(add_ln691_453_fu_15752_p2);

assign sext_ln691_417_fu_16667_p1 = $signed(add_ln691_454_reg_21279);

assign sext_ln691_418_fu_12684_p1 = mul_ln1345_456_fu_12680_p2;

assign sext_ln691_419_fu_12866_p1 = mul_ln1345_479_fu_12862_p2;

assign sext_ln691_41_fu_14267_p1 = $signed(add_ln691_44_reg_19979);

assign sext_ln691_420_fu_15787_p1 = $signed(add_ln691_456_reg_20739);

assign sext_ln691_421_fu_15796_p1 = $signed(add_ln691_458_reg_20744);

assign sext_ln691_422_fu_15805_p1 = $signed(add_ln691_459_fu_15799_p2);

assign sext_ln691_423_fu_15815_p1 = $signed(add_ln691_461_reg_20749);

assign sext_ln691_424_fu_15824_p1 = $signed(add_ln691_462_fu_15818_p2);

assign sext_ln691_425_fu_15828_p1 = $signed(add_ln691_463_reg_20754);

assign sext_ln691_426_fu_15837_p1 = $signed(add_ln691_464_fu_15831_p2);

assign sext_ln691_427_fu_16676_p1 = $signed(add_ln691_465_reg_21289);

assign sext_ln691_428_fu_12900_p1 = $signed(add_ln691_467_fu_12894_p2);

assign sext_ln691_429_fu_15847_p1 = $signed(add_ln691_468_reg_20759);

assign sext_ln691_42_fu_14276_p1 = $signed(add_ln691_45_fu_14270_p2);

assign sext_ln691_430_fu_12916_p1 = $signed(add_ln691_469_fu_12910_p2);

assign sext_ln691_431_fu_15850_p1 = $signed(add_ln691_470_reg_20764);

assign sext_ln691_432_fu_15859_p1 = $signed(add_ln691_471_fu_15853_p2);

assign sext_ln691_433_fu_12932_p1 = $signed(add_ln691_472_fu_12926_p2);

assign sext_ln691_434_fu_15863_p1 = $signed(add_ln691_473_reg_20769);

assign sext_ln691_435_fu_12948_p1 = $signed(add_ln691_474_fu_12942_p2);

assign sext_ln691_436_fu_12958_p1 = $signed(add_ln691_475_fu_12952_p2);

assign sext_ln691_437_fu_15866_p1 = $signed(add_ln691_476_reg_20774);

assign sext_ln691_438_fu_15875_p1 = $signed(add_ln691_477_fu_15869_p2);

assign sext_ln691_439_fu_16684_p1 = $signed(add_ln691_478_reg_21294);

assign sext_ln691_43_fu_16378_p1 = $signed(add_ln691_46_reg_21024);

assign sext_ln691_440_fu_12972_p1 = mul_ln1345_480_fu_12968_p2;

assign sext_ln691_441_fu_13154_p1 = mul_ln1345_503_fu_13150_p2;

assign sext_ln691_442_fu_15904_p1 = $signed(add_ln691_480_reg_20794);

assign sext_ln691_443_fu_15913_p1 = $signed(add_ln691_482_reg_20799);

assign sext_ln691_444_fu_15922_p1 = $signed(add_ln691_483_fu_15916_p2);

assign sext_ln691_445_fu_15932_p1 = $signed(add_ln691_485_reg_20804);

assign sext_ln691_446_fu_15941_p1 = $signed(add_ln691_486_fu_15935_p2);

assign sext_ln691_447_fu_15945_p1 = $signed(add_ln691_487_reg_20809);

assign sext_ln691_448_fu_15954_p1 = $signed(add_ln691_488_fu_15948_p2);

assign sext_ln691_449_fu_16693_p1 = $signed(add_ln691_489_reg_21304);

assign sext_ln691_44_fu_8323_p1 = mul_ln1345_48_reg_17295;

assign sext_ln691_450_fu_13188_p1 = $signed(add_ln691_491_fu_13182_p2);

assign sext_ln691_451_fu_15964_p1 = $signed(add_ln691_492_reg_20814);

assign sext_ln691_452_fu_13204_p1 = $signed(add_ln691_493_fu_13198_p2);

assign sext_ln691_453_fu_15967_p1 = $signed(add_ln691_494_reg_20819);

assign sext_ln691_454_fu_15976_p1 = $signed(add_ln691_495_fu_15970_p2);

assign sext_ln691_455_fu_13220_p1 = $signed(add_ln691_496_fu_13214_p2);

assign sext_ln691_456_fu_15980_p1 = $signed(add_ln691_497_reg_20824);

assign sext_ln691_457_fu_13236_p1 = $signed(add_ln691_498_fu_13230_p2);

assign sext_ln691_458_fu_13246_p1 = $signed(add_ln691_499_fu_13240_p2);

assign sext_ln691_459_fu_15983_p1 = $signed(add_ln691_500_reg_20829);

assign sext_ln691_45_fu_8442_p1 = mul_ln1345_71_reg_17410;

assign sext_ln691_460_fu_15992_p1 = $signed(add_ln691_501_fu_15986_p2);

assign sext_ln691_461_fu_16701_p1 = $signed(add_ln691_502_reg_21309);

assign sext_ln691_462_fu_13260_p1 = mul_ln1345_504_fu_13256_p2;

assign sext_ln691_463_fu_13442_p1 = mul_ln1345_527_fu_13438_p2;

assign sext_ln691_464_fu_16021_p1 = $signed(add_ln691_504_reg_20849);

assign sext_ln691_465_fu_16030_p1 = $signed(add_ln691_506_reg_20854);

assign sext_ln691_466_fu_16039_p1 = $signed(add_ln691_507_fu_16033_p2);

assign sext_ln691_467_fu_16049_p1 = $signed(add_ln691_509_reg_20859);

assign sext_ln691_468_fu_16058_p1 = $signed(add_ln691_510_fu_16052_p2);

assign sext_ln691_469_fu_16062_p1 = $signed(add_ln691_511_reg_20864);

assign sext_ln691_46_fu_14296_p1 = $signed(add_ln691_48_reg_19984);

assign sext_ln691_470_fu_16071_p1 = $signed(add_ln691_512_fu_16065_p2);

assign sext_ln691_471_fu_16710_p1 = $signed(add_ln691_513_reg_21319);

assign sext_ln691_472_fu_13476_p1 = $signed(add_ln691_515_fu_13470_p2);

assign sext_ln691_473_fu_16081_p1 = $signed(add_ln691_516_reg_20869);

assign sext_ln691_474_fu_13492_p1 = $signed(add_ln691_517_fu_13486_p2);

assign sext_ln691_475_fu_16084_p1 = $signed(add_ln691_518_reg_20874);

assign sext_ln691_476_fu_16093_p1 = $signed(add_ln691_519_fu_16087_p2);

assign sext_ln691_477_fu_13508_p1 = $signed(add_ln691_520_fu_13502_p2);

assign sext_ln691_478_fu_16097_p1 = $signed(add_ln691_521_reg_20879);

assign sext_ln691_479_fu_13524_p1 = $signed(add_ln691_522_fu_13518_p2);

assign sext_ln691_47_fu_8457_p1 = $signed(add_ln691_50_fu_8451_p2);

assign sext_ln691_480_fu_13534_p1 = $signed(add_ln691_523_fu_13528_p2);

assign sext_ln691_481_fu_16100_p1 = $signed(add_ln691_524_reg_20884);

assign sext_ln691_482_fu_16109_p1 = $signed(add_ln691_525_fu_16103_p2);

assign sext_ln691_483_fu_16718_p1 = $signed(add_ln691_526_reg_21324);

assign sext_ln691_484_fu_13548_p1 = mul_ln1345_528_fu_13544_p2;

assign sext_ln691_485_fu_13730_p1 = mul_ln1345_551_fu_13726_p2;

assign sext_ln691_486_fu_16138_p1 = $signed(add_ln691_528_reg_20904);

assign sext_ln691_487_fu_16147_p1 = $signed(add_ln691_530_reg_20909);

assign sext_ln691_488_fu_16156_p1 = $signed(add_ln691_531_fu_16150_p2);

assign sext_ln691_489_fu_16166_p1 = $signed(add_ln691_533_reg_20914);

assign sext_ln691_48_fu_14305_p1 = $signed(add_ln691_51_reg_19989);

assign sext_ln691_490_fu_16175_p1 = $signed(add_ln691_534_fu_16169_p2);

assign sext_ln691_491_fu_16179_p1 = $signed(add_ln691_535_reg_20919);

assign sext_ln691_492_fu_16188_p1 = $signed(add_ln691_536_fu_16182_p2);

assign sext_ln691_493_fu_16727_p1 = $signed(add_ln691_537_reg_21334);

assign sext_ln691_494_fu_13764_p1 = $signed(add_ln691_539_fu_13758_p2);

assign sext_ln691_495_fu_16198_p1 = $signed(add_ln691_540_reg_20924);

assign sext_ln691_496_fu_13780_p1 = $signed(add_ln691_541_fu_13774_p2);

assign sext_ln691_497_fu_16201_p1 = $signed(add_ln691_542_reg_20929);

assign sext_ln691_498_fu_16210_p1 = $signed(add_ln691_543_fu_16204_p2);

assign sext_ln691_499_fu_13796_p1 = $signed(add_ln691_544_fu_13790_p2);

assign sext_ln691_49_fu_8473_p1 = $signed(add_ln691_53_fu_8467_p2);

assign sext_ln691_4_fu_14149_p1 = $signed(add_ln691_3_reg_19909);

assign sext_ln691_500_fu_16214_p1 = $signed(add_ln691_545_reg_20934);

assign sext_ln691_501_fu_13812_p1 = $signed(add_ln691_546_fu_13806_p2);

assign sext_ln691_502_fu_13822_p1 = $signed(add_ln691_547_fu_13816_p2);

assign sext_ln691_503_fu_16217_p1 = $signed(add_ln691_548_reg_20939);

assign sext_ln691_504_fu_16226_p1 = $signed(add_ln691_549_fu_16220_p2);

assign sext_ln691_505_fu_16735_p1 = $signed(add_ln691_550_reg_21339);

assign sext_ln691_506_fu_13836_p1 = mul_ln1345_552_fu_13832_p2;

assign sext_ln691_507_fu_14018_p1 = mul_ln1345_575_fu_14014_p2;

assign sext_ln691_508_fu_16255_p1 = $signed(add_ln691_552_reg_20959);

assign sext_ln691_509_fu_16264_p1 = $signed(add_ln691_554_reg_20964);

assign sext_ln691_50_fu_14314_p1 = $signed(add_ln691_54_reg_19994);

assign sext_ln691_510_fu_16273_p1 = $signed(add_ln691_555_fu_16267_p2);

assign sext_ln691_511_fu_16283_p1 = $signed(add_ln691_557_reg_20969);

assign sext_ln691_512_fu_16292_p1 = $signed(add_ln691_558_fu_16286_p2);

assign sext_ln691_513_fu_16296_p1 = $signed(add_ln691_559_reg_20974);

assign sext_ln691_514_fu_16305_p1 = $signed(add_ln691_560_fu_16299_p2);

assign sext_ln691_515_fu_16744_p1 = $signed(add_ln691_561_reg_21349);

assign sext_ln691_516_fu_14052_p1 = $signed(add_ln691_563_fu_14046_p2);

assign sext_ln691_517_fu_16315_p1 = $signed(add_ln691_564_reg_20979);

assign sext_ln691_518_fu_14068_p1 = $signed(add_ln691_565_fu_14062_p2);

assign sext_ln691_519_fu_16318_p1 = $signed(add_ln691_566_reg_20984);

assign sext_ln691_51_fu_8489_p1 = $signed(add_ln691_55_fu_8483_p2);

assign sext_ln691_520_fu_16327_p1 = $signed(add_ln691_567_fu_16321_p2);

assign sext_ln691_521_fu_14084_p1 = $signed(add_ln691_568_fu_14078_p2);

assign sext_ln691_522_fu_16331_p1 = $signed(add_ln691_569_reg_20989);

assign sext_ln691_523_fu_14100_p1 = $signed(add_ln691_570_fu_14094_p2);

assign sext_ln691_524_fu_14110_p1 = $signed(add_ln691_571_fu_14104_p2);

assign sext_ln691_525_fu_16334_p1 = $signed(add_ln691_572_reg_20994);

assign sext_ln691_526_fu_16343_p1 = $signed(add_ln691_573_fu_16337_p2);

assign sext_ln691_527_fu_16752_p1 = $signed(add_ln691_574_reg_21354);

assign sext_ln691_52_fu_14317_p1 = $signed(add_ln691_56_reg_19999);

assign sext_ln691_53_fu_16387_p1 = $signed(add_ln691_57_reg_21034);

assign sext_ln691_54_fu_8505_p1 = $signed(add_ln691_59_fu_8499_p2);

assign sext_ln691_55_fu_14326_p1 = $signed(add_ln691_60_reg_20004);

assign sext_ln691_56_fu_8521_p1 = $signed(add_ln691_61_fu_8515_p2);

assign sext_ln691_57_fu_14329_p1 = $signed(add_ln691_62_reg_20009);

assign sext_ln691_58_fu_14338_p1 = $signed(add_ln691_63_fu_14332_p2);

assign sext_ln691_59_fu_8537_p1 = $signed(add_ln691_64_fu_8531_p2);

assign sext_ln691_5_fu_7973_p1 = $signed(add_ln691_5_fu_7967_p2);

assign sext_ln691_60_fu_14342_p1 = $signed(add_ln691_65_reg_20014);

assign sext_ln691_61_fu_8553_p1 = $signed(add_ln691_66_fu_8547_p2);

assign sext_ln691_62_fu_8563_p1 = $signed(add_ln691_67_fu_8557_p2);

assign sext_ln691_63_fu_14345_p1 = $signed(add_ln691_68_reg_20019);

assign sext_ln691_64_fu_14354_p1 = $signed(add_ln691_69_fu_14348_p2);

assign sext_ln691_65_fu_16395_p1 = $signed(add_ln691_70_reg_21039);

assign sext_ln691_66_fu_8573_p1 = mul_ln1345_72_reg_17415;

assign sext_ln691_67_fu_8692_p1 = mul_ln1345_95_reg_17610;

assign sext_ln691_68_fu_14374_p1 = $signed(add_ln691_72_reg_20024);

assign sext_ln691_69_fu_8707_p1 = $signed(add_ln691_74_fu_8701_p2);

assign sext_ln691_6_fu_14158_p1 = $signed(add_ln691_6_reg_19914);

assign sext_ln691_70_fu_14383_p1 = $signed(add_ln691_75_reg_20029);

assign sext_ln691_71_fu_8723_p1 = $signed(add_ln691_77_fu_8717_p2);

assign sext_ln691_72_fu_14392_p1 = $signed(add_ln691_78_reg_20034);

assign sext_ln691_73_fu_8739_p1 = $signed(add_ln691_79_fu_8733_p2);

assign sext_ln691_74_fu_14395_p1 = $signed(add_ln691_80_reg_20039);

assign sext_ln691_75_fu_16404_p1 = $signed(add_ln691_81_reg_21049);

assign sext_ln691_76_fu_8755_p1 = $signed(add_ln691_83_fu_8749_p2);

assign sext_ln691_77_fu_14404_p1 = $signed(add_ln691_84_reg_20044);

assign sext_ln691_78_fu_8771_p1 = $signed(add_ln691_85_fu_8765_p2);

assign sext_ln691_79_fu_14407_p1 = $signed(add_ln691_86_reg_20049);

assign sext_ln691_7_fu_7989_p1 = $signed(add_ln691_7_fu_7983_p2);

assign sext_ln691_80_fu_14416_p1 = $signed(add_ln691_87_fu_14410_p2);

assign sext_ln691_81_fu_8787_p1 = $signed(add_ln691_88_fu_8781_p2);

assign sext_ln691_82_fu_14420_p1 = $signed(add_ln691_89_reg_20054);

assign sext_ln691_83_fu_8803_p1 = $signed(add_ln691_90_fu_8797_p2);

assign sext_ln691_84_fu_8813_p1 = $signed(add_ln691_91_fu_8807_p2);

assign sext_ln691_85_fu_14423_p1 = $signed(add_ln691_92_reg_20059);

assign sext_ln691_86_fu_14432_p1 = $signed(add_ln691_93_fu_14426_p2);

assign sext_ln691_87_fu_16412_p1 = $signed(add_ln691_94_reg_21054);

assign sext_ln691_88_fu_8823_p1 = mul_ln1345_96_reg_17620;

assign sext_ln691_89_fu_8942_p1 = mul_ln1345_119_reg_17825;

assign sext_ln691_8_fu_14161_p1 = $signed(add_ln691_8_reg_19919);

assign sext_ln691_90_fu_14452_p1 = $signed(add_ln691_96_reg_20064);

assign sext_ln691_91_fu_8957_p1 = $signed(add_ln691_98_fu_8951_p2);

assign sext_ln691_92_fu_14461_p1 = $signed(add_ln691_99_reg_20069);

assign sext_ln691_93_fu_8973_p1 = $signed(add_ln691_101_fu_8967_p2);

assign sext_ln691_94_fu_14470_p1 = $signed(add_ln691_102_reg_20074);

assign sext_ln691_95_fu_8989_p1 = $signed(add_ln691_103_fu_8983_p2);

assign sext_ln691_96_fu_14473_p1 = $signed(add_ln691_104_reg_20079);

assign sext_ln691_97_fu_16421_p1 = $signed(add_ln691_105_reg_21064);

assign sext_ln691_98_fu_9005_p1 = $signed(add_ln691_107_fu_8999_p2);

assign sext_ln691_99_fu_14482_p1 = $signed(add_ln691_108_reg_20084);

assign sext_ln691_9_fu_16353_p1 = $signed(add_ln691_9_reg_21004);

assign sext_ln691_fu_7808_p1 = mul_ln1345_reg_17030;

assign start_out = real_start;

assign tmp_100_fu_3692_p4 = {{mlp_inst_m2_weight_arr_V_q0[14:12]}};

assign tmp_101_fu_14442_p4 = {{select_ln126_fu_14129_p3[64:52]}};

assign tmp_102_fu_3712_p4 = {{mlp_inst_m2_weight_arr_V_q0[50:48]}};

assign tmp_103_fu_3732_p4 = {{mlp_inst_m2_weight_arr_V_q0[86:84]}};

assign tmp_104_fu_3752_p4 = {{mlp_inst_m2_weight_arr_V_q0[122:120]}};

assign tmp_105_fu_3772_p4 = {{mlp_inst_m2_weight_arr_V_q0[158:156]}};

assign tmp_106_fu_3792_p4 = {{mlp_inst_m2_weight_arr_V_q0[194:192]}};

assign tmp_107_fu_3812_p4 = {{mlp_inst_m2_weight_arr_V_q0[230:228]}};

assign tmp_108_fu_3832_p4 = {{mlp_inst_m2_weight_arr_V_q0[266:264]}};

assign tmp_109_fu_3852_p4 = {{mlp_inst_m2_weight_arr_V_q0[302:300]}};

assign tmp_10_fu_1962_p4 = {{mlp_inst_m2_weight_arr_V_q0[326:324]}};

assign tmp_110_fu_3872_p4 = {{mlp_inst_m2_weight_arr_V_q0[338:336]}};

assign tmp_111_fu_3892_p4 = {{mlp_inst_m2_weight_arr_V_q0[374:372]}};

assign tmp_112_fu_3912_p4 = {{mlp_inst_m2_weight_arr_V_q0[410:408]}};

assign tmp_114_fu_3942_p4 = {{mlp_inst_m2_weight_arr_V_q0[482:480]}};

assign tmp_115_fu_3962_p4 = {{mlp_inst_m2_weight_arr_V_q0[518:516]}};

assign tmp_116_fu_3982_p4 = {{mlp_inst_m2_weight_arr_V_q0[554:552]}};

assign tmp_117_fu_4002_p4 = {{mlp_inst_m2_weight_arr_V_q0[590:588]}};

assign tmp_118_fu_4022_p4 = {{mlp_inst_m2_weight_arr_V_q0[626:624]}};

assign tmp_11_fu_1996_p4 = {{mlp_inst_m2_weight_arr_V_q0[362:360]}};

assign tmp_120_fu_4052_p4 = {{mlp_inst_m2_weight_arr_V_q0[698:696]}};

assign tmp_124_fu_4102_p4 = {{mlp_inst_m2_weight_arr_V_q0[842:840]}};

assign tmp_125_fu_4122_p4 = {{mlp_inst_m2_weight_arr_V_q0[17:15]}};

assign tmp_126_fu_14520_p4 = {{select_ln126_fu_14129_p3[77:65]}};

assign tmp_127_fu_4142_p4 = {{mlp_inst_m2_weight_arr_V_q0[53:51]}};

assign tmp_128_fu_4162_p4 = {{mlp_inst_m2_weight_arr_V_q0[89:87]}};

assign tmp_129_fu_4182_p4 = {{mlp_inst_m2_weight_arr_V_q0[125:123]}};

assign tmp_12_fu_2030_p4 = {{mlp_inst_m2_weight_arr_V_q0[398:396]}};

assign tmp_130_fu_4202_p4 = {{mlp_inst_m2_weight_arr_V_q0[161:159]}};

assign tmp_131_fu_4222_p4 = {{mlp_inst_m2_weight_arr_V_q0[197:195]}};

assign tmp_132_fu_4242_p4 = {{mlp_inst_m2_weight_arr_V_q0[233:231]}};

assign tmp_133_fu_4262_p4 = {{mlp_inst_m2_weight_arr_V_q0[269:267]}};

assign tmp_134_fu_4282_p4 = {{mlp_inst_m2_weight_arr_V_q0[305:303]}};

assign tmp_135_fu_4302_p4 = {{mlp_inst_m2_weight_arr_V_q0[341:339]}};

assign tmp_136_fu_4322_p4 = {{mlp_inst_m2_weight_arr_V_q0[377:375]}};

assign tmp_137_fu_4342_p4 = {{mlp_inst_m2_weight_arr_V_q0[413:411]}};

assign tmp_139_fu_4372_p4 = {{mlp_inst_m2_weight_arr_V_q0[485:483]}};

assign tmp_140_fu_4392_p4 = {{mlp_inst_m2_weight_arr_V_q0[521:519]}};

assign tmp_141_fu_4412_p4 = {{mlp_inst_m2_weight_arr_V_q0[557:555]}};

assign tmp_142_fu_4432_p4 = {{mlp_inst_m2_weight_arr_V_q0[593:591]}};

assign tmp_143_fu_4452_p4 = {{mlp_inst_m2_weight_arr_V_q0[629:627]}};

assign tmp_145_fu_4482_p4 = {{mlp_inst_m2_weight_arr_V_q0[701:699]}};

assign tmp_149_fu_4532_p4 = {{mlp_inst_m2_weight_arr_V_q0[845:843]}};

assign tmp_14_fu_2084_p4 = {{mlp_inst_m2_weight_arr_V_q0[470:468]}};

assign tmp_150_fu_4552_p4 = {{mlp_inst_m2_weight_arr_V_q0[20:18]}};

assign tmp_151_fu_14598_p4 = {{select_ln126_fu_14129_p3[90:78]}};

assign tmp_152_fu_4572_p4 = {{mlp_inst_m2_weight_arr_V_q0[56:54]}};

assign tmp_153_fu_4592_p4 = {{mlp_inst_m2_weight_arr_V_q0[92:90]}};

assign tmp_154_fu_4612_p4 = {{mlp_inst_m2_weight_arr_V_q0[128:126]}};

assign tmp_155_fu_4632_p4 = {{mlp_inst_m2_weight_arr_V_q0[164:162]}};

assign tmp_156_fu_4652_p4 = {{mlp_inst_m2_weight_arr_V_q0[200:198]}};

assign tmp_157_fu_4672_p4 = {{mlp_inst_m2_weight_arr_V_q0[236:234]}};

assign tmp_158_fu_4692_p4 = {{mlp_inst_m2_weight_arr_V_q0[272:270]}};

assign tmp_159_fu_4712_p4 = {{mlp_inst_m2_weight_arr_V_q0[308:306]}};

assign tmp_15_fu_2118_p4 = {{mlp_inst_m2_weight_arr_V_q0[506:504]}};

assign tmp_160_fu_4732_p4 = {{mlp_inst_m2_weight_arr_V_q0[344:342]}};

assign tmp_161_fu_4752_p4 = {{mlp_inst_m2_weight_arr_V_q0[380:378]}};

assign tmp_162_fu_4772_p4 = {{mlp_inst_m2_weight_arr_V_q0[416:414]}};

assign tmp_164_fu_4802_p4 = {{mlp_inst_m2_weight_arr_V_q0[488:486]}};

assign tmp_165_fu_4822_p4 = {{mlp_inst_m2_weight_arr_V_q0[524:522]}};

assign tmp_166_fu_4842_p4 = {{mlp_inst_m2_weight_arr_V_q0[560:558]}};

assign tmp_167_fu_4862_p4 = {{mlp_inst_m2_weight_arr_V_q0[596:594]}};

assign tmp_168_fu_4882_p4 = {{mlp_inst_m2_weight_arr_V_q0[632:630]}};

assign tmp_16_fu_2152_p4 = {{mlp_inst_m2_weight_arr_V_q0[542:540]}};

assign tmp_170_fu_4912_p4 = {{mlp_inst_m2_weight_arr_V_q0[704:702]}};

assign tmp_174_fu_4962_p4 = {{mlp_inst_m2_weight_arr_V_q0[848:846]}};

assign tmp_175_fu_4982_p4 = {{mlp_inst_m2_weight_arr_V_q0[23:21]}};

assign tmp_176_fu_14676_p4 = {{select_ln126_fu_14129_p3[103:91]}};

assign tmp_177_fu_5002_p4 = {{mlp_inst_m2_weight_arr_V_q0[59:57]}};

assign tmp_178_fu_5022_p4 = {{mlp_inst_m2_weight_arr_V_q0[95:93]}};

assign tmp_179_fu_5042_p4 = {{mlp_inst_m2_weight_arr_V_q0[131:129]}};

assign tmp_17_fu_2186_p4 = {{mlp_inst_m2_weight_arr_V_q0[578:576]}};

assign tmp_180_fu_5062_p4 = {{mlp_inst_m2_weight_arr_V_q0[167:165]}};

assign tmp_181_fu_5082_p4 = {{mlp_inst_m2_weight_arr_V_q0[203:201]}};

assign tmp_182_fu_5102_p4 = {{mlp_inst_m2_weight_arr_V_q0[239:237]}};

assign tmp_183_fu_5122_p4 = {{mlp_inst_m2_weight_arr_V_q0[275:273]}};

assign tmp_184_fu_5142_p4 = {{mlp_inst_m2_weight_arr_V_q0[311:309]}};

assign tmp_185_fu_5162_p4 = {{mlp_inst_m2_weight_arr_V_q0[347:345]}};

assign tmp_186_fu_5182_p4 = {{mlp_inst_m2_weight_arr_V_q0[383:381]}};

assign tmp_187_fu_5202_p4 = {{mlp_inst_m2_weight_arr_V_q0[419:417]}};

assign tmp_189_fu_5232_p4 = {{mlp_inst_m2_weight_arr_V_q0[491:489]}};

assign tmp_18_fu_2220_p4 = {{mlp_inst_m2_weight_arr_V_q0[614:612]}};

assign tmp_190_fu_5252_p4 = {{mlp_inst_m2_weight_arr_V_q0[527:525]}};

assign tmp_191_fu_5272_p4 = {{mlp_inst_m2_weight_arr_V_q0[563:561]}};

assign tmp_192_fu_5292_p4 = {{mlp_inst_m2_weight_arr_V_q0[599:597]}};

assign tmp_193_fu_5312_p4 = {{mlp_inst_m2_weight_arr_V_q0[635:633]}};

assign tmp_195_fu_5342_p4 = {{mlp_inst_m2_weight_arr_V_q0[707:705]}};

assign tmp_199_fu_5392_p4 = {{mlp_inst_m2_weight_arr_V_q0[851:849]}};

assign tmp_200_fu_5412_p4 = {{mlp_inst_m2_weight_arr_V_q0[26:24]}};

assign tmp_201_fu_14754_p4 = {{select_ln126_fu_14129_p3[116:104]}};

assign tmp_202_fu_5432_p4 = {{mlp_inst_m2_weight_arr_V_q0[62:60]}};

assign tmp_203_fu_5452_p4 = {{mlp_inst_m2_weight_arr_V_q0[98:96]}};

assign tmp_204_fu_5472_p4 = {{mlp_inst_m2_weight_arr_V_q0[134:132]}};

assign tmp_205_fu_5492_p4 = {{mlp_inst_m2_weight_arr_V_q0[170:168]}};

assign tmp_206_fu_5512_p4 = {{mlp_inst_m2_weight_arr_V_q0[206:204]}};

assign tmp_207_fu_5532_p4 = {{mlp_inst_m2_weight_arr_V_q0[242:240]}};

assign tmp_208_fu_5552_p4 = {{mlp_inst_m2_weight_arr_V_q0[278:276]}};

assign tmp_209_fu_5572_p4 = {{mlp_inst_m2_weight_arr_V_q0[314:312]}};

assign tmp_20_fu_2274_p4 = {{mlp_inst_m2_weight_arr_V_q0[686:684]}};

assign tmp_210_fu_5592_p4 = {{mlp_inst_m2_weight_arr_V_q0[350:348]}};

assign tmp_211_fu_5612_p4 = {{mlp_inst_m2_weight_arr_V_q0[386:384]}};

assign tmp_212_fu_5632_p4 = {{mlp_inst_m2_weight_arr_V_q0[422:420]}};

assign tmp_214_fu_5662_p4 = {{mlp_inst_m2_weight_arr_V_q0[494:492]}};

assign tmp_215_fu_5682_p4 = {{mlp_inst_m2_weight_arr_V_q0[530:528]}};

assign tmp_216_fu_5702_p4 = {{mlp_inst_m2_weight_arr_V_q0[566:564]}};

assign tmp_217_fu_5722_p4 = {{mlp_inst_m2_weight_arr_V_q0[602:600]}};

assign tmp_218_fu_5742_p4 = {{mlp_inst_m2_weight_arr_V_q0[638:636]}};

assign tmp_220_fu_5772_p4 = {{mlp_inst_m2_weight_arr_V_q0[710:708]}};

assign tmp_224_fu_5822_p4 = {{mlp_inst_m2_weight_arr_V_q0[854:852]}};

assign tmp_225_fu_5842_p4 = {{mlp_inst_m2_weight_arr_V_q0[29:27]}};

assign tmp_226_fu_14832_p4 = {{select_ln126_fu_14129_p3[129:117]}};

assign tmp_227_fu_5862_p4 = {{mlp_inst_m2_weight_arr_V_q0[65:63]}};

assign tmp_228_fu_5882_p4 = {{mlp_inst_m2_weight_arr_V_q0[101:99]}};

assign tmp_229_fu_5902_p4 = {{mlp_inst_m2_weight_arr_V_q0[137:135]}};

assign tmp_230_fu_5922_p4 = {{mlp_inst_m2_weight_arr_V_q0[173:171]}};

assign tmp_231_fu_5942_p4 = {{mlp_inst_m2_weight_arr_V_q0[209:207]}};

assign tmp_232_fu_5962_p4 = {{mlp_inst_m2_weight_arr_V_q0[245:243]}};

assign tmp_233_fu_5982_p4 = {{mlp_inst_m2_weight_arr_V_q0[281:279]}};

assign tmp_234_fu_6002_p4 = {{mlp_inst_m2_weight_arr_V_q0[317:315]}};

assign tmp_235_fu_6022_p4 = {{mlp_inst_m2_weight_arr_V_q0[353:351]}};

assign tmp_236_fu_6042_p4 = {{mlp_inst_m2_weight_arr_V_q0[389:387]}};

assign tmp_237_fu_6062_p4 = {{mlp_inst_m2_weight_arr_V_q0[425:423]}};

assign tmp_239_fu_6092_p4 = {{mlp_inst_m2_weight_arr_V_q0[497:495]}};

assign tmp_240_fu_6112_p4 = {{mlp_inst_m2_weight_arr_V_q0[533:531]}};

assign tmp_241_fu_6132_p4 = {{mlp_inst_m2_weight_arr_V_q0[569:567]}};

assign tmp_242_fu_6152_p4 = {{mlp_inst_m2_weight_arr_V_q0[605:603]}};

assign tmp_243_fu_6172_p4 = {{mlp_inst_m2_weight_arr_V_q0[641:639]}};

assign tmp_245_fu_6202_p4 = {{mlp_inst_m2_weight_arr_V_q0[713:711]}};

assign tmp_249_fu_6252_p4 = {{mlp_inst_m2_weight_arr_V_q0[857:855]}};

assign tmp_24_fu_2368_p4 = {{mlp_inst_m2_weight_arr_V_q0[830:828]}};

assign tmp_250_fu_6272_p4 = {{mlp_inst_m2_weight_arr_V_q0[32:30]}};

assign tmp_251_fu_14910_p4 = {{select_ln126_fu_14129_p3[142:130]}};

assign tmp_252_fu_6292_p4 = {{mlp_inst_m2_weight_arr_V_q0[68:66]}};

assign tmp_253_fu_6312_p4 = {{mlp_inst_m2_weight_arr_V_q0[104:102]}};

assign tmp_254_fu_6332_p4 = {{mlp_inst_m2_weight_arr_V_q0[140:138]}};

assign tmp_255_fu_6352_p4 = {{mlp_inst_m2_weight_arr_V_q0[176:174]}};

assign tmp_256_fu_6372_p4 = {{mlp_inst_m2_weight_arr_V_q0[212:210]}};

assign tmp_257_fu_6392_p4 = {{mlp_inst_m2_weight_arr_V_q0[248:246]}};

assign tmp_258_fu_6412_p4 = {{mlp_inst_m2_weight_arr_V_q0[284:282]}};

assign tmp_259_fu_6432_p4 = {{mlp_inst_m2_weight_arr_V_q0[320:318]}};

assign tmp_25_fu_2402_p4 = {{mlp_inst_m2_weight_arr_V_q0[5:3]}};

assign tmp_260_fu_6452_p4 = {{mlp_inst_m2_weight_arr_V_q0[356:354]}};

assign tmp_261_fu_6472_p4 = {{mlp_inst_m2_weight_arr_V_q0[392:390]}};

assign tmp_262_fu_6492_p4 = {{mlp_inst_m2_weight_arr_V_q0[428:426]}};

assign tmp_264_fu_6522_p4 = {{mlp_inst_m2_weight_arr_V_q0[500:498]}};

assign tmp_265_fu_6542_p4 = {{mlp_inst_m2_weight_arr_V_q0[536:534]}};

assign tmp_266_fu_6562_p4 = {{mlp_inst_m2_weight_arr_V_q0[572:570]}};

assign tmp_267_fu_6582_p4 = {{mlp_inst_m2_weight_arr_V_q0[608:606]}};

assign tmp_268_fu_6602_p4 = {{mlp_inst_m2_weight_arr_V_q0[644:642]}};

assign tmp_26_fu_14208_p4 = {{select_ln126_fu_14129_p3[25:13]}};

assign tmp_270_fu_6632_p4 = {{mlp_inst_m2_weight_arr_V_q0[716:714]}};

assign tmp_274_fu_6682_p4 = {{mlp_inst_m2_weight_arr_V_q0[860:858]}};

assign tmp_275_fu_6702_p4 = {{mlp_inst_m2_weight_arr_V_q0[35:33]}};

assign tmp_276_fu_14988_p4 = {{select_ln126_fu_14129_p3[155:143]}};

assign tmp_277_fu_6722_p4 = {{mlp_inst_m2_weight_arr_V_q0[71:69]}};

assign tmp_278_fu_6742_p4 = {{mlp_inst_m2_weight_arr_V_q0[107:105]}};

assign tmp_279_fu_6762_p4 = {{mlp_inst_m2_weight_arr_V_q0[143:141]}};

assign tmp_27_fu_2422_p4 = {{mlp_inst_m2_weight_arr_V_q0[41:39]}};

assign tmp_280_fu_6782_p4 = {{mlp_inst_m2_weight_arr_V_q0[179:177]}};

assign tmp_281_fu_6802_p4 = {{mlp_inst_m2_weight_arr_V_q0[215:213]}};

assign tmp_282_fu_6822_p4 = {{mlp_inst_m2_weight_arr_V_q0[251:249]}};

assign tmp_283_fu_6842_p4 = {{mlp_inst_m2_weight_arr_V_q0[287:285]}};

assign tmp_284_fu_6862_p4 = {{mlp_inst_m2_weight_arr_V_q0[323:321]}};

assign tmp_285_fu_6882_p4 = {{mlp_inst_m2_weight_arr_V_q0[359:357]}};

assign tmp_286_fu_6902_p4 = {{mlp_inst_m2_weight_arr_V_q0[395:393]}};

assign tmp_287_fu_6922_p4 = {{mlp_inst_m2_weight_arr_V_q0[431:429]}};

assign tmp_289_fu_6952_p4 = {{mlp_inst_m2_weight_arr_V_q0[503:501]}};

assign tmp_28_fu_2442_p4 = {{mlp_inst_m2_weight_arr_V_q0[77:75]}};

assign tmp_290_fu_6972_p4 = {{mlp_inst_m2_weight_arr_V_q0[539:537]}};

assign tmp_291_fu_6992_p4 = {{mlp_inst_m2_weight_arr_V_q0[575:573]}};

assign tmp_292_fu_7012_p4 = {{mlp_inst_m2_weight_arr_V_q0[611:609]}};

assign tmp_293_fu_7032_p4 = {{mlp_inst_m2_weight_arr_V_q0[647:645]}};

assign tmp_295_fu_7062_p4 = {{mlp_inst_m2_weight_arr_V_q0[719:717]}};

assign tmp_299_fu_7112_p4 = {{mlp_inst_m2_weight_arr_V_q0[863:861]}};

assign tmp_29_fu_2462_p4 = {{mlp_inst_m2_weight_arr_V_q0[113:111]}};

assign tmp_2_fu_1690_p4 = {{mlp_inst_m2_weight_arr_V_q0[38:36]}};

assign tmp_300_fu_15066_p4 = {{select_ln126_fu_14129_p3[168:156]}};

assign tmp_301_fu_15144_p4 = {{select_ln126_fu_14129_p3[181:169]}};

assign tmp_302_fu_15222_p4 = {{select_ln126_fu_14129_p3[194:182]}};

assign tmp_303_fu_15300_p4 = {{select_ln126_fu_14129_p3[207:195]}};

assign tmp_304_fu_15417_p4 = {{select_ln126_fu_14129_p3[220:208]}};

assign tmp_305_fu_15534_p4 = {{select_ln126_fu_14129_p3[233:221]}};

assign tmp_306_fu_15651_p4 = {{select_ln126_fu_14129_p3[246:234]}};

assign tmp_307_fu_15768_p4 = {{select_ln126_fu_14129_p3[259:247]}};

assign tmp_308_fu_15885_p4 = {{select_ln126_fu_14129_p3[272:260]}};

assign tmp_309_fu_16002_p4 = {{select_ln126_fu_14129_p3[285:273]}};

assign tmp_30_fu_2482_p4 = {{mlp_inst_m2_weight_arr_V_q0[149:147]}};

assign tmp_310_fu_16119_p4 = {{select_ln126_fu_14129_p3[298:286]}};

assign tmp_311_fu_16236_p4 = {{select_ln126_fu_14129_p3[311:299]}};

assign tmp_312_fu_16761_p25 = {{{{{{{{{{{{{{{{{{{{{{{{add_ln691_575_fu_16755_p2}, {add_ln691_551_fu_16738_p2}}, {add_ln691_527_fu_16721_p2}}, {add_ln691_503_fu_16704_p2}}, {add_ln691_479_fu_16687_p2}}, {add_ln691_455_fu_16670_p2}}, {add_ln691_431_fu_16653_p2}}, {add_ln691_407_fu_16636_p2}}, {add_ln691_383_fu_16619_p2}}, {add_ln691_359_fu_16602_p2}}, {add_ln691_335_fu_16585_p2}}, {add_ln691_311_fu_16568_p2}}, {add_ln691_287_fu_16551_p2}}, {add_ln691_263_fu_16534_p2}}, {add_ln691_239_fu_16517_p2}}, {add_ln691_215_fu_16500_p2}}, {add_ln691_191_fu_16483_p2}}, {add_ln691_167_fu_16466_p2}}, {add_ln691_143_fu_16449_p2}}, {add_ln691_119_fu_16432_p2}}, {add_ln691_95_fu_16415_p2}}, {add_ln691_71_fu_16398_p2}}, {add_ln691_47_fu_16381_p2}}, {add_ln691_23_fu_16364_p2}};

assign tmp_313_fu_16818_p48 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{add_ln691_575_fu_16755_p2}, {3'd0}}, {add_ln691_551_fu_16738_p2}}, {3'd0}}, {add_ln691_527_fu_16721_p2}}, {3'd0}}, {add_ln691_503_fu_16704_p2}}, {3'd0}}, {add_ln691_479_fu_16687_p2}}, {3'd0}}, {add_ln691_455_fu_16670_p2}}, {3'd0}}, {add_ln691_431_fu_16653_p2}}, {3'd0}}, {add_ln691_407_fu_16636_p2}}, {3'd0}}, {add_ln691_383_fu_16619_p2}}, {3'd0}}, {add_ln691_359_fu_16602_p2}}, {3'd0}}, {add_ln691_335_fu_16585_p2}}, {3'd0}}, {add_ln691_311_fu_16568_p2}}, {3'd0}}, {add_ln691_287_fu_16551_p2}}, {3'd0}}, {add_ln691_263_fu_16534_p2}}, {3'd0}}, {add_ln691_239_fu_16517_p2}}, {3'd0}}, {add_ln691_215_fu_16500_p2}}, {3'd0}}, {add_ln691_191_fu_16483_p2}}, {3'd0}}, {add_ln691_167_fu_16466_p2}}, {3'd0}}, {add_ln691_143_fu_16449_p2}}, {3'd0}}, {add_ln691_119_fu_16432_p2}}, {3'd0}}, {add_ln691_95_fu_16415_p2}}, {3'd0}}, {add_ln691_71_fu_16398_p2}}, {3'd0}}, {add_ln691_47_fu_16381_p2}}, {3'd0}}, {add_ln691_23_fu_16364_p2}};

assign tmp_314_fu_1700_p4 = {{cache_window_sm_dout[10:8]}};

assign tmp_315_fu_1734_p4 = {{cache_window_sm_dout[18:16]}};

assign tmp_316_fu_1768_p4 = {{cache_window_sm_dout[26:24]}};

assign tmp_317_fu_1802_p4 = {{cache_window_sm_dout[34:32]}};

assign tmp_318_fu_1836_p4 = {{cache_window_sm_dout[42:40]}};

assign tmp_319_fu_1870_p4 = {{cache_window_sm_dout[50:48]}};

assign tmp_31_fu_2502_p4 = {{mlp_inst_m2_weight_arr_V_q0[185:183]}};

assign tmp_320_fu_1904_p4 = {{cache_window_sm_dout[58:56]}};

assign tmp_321_fu_1938_p4 = {{cache_window_sm_dout[66:64]}};

assign tmp_322_fu_1972_p4 = {{cache_window_sm_dout[74:72]}};

assign tmp_323_fu_2006_p4 = {{cache_window_sm_dout[82:80]}};

assign tmp_324_fu_2040_p4 = {{cache_window_sm_dout[90:88]}};

assign tmp_326_fu_2094_p4 = {{cache_window_sm_dout[106:104]}};

assign tmp_327_fu_2128_p4 = {{cache_window_sm_dout[114:112]}};

assign tmp_328_fu_2162_p4 = {{cache_window_sm_dout[122:120]}};

assign tmp_329_fu_2196_p4 = {{cache_window_sm_dout[130:128]}};

assign tmp_32_fu_2522_p4 = {{mlp_inst_m2_weight_arr_V_q0[221:219]}};

assign tmp_330_fu_2230_p4 = {{cache_window_sm_dout[138:136]}};

assign tmp_332_fu_2284_p4 = {{cache_window_sm_dout[154:152]}};

assign tmp_336_fu_7132_p4 = {{cache_window_sm_dout[194:192]}};

assign tmp_337_fu_7152_p4 = {{cache_window_sm_dout[202:200]}};

assign tmp_338_fu_7172_p4 = {{cache_window_sm_dout[210:208]}};

assign tmp_339_fu_7192_p4 = {{cache_window_sm_dout[218:216]}};

assign tmp_33_fu_2542_p4 = {{mlp_inst_m2_weight_arr_V_q0[257:255]}};

assign tmp_340_fu_7212_p4 = {{cache_window_sm_dout[226:224]}};

assign tmp_341_fu_7232_p4 = {{cache_window_sm_dout[234:232]}};

assign tmp_342_fu_7252_p4 = {{cache_window_sm_dout[242:240]}};

assign tmp_343_fu_7272_p4 = {{cache_window_sm_dout[250:248]}};

assign tmp_344_fu_7292_p4 = {{cache_window_sm_dout[258:256]}};

assign tmp_345_fu_7312_p4 = {{cache_window_sm_dout[266:264]}};

assign tmp_346_fu_7332_p4 = {{cache_window_sm_dout[274:272]}};

assign tmp_347_fu_7352_p4 = {{cache_window_sm_dout[282:280]}};

assign tmp_349_fu_7382_p4 = {{cache_window_sm_dout[298:296]}};

assign tmp_34_fu_2562_p4 = {{mlp_inst_m2_weight_arr_V_q0[293:291]}};

assign tmp_350_fu_7402_p4 = {{cache_window_sm_dout[306:304]}};

assign tmp_351_fu_7422_p4 = {{cache_window_sm_dout[314:312]}};

assign tmp_352_fu_7442_p4 = {{cache_window_sm_dout[322:320]}};

assign tmp_353_fu_7462_p4 = {{cache_window_sm_dout[330:328]}};

assign tmp_355_fu_7492_p4 = {{cache_window_sm_dout[346:344]}};

assign tmp_359_fu_7542_p4 = {{cache_window_sm_dout[378:376]}};

assign tmp_35_fu_2582_p4 = {{mlp_inst_m2_weight_arr_V_q0[329:327]}};

assign tmp_36_fu_2602_p4 = {{mlp_inst_m2_weight_arr_V_q0[365:363]}};

assign tmp_37_fu_2622_p4 = {{mlp_inst_m2_weight_arr_V_q0[401:399]}};

assign tmp_39_fu_2652_p4 = {{mlp_inst_m2_weight_arr_V_q0[473:471]}};

assign tmp_3_fu_1724_p4 = {{mlp_inst_m2_weight_arr_V_q0[74:72]}};

assign tmp_40_fu_2672_p4 = {{mlp_inst_m2_weight_arr_V_q0[509:507]}};

assign tmp_41_fu_2692_p4 = {{mlp_inst_m2_weight_arr_V_q0[545:543]}};

assign tmp_42_fu_2712_p4 = {{mlp_inst_m2_weight_arr_V_q0[581:579]}};

assign tmp_43_fu_2732_p4 = {{mlp_inst_m2_weight_arr_V_q0[617:615]}};

assign tmp_45_fu_2762_p4 = {{mlp_inst_m2_weight_arr_V_q0[689:687]}};

assign tmp_49_fu_2812_p4 = {{mlp_inst_m2_weight_arr_V_q0[833:831]}};

assign tmp_4_fu_1758_p4 = {{mlp_inst_m2_weight_arr_V_q0[110:108]}};

assign tmp_50_fu_2832_p4 = {{mlp_inst_m2_weight_arr_V_q0[8:6]}};

assign tmp_51_fu_14286_p4 = {{select_ln126_fu_14129_p3[38:26]}};

assign tmp_52_fu_2852_p4 = {{mlp_inst_m2_weight_arr_V_q0[44:42]}};

assign tmp_53_fu_2872_p4 = {{mlp_inst_m2_weight_arr_V_q0[80:78]}};

assign tmp_54_fu_2892_p4 = {{mlp_inst_m2_weight_arr_V_q0[116:114]}};

assign tmp_55_fu_2912_p4 = {{mlp_inst_m2_weight_arr_V_q0[152:150]}};

assign tmp_56_fu_2932_p4 = {{mlp_inst_m2_weight_arr_V_q0[188:186]}};

assign tmp_57_fu_2952_p4 = {{mlp_inst_m2_weight_arr_V_q0[224:222]}};

assign tmp_58_fu_2972_p4 = {{mlp_inst_m2_weight_arr_V_q0[260:258]}};

assign tmp_59_fu_2992_p4 = {{mlp_inst_m2_weight_arr_V_q0[296:294]}};

assign tmp_5_fu_1792_p4 = {{mlp_inst_m2_weight_arr_V_q0[146:144]}};

assign tmp_60_fu_3012_p4 = {{mlp_inst_m2_weight_arr_V_q0[332:330]}};

assign tmp_61_fu_3032_p4 = {{mlp_inst_m2_weight_arr_V_q0[368:366]}};

assign tmp_62_fu_3052_p4 = {{mlp_inst_m2_weight_arr_V_q0[404:402]}};

assign tmp_64_fu_3082_p4 = {{mlp_inst_m2_weight_arr_V_q0[476:474]}};

assign tmp_65_fu_3102_p4 = {{mlp_inst_m2_weight_arr_V_q0[512:510]}};

assign tmp_66_fu_3122_p4 = {{mlp_inst_m2_weight_arr_V_q0[548:546]}};

assign tmp_67_fu_3142_p4 = {{mlp_inst_m2_weight_arr_V_q0[584:582]}};

assign tmp_68_fu_3162_p4 = {{mlp_inst_m2_weight_arr_V_q0[620:618]}};

assign tmp_6_fu_1826_p4 = {{mlp_inst_m2_weight_arr_V_q0[182:180]}};

assign tmp_70_fu_3192_p4 = {{mlp_inst_m2_weight_arr_V_q0[692:690]}};

assign tmp_74_fu_3242_p4 = {{mlp_inst_m2_weight_arr_V_q0[836:834]}};

assign tmp_75_fu_3262_p4 = {{mlp_inst_m2_weight_arr_V_q0[11:9]}};

assign tmp_76_fu_14364_p4 = {{select_ln126_fu_14129_p3[51:39]}};

assign tmp_77_fu_3282_p4 = {{mlp_inst_m2_weight_arr_V_q0[47:45]}};

assign tmp_78_fu_3302_p4 = {{mlp_inst_m2_weight_arr_V_q0[83:81]}};

assign tmp_79_fu_3322_p4 = {{mlp_inst_m2_weight_arr_V_q0[119:117]}};

assign tmp_7_fu_1860_p4 = {{mlp_inst_m2_weight_arr_V_q0[218:216]}};

assign tmp_80_fu_3342_p4 = {{mlp_inst_m2_weight_arr_V_q0[155:153]}};

assign tmp_81_fu_3362_p4 = {{mlp_inst_m2_weight_arr_V_q0[191:189]}};

assign tmp_82_fu_3382_p4 = {{mlp_inst_m2_weight_arr_V_q0[227:225]}};

assign tmp_83_fu_3402_p4 = {{mlp_inst_m2_weight_arr_V_q0[263:261]}};

assign tmp_84_fu_3422_p4 = {{mlp_inst_m2_weight_arr_V_q0[299:297]}};

assign tmp_85_fu_3442_p4 = {{mlp_inst_m2_weight_arr_V_q0[335:333]}};

assign tmp_86_fu_3462_p4 = {{mlp_inst_m2_weight_arr_V_q0[371:369]}};

assign tmp_87_fu_3482_p4 = {{mlp_inst_m2_weight_arr_V_q0[407:405]}};

assign tmp_89_fu_3512_p4 = {{mlp_inst_m2_weight_arr_V_q0[479:477]}};

assign tmp_8_fu_1894_p4 = {{mlp_inst_m2_weight_arr_V_q0[254:252]}};

assign tmp_90_fu_3532_p4 = {{mlp_inst_m2_weight_arr_V_q0[515:513]}};

assign tmp_91_fu_3552_p4 = {{mlp_inst_m2_weight_arr_V_q0[551:549]}};

assign tmp_92_fu_3572_p4 = {{mlp_inst_m2_weight_arr_V_q0[587:585]}};

assign tmp_93_fu_3592_p4 = {{mlp_inst_m2_weight_arr_V_q0[623:621]}};

assign tmp_95_fu_3622_p4 = {{mlp_inst_m2_weight_arr_V_q0[695:693]}};

assign tmp_99_fu_3672_p4 = {{mlp_inst_m2_weight_arr_V_q0[839:837]}};

assign tmp_9_fu_1928_p4 = {{mlp_inst_m2_weight_arr_V_q0[290:288]}};

assign tmp_cast_fu_1608_p3 = {{select_ln121_5_fu_1601_p3}, {5'd0}};

assign tmp_s_fu_2378_p4 = {{cache_window_sm_dout[186:184]}};

assign trunc_ln145_fu_1668_p1 = cache_window_sm_dout[2:0];

assign trunc_ln215_3_fu_1590_p1 = cot_reg_1485[3:0];

assign trunc_ln215_4_fu_1672_p1 = mlp_inst_m2_weight_arr_V_q0[2:0];

assign trunc_ln215_fu_1587_p1 = add_ln121_reg_16960[3:0];

assign trunc_ln691_fu_14136_p1 = select_ln126_fu_14129_p3[12:0];

assign vec_o_data_M_elems_V_fu_14123_p3 = {{select_ln121_6_reg_17024}, {select_ln121_6_reg_17024}};

assign xor_ln120_fu_1533_p2 = (icmp_ln121_fu_1519_p2 ^ 1'd1);

assign zext_ln121_2_fu_1583_p1 = add_ln121_reg_16960;

assign zext_ln121_fu_1508_p1 = ap_phi_mux_cot_phi_fu_1489_p4;

assign zext_ln1345_10_fu_2016_p1 = tmp_323_fu_2006_p4;

assign zext_ln1345_11_fu_2050_p1 = tmp_324_fu_2040_p4;

assign zext_ln1345_12_fu_7844_p1 = tmp_325_reg_17095;

assign zext_ln1345_13_fu_2104_p1 = tmp_326_fu_2094_p4;

assign zext_ln1345_14_fu_2138_p1 = tmp_327_fu_2128_p4;

assign zext_ln1345_15_fu_2172_p1 = tmp_328_fu_2162_p4;

assign zext_ln1345_16_fu_2206_p1 = tmp_329_fu_2196_p4;

assign zext_ln1345_17_fu_2240_p1 = tmp_330_fu_2230_p4;

assign zext_ln1345_18_fu_7875_p1 = tmp_331_reg_17130;

assign zext_ln1345_19_fu_2294_p1 = tmp_332_fu_2284_p4;

assign zext_ln1345_1_fu_1710_p1 = tmp_314_fu_1700_p4;

assign zext_ln1345_20_fu_7894_p1 = tmp_333_reg_17145;

assign zext_ln1345_21_fu_7910_p1 = tmp_334_reg_17155;

assign zext_ln1345_22_fu_7926_p1 = tmp_335_reg_17165;

assign zext_ln1345_23_fu_2388_p1 = tmp_s_fu_2378_p4;

assign zext_ln1345_24_fu_7142_p1 = tmp_336_fu_7132_p4;

assign zext_ln1345_25_fu_7162_p1 = tmp_337_fu_7152_p4;

assign zext_ln1345_26_fu_7182_p1 = tmp_338_fu_7172_p4;

assign zext_ln1345_27_fu_7202_p1 = tmp_339_fu_7192_p4;

assign zext_ln1345_28_fu_7222_p1 = tmp_340_fu_7212_p4;

assign zext_ln1345_29_fu_7242_p1 = tmp_341_fu_7232_p4;

assign zext_ln1345_2_fu_1744_p1 = tmp_315_fu_1734_p4;

assign zext_ln1345_30_fu_7262_p1 = tmp_342_fu_7252_p4;

assign zext_ln1345_31_fu_7282_p1 = tmp_343_fu_7272_p4;

assign zext_ln1345_32_fu_7302_p1 = tmp_344_fu_7292_p4;

assign zext_ln1345_33_fu_7322_p1 = tmp_345_fu_7312_p4;

assign zext_ln1345_34_fu_7342_p1 = tmp_346_fu_7332_p4;

assign zext_ln1345_35_fu_7362_p1 = tmp_347_fu_7352_p4;

assign zext_ln1345_36_fu_10859_p1 = tmp_348_reg_19548;

assign zext_ln1345_37_fu_7392_p1 = tmp_349_fu_7382_p4;

assign zext_ln1345_38_fu_7412_p1 = tmp_350_fu_7402_p4;

assign zext_ln1345_39_fu_7432_p1 = tmp_351_fu_7422_p4;

assign zext_ln1345_3_fu_1778_p1 = tmp_316_fu_1768_p4;

assign zext_ln1345_40_fu_7452_p1 = tmp_352_fu_7442_p4;

assign zext_ln1345_41_fu_7472_p1 = tmp_353_fu_7462_p4;

assign zext_ln1345_42_fu_10887_p1 = tmp_354_reg_19643;

assign zext_ln1345_43_fu_7502_p1 = tmp_355_fu_7492_p4;

assign zext_ln1345_44_fu_10903_p1 = tmp_356_reg_19666;

assign zext_ln1345_45_fu_10916_p1 = tmp_357_reg_19671;

assign zext_ln1345_46_fu_10929_p1 = tmp_358_reg_19676;

assign zext_ln1345_47_fu_7552_p1 = tmp_359_fu_7542_p4;

assign zext_ln1345_4_fu_1812_p1 = tmp_317_fu_1802_p4;

assign zext_ln1345_5_fu_1846_p1 = tmp_318_fu_1836_p4;

assign zext_ln1345_6_fu_1880_p1 = tmp_319_fu_1870_p4;

assign zext_ln1345_7_fu_1914_p1 = tmp_320_fu_1904_p4;

assign zext_ln1345_8_fu_1948_p1 = tmp_321_fu_1938_p4;

assign zext_ln1345_9_fu_1982_p1 = tmp_322_fu_1972_p4;

assign zext_ln1345_fu_1676_p1 = trunc_ln145_fu_1668_p1;

assign zext_ln215_2_fu_1630_p1 = add_ln215_fu_1624_p2;

assign zext_ln215_fu_1621_p1 = select_ln121_reg_16967;

always @ (posedge ap_clk) begin
    zext_ln1345_24_reg_19335[5:3] <= 3'b000;
    zext_ln1345_25_reg_19352[5:3] <= 3'b000;
    zext_ln1345_26_reg_19369[5:3] <= 3'b000;
    zext_ln1345_27_reg_19386[5:3] <= 3'b000;
    zext_ln1345_28_reg_19404[5:3] <= 3'b000;
    zext_ln1345_29_reg_19422[5:3] <= 3'b000;
    zext_ln1345_30_reg_19440[5:3] <= 3'b000;
    zext_ln1345_31_reg_19458[5:3] <= 3'b000;
    zext_ln1345_32_reg_19476[5:3] <= 3'b000;
    zext_ln1345_33_reg_19494[5:3] <= 3'b000;
    zext_ln1345_34_reg_19512[5:3] <= 3'b000;
    zext_ln1345_35_reg_19530[5:3] <= 3'b000;
    zext_ln1345_37_reg_19553[5:3] <= 3'b000;
    zext_ln1345_38_reg_19571[5:3] <= 3'b000;
    zext_ln1345_39_reg_19589[5:3] <= 3'b000;
    zext_ln1345_40_reg_19607[5:3] <= 3'b000;
    zext_ln1345_41_reg_19625[5:3] <= 3'b000;
    zext_ln1345_43_reg_19648[5:3] <= 3'b000;
    zext_ln1345_47_reg_19681[5:3] <= 3'b000;
end

endmodule //MLP0_matmul_step2_mac
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_matmul_step2_mac_1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        cache_window_sm_dout,
        cache_window_sm_empty_n,
        cache_window_sm_read,
        mac_sm_din,
        mac_sm_full_n,
        mac_sm_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_pp0_stage0 = 5'd4;
parameter    ap_ST_fsm_pp0_stage1 = 5'd8;
parameter    ap_ST_fsm_state8 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [191:0] cache_window_sm_dout;
input   cache_window_sm_empty_n;
output   cache_window_sm_read;
output  [767:0] mac_sm_din;
input   mac_sm_full_n;
output   mac_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg cache_window_sm_read;
reg mac_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [4:0] mlp_inst_m1_bias_arr_V_address0;
reg    mlp_inst_m1_bias_arr_V_ce0;
wire   [263:0] mlp_inst_m1_bias_arr_V_q0;
wire   [8:0] mlp_inst_m1_weight_arr_V_address0;
reg    mlp_inst_m1_weight_arr_V_ce0;
wire   [863:0] mlp_inst_m1_weight_arr_V_q0;
reg    cache_window_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln120_reg_16532;
reg    mac_sm_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln161_reg_16605;
reg   [0:0] icmp_ln161_reg_16605_pp0_iter1_reg;
reg   [15:0] indvar_flatten20_reg_1524;
reg   [10:0] indvar_flatten_reg_1536;
reg   [5:0] cot_reg_1547;
reg   [4:0] cit_reg_1559;
reg   [263:0] mlp_inst_m1_bias_arr_V_load_1_reg_16522;
wire    ap_CS_fsm_state2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_state7_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln120_fu_1575_p2;
reg   [0:0] icmp_ln120_reg_16532_pp0_iter1_reg;
wire   [0:0] icmp_ln121_fu_1581_p2;
reg   [0:0] icmp_ln121_reg_16536;
wire   [5:0] select_ln120_fu_1587_p3;
reg   [5:0] select_ln120_reg_16543;
wire   [0:0] and_ln120_fu_1607_p2;
reg   [0:0] and_ln120_reg_16548;
wire   [5:0] add_ln121_fu_1613_p2;
reg   [5:0] add_ln121_reg_16555;
wire   [4:0] select_ln121_fu_1625_p3;
reg   [4:0] select_ln121_reg_16562;
wire   [10:0] add_ln121_1_fu_1633_p2;
reg   [10:0] add_ln121_1_reg_16570;
wire   [15:0] add_ln120_fu_1639_p2;
reg   [15:0] add_ln120_reg_16575;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [263:0] mlp_inst_m1_bias_arr_V_load_reg_16580;
wire   [5:0] select_ln121_3_fu_1678_p3;
reg   [5:0] select_ln121_3_reg_16590;
wire   [0:0] icmp_ln126_fu_1697_p2;
reg   [0:0] icmp_ln126_reg_16600;
wire   [0:0] icmp_ln161_fu_1702_p2;
wire   [4:0] add_ln122_fu_1707_p2;
reg   [4:0] add_ln122_reg_16609;
wire   [10:0] select_ln121_4_fu_1712_p3;
reg   [10:0] select_ln121_4_reg_16614;
wire   [263:0] select_ln121_2_fu_1723_p3;
reg   [263:0] select_ln121_2_reg_16619;
reg   [2:0] trunc_ln145_11_reg_16625;
reg   [2:0] trunc_ln145_12_reg_16630;
reg   [2:0] trunc_ln145_13_reg_16635;
reg   [2:0] trunc_ln145_14_reg_16640;
reg   [2:0] trunc_ln145_15_reg_16645;
reg   [2:0] trunc_ln145_16_reg_16650;
reg   [2:0] trunc_ln145_17_reg_16655;
reg   [2:0] trunc_ln145_18_reg_16660;
reg   [2:0] trunc_ln145_19_reg_16665;
reg   [2:0] trunc_ln145_20_reg_16670;
reg   [2:0] trunc_ln145_21_reg_16675;
reg   [2:0] trunc_ln145_22_reg_16680;
wire  signed [5:0] sext_ln1345_1_fu_1972_p1;
reg  signed [5:0] sext_ln1345_1_reg_16685;
wire  signed [5:0] mul_ln1345_fu_1976_p2;
reg  signed [5:0] mul_ln1345_reg_16690;
wire  signed [5:0] sext_ln1345_3_fu_1996_p1;
reg  signed [5:0] sext_ln1345_3_reg_16695;
wire  signed [5:0] mul_ln1345_1_fu_2000_p2;
reg  signed [5:0] mul_ln1345_1_reg_16700;
wire  signed [5:0] sext_ln1345_5_fu_2020_p1;
reg  signed [5:0] sext_ln1345_5_reg_16705;
wire  signed [5:0] mul_ln1345_2_fu_2024_p2;
reg  signed [5:0] mul_ln1345_2_reg_16710;
wire  signed [5:0] sext_ln1345_7_fu_2044_p1;
reg  signed [5:0] sext_ln1345_7_reg_16715;
wire  signed [5:0] mul_ln1345_3_fu_2048_p2;
reg  signed [5:0] mul_ln1345_3_reg_16720;
wire  signed [5:0] sext_ln1345_9_fu_2068_p1;
reg  signed [5:0] sext_ln1345_9_reg_16725;
wire  signed [5:0] mul_ln1345_4_fu_2072_p2;
reg  signed [5:0] mul_ln1345_4_reg_16730;
wire  signed [5:0] sext_ln1345_11_fu_2092_p1;
reg  signed [5:0] sext_ln1345_11_reg_16735;
wire  signed [5:0] mul_ln1345_5_fu_2096_p2;
reg  signed [5:0] mul_ln1345_5_reg_16740;
wire  signed [5:0] sext_ln1345_13_fu_2116_p1;
reg  signed [5:0] sext_ln1345_13_reg_16745;
wire  signed [5:0] mul_ln1345_6_fu_2120_p2;
reg  signed [5:0] mul_ln1345_6_reg_16750;
wire  signed [5:0] sext_ln1345_15_fu_2140_p1;
reg  signed [5:0] sext_ln1345_15_reg_16755;
wire  signed [5:0] mul_ln1345_7_fu_2144_p2;
reg  signed [5:0] mul_ln1345_7_reg_16760;
wire  signed [5:0] sext_ln1345_17_fu_2164_p1;
reg  signed [5:0] sext_ln1345_17_reg_16765;
wire  signed [5:0] mul_ln1345_8_fu_2168_p2;
reg  signed [5:0] mul_ln1345_8_reg_16770;
wire  signed [5:0] sext_ln1345_19_fu_2188_p1;
reg  signed [5:0] sext_ln1345_19_reg_16775;
wire  signed [5:0] mul_ln1345_9_fu_2192_p2;
reg  signed [5:0] mul_ln1345_9_reg_16780;
wire  signed [5:0] sext_ln1345_21_fu_2212_p1;
reg  signed [5:0] sext_ln1345_21_reg_16785;
wire  signed [5:0] mul_ln1345_10_fu_2216_p2;
reg  signed [5:0] mul_ln1345_10_reg_16790;
wire  signed [5:0] sext_ln1345_23_fu_2236_p1;
reg  signed [5:0] sext_ln1345_23_reg_16795;
wire  signed [5:0] mul_ln1345_11_fu_2240_p2;
reg  signed [5:0] mul_ln1345_11_reg_16800;
wire  signed [5:0] sext_ln1345_24_fu_2256_p1;
reg  signed [5:0] sext_ln1345_24_reg_16805;
wire  signed [5:0] mul_ln1345_12_fu_2260_p2;
reg  signed [5:0] mul_ln1345_12_reg_16810;
wire  signed [5:0] sext_ln1345_25_fu_2276_p1;
reg  signed [5:0] sext_ln1345_25_reg_16815;
wire  signed [5:0] mul_ln1345_13_fu_2280_p2;
reg  signed [5:0] mul_ln1345_13_reg_16820;
wire  signed [5:0] sext_ln1345_26_fu_2296_p1;
reg  signed [5:0] sext_ln1345_26_reg_16825;
wire  signed [5:0] mul_ln1345_14_fu_2300_p2;
reg  signed [5:0] mul_ln1345_14_reg_16830;
wire  signed [5:0] sext_ln1345_27_fu_2316_p1;
reg  signed [5:0] sext_ln1345_27_reg_16835;
wire  signed [5:0] mul_ln1345_15_fu_2320_p2;
reg  signed [5:0] mul_ln1345_15_reg_16840;
wire  signed [5:0] sext_ln1345_28_fu_2336_p1;
reg  signed [5:0] sext_ln1345_28_reg_16845;
wire  signed [5:0] mul_ln1345_16_fu_2340_p2;
reg  signed [5:0] mul_ln1345_16_reg_16850;
wire  signed [5:0] sext_ln1345_29_fu_2356_p1;
reg  signed [5:0] sext_ln1345_29_reg_16855;
wire  signed [5:0] mul_ln1345_17_fu_2360_p2;
reg  signed [5:0] mul_ln1345_17_reg_16860;
wire  signed [5:0] sext_ln1345_30_fu_2376_p1;
reg  signed [5:0] sext_ln1345_30_reg_16865;
wire  signed [5:0] mul_ln1345_18_fu_2380_p2;
reg  signed [5:0] mul_ln1345_18_reg_16870;
wire  signed [5:0] sext_ln1345_31_fu_2396_p1;
reg  signed [5:0] sext_ln1345_31_reg_16875;
wire  signed [5:0] mul_ln1345_19_fu_2400_p2;
reg  signed [5:0] mul_ln1345_19_reg_16880;
wire  signed [5:0] sext_ln1345_32_fu_2416_p1;
reg  signed [5:0] sext_ln1345_32_reg_16885;
wire  signed [5:0] mul_ln1345_20_fu_2420_p2;
reg  signed [5:0] mul_ln1345_20_reg_16890;
wire  signed [5:0] sext_ln1345_33_fu_2436_p1;
reg  signed [5:0] sext_ln1345_33_reg_16895;
wire  signed [5:0] mul_ln1345_21_fu_2440_p2;
reg  signed [5:0] mul_ln1345_21_reg_16900;
wire  signed [5:0] sext_ln1345_34_fu_2456_p1;
reg  signed [5:0] sext_ln1345_34_reg_16905;
wire  signed [5:0] mul_ln1345_22_fu_2460_p2;
reg  signed [5:0] mul_ln1345_22_reg_16910;
wire  signed [5:0] sext_ln1345_35_fu_2476_p1;
reg  signed [5:0] sext_ln1345_35_reg_16915;
wire  signed [5:0] mul_ln1345_23_fu_2480_p2;
reg  signed [5:0] mul_ln1345_23_reg_16920;
wire  signed [5:0] sext_ln1345_36_fu_2496_p1;
reg  signed [5:0] sext_ln1345_36_reg_16925;
wire  signed [5:0] mul_ln1345_24_fu_2500_p2;
reg  signed [5:0] mul_ln1345_24_reg_16930;
wire  signed [5:0] sext_ln1345_37_fu_2516_p1;
reg  signed [5:0] sext_ln1345_37_reg_16935;
wire  signed [5:0] mul_ln1345_25_fu_2520_p2;
reg  signed [5:0] mul_ln1345_25_reg_16940;
wire  signed [5:0] sext_ln1345_38_fu_2536_p1;
reg  signed [5:0] sext_ln1345_38_reg_16945;
wire  signed [5:0] mul_ln1345_26_fu_2540_p2;
reg  signed [5:0] mul_ln1345_26_reg_16950;
wire  signed [5:0] sext_ln1345_39_fu_2556_p1;
reg  signed [5:0] sext_ln1345_39_reg_16955;
wire  signed [5:0] mul_ln1345_27_fu_2560_p2;
reg  signed [5:0] mul_ln1345_27_reg_16960;
wire  signed [5:0] sext_ln1345_40_fu_2576_p1;
reg  signed [5:0] sext_ln1345_40_reg_16965;
wire  signed [5:0] mul_ln1345_28_fu_2580_p2;
reg  signed [5:0] mul_ln1345_28_reg_16970;
wire  signed [5:0] sext_ln1345_41_fu_2596_p1;
reg  signed [5:0] sext_ln1345_41_reg_16975;
wire  signed [5:0] mul_ln1345_29_fu_2600_p2;
reg  signed [5:0] mul_ln1345_29_reg_16980;
wire  signed [5:0] sext_ln1345_42_fu_2616_p1;
reg  signed [5:0] sext_ln1345_42_reg_16985;
wire  signed [5:0] mul_ln1345_30_fu_2620_p2;
reg  signed [5:0] mul_ln1345_30_reg_16990;
wire  signed [5:0] sext_ln1345_43_fu_2636_p1;
reg  signed [5:0] sext_ln1345_43_reg_16995;
wire  signed [5:0] mul_ln1345_31_fu_2640_p2;
reg  signed [5:0] mul_ln1345_31_reg_17000;
wire  signed [5:0] sext_ln1345_44_fu_2656_p1;
reg  signed [5:0] sext_ln1345_44_reg_17005;
wire  signed [5:0] mul_ln1345_32_fu_2660_p2;
reg  signed [5:0] mul_ln1345_32_reg_17010;
wire  signed [5:0] sext_ln1345_45_fu_2676_p1;
reg  signed [5:0] sext_ln1345_45_reg_17015;
wire  signed [5:0] mul_ln1345_33_fu_2680_p2;
reg  signed [5:0] mul_ln1345_33_reg_17020;
wire  signed [5:0] sext_ln1345_46_fu_2696_p1;
reg  signed [5:0] sext_ln1345_46_reg_17025;
wire  signed [5:0] mul_ln1345_34_fu_2700_p2;
reg  signed [5:0] mul_ln1345_34_reg_17030;
wire  signed [5:0] sext_ln1345_47_fu_2716_p1;
reg  signed [5:0] sext_ln1345_47_reg_17035;
wire  signed [5:0] mul_ln1345_35_fu_2720_p2;
reg  signed [5:0] mul_ln1345_35_reg_17040;
wire  signed [5:0] sext_ln1345_48_fu_2736_p1;
reg  signed [5:0] sext_ln1345_48_reg_17045;
wire  signed [5:0] mul_ln1345_36_fu_2740_p2;
reg  signed [5:0] mul_ln1345_36_reg_17050;
wire  signed [5:0] sext_ln1345_49_fu_2756_p1;
reg  signed [5:0] sext_ln1345_49_reg_17055;
wire  signed [5:0] mul_ln1345_37_fu_2760_p2;
reg  signed [5:0] mul_ln1345_37_reg_17060;
wire  signed [5:0] sext_ln1345_50_fu_2776_p1;
reg  signed [5:0] sext_ln1345_50_reg_17065;
wire  signed [5:0] mul_ln1345_38_fu_2780_p2;
reg  signed [5:0] mul_ln1345_38_reg_17070;
wire  signed [5:0] sext_ln1345_51_fu_2796_p1;
reg  signed [5:0] sext_ln1345_51_reg_17075;
wire  signed [5:0] mul_ln1345_39_fu_2800_p2;
reg  signed [5:0] mul_ln1345_39_reg_17080;
wire  signed [5:0] sext_ln1345_52_fu_2816_p1;
reg  signed [5:0] sext_ln1345_52_reg_17085;
wire  signed [5:0] mul_ln1345_40_fu_2820_p2;
reg  signed [5:0] mul_ln1345_40_reg_17090;
wire  signed [5:0] sext_ln1345_53_fu_2836_p1;
reg  signed [5:0] sext_ln1345_53_reg_17095;
wire  signed [5:0] mul_ln1345_41_fu_2840_p2;
reg  signed [5:0] mul_ln1345_41_reg_17100;
wire  signed [5:0] sext_ln1345_54_fu_2856_p1;
reg  signed [5:0] sext_ln1345_54_reg_17105;
wire  signed [5:0] mul_ln1345_42_fu_2860_p2;
reg  signed [5:0] mul_ln1345_42_reg_17110;
wire  signed [5:0] sext_ln1345_55_fu_2876_p1;
reg  signed [5:0] sext_ln1345_55_reg_17115;
wire  signed [5:0] mul_ln1345_43_fu_2880_p2;
reg  signed [5:0] mul_ln1345_43_reg_17120;
wire  signed [5:0] sext_ln1345_56_fu_2896_p1;
reg  signed [5:0] sext_ln1345_56_reg_17125;
wire  signed [5:0] mul_ln1345_44_fu_2900_p2;
reg  signed [5:0] mul_ln1345_44_reg_17130;
wire  signed [5:0] sext_ln1345_57_fu_2916_p1;
reg  signed [5:0] sext_ln1345_57_reg_17135;
wire  signed [5:0] mul_ln1345_45_fu_2920_p2;
reg  signed [5:0] mul_ln1345_45_reg_17140;
wire  signed [5:0] sext_ln1345_58_fu_2936_p1;
reg  signed [5:0] sext_ln1345_58_reg_17145;
wire  signed [5:0] mul_ln1345_46_fu_2940_p2;
reg  signed [5:0] mul_ln1345_46_reg_17150;
wire  signed [5:0] sext_ln1345_59_fu_2956_p1;
reg  signed [5:0] sext_ln1345_59_reg_17155;
wire  signed [5:0] mul_ln1345_47_fu_2960_p2;
reg  signed [5:0] mul_ln1345_47_reg_17160;
wire  signed [5:0] sext_ln1345_60_fu_2976_p1;
reg  signed [5:0] sext_ln1345_60_reg_17165;
wire  signed [5:0] mul_ln1345_48_fu_2980_p2;
reg  signed [5:0] mul_ln1345_48_reg_17170;
wire  signed [5:0] sext_ln1345_61_fu_2996_p1;
reg  signed [5:0] sext_ln1345_61_reg_17175;
wire  signed [5:0] mul_ln1345_49_fu_3000_p2;
reg  signed [5:0] mul_ln1345_49_reg_17180;
wire  signed [5:0] sext_ln1345_62_fu_3016_p1;
reg  signed [5:0] sext_ln1345_62_reg_17185;
wire  signed [5:0] mul_ln1345_50_fu_3020_p2;
reg  signed [5:0] mul_ln1345_50_reg_17190;
wire  signed [5:0] sext_ln1345_63_fu_3036_p1;
reg  signed [5:0] sext_ln1345_63_reg_17195;
wire  signed [5:0] mul_ln1345_51_fu_3040_p2;
reg  signed [5:0] mul_ln1345_51_reg_17200;
wire  signed [5:0] sext_ln1345_64_fu_3056_p1;
reg  signed [5:0] sext_ln1345_64_reg_17205;
wire  signed [5:0] mul_ln1345_52_fu_3060_p2;
reg  signed [5:0] mul_ln1345_52_reg_17210;
wire  signed [5:0] sext_ln1345_65_fu_3076_p1;
reg  signed [5:0] sext_ln1345_65_reg_17215;
wire  signed [5:0] mul_ln1345_53_fu_3080_p2;
reg  signed [5:0] mul_ln1345_53_reg_17220;
wire  signed [5:0] sext_ln1345_66_fu_3096_p1;
reg  signed [5:0] sext_ln1345_66_reg_17225;
wire  signed [5:0] mul_ln1345_54_fu_3100_p2;
reg  signed [5:0] mul_ln1345_54_reg_17230;
wire  signed [5:0] sext_ln1345_67_fu_3116_p1;
reg  signed [5:0] sext_ln1345_67_reg_17235;
wire  signed [5:0] mul_ln1345_55_fu_3120_p2;
reg  signed [5:0] mul_ln1345_55_reg_17240;
wire  signed [5:0] sext_ln1345_68_fu_3136_p1;
reg  signed [5:0] sext_ln1345_68_reg_17245;
wire  signed [5:0] mul_ln1345_56_fu_3140_p2;
reg  signed [5:0] mul_ln1345_56_reg_17250;
wire  signed [5:0] sext_ln1345_69_fu_3156_p1;
reg  signed [5:0] sext_ln1345_69_reg_17255;
wire  signed [5:0] mul_ln1345_57_fu_3160_p2;
reg  signed [5:0] mul_ln1345_57_reg_17260;
wire  signed [5:0] sext_ln1345_70_fu_3176_p1;
reg  signed [5:0] sext_ln1345_70_reg_17265;
wire  signed [5:0] mul_ln1345_58_fu_3180_p2;
reg  signed [5:0] mul_ln1345_58_reg_17270;
wire  signed [5:0] sext_ln1345_71_fu_3196_p1;
reg  signed [5:0] sext_ln1345_71_reg_17275;
wire  signed [5:0] mul_ln1345_59_fu_3200_p2;
reg  signed [5:0] mul_ln1345_59_reg_17280;
wire  signed [5:0] sext_ln1345_72_fu_3216_p1;
reg  signed [5:0] sext_ln1345_72_reg_17285;
wire  signed [5:0] mul_ln1345_60_fu_3220_p2;
reg  signed [5:0] mul_ln1345_60_reg_17290;
wire  signed [5:0] sext_ln1345_73_fu_3236_p1;
reg  signed [5:0] sext_ln1345_73_reg_17295;
wire  signed [5:0] mul_ln1345_61_fu_3240_p2;
reg  signed [5:0] mul_ln1345_61_reg_17300;
wire  signed [5:0] sext_ln1345_74_fu_3256_p1;
reg  signed [5:0] sext_ln1345_74_reg_17305;
wire  signed [5:0] mul_ln1345_62_fu_3260_p2;
reg  signed [5:0] mul_ln1345_62_reg_17310;
wire  signed [5:0] sext_ln1345_75_fu_3276_p1;
reg  signed [5:0] sext_ln1345_75_reg_17315;
wire  signed [5:0] mul_ln1345_63_fu_3280_p2;
reg  signed [5:0] mul_ln1345_63_reg_17320;
wire  signed [5:0] sext_ln1345_76_fu_3296_p1;
reg  signed [5:0] sext_ln1345_76_reg_17325;
wire  signed [5:0] mul_ln1345_64_fu_3300_p2;
reg  signed [5:0] mul_ln1345_64_reg_17330;
wire  signed [5:0] sext_ln1345_77_fu_3316_p1;
reg  signed [5:0] sext_ln1345_77_reg_17335;
wire  signed [5:0] mul_ln1345_65_fu_3320_p2;
reg  signed [5:0] mul_ln1345_65_reg_17340;
wire  signed [5:0] sext_ln1345_78_fu_3336_p1;
reg  signed [5:0] sext_ln1345_78_reg_17345;
wire  signed [5:0] mul_ln1345_66_fu_3340_p2;
reg  signed [5:0] mul_ln1345_66_reg_17350;
wire  signed [5:0] sext_ln1345_79_fu_3356_p1;
reg  signed [5:0] sext_ln1345_79_reg_17355;
wire  signed [5:0] mul_ln1345_67_fu_3360_p2;
reg  signed [5:0] mul_ln1345_67_reg_17360;
wire  signed [5:0] sext_ln1345_80_fu_3376_p1;
reg  signed [5:0] sext_ln1345_80_reg_17365;
wire  signed [5:0] mul_ln1345_68_fu_3380_p2;
reg  signed [5:0] mul_ln1345_68_reg_17370;
wire  signed [5:0] sext_ln1345_81_fu_3396_p1;
reg  signed [5:0] sext_ln1345_81_reg_17375;
wire  signed [5:0] mul_ln1345_69_fu_3400_p2;
reg  signed [5:0] mul_ln1345_69_reg_17380;
wire  signed [5:0] sext_ln1345_82_fu_3416_p1;
reg  signed [5:0] sext_ln1345_82_reg_17385;
wire  signed [5:0] mul_ln1345_70_fu_3420_p2;
reg  signed [5:0] mul_ln1345_70_reg_17390;
wire  signed [5:0] sext_ln1345_83_fu_3436_p1;
reg  signed [5:0] sext_ln1345_83_reg_17395;
wire  signed [5:0] mul_ln1345_71_fu_3440_p2;
reg  signed [5:0] mul_ln1345_71_reg_17400;
wire  signed [5:0] sext_ln1345_84_fu_3456_p1;
reg  signed [5:0] sext_ln1345_84_reg_17405;
wire  signed [5:0] mul_ln1345_72_fu_3460_p2;
reg  signed [5:0] mul_ln1345_72_reg_17410;
wire  signed [5:0] sext_ln1345_85_fu_3476_p1;
reg  signed [5:0] sext_ln1345_85_reg_17415;
wire  signed [5:0] mul_ln1345_73_fu_3480_p2;
reg  signed [5:0] mul_ln1345_73_reg_17420;
wire  signed [5:0] sext_ln1345_86_fu_3496_p1;
reg  signed [5:0] sext_ln1345_86_reg_17425;
wire  signed [5:0] mul_ln1345_74_fu_3500_p2;
reg  signed [5:0] mul_ln1345_74_reg_17430;
wire  signed [5:0] sext_ln1345_87_fu_3516_p1;
reg  signed [5:0] sext_ln1345_87_reg_17435;
wire  signed [5:0] mul_ln1345_75_fu_3520_p2;
reg  signed [5:0] mul_ln1345_75_reg_17440;
wire  signed [5:0] sext_ln1345_88_fu_3536_p1;
reg  signed [5:0] sext_ln1345_88_reg_17445;
wire  signed [5:0] mul_ln1345_76_fu_3540_p2;
reg  signed [5:0] mul_ln1345_76_reg_17450;
wire  signed [5:0] sext_ln1345_89_fu_3556_p1;
reg  signed [5:0] sext_ln1345_89_reg_17455;
wire  signed [5:0] mul_ln1345_77_fu_3560_p2;
reg  signed [5:0] mul_ln1345_77_reg_17460;
wire  signed [5:0] sext_ln1345_90_fu_3576_p1;
reg  signed [5:0] sext_ln1345_90_reg_17465;
wire  signed [5:0] mul_ln1345_78_fu_3580_p2;
reg  signed [5:0] mul_ln1345_78_reg_17470;
wire  signed [5:0] sext_ln1345_91_fu_3596_p1;
reg  signed [5:0] sext_ln1345_91_reg_17475;
wire  signed [5:0] mul_ln1345_79_fu_3600_p2;
reg  signed [5:0] mul_ln1345_79_reg_17480;
wire  signed [5:0] sext_ln1345_92_fu_3616_p1;
reg  signed [5:0] sext_ln1345_92_reg_17485;
wire  signed [5:0] mul_ln1345_80_fu_3620_p2;
reg  signed [5:0] mul_ln1345_80_reg_17490;
wire  signed [5:0] sext_ln1345_93_fu_3636_p1;
reg  signed [5:0] sext_ln1345_93_reg_17495;
wire  signed [5:0] mul_ln1345_81_fu_3640_p2;
reg  signed [5:0] mul_ln1345_81_reg_17500;
wire  signed [5:0] sext_ln1345_94_fu_3656_p1;
reg  signed [5:0] sext_ln1345_94_reg_17505;
wire  signed [5:0] mul_ln1345_82_fu_3660_p2;
reg  signed [5:0] mul_ln1345_82_reg_17510;
wire  signed [5:0] sext_ln1345_95_fu_3676_p1;
reg  signed [5:0] sext_ln1345_95_reg_17515;
wire  signed [5:0] mul_ln1345_83_fu_3680_p2;
reg  signed [5:0] mul_ln1345_83_reg_17520;
wire  signed [5:0] sext_ln1345_96_fu_3696_p1;
reg  signed [5:0] sext_ln1345_96_reg_17525;
wire  signed [5:0] mul_ln1345_84_fu_3700_p2;
reg  signed [5:0] mul_ln1345_84_reg_17530;
wire  signed [5:0] sext_ln1345_97_fu_3716_p1;
reg  signed [5:0] sext_ln1345_97_reg_17535;
wire  signed [5:0] mul_ln1345_85_fu_3720_p2;
reg  signed [5:0] mul_ln1345_85_reg_17540;
wire  signed [5:0] sext_ln1345_98_fu_3736_p1;
reg  signed [5:0] sext_ln1345_98_reg_17545;
wire  signed [5:0] mul_ln1345_86_fu_3740_p2;
reg  signed [5:0] mul_ln1345_86_reg_17550;
wire  signed [5:0] sext_ln1345_99_fu_3756_p1;
reg  signed [5:0] sext_ln1345_99_reg_17555;
wire  signed [5:0] mul_ln1345_87_fu_3760_p2;
reg  signed [5:0] mul_ln1345_87_reg_17560;
wire  signed [5:0] sext_ln1345_100_fu_3776_p1;
reg  signed [5:0] sext_ln1345_100_reg_17565;
wire  signed [5:0] mul_ln1345_88_fu_3780_p2;
reg  signed [5:0] mul_ln1345_88_reg_17570;
wire  signed [5:0] sext_ln1345_101_fu_3796_p1;
reg  signed [5:0] sext_ln1345_101_reg_17575;
wire  signed [5:0] mul_ln1345_89_fu_3800_p2;
reg  signed [5:0] mul_ln1345_89_reg_17580;
wire  signed [5:0] sext_ln1345_102_fu_3816_p1;
reg  signed [5:0] sext_ln1345_102_reg_17585;
wire  signed [5:0] mul_ln1345_90_fu_3820_p2;
reg  signed [5:0] mul_ln1345_90_reg_17590;
wire  signed [5:0] sext_ln1345_103_fu_3836_p1;
reg  signed [5:0] sext_ln1345_103_reg_17595;
wire  signed [5:0] mul_ln1345_91_fu_3840_p2;
reg  signed [5:0] mul_ln1345_91_reg_17600;
wire  signed [5:0] sext_ln1345_104_fu_3856_p1;
reg  signed [5:0] sext_ln1345_104_reg_17605;
wire  signed [5:0] mul_ln1345_92_fu_3860_p2;
reg  signed [5:0] mul_ln1345_92_reg_17610;
wire  signed [5:0] sext_ln1345_105_fu_3876_p1;
reg  signed [5:0] sext_ln1345_105_reg_17615;
wire  signed [5:0] mul_ln1345_93_fu_3880_p2;
reg  signed [5:0] mul_ln1345_93_reg_17620;
wire  signed [5:0] sext_ln1345_106_fu_3896_p1;
reg  signed [5:0] sext_ln1345_106_reg_17625;
wire  signed [5:0] mul_ln1345_94_fu_3900_p2;
reg  signed [5:0] mul_ln1345_94_reg_17630;
wire  signed [5:0] sext_ln1345_107_fu_3916_p1;
reg  signed [5:0] sext_ln1345_107_reg_17635;
wire  signed [5:0] mul_ln1345_95_fu_3920_p2;
reg  signed [5:0] mul_ln1345_95_reg_17640;
wire  signed [5:0] sext_ln1345_108_fu_3936_p1;
reg  signed [5:0] sext_ln1345_108_reg_17645;
wire  signed [5:0] mul_ln1345_96_fu_3940_p2;
reg  signed [5:0] mul_ln1345_96_reg_17650;
wire  signed [5:0] sext_ln1345_109_fu_3956_p1;
reg  signed [5:0] sext_ln1345_109_reg_17655;
wire  signed [5:0] mul_ln1345_97_fu_3960_p2;
reg  signed [5:0] mul_ln1345_97_reg_17660;
wire  signed [5:0] sext_ln1345_110_fu_3976_p1;
reg  signed [5:0] sext_ln1345_110_reg_17665;
wire  signed [5:0] mul_ln1345_98_fu_3980_p2;
reg  signed [5:0] mul_ln1345_98_reg_17670;
wire  signed [5:0] sext_ln1345_111_fu_3996_p1;
reg  signed [5:0] sext_ln1345_111_reg_17675;
wire  signed [5:0] mul_ln1345_99_fu_4000_p2;
reg  signed [5:0] mul_ln1345_99_reg_17680;
wire  signed [5:0] sext_ln1345_112_fu_4016_p1;
reg  signed [5:0] sext_ln1345_112_reg_17685;
wire  signed [5:0] mul_ln1345_100_fu_4020_p2;
reg  signed [5:0] mul_ln1345_100_reg_17690;
wire  signed [5:0] sext_ln1345_113_fu_4036_p1;
reg  signed [5:0] sext_ln1345_113_reg_17695;
wire  signed [5:0] mul_ln1345_101_fu_4040_p2;
reg  signed [5:0] mul_ln1345_101_reg_17700;
wire  signed [5:0] sext_ln1345_114_fu_4056_p1;
reg  signed [5:0] sext_ln1345_114_reg_17705;
wire  signed [5:0] mul_ln1345_102_fu_4060_p2;
reg  signed [5:0] mul_ln1345_102_reg_17710;
wire  signed [5:0] sext_ln1345_115_fu_4076_p1;
reg  signed [5:0] sext_ln1345_115_reg_17715;
wire  signed [5:0] mul_ln1345_103_fu_4080_p2;
reg  signed [5:0] mul_ln1345_103_reg_17720;
wire  signed [5:0] sext_ln1345_116_fu_4096_p1;
reg  signed [5:0] sext_ln1345_116_reg_17725;
wire  signed [5:0] mul_ln1345_104_fu_4100_p2;
reg  signed [5:0] mul_ln1345_104_reg_17730;
wire  signed [5:0] sext_ln1345_117_fu_4116_p1;
reg  signed [5:0] sext_ln1345_117_reg_17735;
wire  signed [5:0] mul_ln1345_105_fu_4120_p2;
reg  signed [5:0] mul_ln1345_105_reg_17740;
wire  signed [5:0] sext_ln1345_118_fu_4136_p1;
reg  signed [5:0] sext_ln1345_118_reg_17745;
wire  signed [5:0] mul_ln1345_106_fu_4140_p2;
reg  signed [5:0] mul_ln1345_106_reg_17750;
wire  signed [5:0] sext_ln1345_119_fu_4156_p1;
reg  signed [5:0] sext_ln1345_119_reg_17755;
wire  signed [5:0] mul_ln1345_107_fu_4160_p2;
reg  signed [5:0] mul_ln1345_107_reg_17760;
wire  signed [5:0] sext_ln1345_120_fu_4176_p1;
reg  signed [5:0] sext_ln1345_120_reg_17765;
wire  signed [5:0] mul_ln1345_108_fu_4180_p2;
reg  signed [5:0] mul_ln1345_108_reg_17770;
wire  signed [5:0] sext_ln1345_121_fu_4196_p1;
reg  signed [5:0] sext_ln1345_121_reg_17775;
wire  signed [5:0] mul_ln1345_109_fu_4200_p2;
reg  signed [5:0] mul_ln1345_109_reg_17780;
wire  signed [5:0] sext_ln1345_122_fu_4216_p1;
reg  signed [5:0] sext_ln1345_122_reg_17785;
wire  signed [5:0] mul_ln1345_110_fu_4220_p2;
reg  signed [5:0] mul_ln1345_110_reg_17790;
wire  signed [5:0] sext_ln1345_123_fu_4236_p1;
reg  signed [5:0] sext_ln1345_123_reg_17795;
wire  signed [5:0] mul_ln1345_111_fu_4240_p2;
reg  signed [5:0] mul_ln1345_111_reg_17800;
wire  signed [5:0] sext_ln1345_124_fu_4256_p1;
reg  signed [5:0] sext_ln1345_124_reg_17805;
wire  signed [5:0] mul_ln1345_112_fu_4260_p2;
reg  signed [5:0] mul_ln1345_112_reg_17810;
wire  signed [5:0] sext_ln1345_125_fu_4276_p1;
reg  signed [5:0] sext_ln1345_125_reg_17815;
wire  signed [5:0] mul_ln1345_113_fu_4280_p2;
reg  signed [5:0] mul_ln1345_113_reg_17820;
wire  signed [5:0] sext_ln1345_126_fu_4296_p1;
reg  signed [5:0] sext_ln1345_126_reg_17825;
wire  signed [5:0] mul_ln1345_114_fu_4300_p2;
reg  signed [5:0] mul_ln1345_114_reg_17830;
wire  signed [5:0] sext_ln1345_127_fu_4316_p1;
reg  signed [5:0] sext_ln1345_127_reg_17835;
wire  signed [5:0] mul_ln1345_115_fu_4320_p2;
reg  signed [5:0] mul_ln1345_115_reg_17840;
wire  signed [5:0] sext_ln1345_128_fu_4336_p1;
reg  signed [5:0] sext_ln1345_128_reg_17845;
wire  signed [5:0] mul_ln1345_116_fu_4340_p2;
reg  signed [5:0] mul_ln1345_116_reg_17850;
wire  signed [5:0] sext_ln1345_129_fu_4356_p1;
reg  signed [5:0] sext_ln1345_129_reg_17855;
wire  signed [5:0] mul_ln1345_117_fu_4360_p2;
reg  signed [5:0] mul_ln1345_117_reg_17860;
wire  signed [5:0] sext_ln1345_130_fu_4376_p1;
reg  signed [5:0] sext_ln1345_130_reg_17865;
wire  signed [5:0] mul_ln1345_118_fu_4380_p2;
reg  signed [5:0] mul_ln1345_118_reg_17870;
wire  signed [5:0] sext_ln1345_131_fu_4396_p1;
reg  signed [5:0] sext_ln1345_131_reg_17875;
wire  signed [5:0] mul_ln1345_119_fu_4400_p2;
reg  signed [5:0] mul_ln1345_119_reg_17880;
wire  signed [5:0] sext_ln1345_132_fu_4416_p1;
reg  signed [5:0] sext_ln1345_132_reg_17885;
wire  signed [5:0] mul_ln1345_120_fu_4420_p2;
reg  signed [5:0] mul_ln1345_120_reg_17890;
wire  signed [5:0] sext_ln1345_133_fu_4436_p1;
reg  signed [5:0] sext_ln1345_133_reg_17895;
wire  signed [5:0] mul_ln1345_121_fu_4440_p2;
reg  signed [5:0] mul_ln1345_121_reg_17900;
wire  signed [5:0] sext_ln1345_134_fu_4456_p1;
reg  signed [5:0] sext_ln1345_134_reg_17905;
wire  signed [5:0] mul_ln1345_122_fu_4460_p2;
reg  signed [5:0] mul_ln1345_122_reg_17910;
wire  signed [5:0] sext_ln1345_135_fu_4476_p1;
reg  signed [5:0] sext_ln1345_135_reg_17915;
wire  signed [5:0] mul_ln1345_123_fu_4480_p2;
reg  signed [5:0] mul_ln1345_123_reg_17920;
wire  signed [5:0] sext_ln1345_136_fu_4496_p1;
reg  signed [5:0] sext_ln1345_136_reg_17925;
wire  signed [5:0] mul_ln1345_124_fu_4500_p2;
reg  signed [5:0] mul_ln1345_124_reg_17930;
wire  signed [5:0] sext_ln1345_137_fu_4516_p1;
reg  signed [5:0] sext_ln1345_137_reg_17935;
wire  signed [5:0] mul_ln1345_125_fu_4520_p2;
reg  signed [5:0] mul_ln1345_125_reg_17940;
wire  signed [5:0] sext_ln1345_138_fu_4536_p1;
reg  signed [5:0] sext_ln1345_138_reg_17945;
wire  signed [5:0] mul_ln1345_126_fu_4540_p2;
reg  signed [5:0] mul_ln1345_126_reg_17950;
wire  signed [5:0] sext_ln1345_139_fu_4556_p1;
reg  signed [5:0] sext_ln1345_139_reg_17955;
wire  signed [5:0] mul_ln1345_127_fu_4560_p2;
reg  signed [5:0] mul_ln1345_127_reg_17960;
wire  signed [5:0] sext_ln1345_140_fu_4576_p1;
reg  signed [5:0] sext_ln1345_140_reg_17965;
wire  signed [5:0] mul_ln1345_128_fu_4580_p2;
reg  signed [5:0] mul_ln1345_128_reg_17970;
wire  signed [5:0] sext_ln1345_141_fu_4596_p1;
reg  signed [5:0] sext_ln1345_141_reg_17975;
wire  signed [5:0] mul_ln1345_129_fu_4600_p2;
reg  signed [5:0] mul_ln1345_129_reg_17980;
wire  signed [5:0] sext_ln1345_142_fu_4616_p1;
reg  signed [5:0] sext_ln1345_142_reg_17985;
wire  signed [5:0] mul_ln1345_130_fu_4620_p2;
reg  signed [5:0] mul_ln1345_130_reg_17990;
wire  signed [5:0] sext_ln1345_143_fu_4636_p1;
reg  signed [5:0] sext_ln1345_143_reg_17995;
wire  signed [5:0] mul_ln1345_131_fu_4640_p2;
reg  signed [5:0] mul_ln1345_131_reg_18000;
wire  signed [5:0] sext_ln1345_144_fu_4656_p1;
reg  signed [5:0] sext_ln1345_144_reg_18005;
wire  signed [5:0] mul_ln1345_132_fu_4660_p2;
reg  signed [5:0] mul_ln1345_132_reg_18010;
wire  signed [5:0] sext_ln1345_145_fu_4676_p1;
reg  signed [5:0] sext_ln1345_145_reg_18015;
wire  signed [5:0] mul_ln1345_133_fu_4680_p2;
reg  signed [5:0] mul_ln1345_133_reg_18020;
wire  signed [5:0] sext_ln1345_146_fu_4696_p1;
reg  signed [5:0] sext_ln1345_146_reg_18025;
wire  signed [5:0] mul_ln1345_134_fu_4700_p2;
reg  signed [5:0] mul_ln1345_134_reg_18030;
wire  signed [5:0] sext_ln1345_147_fu_4716_p1;
reg  signed [5:0] sext_ln1345_147_reg_18035;
wire  signed [5:0] mul_ln1345_135_fu_4720_p2;
reg  signed [5:0] mul_ln1345_135_reg_18040;
wire  signed [5:0] sext_ln1345_148_fu_4736_p1;
reg  signed [5:0] sext_ln1345_148_reg_18045;
wire  signed [5:0] mul_ln1345_136_fu_4740_p2;
reg  signed [5:0] mul_ln1345_136_reg_18050;
wire  signed [5:0] sext_ln1345_149_fu_4756_p1;
reg  signed [5:0] sext_ln1345_149_reg_18055;
wire  signed [5:0] mul_ln1345_137_fu_4760_p2;
reg  signed [5:0] mul_ln1345_137_reg_18060;
wire  signed [5:0] sext_ln1345_150_fu_4776_p1;
reg  signed [5:0] sext_ln1345_150_reg_18065;
wire  signed [5:0] mul_ln1345_138_fu_4780_p2;
reg  signed [5:0] mul_ln1345_138_reg_18070;
wire  signed [5:0] sext_ln1345_151_fu_4796_p1;
reg  signed [5:0] sext_ln1345_151_reg_18075;
wire  signed [5:0] mul_ln1345_139_fu_4800_p2;
reg  signed [5:0] mul_ln1345_139_reg_18080;
wire  signed [5:0] sext_ln1345_152_fu_4816_p1;
reg  signed [5:0] sext_ln1345_152_reg_18085;
wire  signed [5:0] mul_ln1345_140_fu_4820_p2;
reg  signed [5:0] mul_ln1345_140_reg_18090;
wire  signed [5:0] sext_ln1345_153_fu_4836_p1;
reg  signed [5:0] sext_ln1345_153_reg_18095;
wire  signed [5:0] mul_ln1345_141_fu_4840_p2;
reg  signed [5:0] mul_ln1345_141_reg_18100;
wire  signed [5:0] sext_ln1345_154_fu_4856_p1;
reg  signed [5:0] sext_ln1345_154_reg_18105;
wire  signed [5:0] mul_ln1345_142_fu_4860_p2;
reg  signed [5:0] mul_ln1345_142_reg_18110;
wire  signed [5:0] sext_ln1345_155_fu_4876_p1;
reg  signed [5:0] sext_ln1345_155_reg_18115;
wire  signed [5:0] mul_ln1345_143_fu_4880_p2;
reg  signed [5:0] mul_ln1345_143_reg_18120;
wire  signed [5:0] sext_ln1345_156_fu_4896_p1;
reg  signed [5:0] sext_ln1345_156_reg_18125;
wire  signed [5:0] mul_ln1345_144_fu_4900_p2;
reg  signed [5:0] mul_ln1345_144_reg_18130;
wire  signed [5:0] sext_ln1345_157_fu_4916_p1;
reg  signed [5:0] sext_ln1345_157_reg_18135;
wire  signed [5:0] mul_ln1345_145_fu_4920_p2;
reg  signed [5:0] mul_ln1345_145_reg_18140;
wire  signed [5:0] sext_ln1345_158_fu_4936_p1;
reg  signed [5:0] sext_ln1345_158_reg_18145;
wire  signed [5:0] mul_ln1345_146_fu_4940_p2;
reg  signed [5:0] mul_ln1345_146_reg_18150;
wire  signed [5:0] sext_ln1345_159_fu_4956_p1;
reg  signed [5:0] sext_ln1345_159_reg_18155;
wire  signed [5:0] mul_ln1345_147_fu_4960_p2;
reg  signed [5:0] mul_ln1345_147_reg_18160;
wire  signed [5:0] sext_ln1345_160_fu_4976_p1;
reg  signed [5:0] sext_ln1345_160_reg_18165;
wire  signed [5:0] mul_ln1345_148_fu_4980_p2;
reg  signed [5:0] mul_ln1345_148_reg_18170;
wire  signed [5:0] sext_ln1345_161_fu_4996_p1;
reg  signed [5:0] sext_ln1345_161_reg_18175;
wire  signed [5:0] mul_ln1345_149_fu_5000_p2;
reg  signed [5:0] mul_ln1345_149_reg_18180;
wire  signed [5:0] sext_ln1345_162_fu_5016_p1;
reg  signed [5:0] sext_ln1345_162_reg_18185;
wire  signed [5:0] mul_ln1345_150_fu_5020_p2;
reg  signed [5:0] mul_ln1345_150_reg_18190;
wire  signed [5:0] sext_ln1345_163_fu_5036_p1;
reg  signed [5:0] sext_ln1345_163_reg_18195;
wire  signed [5:0] mul_ln1345_151_fu_5040_p2;
reg  signed [5:0] mul_ln1345_151_reg_18200;
wire  signed [5:0] sext_ln1345_164_fu_5056_p1;
reg  signed [5:0] sext_ln1345_164_reg_18205;
wire  signed [5:0] mul_ln1345_152_fu_5060_p2;
reg  signed [5:0] mul_ln1345_152_reg_18210;
wire  signed [5:0] sext_ln1345_165_fu_5076_p1;
reg  signed [5:0] sext_ln1345_165_reg_18215;
wire  signed [5:0] mul_ln1345_153_fu_5080_p2;
reg  signed [5:0] mul_ln1345_153_reg_18220;
wire  signed [5:0] sext_ln1345_166_fu_5096_p1;
reg  signed [5:0] sext_ln1345_166_reg_18225;
wire  signed [5:0] mul_ln1345_154_fu_5100_p2;
reg  signed [5:0] mul_ln1345_154_reg_18230;
wire  signed [5:0] sext_ln1345_167_fu_5116_p1;
reg  signed [5:0] sext_ln1345_167_reg_18235;
wire  signed [5:0] mul_ln1345_155_fu_5120_p2;
reg  signed [5:0] mul_ln1345_155_reg_18240;
wire  signed [5:0] sext_ln1345_168_fu_5136_p1;
reg  signed [5:0] sext_ln1345_168_reg_18245;
wire  signed [5:0] mul_ln1345_156_fu_5140_p2;
reg  signed [5:0] mul_ln1345_156_reg_18250;
wire  signed [5:0] sext_ln1345_169_fu_5156_p1;
reg  signed [5:0] sext_ln1345_169_reg_18255;
wire  signed [5:0] mul_ln1345_157_fu_5160_p2;
reg  signed [5:0] mul_ln1345_157_reg_18260;
wire  signed [5:0] sext_ln1345_170_fu_5176_p1;
reg  signed [5:0] sext_ln1345_170_reg_18265;
wire  signed [5:0] mul_ln1345_158_fu_5180_p2;
reg  signed [5:0] mul_ln1345_158_reg_18270;
wire  signed [5:0] sext_ln1345_171_fu_5196_p1;
reg  signed [5:0] sext_ln1345_171_reg_18275;
wire  signed [5:0] mul_ln1345_159_fu_5200_p2;
reg  signed [5:0] mul_ln1345_159_reg_18280;
wire  signed [5:0] sext_ln1345_172_fu_5216_p1;
reg  signed [5:0] sext_ln1345_172_reg_18285;
wire  signed [5:0] mul_ln1345_160_fu_5220_p2;
reg  signed [5:0] mul_ln1345_160_reg_18290;
wire  signed [5:0] sext_ln1345_173_fu_5236_p1;
reg  signed [5:0] sext_ln1345_173_reg_18295;
wire  signed [5:0] mul_ln1345_161_fu_5240_p2;
reg  signed [5:0] mul_ln1345_161_reg_18300;
wire  signed [5:0] sext_ln1345_174_fu_5256_p1;
reg  signed [5:0] sext_ln1345_174_reg_18305;
wire  signed [5:0] mul_ln1345_162_fu_5260_p2;
reg  signed [5:0] mul_ln1345_162_reg_18310;
wire  signed [5:0] sext_ln1345_175_fu_5276_p1;
reg  signed [5:0] sext_ln1345_175_reg_18315;
wire  signed [5:0] mul_ln1345_163_fu_5280_p2;
reg  signed [5:0] mul_ln1345_163_reg_18320;
wire  signed [5:0] sext_ln1345_176_fu_5296_p1;
reg  signed [5:0] sext_ln1345_176_reg_18325;
wire  signed [5:0] mul_ln1345_164_fu_5300_p2;
reg  signed [5:0] mul_ln1345_164_reg_18330;
wire  signed [5:0] sext_ln1345_177_fu_5316_p1;
reg  signed [5:0] sext_ln1345_177_reg_18335;
wire  signed [5:0] mul_ln1345_165_fu_5320_p2;
reg  signed [5:0] mul_ln1345_165_reg_18340;
wire  signed [5:0] sext_ln1345_178_fu_5336_p1;
reg  signed [5:0] sext_ln1345_178_reg_18345;
wire  signed [5:0] mul_ln1345_166_fu_5340_p2;
reg  signed [5:0] mul_ln1345_166_reg_18350;
wire  signed [5:0] sext_ln1345_179_fu_5356_p1;
reg  signed [5:0] sext_ln1345_179_reg_18355;
wire  signed [5:0] mul_ln1345_167_fu_5360_p2;
reg  signed [5:0] mul_ln1345_167_reg_18360;
wire  signed [5:0] sext_ln1345_180_fu_5376_p1;
reg  signed [5:0] sext_ln1345_180_reg_18365;
wire  signed [5:0] mul_ln1345_168_fu_5380_p2;
reg  signed [5:0] mul_ln1345_168_reg_18370;
wire  signed [5:0] sext_ln1345_181_fu_5396_p1;
reg  signed [5:0] sext_ln1345_181_reg_18375;
wire  signed [5:0] mul_ln1345_169_fu_5400_p2;
reg  signed [5:0] mul_ln1345_169_reg_18380;
wire  signed [5:0] sext_ln1345_182_fu_5416_p1;
reg  signed [5:0] sext_ln1345_182_reg_18385;
wire  signed [5:0] mul_ln1345_170_fu_5420_p2;
reg  signed [5:0] mul_ln1345_170_reg_18390;
wire  signed [5:0] sext_ln1345_183_fu_5436_p1;
reg  signed [5:0] sext_ln1345_183_reg_18395;
wire  signed [5:0] mul_ln1345_171_fu_5440_p2;
reg  signed [5:0] mul_ln1345_171_reg_18400;
wire  signed [5:0] sext_ln1345_184_fu_5456_p1;
reg  signed [5:0] sext_ln1345_184_reg_18405;
wire  signed [5:0] mul_ln1345_172_fu_5460_p2;
reg  signed [5:0] mul_ln1345_172_reg_18410;
wire  signed [5:0] sext_ln1345_185_fu_5476_p1;
reg  signed [5:0] sext_ln1345_185_reg_18415;
wire  signed [5:0] mul_ln1345_173_fu_5480_p2;
reg  signed [5:0] mul_ln1345_173_reg_18420;
wire  signed [5:0] sext_ln1345_186_fu_5496_p1;
reg  signed [5:0] sext_ln1345_186_reg_18425;
wire  signed [5:0] mul_ln1345_174_fu_5500_p2;
reg  signed [5:0] mul_ln1345_174_reg_18430;
wire  signed [5:0] sext_ln1345_187_fu_5516_p1;
reg  signed [5:0] sext_ln1345_187_reg_18435;
wire  signed [5:0] mul_ln1345_175_fu_5520_p2;
reg  signed [5:0] mul_ln1345_175_reg_18440;
wire  signed [5:0] sext_ln1345_188_fu_5536_p1;
reg  signed [5:0] sext_ln1345_188_reg_18445;
wire  signed [5:0] mul_ln1345_176_fu_5540_p2;
reg  signed [5:0] mul_ln1345_176_reg_18450;
wire  signed [5:0] sext_ln1345_189_fu_5556_p1;
reg  signed [5:0] sext_ln1345_189_reg_18455;
wire  signed [5:0] mul_ln1345_177_fu_5560_p2;
reg  signed [5:0] mul_ln1345_177_reg_18460;
wire  signed [5:0] sext_ln1345_190_fu_5576_p1;
reg  signed [5:0] sext_ln1345_190_reg_18465;
wire  signed [5:0] mul_ln1345_178_fu_5580_p2;
reg  signed [5:0] mul_ln1345_178_reg_18470;
wire  signed [5:0] sext_ln1345_191_fu_5596_p1;
reg  signed [5:0] sext_ln1345_191_reg_18475;
wire  signed [5:0] mul_ln1345_179_fu_5600_p2;
reg  signed [5:0] mul_ln1345_179_reg_18480;
wire  signed [5:0] sext_ln1345_192_fu_5616_p1;
reg  signed [5:0] sext_ln1345_192_reg_18485;
wire  signed [5:0] mul_ln1345_180_fu_5620_p2;
reg  signed [5:0] mul_ln1345_180_reg_18490;
wire  signed [5:0] sext_ln1345_193_fu_5636_p1;
reg  signed [5:0] sext_ln1345_193_reg_18495;
wire  signed [5:0] mul_ln1345_181_fu_5640_p2;
reg  signed [5:0] mul_ln1345_181_reg_18500;
wire  signed [5:0] sext_ln1345_194_fu_5656_p1;
reg  signed [5:0] sext_ln1345_194_reg_18505;
wire  signed [5:0] mul_ln1345_182_fu_5660_p2;
reg  signed [5:0] mul_ln1345_182_reg_18510;
wire  signed [5:0] sext_ln1345_195_fu_5676_p1;
reg  signed [5:0] sext_ln1345_195_reg_18515;
wire  signed [5:0] mul_ln1345_183_fu_5680_p2;
reg  signed [5:0] mul_ln1345_183_reg_18520;
wire  signed [5:0] sext_ln1345_196_fu_5696_p1;
reg  signed [5:0] sext_ln1345_196_reg_18525;
wire  signed [5:0] mul_ln1345_184_fu_5700_p2;
reg  signed [5:0] mul_ln1345_184_reg_18530;
wire  signed [5:0] sext_ln1345_197_fu_5716_p1;
reg  signed [5:0] sext_ln1345_197_reg_18535;
wire  signed [5:0] mul_ln1345_185_fu_5720_p2;
reg  signed [5:0] mul_ln1345_185_reg_18540;
wire  signed [5:0] sext_ln1345_198_fu_5736_p1;
reg  signed [5:0] sext_ln1345_198_reg_18545;
wire  signed [5:0] mul_ln1345_186_fu_5740_p2;
reg  signed [5:0] mul_ln1345_186_reg_18550;
wire  signed [5:0] sext_ln1345_199_fu_5756_p1;
reg  signed [5:0] sext_ln1345_199_reg_18555;
wire  signed [5:0] mul_ln1345_187_fu_5760_p2;
reg  signed [5:0] mul_ln1345_187_reg_18560;
wire  signed [5:0] sext_ln1345_200_fu_5776_p1;
reg  signed [5:0] sext_ln1345_200_reg_18565;
wire  signed [5:0] mul_ln1345_188_fu_5780_p2;
reg  signed [5:0] mul_ln1345_188_reg_18570;
wire  signed [5:0] sext_ln1345_201_fu_5796_p1;
reg  signed [5:0] sext_ln1345_201_reg_18575;
wire  signed [5:0] mul_ln1345_189_fu_5800_p2;
reg  signed [5:0] mul_ln1345_189_reg_18580;
wire  signed [5:0] sext_ln1345_202_fu_5816_p1;
reg  signed [5:0] sext_ln1345_202_reg_18585;
wire  signed [5:0] mul_ln1345_190_fu_5820_p2;
reg  signed [5:0] mul_ln1345_190_reg_18590;
wire  signed [5:0] sext_ln1345_203_fu_5836_p1;
reg  signed [5:0] sext_ln1345_203_reg_18595;
wire  signed [5:0] mul_ln1345_191_fu_5840_p2;
reg  signed [5:0] mul_ln1345_191_reg_18600;
wire  signed [5:0] sext_ln1345_204_fu_5856_p1;
reg  signed [5:0] sext_ln1345_204_reg_18605;
wire  signed [5:0] mul_ln1345_192_fu_5860_p2;
reg  signed [5:0] mul_ln1345_192_reg_18610;
wire  signed [5:0] sext_ln1345_205_fu_5876_p1;
reg  signed [5:0] sext_ln1345_205_reg_18615;
wire  signed [5:0] mul_ln1345_193_fu_5880_p2;
reg  signed [5:0] mul_ln1345_193_reg_18620;
wire  signed [5:0] sext_ln1345_206_fu_5896_p1;
reg  signed [5:0] sext_ln1345_206_reg_18625;
wire  signed [5:0] mul_ln1345_194_fu_5900_p2;
reg  signed [5:0] mul_ln1345_194_reg_18630;
wire  signed [5:0] sext_ln1345_207_fu_5916_p1;
reg  signed [5:0] sext_ln1345_207_reg_18635;
wire  signed [5:0] mul_ln1345_195_fu_5920_p2;
reg  signed [5:0] mul_ln1345_195_reg_18640;
wire  signed [5:0] sext_ln1345_208_fu_5936_p1;
reg  signed [5:0] sext_ln1345_208_reg_18645;
wire  signed [5:0] mul_ln1345_196_fu_5940_p2;
reg  signed [5:0] mul_ln1345_196_reg_18650;
wire  signed [5:0] sext_ln1345_209_fu_5956_p1;
reg  signed [5:0] sext_ln1345_209_reg_18655;
wire  signed [5:0] mul_ln1345_197_fu_5960_p2;
reg  signed [5:0] mul_ln1345_197_reg_18660;
wire  signed [5:0] sext_ln1345_210_fu_5976_p1;
reg  signed [5:0] sext_ln1345_210_reg_18665;
wire  signed [5:0] mul_ln1345_198_fu_5980_p2;
reg  signed [5:0] mul_ln1345_198_reg_18670;
wire  signed [5:0] sext_ln1345_211_fu_5996_p1;
reg  signed [5:0] sext_ln1345_211_reg_18675;
wire  signed [5:0] mul_ln1345_199_fu_6000_p2;
reg  signed [5:0] mul_ln1345_199_reg_18680;
wire  signed [5:0] sext_ln1345_212_fu_6016_p1;
reg  signed [5:0] sext_ln1345_212_reg_18685;
wire  signed [5:0] mul_ln1345_200_fu_6020_p2;
reg  signed [5:0] mul_ln1345_200_reg_18690;
wire  signed [5:0] sext_ln1345_213_fu_6036_p1;
reg  signed [5:0] sext_ln1345_213_reg_18695;
wire  signed [5:0] mul_ln1345_201_fu_6040_p2;
reg  signed [5:0] mul_ln1345_201_reg_18700;
wire  signed [5:0] sext_ln1345_214_fu_6056_p1;
reg  signed [5:0] sext_ln1345_214_reg_18705;
wire  signed [5:0] mul_ln1345_202_fu_6060_p2;
reg  signed [5:0] mul_ln1345_202_reg_18710;
wire  signed [5:0] sext_ln1345_215_fu_6076_p1;
reg  signed [5:0] sext_ln1345_215_reg_18715;
wire  signed [5:0] mul_ln1345_203_fu_6080_p2;
reg  signed [5:0] mul_ln1345_203_reg_18720;
wire  signed [5:0] sext_ln1345_216_fu_6096_p1;
reg  signed [5:0] sext_ln1345_216_reg_18725;
wire  signed [5:0] mul_ln1345_204_fu_6100_p2;
reg  signed [5:0] mul_ln1345_204_reg_18730;
wire  signed [5:0] sext_ln1345_217_fu_6116_p1;
reg  signed [5:0] sext_ln1345_217_reg_18735;
wire  signed [5:0] mul_ln1345_205_fu_6120_p2;
reg  signed [5:0] mul_ln1345_205_reg_18740;
wire  signed [5:0] sext_ln1345_218_fu_6136_p1;
reg  signed [5:0] sext_ln1345_218_reg_18745;
wire  signed [5:0] mul_ln1345_206_fu_6140_p2;
reg  signed [5:0] mul_ln1345_206_reg_18750;
wire  signed [5:0] sext_ln1345_219_fu_6156_p1;
reg  signed [5:0] sext_ln1345_219_reg_18755;
wire  signed [5:0] mul_ln1345_207_fu_6160_p2;
reg  signed [5:0] mul_ln1345_207_reg_18760;
wire  signed [5:0] sext_ln1345_220_fu_6176_p1;
reg  signed [5:0] sext_ln1345_220_reg_18765;
wire  signed [5:0] mul_ln1345_208_fu_6180_p2;
reg  signed [5:0] mul_ln1345_208_reg_18770;
wire  signed [5:0] sext_ln1345_221_fu_6196_p1;
reg  signed [5:0] sext_ln1345_221_reg_18775;
wire  signed [5:0] mul_ln1345_209_fu_6200_p2;
reg  signed [5:0] mul_ln1345_209_reg_18780;
wire  signed [5:0] sext_ln1345_222_fu_6216_p1;
reg  signed [5:0] sext_ln1345_222_reg_18785;
wire  signed [5:0] mul_ln1345_210_fu_6220_p2;
reg  signed [5:0] mul_ln1345_210_reg_18790;
wire  signed [5:0] sext_ln1345_223_fu_6236_p1;
reg  signed [5:0] sext_ln1345_223_reg_18795;
wire  signed [5:0] mul_ln1345_211_fu_6240_p2;
reg  signed [5:0] mul_ln1345_211_reg_18800;
wire  signed [5:0] sext_ln1345_224_fu_6256_p1;
reg  signed [5:0] sext_ln1345_224_reg_18805;
wire  signed [5:0] mul_ln1345_212_fu_6260_p2;
reg  signed [5:0] mul_ln1345_212_reg_18810;
wire  signed [5:0] sext_ln1345_225_fu_6276_p1;
reg  signed [5:0] sext_ln1345_225_reg_18815;
wire  signed [5:0] mul_ln1345_213_fu_6280_p2;
reg  signed [5:0] mul_ln1345_213_reg_18820;
wire  signed [5:0] sext_ln1345_226_fu_6296_p1;
reg  signed [5:0] sext_ln1345_226_reg_18825;
wire  signed [5:0] mul_ln1345_214_fu_6300_p2;
reg  signed [5:0] mul_ln1345_214_reg_18830;
wire  signed [5:0] sext_ln1345_227_fu_6316_p1;
reg  signed [5:0] sext_ln1345_227_reg_18835;
wire  signed [5:0] mul_ln1345_215_fu_6320_p2;
reg  signed [5:0] mul_ln1345_215_reg_18840;
wire  signed [5:0] sext_ln1345_228_fu_6336_p1;
reg  signed [5:0] sext_ln1345_228_reg_18845;
wire  signed [5:0] mul_ln1345_216_fu_6340_p2;
reg  signed [5:0] mul_ln1345_216_reg_18850;
wire  signed [5:0] sext_ln1345_229_fu_6356_p1;
reg  signed [5:0] sext_ln1345_229_reg_18855;
wire  signed [5:0] mul_ln1345_217_fu_6360_p2;
reg  signed [5:0] mul_ln1345_217_reg_18860;
wire  signed [5:0] sext_ln1345_230_fu_6376_p1;
reg  signed [5:0] sext_ln1345_230_reg_18865;
wire  signed [5:0] mul_ln1345_218_fu_6380_p2;
reg  signed [5:0] mul_ln1345_218_reg_18870;
wire  signed [5:0] sext_ln1345_231_fu_6396_p1;
reg  signed [5:0] sext_ln1345_231_reg_18875;
wire  signed [5:0] mul_ln1345_219_fu_6400_p2;
reg  signed [5:0] mul_ln1345_219_reg_18880;
wire  signed [5:0] sext_ln1345_232_fu_6416_p1;
reg  signed [5:0] sext_ln1345_232_reg_18885;
wire  signed [5:0] mul_ln1345_220_fu_6420_p2;
reg  signed [5:0] mul_ln1345_220_reg_18890;
wire  signed [5:0] sext_ln1345_233_fu_6436_p1;
reg  signed [5:0] sext_ln1345_233_reg_18895;
wire  signed [5:0] mul_ln1345_221_fu_6440_p2;
reg  signed [5:0] mul_ln1345_221_reg_18900;
wire  signed [5:0] sext_ln1345_234_fu_6456_p1;
reg  signed [5:0] sext_ln1345_234_reg_18905;
wire  signed [5:0] mul_ln1345_222_fu_6460_p2;
reg  signed [5:0] mul_ln1345_222_reg_18910;
wire  signed [5:0] sext_ln1345_235_fu_6476_p1;
reg  signed [5:0] sext_ln1345_235_reg_18915;
wire  signed [5:0] mul_ln1345_223_fu_6480_p2;
reg  signed [5:0] mul_ln1345_223_reg_18920;
wire  signed [5:0] sext_ln1345_236_fu_6496_p1;
reg  signed [5:0] sext_ln1345_236_reg_18925;
wire  signed [5:0] mul_ln1345_224_fu_6500_p2;
reg  signed [5:0] mul_ln1345_224_reg_18930;
wire  signed [5:0] sext_ln1345_237_fu_6516_p1;
reg  signed [5:0] sext_ln1345_237_reg_18935;
wire  signed [5:0] mul_ln1345_225_fu_6520_p2;
reg  signed [5:0] mul_ln1345_225_reg_18940;
wire  signed [5:0] sext_ln1345_238_fu_6536_p1;
reg  signed [5:0] sext_ln1345_238_reg_18945;
wire  signed [5:0] mul_ln1345_226_fu_6540_p2;
reg  signed [5:0] mul_ln1345_226_reg_18950;
wire  signed [5:0] sext_ln1345_239_fu_6556_p1;
reg  signed [5:0] sext_ln1345_239_reg_18955;
wire  signed [5:0] mul_ln1345_227_fu_6560_p2;
reg  signed [5:0] mul_ln1345_227_reg_18960;
wire  signed [5:0] sext_ln1345_240_fu_6576_p1;
reg  signed [5:0] sext_ln1345_240_reg_18965;
wire  signed [5:0] mul_ln1345_228_fu_6580_p2;
reg  signed [5:0] mul_ln1345_228_reg_18970;
wire  signed [5:0] sext_ln1345_241_fu_6596_p1;
reg  signed [5:0] sext_ln1345_241_reg_18975;
wire  signed [5:0] mul_ln1345_229_fu_6600_p2;
reg  signed [5:0] mul_ln1345_229_reg_18980;
wire  signed [5:0] sext_ln1345_242_fu_6616_p1;
reg  signed [5:0] sext_ln1345_242_reg_18985;
wire  signed [5:0] mul_ln1345_230_fu_6620_p2;
reg  signed [5:0] mul_ln1345_230_reg_18990;
wire  signed [5:0] sext_ln1345_243_fu_6636_p1;
reg  signed [5:0] sext_ln1345_243_reg_18995;
wire  signed [5:0] mul_ln1345_231_fu_6640_p2;
reg  signed [5:0] mul_ln1345_231_reg_19000;
wire  signed [5:0] sext_ln1345_244_fu_6656_p1;
reg  signed [5:0] sext_ln1345_244_reg_19005;
wire  signed [5:0] mul_ln1345_232_fu_6660_p2;
reg  signed [5:0] mul_ln1345_232_reg_19010;
wire  signed [5:0] sext_ln1345_245_fu_6676_p1;
reg  signed [5:0] sext_ln1345_245_reg_19015;
wire  signed [5:0] mul_ln1345_233_fu_6680_p2;
reg  signed [5:0] mul_ln1345_233_reg_19020;
wire  signed [5:0] sext_ln1345_246_fu_6696_p1;
reg  signed [5:0] sext_ln1345_246_reg_19025;
wire  signed [5:0] mul_ln1345_234_fu_6700_p2;
reg  signed [5:0] mul_ln1345_234_reg_19030;
wire  signed [5:0] sext_ln1345_247_fu_6716_p1;
reg  signed [5:0] sext_ln1345_247_reg_19035;
wire  signed [5:0] mul_ln1345_235_fu_6720_p2;
reg  signed [5:0] mul_ln1345_235_reg_19040;
wire  signed [5:0] sext_ln1345_248_fu_6736_p1;
reg  signed [5:0] sext_ln1345_248_reg_19045;
wire  signed [5:0] mul_ln1345_236_fu_6740_p2;
reg  signed [5:0] mul_ln1345_236_reg_19050;
wire  signed [5:0] sext_ln1345_249_fu_6756_p1;
reg  signed [5:0] sext_ln1345_249_reg_19055;
wire  signed [5:0] mul_ln1345_237_fu_6760_p2;
reg  signed [5:0] mul_ln1345_237_reg_19060;
wire  signed [5:0] sext_ln1345_250_fu_6776_p1;
reg  signed [5:0] sext_ln1345_250_reg_19065;
wire  signed [5:0] mul_ln1345_238_fu_6780_p2;
reg  signed [5:0] mul_ln1345_238_reg_19070;
wire  signed [5:0] sext_ln1345_251_fu_6796_p1;
reg  signed [5:0] sext_ln1345_251_reg_19075;
wire  signed [5:0] mul_ln1345_239_fu_6800_p2;
reg  signed [5:0] mul_ln1345_239_reg_19080;
wire  signed [5:0] sext_ln1345_252_fu_6816_p1;
reg  signed [5:0] sext_ln1345_252_reg_19085;
wire  signed [5:0] mul_ln1345_240_fu_6820_p2;
reg  signed [5:0] mul_ln1345_240_reg_19090;
wire  signed [5:0] sext_ln1345_253_fu_6836_p1;
reg  signed [5:0] sext_ln1345_253_reg_19095;
wire  signed [5:0] mul_ln1345_241_fu_6840_p2;
reg  signed [5:0] mul_ln1345_241_reg_19100;
wire  signed [5:0] sext_ln1345_254_fu_6856_p1;
reg  signed [5:0] sext_ln1345_254_reg_19105;
wire  signed [5:0] mul_ln1345_242_fu_6860_p2;
reg  signed [5:0] mul_ln1345_242_reg_19110;
wire  signed [5:0] sext_ln1345_255_fu_6876_p1;
reg  signed [5:0] sext_ln1345_255_reg_19115;
wire  signed [5:0] mul_ln1345_243_fu_6880_p2;
reg  signed [5:0] mul_ln1345_243_reg_19120;
wire  signed [5:0] sext_ln1345_256_fu_6896_p1;
reg  signed [5:0] sext_ln1345_256_reg_19125;
wire  signed [5:0] mul_ln1345_244_fu_6900_p2;
reg  signed [5:0] mul_ln1345_244_reg_19130;
wire  signed [5:0] sext_ln1345_257_fu_6916_p1;
reg  signed [5:0] sext_ln1345_257_reg_19135;
wire  signed [5:0] mul_ln1345_245_fu_6920_p2;
reg  signed [5:0] mul_ln1345_245_reg_19140;
wire  signed [5:0] sext_ln1345_258_fu_6936_p1;
reg  signed [5:0] sext_ln1345_258_reg_19145;
wire  signed [5:0] mul_ln1345_246_fu_6940_p2;
reg  signed [5:0] mul_ln1345_246_reg_19150;
wire  signed [5:0] sext_ln1345_259_fu_6956_p1;
reg  signed [5:0] sext_ln1345_259_reg_19155;
wire  signed [5:0] mul_ln1345_247_fu_6960_p2;
reg  signed [5:0] mul_ln1345_247_reg_19160;
wire  signed [5:0] sext_ln1345_260_fu_6976_p1;
reg  signed [5:0] sext_ln1345_260_reg_19165;
wire  signed [5:0] mul_ln1345_248_fu_6980_p2;
reg  signed [5:0] mul_ln1345_248_reg_19170;
wire  signed [5:0] sext_ln1345_261_fu_6996_p1;
reg  signed [5:0] sext_ln1345_261_reg_19175;
wire  signed [5:0] mul_ln1345_249_fu_7000_p2;
reg  signed [5:0] mul_ln1345_249_reg_19180;
wire  signed [5:0] sext_ln1345_262_fu_7016_p1;
reg  signed [5:0] sext_ln1345_262_reg_19185;
wire  signed [5:0] mul_ln1345_250_fu_7020_p2;
reg  signed [5:0] mul_ln1345_250_reg_19190;
wire  signed [5:0] sext_ln1345_263_fu_7036_p1;
reg  signed [5:0] sext_ln1345_263_reg_19195;
wire  signed [5:0] mul_ln1345_251_fu_7040_p2;
reg  signed [5:0] mul_ln1345_251_reg_19200;
wire  signed [5:0] sext_ln1345_264_fu_7056_p1;
reg  signed [5:0] sext_ln1345_264_reg_19205;
wire  signed [5:0] mul_ln1345_252_fu_7060_p2;
reg  signed [5:0] mul_ln1345_252_reg_19210;
wire  signed [5:0] sext_ln1345_265_fu_7076_p1;
reg  signed [5:0] sext_ln1345_265_reg_19215;
wire  signed [5:0] mul_ln1345_253_fu_7080_p2;
reg  signed [5:0] mul_ln1345_253_reg_19220;
wire  signed [5:0] sext_ln1345_266_fu_7096_p1;
reg  signed [5:0] sext_ln1345_266_reg_19225;
wire  signed [5:0] mul_ln1345_254_fu_7100_p2;
reg  signed [5:0] mul_ln1345_254_reg_19230;
wire  signed [5:0] sext_ln1345_267_fu_7116_p1;
reg  signed [5:0] sext_ln1345_267_reg_19235;
wire  signed [5:0] mul_ln1345_255_fu_7120_p2;
reg  signed [5:0] mul_ln1345_255_reg_19240;
wire  signed [5:0] sext_ln1345_268_fu_7136_p1;
reg  signed [5:0] sext_ln1345_268_reg_19245;
wire  signed [5:0] mul_ln1345_256_fu_7140_p2;
reg  signed [5:0] mul_ln1345_256_reg_19250;
wire  signed [5:0] sext_ln1345_269_fu_7156_p1;
reg  signed [5:0] sext_ln1345_269_reg_19255;
wire  signed [5:0] mul_ln1345_257_fu_7160_p2;
reg  signed [5:0] mul_ln1345_257_reg_19260;
wire  signed [5:0] sext_ln1345_270_fu_7176_p1;
reg  signed [5:0] sext_ln1345_270_reg_19265;
wire  signed [5:0] mul_ln1345_258_fu_7180_p2;
reg  signed [5:0] mul_ln1345_258_reg_19270;
wire  signed [5:0] sext_ln1345_271_fu_7196_p1;
reg  signed [5:0] sext_ln1345_271_reg_19275;
wire  signed [5:0] mul_ln1345_259_fu_7200_p2;
reg  signed [5:0] mul_ln1345_259_reg_19280;
wire  signed [5:0] sext_ln1345_272_fu_7216_p1;
reg  signed [5:0] sext_ln1345_272_reg_19285;
wire  signed [5:0] mul_ln1345_260_fu_7220_p2;
reg  signed [5:0] mul_ln1345_260_reg_19290;
wire  signed [5:0] sext_ln1345_273_fu_7236_p1;
reg  signed [5:0] sext_ln1345_273_reg_19295;
wire  signed [5:0] mul_ln1345_261_fu_7240_p2;
reg  signed [5:0] mul_ln1345_261_reg_19300;
wire  signed [5:0] sext_ln1345_274_fu_7256_p1;
reg  signed [5:0] sext_ln1345_274_reg_19305;
wire  signed [5:0] mul_ln1345_262_fu_7260_p2;
reg  signed [5:0] mul_ln1345_262_reg_19310;
wire  signed [5:0] sext_ln1345_275_fu_7276_p1;
reg  signed [5:0] sext_ln1345_275_reg_19315;
wire  signed [5:0] mul_ln1345_263_fu_7280_p2;
reg  signed [5:0] mul_ln1345_263_reg_19320;
wire  signed [5:0] sext_ln1345_276_fu_7296_p1;
reg  signed [5:0] sext_ln1345_276_reg_19325;
wire  signed [5:0] mul_ln1345_264_fu_7300_p2;
reg  signed [5:0] mul_ln1345_264_reg_19330;
wire  signed [5:0] sext_ln1345_277_fu_7316_p1;
reg  signed [5:0] sext_ln1345_277_reg_19335;
wire  signed [5:0] mul_ln1345_265_fu_7320_p2;
reg  signed [5:0] mul_ln1345_265_reg_19340;
wire  signed [5:0] sext_ln1345_278_fu_7336_p1;
reg  signed [5:0] sext_ln1345_278_reg_19345;
wire  signed [5:0] mul_ln1345_266_fu_7340_p2;
reg  signed [5:0] mul_ln1345_266_reg_19350;
wire  signed [5:0] sext_ln1345_279_fu_7356_p1;
reg  signed [5:0] sext_ln1345_279_reg_19355;
wire  signed [5:0] mul_ln1345_267_fu_7360_p2;
reg  signed [5:0] mul_ln1345_267_reg_19360;
wire  signed [5:0] sext_ln1345_280_fu_7376_p1;
reg  signed [5:0] sext_ln1345_280_reg_19365;
wire  signed [5:0] mul_ln1345_268_fu_7380_p2;
reg  signed [5:0] mul_ln1345_268_reg_19370;
wire  signed [5:0] sext_ln1345_281_fu_7396_p1;
reg  signed [5:0] sext_ln1345_281_reg_19375;
wire  signed [5:0] mul_ln1345_269_fu_7400_p2;
reg  signed [5:0] mul_ln1345_269_reg_19380;
wire  signed [5:0] sext_ln1345_282_fu_7416_p1;
reg  signed [5:0] sext_ln1345_282_reg_19385;
wire  signed [5:0] mul_ln1345_270_fu_7420_p2;
reg  signed [5:0] mul_ln1345_270_reg_19390;
wire  signed [5:0] sext_ln1345_283_fu_7436_p1;
reg  signed [5:0] sext_ln1345_283_reg_19395;
wire  signed [5:0] mul_ln1345_271_fu_7440_p2;
reg  signed [5:0] mul_ln1345_271_reg_19400;
wire  signed [5:0] sext_ln1345_284_fu_7456_p1;
reg  signed [5:0] sext_ln1345_284_reg_19405;
wire  signed [5:0] mul_ln1345_272_fu_7460_p2;
reg  signed [5:0] mul_ln1345_272_reg_19410;
wire  signed [5:0] sext_ln1345_285_fu_7476_p1;
reg  signed [5:0] sext_ln1345_285_reg_19415;
wire  signed [5:0] mul_ln1345_273_fu_7480_p2;
reg  signed [5:0] mul_ln1345_273_reg_19420;
wire  signed [5:0] sext_ln1345_286_fu_7496_p1;
reg  signed [5:0] sext_ln1345_286_reg_19425;
wire  signed [5:0] mul_ln1345_274_fu_7500_p2;
reg  signed [5:0] mul_ln1345_274_reg_19430;
wire  signed [5:0] sext_ln1345_287_fu_7516_p1;
reg  signed [5:0] sext_ln1345_287_reg_19435;
wire  signed [5:0] mul_ln1345_275_fu_7520_p2;
reg  signed [5:0] mul_ln1345_275_reg_19440;
wire  signed [5:0] sext_ln1345_288_fu_7536_p1;
reg  signed [5:0] sext_ln1345_288_reg_19445;
wire  signed [5:0] mul_ln1345_276_fu_7540_p2;
reg  signed [5:0] mul_ln1345_276_reg_19450;
wire  signed [5:0] sext_ln1345_289_fu_7556_p1;
reg  signed [5:0] sext_ln1345_289_reg_19455;
wire  signed [5:0] mul_ln1345_277_fu_7560_p2;
reg  signed [5:0] mul_ln1345_277_reg_19460;
wire  signed [5:0] sext_ln1345_290_fu_7576_p1;
reg  signed [5:0] sext_ln1345_290_reg_19465;
wire  signed [5:0] mul_ln1345_278_fu_7580_p2;
reg  signed [5:0] mul_ln1345_278_reg_19470;
wire  signed [5:0] sext_ln1345_291_fu_7596_p1;
reg  signed [5:0] sext_ln1345_291_reg_19475;
wire  signed [5:0] mul_ln1345_279_fu_7600_p2;
reg  signed [5:0] mul_ln1345_279_reg_19480;
wire  signed [5:0] sext_ln1345_292_fu_7616_p1;
reg  signed [5:0] sext_ln1345_292_reg_19485;
wire  signed [5:0] mul_ln1345_280_fu_7620_p2;
reg  signed [5:0] mul_ln1345_280_reg_19490;
wire  signed [5:0] sext_ln1345_293_fu_7636_p1;
reg  signed [5:0] sext_ln1345_293_reg_19495;
wire  signed [5:0] mul_ln1345_281_fu_7640_p2;
reg  signed [5:0] mul_ln1345_281_reg_19500;
wire  signed [5:0] sext_ln1345_294_fu_7656_p1;
reg  signed [5:0] sext_ln1345_294_reg_19505;
wire  signed [5:0] mul_ln1345_282_fu_7660_p2;
reg  signed [5:0] mul_ln1345_282_reg_19510;
wire  signed [5:0] sext_ln1345_295_fu_7676_p1;
reg  signed [5:0] sext_ln1345_295_reg_19515;
wire  signed [5:0] mul_ln1345_283_fu_7680_p2;
reg  signed [5:0] mul_ln1345_283_reg_19520;
wire  signed [5:0] sext_ln1345_296_fu_7696_p1;
reg  signed [5:0] sext_ln1345_296_reg_19525;
wire  signed [5:0] mul_ln1345_284_fu_7700_p2;
reg  signed [5:0] mul_ln1345_284_reg_19530;
wire  signed [5:0] sext_ln1345_297_fu_7716_p1;
reg  signed [5:0] sext_ln1345_297_reg_19535;
wire  signed [5:0] mul_ln1345_285_fu_7720_p2;
reg  signed [5:0] mul_ln1345_285_reg_19540;
wire  signed [5:0] sext_ln1345_298_fu_7736_p1;
reg  signed [5:0] sext_ln1345_298_reg_19545;
wire  signed [5:0] mul_ln1345_286_fu_7740_p2;
reg  signed [5:0] mul_ln1345_286_reg_19550;
wire  signed [5:0] sext_ln1345_299_fu_7756_p1;
reg  signed [5:0] sext_ln1345_299_reg_19555;
wire  signed [5:0] mul_ln1345_287_fu_7760_p2;
reg  signed [5:0] mul_ln1345_287_reg_19560;
wire   [10:0] add_ln691_1_fu_7832_p2;
reg   [10:0] add_ln691_1_reg_19565;
wire   [6:0] add_ln691_3_fu_7844_p2;
reg   [6:0] add_ln691_3_reg_19570;
wire   [7:0] add_ln691_10_fu_7892_p2;
reg   [7:0] add_ln691_10_reg_19575;
wire   [10:0] add_ln691_13_fu_7954_p2;
reg   [10:0] add_ln691_13_reg_19580;
wire   [6:0] add_ln691_15_fu_7966_p2;
reg   [6:0] add_ln691_15_reg_19585;
wire   [7:0] add_ln691_22_fu_8014_p2;
reg   [7:0] add_ln691_22_reg_19590;
wire   [10:0] add_ln691_25_fu_8076_p2;
reg   [10:0] add_ln691_25_reg_19595;
wire   [6:0] add_ln691_27_fu_8088_p2;
reg   [6:0] add_ln691_27_reg_19600;
wire   [7:0] add_ln691_34_fu_8136_p2;
reg   [7:0] add_ln691_34_reg_19605;
wire   [10:0] add_ln691_37_fu_8198_p2;
reg   [10:0] add_ln691_37_reg_19610;
wire   [6:0] add_ln691_39_fu_8210_p2;
reg   [6:0] add_ln691_39_reg_19615;
wire   [7:0] add_ln691_46_fu_8258_p2;
reg   [7:0] add_ln691_46_reg_19620;
wire   [10:0] add_ln691_49_fu_8320_p2;
reg   [10:0] add_ln691_49_reg_19625;
wire   [6:0] add_ln691_51_fu_8332_p2;
reg   [6:0] add_ln691_51_reg_19630;
wire   [7:0] add_ln691_58_fu_8380_p2;
reg   [7:0] add_ln691_58_reg_19635;
wire   [10:0] add_ln691_61_fu_8442_p2;
reg   [10:0] add_ln691_61_reg_19640;
wire   [6:0] add_ln691_63_fu_8454_p2;
reg   [6:0] add_ln691_63_reg_19645;
wire   [7:0] add_ln691_70_fu_8502_p2;
reg   [7:0] add_ln691_70_reg_19650;
wire   [10:0] add_ln691_73_fu_8564_p2;
reg   [10:0] add_ln691_73_reg_19655;
wire   [6:0] add_ln691_75_fu_8576_p2;
reg   [6:0] add_ln691_75_reg_19660;
wire   [7:0] add_ln691_82_fu_8624_p2;
reg   [7:0] add_ln691_82_reg_19665;
wire   [10:0] add_ln691_85_fu_8686_p2;
reg   [10:0] add_ln691_85_reg_19670;
wire   [6:0] add_ln691_87_fu_8698_p2;
reg   [6:0] add_ln691_87_reg_19675;
wire   [7:0] add_ln691_94_fu_8746_p2;
reg   [7:0] add_ln691_94_reg_19680;
wire   [10:0] add_ln691_97_fu_8808_p2;
reg   [10:0] add_ln691_97_reg_19685;
wire   [6:0] add_ln691_99_fu_8820_p2;
reg   [6:0] add_ln691_99_reg_19690;
wire   [7:0] add_ln691_106_fu_8868_p2;
reg   [7:0] add_ln691_106_reg_19695;
wire   [10:0] add_ln691_109_fu_8930_p2;
reg   [10:0] add_ln691_109_reg_19700;
wire   [6:0] add_ln691_111_fu_8942_p2;
reg   [6:0] add_ln691_111_reg_19705;
wire   [7:0] add_ln691_118_fu_8990_p2;
reg   [7:0] add_ln691_118_reg_19710;
wire   [10:0] add_ln691_121_fu_9052_p2;
reg   [10:0] add_ln691_121_reg_19715;
wire   [6:0] add_ln691_123_fu_9064_p2;
reg   [6:0] add_ln691_123_reg_19720;
wire   [7:0] add_ln691_130_fu_9112_p2;
reg   [7:0] add_ln691_130_reg_19725;
wire   [10:0] add_ln691_133_fu_9174_p2;
reg   [10:0] add_ln691_133_reg_19730;
wire   [6:0] add_ln691_135_fu_9186_p2;
reg   [6:0] add_ln691_135_reg_19735;
wire   [7:0] add_ln691_142_fu_9234_p2;
reg   [7:0] add_ln691_142_reg_19740;
wire   [10:0] add_ln691_145_fu_9296_p2;
reg   [10:0] add_ln691_145_reg_19745;
wire   [6:0] add_ln691_147_fu_9308_p2;
reg   [6:0] add_ln691_147_reg_19750;
wire   [7:0] add_ln691_154_fu_9356_p2;
reg   [7:0] add_ln691_154_reg_19755;
wire   [10:0] add_ln691_157_fu_9418_p2;
reg   [10:0] add_ln691_157_reg_19760;
wire   [6:0] add_ln691_159_fu_9430_p2;
reg   [6:0] add_ln691_159_reg_19765;
wire   [7:0] add_ln691_166_fu_9478_p2;
reg   [7:0] add_ln691_166_reg_19770;
wire   [10:0] add_ln691_169_fu_9540_p2;
reg   [10:0] add_ln691_169_reg_19775;
wire   [6:0] add_ln691_171_fu_9552_p2;
reg   [6:0] add_ln691_171_reg_19780;
wire   [7:0] add_ln691_178_fu_9600_p2;
reg   [7:0] add_ln691_178_reg_19785;
wire   [10:0] add_ln691_181_fu_9662_p2;
reg   [10:0] add_ln691_181_reg_19790;
wire   [6:0] add_ln691_183_fu_9674_p2;
reg   [6:0] add_ln691_183_reg_19795;
wire   [7:0] add_ln691_190_fu_9722_p2;
reg   [7:0] add_ln691_190_reg_19800;
wire   [10:0] add_ln691_193_fu_9784_p2;
reg   [10:0] add_ln691_193_reg_19805;
wire   [6:0] add_ln691_195_fu_9796_p2;
reg   [6:0] add_ln691_195_reg_19810;
wire   [7:0] add_ln691_202_fu_9844_p2;
reg   [7:0] add_ln691_202_reg_19815;
wire   [10:0] add_ln691_205_fu_9906_p2;
reg   [10:0] add_ln691_205_reg_19820;
wire   [6:0] add_ln691_207_fu_9918_p2;
reg   [6:0] add_ln691_207_reg_19825;
wire   [7:0] add_ln691_214_fu_9966_p2;
reg   [7:0] add_ln691_214_reg_19830;
wire   [10:0] add_ln691_217_fu_10028_p2;
reg   [10:0] add_ln691_217_reg_19835;
wire   [6:0] add_ln691_219_fu_10040_p2;
reg   [6:0] add_ln691_219_reg_19840;
wire   [7:0] add_ln691_226_fu_10088_p2;
reg   [7:0] add_ln691_226_reg_19845;
wire   [10:0] add_ln691_229_fu_10150_p2;
reg   [10:0] add_ln691_229_reg_19850;
wire   [6:0] add_ln691_231_fu_10162_p2;
reg   [6:0] add_ln691_231_reg_19855;
wire   [7:0] add_ln691_238_fu_10210_p2;
reg   [7:0] add_ln691_238_reg_19860;
wire   [10:0] add_ln691_241_fu_10272_p2;
reg   [10:0] add_ln691_241_reg_19865;
wire   [6:0] add_ln691_243_fu_10284_p2;
reg   [6:0] add_ln691_243_reg_19870;
wire   [7:0] add_ln691_250_fu_10332_p2;
reg   [7:0] add_ln691_250_reg_19875;
wire   [10:0] add_ln691_253_fu_10394_p2;
reg   [10:0] add_ln691_253_reg_19880;
wire   [6:0] add_ln691_255_fu_10406_p2;
reg   [6:0] add_ln691_255_reg_19885;
wire   [7:0] add_ln691_262_fu_10454_p2;
reg   [7:0] add_ln691_262_reg_19890;
wire   [10:0] add_ln691_265_fu_10516_p2;
reg   [10:0] add_ln691_265_reg_19895;
wire   [6:0] add_ln691_267_fu_10528_p2;
reg   [6:0] add_ln691_267_reg_19900;
wire   [7:0] add_ln691_274_fu_10576_p2;
reg   [7:0] add_ln691_274_reg_19905;
wire   [10:0] add_ln691_277_fu_10638_p2;
reg   [10:0] add_ln691_277_reg_19910;
wire   [6:0] add_ln691_279_fu_10650_p2;
reg   [6:0] add_ln691_279_reg_19915;
wire   [7:0] add_ln691_286_fu_10698_p2;
reg   [7:0] add_ln691_286_reg_19920;
wire   [10:0] add_ln691_289_fu_10868_p2;
reg   [10:0] add_ln691_289_reg_19925;
wire   [6:0] add_ln691_291_fu_10880_p2;
reg   [6:0] add_ln691_291_reg_19930;
wire   [7:0] add_ln691_298_fu_10928_p2;
reg   [7:0] add_ln691_298_reg_19935;
wire   [10:0] add_ln691_301_fu_11062_p2;
reg   [10:0] add_ln691_301_reg_19940;
wire   [6:0] add_ln691_303_fu_11074_p2;
reg   [6:0] add_ln691_303_reg_19945;
wire   [7:0] add_ln691_310_fu_11122_p2;
reg   [7:0] add_ln691_310_reg_19950;
wire   [10:0] add_ln691_313_fu_11256_p2;
reg   [10:0] add_ln691_313_reg_19955;
wire   [6:0] add_ln691_315_fu_11268_p2;
reg   [6:0] add_ln691_315_reg_19960;
wire   [7:0] add_ln691_322_fu_11316_p2;
reg   [7:0] add_ln691_322_reg_19965;
wire   [10:0] add_ln691_325_fu_11450_p2;
reg   [10:0] add_ln691_325_reg_19970;
wire   [6:0] add_ln691_327_fu_11462_p2;
reg   [6:0] add_ln691_327_reg_19975;
wire   [7:0] add_ln691_334_fu_11510_p2;
reg   [7:0] add_ln691_334_reg_19980;
wire   [10:0] add_ln691_337_fu_11644_p2;
reg   [10:0] add_ln691_337_reg_19985;
wire   [6:0] add_ln691_339_fu_11656_p2;
reg   [6:0] add_ln691_339_reg_19990;
wire   [7:0] add_ln691_346_fu_11704_p2;
reg   [7:0] add_ln691_346_reg_19995;
wire   [10:0] add_ln691_349_fu_11838_p2;
reg   [10:0] add_ln691_349_reg_20000;
wire   [6:0] add_ln691_351_fu_11850_p2;
reg   [6:0] add_ln691_351_reg_20005;
wire   [7:0] add_ln691_358_fu_11898_p2;
reg   [7:0] add_ln691_358_reg_20010;
wire   [10:0] add_ln691_361_fu_12032_p2;
reg   [10:0] add_ln691_361_reg_20015;
wire   [6:0] add_ln691_363_fu_12044_p2;
reg   [6:0] add_ln691_363_reg_20020;
wire   [7:0] add_ln691_370_fu_12092_p2;
reg   [7:0] add_ln691_370_reg_20025;
wire   [10:0] add_ln691_373_fu_12226_p2;
reg   [10:0] add_ln691_373_reg_20030;
wire   [6:0] add_ln691_375_fu_12238_p2;
reg   [6:0] add_ln691_375_reg_20035;
wire   [7:0] add_ln691_382_fu_12286_p2;
reg   [7:0] add_ln691_382_reg_20040;
wire   [10:0] add_ln691_385_fu_12420_p2;
reg   [10:0] add_ln691_385_reg_20045;
wire   [6:0] add_ln691_387_fu_12432_p2;
reg   [6:0] add_ln691_387_reg_20050;
wire   [7:0] add_ln691_394_fu_12480_p2;
reg   [7:0] add_ln691_394_reg_20055;
wire   [10:0] add_ln691_397_fu_12614_p2;
reg   [10:0] add_ln691_397_reg_20060;
wire   [6:0] add_ln691_399_fu_12626_p2;
reg   [6:0] add_ln691_399_reg_20065;
wire   [7:0] add_ln691_406_fu_12674_p2;
reg   [7:0] add_ln691_406_reg_20070;
wire   [10:0] add_ln691_409_fu_12808_p2;
reg   [10:0] add_ln691_409_reg_20075;
wire   [6:0] add_ln691_411_fu_12820_p2;
reg   [6:0] add_ln691_411_reg_20080;
wire   [7:0] add_ln691_418_fu_12868_p2;
reg   [7:0] add_ln691_418_reg_20085;
wire   [10:0] add_ln691_421_fu_13002_p2;
reg   [10:0] add_ln691_421_reg_20090;
wire   [6:0] add_ln691_423_fu_13014_p2;
reg   [6:0] add_ln691_423_reg_20095;
wire   [7:0] add_ln691_430_fu_13062_p2;
reg   [7:0] add_ln691_430_reg_20100;
wire   [10:0] add_ln691_433_fu_13196_p2;
reg   [10:0] add_ln691_433_reg_20105;
wire   [6:0] add_ln691_435_fu_13208_p2;
reg   [6:0] add_ln691_435_reg_20110;
wire   [7:0] add_ln691_442_fu_13256_p2;
reg   [7:0] add_ln691_442_reg_20115;
wire   [10:0] add_ln691_445_fu_13390_p2;
reg   [10:0] add_ln691_445_reg_20120;
wire   [6:0] add_ln691_447_fu_13402_p2;
reg   [6:0] add_ln691_447_reg_20125;
wire   [7:0] add_ln691_454_fu_13450_p2;
reg   [7:0] add_ln691_454_reg_20130;
wire   [10:0] add_ln691_457_fu_13584_p2;
reg   [10:0] add_ln691_457_reg_20135;
wire   [6:0] add_ln691_459_fu_13596_p2;
reg   [6:0] add_ln691_459_reg_20140;
wire   [7:0] add_ln691_466_fu_13644_p2;
reg   [7:0] add_ln691_466_reg_20145;
wire   [10:0] add_ln691_469_fu_13778_p2;
reg   [10:0] add_ln691_469_reg_20150;
wire   [6:0] add_ln691_471_fu_13790_p2;
reg   [6:0] add_ln691_471_reg_20155;
wire   [7:0] add_ln691_478_fu_13838_p2;
reg   [7:0] add_ln691_478_reg_20160;
wire   [10:0] add_ln691_481_fu_13972_p2;
reg   [10:0] add_ln691_481_reg_20165;
wire   [6:0] add_ln691_483_fu_13984_p2;
reg   [6:0] add_ln691_483_reg_20170;
wire   [7:0] add_ln691_490_fu_14032_p2;
reg   [7:0] add_ln691_490_reg_20175;
wire   [10:0] add_ln691_493_fu_14166_p2;
reg   [10:0] add_ln691_493_reg_20180;
wire   [6:0] add_ln691_495_fu_14178_p2;
reg   [6:0] add_ln691_495_reg_20185;
wire   [7:0] add_ln691_502_fu_14226_p2;
reg   [7:0] add_ln691_502_reg_20190;
wire   [10:0] add_ln691_505_fu_14360_p2;
reg   [10:0] add_ln691_505_reg_20195;
wire   [6:0] add_ln691_507_fu_14372_p2;
reg   [6:0] add_ln691_507_reg_20200;
wire   [7:0] add_ln691_514_fu_14420_p2;
reg   [7:0] add_ln691_514_reg_20205;
wire   [10:0] add_ln691_517_fu_14554_p2;
reg   [10:0] add_ln691_517_reg_20210;
wire   [6:0] add_ln691_519_fu_14566_p2;
reg   [6:0] add_ln691_519_reg_20215;
wire   [7:0] add_ln691_526_fu_14614_p2;
reg   [7:0] add_ln691_526_reg_20220;
wire   [10:0] add_ln691_529_fu_14748_p2;
reg   [10:0] add_ln691_529_reg_20225;
wire   [6:0] add_ln691_531_fu_14760_p2;
reg   [6:0] add_ln691_531_reg_20230;
wire   [7:0] add_ln691_538_fu_14808_p2;
reg   [7:0] add_ln691_538_reg_20235;
wire   [10:0] add_ln691_541_fu_14942_p2;
reg   [10:0] add_ln691_541_reg_20240;
wire   [6:0] add_ln691_543_fu_14954_p2;
reg   [6:0] add_ln691_543_reg_20245;
wire   [7:0] add_ln691_550_fu_15002_p2;
reg   [7:0] add_ln691_550_reg_20250;
wire   [10:0] add_ln691_553_fu_15136_p2;
reg   [10:0] add_ln691_553_reg_20255;
wire   [6:0] add_ln691_555_fu_15148_p2;
reg   [6:0] add_ln691_555_reg_20260;
wire   [7:0] add_ln691_562_fu_15196_p2;
reg   [7:0] add_ln691_562_reg_20265;
wire   [10:0] add_ln691_565_fu_15330_p2;
reg   [10:0] add_ln691_565_reg_20270;
wire   [6:0] add_ln691_567_fu_15342_p2;
reg   [6:0] add_ln691_567_reg_20275;
wire   [7:0] add_ln691_574_fu_15390_p2;
reg   [7:0] add_ln691_574_reg_20280;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_block_pp0_stage0_subdone;
reg   [15:0] ap_phi_mux_indvar_flatten20_phi_fu_1528_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_1540_p4;
reg   [5:0] ap_phi_mux_cot_phi_fu_1551_p4;
reg   [4:0] ap_phi_mux_cit_phi_fu_1563_p4;
wire   [63:0] zext_ln121_fu_1570_p1;
wire   [63:0] zext_ln121_1_fu_1645_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln215_1_fu_1692_p1;
reg   [527:0] vec_o_data_M_elems_V_2_fu_1472;
wire   [527:0] tmp_334_fu_16212_p49;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_state1;
wire   [0:0] icmp_ln122_fu_1601_p2;
wire   [0:0] xor_ln120_fu_1595_p2;
wire   [0:0] or_ln121_fu_1619_p2;
wire   [4:0] trunc_ln215_1_fu_1652_p1;
wire   [4:0] trunc_ln215_fu_1649_p1;
wire   [4:0] select_ln120_2_fu_1656_p3;
wire   [4:0] select_ln121_1_fu_1663_p3;
wire   [8:0] tmp_cast_fu_1670_p3;
wire   [8:0] zext_ln215_fu_1683_p1;
wire   [8:0] add_ln215_fu_1686_p2;
wire   [263:0] select_ln120_1_fu_1718_p3;
wire   [2:0] trunc_ln145_fu_1730_p1;
wire  signed [2:0] trunc_ln215_2_fu_1964_p1;
wire  signed [2:0] mul_ln1345_fu_1976_p1;
wire  signed [5:0] sext_ln1345_fu_1968_p1;
wire   [2:0] trunc_ln145_s_fu_1734_p4;
wire  signed [2:0] tmp_2_fu_1982_p4;
wire  signed [2:0] mul_ln1345_1_fu_2000_p1;
wire  signed [5:0] sext_ln1345_2_fu_1992_p1;
wire   [2:0] trunc_ln145_2_fu_1744_p4;
wire  signed [2:0] tmp_3_fu_2006_p4;
wire  signed [2:0] mul_ln1345_2_fu_2024_p1;
wire  signed [5:0] sext_ln1345_4_fu_2016_p1;
wire   [2:0] trunc_ln145_3_fu_1754_p4;
wire  signed [2:0] tmp_4_fu_2030_p4;
wire  signed [2:0] mul_ln1345_3_fu_2048_p1;
wire  signed [5:0] sext_ln1345_6_fu_2040_p1;
wire   [2:0] trunc_ln145_4_fu_1764_p4;
wire  signed [2:0] tmp_5_fu_2054_p4;
wire  signed [2:0] mul_ln1345_4_fu_2072_p1;
wire  signed [5:0] sext_ln1345_8_fu_2064_p1;
wire   [2:0] trunc_ln145_5_fu_1774_p4;
wire  signed [2:0] tmp_6_fu_2078_p4;
wire  signed [2:0] mul_ln1345_5_fu_2096_p1;
wire  signed [5:0] sext_ln1345_10_fu_2088_p1;
wire   [2:0] trunc_ln145_6_fu_1784_p4;
wire  signed [2:0] tmp_7_fu_2102_p4;
wire  signed [2:0] mul_ln1345_6_fu_2120_p1;
wire  signed [5:0] sext_ln1345_12_fu_2112_p1;
wire   [2:0] trunc_ln145_7_fu_1794_p4;
wire  signed [2:0] tmp_8_fu_2126_p4;
wire  signed [2:0] mul_ln1345_7_fu_2144_p1;
wire  signed [5:0] sext_ln1345_14_fu_2136_p1;
wire   [2:0] trunc_ln145_8_fu_1804_p4;
wire  signed [2:0] tmp_9_fu_2150_p4;
wire  signed [2:0] mul_ln1345_8_fu_2168_p1;
wire  signed [5:0] sext_ln1345_16_fu_2160_p1;
wire   [2:0] trunc_ln145_9_fu_1814_p4;
wire  signed [2:0] tmp_s_fu_2174_p4;
wire  signed [2:0] mul_ln1345_9_fu_2192_p1;
wire  signed [5:0] sext_ln1345_18_fu_2184_p1;
wire   [2:0] trunc_ln145_1_fu_1824_p4;
wire  signed [2:0] tmp_1_fu_2198_p4;
wire  signed [2:0] mul_ln1345_10_fu_2216_p1;
wire  signed [5:0] sext_ln1345_20_fu_2208_p1;
wire   [2:0] trunc_ln145_10_fu_1834_p4;
wire  signed [2:0] tmp_10_fu_2222_p4;
wire  signed [2:0] mul_ln1345_11_fu_2240_p1;
wire  signed [5:0] sext_ln1345_22_fu_2232_p1;
wire  signed [2:0] tmp_11_fu_2246_p4;
wire  signed [2:0] mul_ln1345_12_fu_2260_p1;
wire  signed [2:0] tmp_13_fu_2266_p4;
wire  signed [2:0] mul_ln1345_13_fu_2280_p1;
wire  signed [2:0] tmp_14_fu_2286_p4;
wire  signed [2:0] mul_ln1345_14_fu_2300_p1;
wire  signed [2:0] tmp_15_fu_2306_p4;
wire  signed [2:0] mul_ln1345_15_fu_2320_p1;
wire  signed [2:0] tmp_16_fu_2326_p4;
wire  signed [2:0] mul_ln1345_16_fu_2340_p1;
wire  signed [2:0] tmp_17_fu_2346_p4;
wire  signed [2:0] mul_ln1345_17_fu_2360_p1;
wire  signed [2:0] tmp_18_fu_2366_p4;
wire  signed [2:0] mul_ln1345_18_fu_2380_p1;
wire  signed [2:0] tmp_19_fu_2386_p4;
wire  signed [2:0] mul_ln1345_19_fu_2400_p1;
wire  signed [2:0] tmp_20_fu_2406_p4;
wire  signed [2:0] mul_ln1345_20_fu_2420_p1;
wire  signed [2:0] tmp_21_fu_2426_p4;
wire  signed [2:0] mul_ln1345_21_fu_2440_p1;
wire  signed [2:0] tmp_22_fu_2446_p4;
wire  signed [2:0] mul_ln1345_22_fu_2460_p1;
wire  signed [2:0] tmp_23_fu_2466_p4;
wire  signed [2:0] mul_ln1345_23_fu_2480_p1;
wire  signed [2:0] tmp_24_fu_2486_p4;
wire  signed [2:0] mul_ln1345_24_fu_2500_p1;
wire  signed [2:0] tmp_26_fu_2506_p4;
wire  signed [2:0] mul_ln1345_25_fu_2520_p1;
wire  signed [2:0] tmp_27_fu_2526_p4;
wire  signed [2:0] mul_ln1345_26_fu_2540_p1;
wire  signed [2:0] tmp_28_fu_2546_p4;
wire  signed [2:0] mul_ln1345_27_fu_2560_p1;
wire  signed [2:0] tmp_29_fu_2566_p4;
wire  signed [2:0] mul_ln1345_28_fu_2580_p1;
wire  signed [2:0] tmp_30_fu_2586_p4;
wire  signed [2:0] mul_ln1345_29_fu_2600_p1;
wire  signed [2:0] tmp_31_fu_2606_p4;
wire  signed [2:0] mul_ln1345_30_fu_2620_p1;
wire  signed [2:0] tmp_32_fu_2626_p4;
wire  signed [2:0] mul_ln1345_31_fu_2640_p1;
wire  signed [2:0] tmp_33_fu_2646_p4;
wire  signed [2:0] mul_ln1345_32_fu_2660_p1;
wire  signed [2:0] tmp_34_fu_2666_p4;
wire  signed [2:0] mul_ln1345_33_fu_2680_p1;
wire  signed [2:0] tmp_35_fu_2686_p4;
wire  signed [2:0] mul_ln1345_34_fu_2700_p1;
wire  signed [2:0] tmp_36_fu_2706_p4;
wire  signed [2:0] mul_ln1345_35_fu_2720_p1;
wire  signed [2:0] tmp_37_fu_2726_p4;
wire  signed [2:0] mul_ln1345_36_fu_2740_p1;
wire  signed [2:0] tmp_39_fu_2746_p4;
wire  signed [2:0] mul_ln1345_37_fu_2760_p1;
wire  signed [2:0] tmp_40_fu_2766_p4;
wire  signed [2:0] mul_ln1345_38_fu_2780_p1;
wire  signed [2:0] tmp_41_fu_2786_p4;
wire  signed [2:0] mul_ln1345_39_fu_2800_p1;
wire  signed [2:0] tmp_42_fu_2806_p4;
wire  signed [2:0] mul_ln1345_40_fu_2820_p1;
wire  signed [2:0] tmp_43_fu_2826_p4;
wire  signed [2:0] mul_ln1345_41_fu_2840_p1;
wire  signed [2:0] tmp_44_fu_2846_p4;
wire  signed [2:0] mul_ln1345_42_fu_2860_p1;
wire  signed [2:0] tmp_45_fu_2866_p4;
wire  signed [2:0] mul_ln1345_43_fu_2880_p1;
wire  signed [2:0] tmp_46_fu_2886_p4;
wire  signed [2:0] mul_ln1345_44_fu_2900_p1;
wire  signed [2:0] tmp_47_fu_2906_p4;
wire  signed [2:0] mul_ln1345_45_fu_2920_p1;
wire  signed [2:0] tmp_48_fu_2926_p4;
wire  signed [2:0] mul_ln1345_46_fu_2940_p1;
wire  signed [2:0] tmp_49_fu_2946_p4;
wire  signed [2:0] mul_ln1345_47_fu_2960_p1;
wire  signed [2:0] tmp_50_fu_2966_p4;
wire  signed [2:0] mul_ln1345_48_fu_2980_p1;
wire  signed [2:0] tmp_52_fu_2986_p4;
wire  signed [2:0] mul_ln1345_49_fu_3000_p1;
wire  signed [2:0] tmp_53_fu_3006_p4;
wire  signed [2:0] mul_ln1345_50_fu_3020_p1;
wire  signed [2:0] tmp_54_fu_3026_p4;
wire  signed [2:0] mul_ln1345_51_fu_3040_p1;
wire  signed [2:0] tmp_55_fu_3046_p4;
wire  signed [2:0] mul_ln1345_52_fu_3060_p1;
wire  signed [2:0] tmp_56_fu_3066_p4;
wire  signed [2:0] mul_ln1345_53_fu_3080_p1;
wire  signed [2:0] tmp_57_fu_3086_p4;
wire  signed [2:0] mul_ln1345_54_fu_3100_p1;
wire  signed [2:0] tmp_58_fu_3106_p4;
wire  signed [2:0] mul_ln1345_55_fu_3120_p1;
wire  signed [2:0] tmp_59_fu_3126_p4;
wire  signed [2:0] mul_ln1345_56_fu_3140_p1;
wire  signed [2:0] tmp_60_fu_3146_p4;
wire  signed [2:0] mul_ln1345_57_fu_3160_p1;
wire  signed [2:0] tmp_61_fu_3166_p4;
wire  signed [2:0] mul_ln1345_58_fu_3180_p1;
wire  signed [2:0] tmp_62_fu_3186_p4;
wire  signed [2:0] mul_ln1345_59_fu_3200_p1;
wire  signed [2:0] tmp_63_fu_3206_p4;
wire  signed [2:0] mul_ln1345_60_fu_3220_p1;
wire  signed [2:0] tmp_65_fu_3226_p4;
wire  signed [2:0] mul_ln1345_61_fu_3240_p1;
wire  signed [2:0] tmp_66_fu_3246_p4;
wire  signed [2:0] mul_ln1345_62_fu_3260_p1;
wire  signed [2:0] tmp_67_fu_3266_p4;
wire  signed [2:0] mul_ln1345_63_fu_3280_p1;
wire  signed [2:0] tmp_68_fu_3286_p4;
wire  signed [2:0] mul_ln1345_64_fu_3300_p1;
wire  signed [2:0] tmp_69_fu_3306_p4;
wire  signed [2:0] mul_ln1345_65_fu_3320_p1;
wire  signed [2:0] tmp_70_fu_3326_p4;
wire  signed [2:0] mul_ln1345_66_fu_3340_p1;
wire  signed [2:0] tmp_71_fu_3346_p4;
wire  signed [2:0] mul_ln1345_67_fu_3360_p1;
wire  signed [2:0] tmp_72_fu_3366_p4;
wire  signed [2:0] mul_ln1345_68_fu_3380_p1;
wire  signed [2:0] tmp_73_fu_3386_p4;
wire  signed [2:0] mul_ln1345_69_fu_3400_p1;
wire  signed [2:0] tmp_74_fu_3406_p4;
wire  signed [2:0] mul_ln1345_70_fu_3420_p1;
wire  signed [2:0] tmp_75_fu_3426_p4;
wire  signed [2:0] mul_ln1345_71_fu_3440_p1;
wire  signed [2:0] tmp_76_fu_3446_p4;
wire  signed [2:0] mul_ln1345_72_fu_3460_p1;
wire  signed [2:0] tmp_78_fu_3466_p4;
wire  signed [2:0] mul_ln1345_73_fu_3480_p1;
wire  signed [2:0] tmp_79_fu_3486_p4;
wire  signed [2:0] mul_ln1345_74_fu_3500_p1;
wire  signed [2:0] tmp_80_fu_3506_p4;
wire  signed [2:0] mul_ln1345_75_fu_3520_p1;
wire  signed [2:0] tmp_81_fu_3526_p4;
wire  signed [2:0] mul_ln1345_76_fu_3540_p1;
wire  signed [2:0] tmp_82_fu_3546_p4;
wire  signed [2:0] mul_ln1345_77_fu_3560_p1;
wire  signed [2:0] tmp_83_fu_3566_p4;
wire  signed [2:0] mul_ln1345_78_fu_3580_p1;
wire  signed [2:0] tmp_84_fu_3586_p4;
wire  signed [2:0] mul_ln1345_79_fu_3600_p1;
wire  signed [2:0] tmp_85_fu_3606_p4;
wire  signed [2:0] mul_ln1345_80_fu_3620_p1;
wire  signed [2:0] tmp_86_fu_3626_p4;
wire  signed [2:0] mul_ln1345_81_fu_3640_p1;
wire  signed [2:0] tmp_87_fu_3646_p4;
wire  signed [2:0] mul_ln1345_82_fu_3660_p1;
wire  signed [2:0] tmp_88_fu_3666_p4;
wire  signed [2:0] mul_ln1345_83_fu_3680_p1;
wire  signed [2:0] tmp_89_fu_3686_p4;
wire  signed [2:0] mul_ln1345_84_fu_3700_p1;
wire  signed [2:0] tmp_91_fu_3706_p4;
wire  signed [2:0] mul_ln1345_85_fu_3720_p1;
wire  signed [2:0] tmp_92_fu_3726_p4;
wire  signed [2:0] mul_ln1345_86_fu_3740_p1;
wire  signed [2:0] tmp_93_fu_3746_p4;
wire  signed [2:0] mul_ln1345_87_fu_3760_p1;
wire  signed [2:0] tmp_94_fu_3766_p4;
wire  signed [2:0] mul_ln1345_88_fu_3780_p1;
wire  signed [2:0] tmp_95_fu_3786_p4;
wire  signed [2:0] mul_ln1345_89_fu_3800_p1;
wire  signed [2:0] tmp_96_fu_3806_p4;
wire  signed [2:0] mul_ln1345_90_fu_3820_p1;
wire  signed [2:0] tmp_97_fu_3826_p4;
wire  signed [2:0] mul_ln1345_91_fu_3840_p1;
wire  signed [2:0] tmp_98_fu_3846_p4;
wire  signed [2:0] mul_ln1345_92_fu_3860_p1;
wire  signed [2:0] tmp_99_fu_3866_p4;
wire  signed [2:0] mul_ln1345_93_fu_3880_p1;
wire  signed [2:0] tmp_100_fu_3886_p4;
wire  signed [2:0] mul_ln1345_94_fu_3900_p1;
wire  signed [2:0] tmp_101_fu_3906_p4;
wire  signed [2:0] mul_ln1345_95_fu_3920_p1;
wire  signed [2:0] tmp_102_fu_3926_p4;
wire  signed [2:0] mul_ln1345_96_fu_3940_p1;
wire  signed [2:0] tmp_104_fu_3946_p4;
wire  signed [2:0] mul_ln1345_97_fu_3960_p1;
wire  signed [2:0] tmp_105_fu_3966_p4;
wire  signed [2:0] mul_ln1345_98_fu_3980_p1;
wire  signed [2:0] tmp_106_fu_3986_p4;
wire  signed [2:0] mul_ln1345_99_fu_4000_p1;
wire  signed [2:0] tmp_107_fu_4006_p4;
wire  signed [2:0] mul_ln1345_100_fu_4020_p1;
wire  signed [2:0] tmp_108_fu_4026_p4;
wire  signed [2:0] mul_ln1345_101_fu_4040_p1;
wire  signed [2:0] tmp_109_fu_4046_p4;
wire  signed [2:0] mul_ln1345_102_fu_4060_p1;
wire  signed [2:0] tmp_110_fu_4066_p4;
wire  signed [2:0] mul_ln1345_103_fu_4080_p1;
wire  signed [2:0] tmp_111_fu_4086_p4;
wire  signed [2:0] mul_ln1345_104_fu_4100_p1;
wire  signed [2:0] tmp_112_fu_4106_p4;
wire  signed [2:0] mul_ln1345_105_fu_4120_p1;
wire  signed [2:0] tmp_113_fu_4126_p4;
wire  signed [2:0] mul_ln1345_106_fu_4140_p1;
wire  signed [2:0] tmp_114_fu_4146_p4;
wire  signed [2:0] mul_ln1345_107_fu_4160_p1;
wire  signed [2:0] tmp_115_fu_4166_p4;
wire  signed [2:0] mul_ln1345_108_fu_4180_p1;
wire  signed [2:0] tmp_117_fu_4186_p4;
wire  signed [2:0] mul_ln1345_109_fu_4200_p1;
wire  signed [2:0] tmp_118_fu_4206_p4;
wire  signed [2:0] mul_ln1345_110_fu_4220_p1;
wire  signed [2:0] tmp_119_fu_4226_p4;
wire  signed [2:0] mul_ln1345_111_fu_4240_p1;
wire  signed [2:0] tmp_120_fu_4246_p4;
wire  signed [2:0] mul_ln1345_112_fu_4260_p1;
wire  signed [2:0] tmp_121_fu_4266_p4;
wire  signed [2:0] mul_ln1345_113_fu_4280_p1;
wire  signed [2:0] tmp_122_fu_4286_p4;
wire  signed [2:0] mul_ln1345_114_fu_4300_p1;
wire  signed [2:0] tmp_123_fu_4306_p4;
wire  signed [2:0] mul_ln1345_115_fu_4320_p1;
wire  signed [2:0] tmp_124_fu_4326_p4;
wire  signed [2:0] mul_ln1345_116_fu_4340_p1;
wire  signed [2:0] tmp_125_fu_4346_p4;
wire  signed [2:0] mul_ln1345_117_fu_4360_p1;
wire  signed [2:0] tmp_126_fu_4366_p4;
wire  signed [2:0] mul_ln1345_118_fu_4380_p1;
wire  signed [2:0] tmp_127_fu_4386_p4;
wire  signed [2:0] mul_ln1345_119_fu_4400_p1;
wire  signed [2:0] tmp_128_fu_4406_p4;
wire  signed [2:0] mul_ln1345_120_fu_4420_p1;
wire  signed [2:0] tmp_130_fu_4426_p4;
wire  signed [2:0] mul_ln1345_121_fu_4440_p1;
wire  signed [2:0] tmp_131_fu_4446_p4;
wire  signed [2:0] mul_ln1345_122_fu_4460_p1;
wire  signed [2:0] tmp_132_fu_4466_p4;
wire  signed [2:0] mul_ln1345_123_fu_4480_p1;
wire  signed [2:0] tmp_133_fu_4486_p4;
wire  signed [2:0] mul_ln1345_124_fu_4500_p1;
wire  signed [2:0] tmp_134_fu_4506_p4;
wire  signed [2:0] mul_ln1345_125_fu_4520_p1;
wire  signed [2:0] tmp_135_fu_4526_p4;
wire  signed [2:0] mul_ln1345_126_fu_4540_p1;
wire  signed [2:0] tmp_136_fu_4546_p4;
wire  signed [2:0] mul_ln1345_127_fu_4560_p1;
wire  signed [2:0] tmp_137_fu_4566_p4;
wire  signed [2:0] mul_ln1345_128_fu_4580_p1;
wire  signed [2:0] tmp_138_fu_4586_p4;
wire  signed [2:0] mul_ln1345_129_fu_4600_p1;
wire  signed [2:0] tmp_139_fu_4606_p4;
wire  signed [2:0] mul_ln1345_130_fu_4620_p1;
wire  signed [2:0] tmp_140_fu_4626_p4;
wire  signed [2:0] mul_ln1345_131_fu_4640_p1;
wire  signed [2:0] tmp_141_fu_4646_p4;
wire  signed [2:0] mul_ln1345_132_fu_4660_p1;
wire  signed [2:0] tmp_143_fu_4666_p4;
wire  signed [2:0] mul_ln1345_133_fu_4680_p1;
wire  signed [2:0] tmp_144_fu_4686_p4;
wire  signed [2:0] mul_ln1345_134_fu_4700_p1;
wire  signed [2:0] tmp_145_fu_4706_p4;
wire  signed [2:0] mul_ln1345_135_fu_4720_p1;
wire  signed [2:0] tmp_146_fu_4726_p4;
wire  signed [2:0] mul_ln1345_136_fu_4740_p1;
wire  signed [2:0] tmp_147_fu_4746_p4;
wire  signed [2:0] mul_ln1345_137_fu_4760_p1;
wire  signed [2:0] tmp_148_fu_4766_p4;
wire  signed [2:0] mul_ln1345_138_fu_4780_p1;
wire  signed [2:0] tmp_149_fu_4786_p4;
wire  signed [2:0] mul_ln1345_139_fu_4800_p1;
wire  signed [2:0] tmp_150_fu_4806_p4;
wire  signed [2:0] mul_ln1345_140_fu_4820_p1;
wire  signed [2:0] tmp_151_fu_4826_p4;
wire  signed [2:0] mul_ln1345_141_fu_4840_p1;
wire  signed [2:0] tmp_152_fu_4846_p4;
wire  signed [2:0] mul_ln1345_142_fu_4860_p1;
wire  signed [2:0] tmp_153_fu_4866_p4;
wire  signed [2:0] mul_ln1345_143_fu_4880_p1;
wire  signed [2:0] tmp_154_fu_4886_p4;
wire  signed [2:0] mul_ln1345_144_fu_4900_p1;
wire  signed [2:0] tmp_156_fu_4906_p4;
wire  signed [2:0] mul_ln1345_145_fu_4920_p1;
wire  signed [2:0] tmp_157_fu_4926_p4;
wire  signed [2:0] mul_ln1345_146_fu_4940_p1;
wire  signed [2:0] tmp_158_fu_4946_p4;
wire  signed [2:0] mul_ln1345_147_fu_4960_p1;
wire  signed [2:0] tmp_159_fu_4966_p4;
wire  signed [2:0] mul_ln1345_148_fu_4980_p1;
wire  signed [2:0] tmp_160_fu_4986_p4;
wire  signed [2:0] mul_ln1345_149_fu_5000_p1;
wire  signed [2:0] tmp_161_fu_5006_p4;
wire  signed [2:0] mul_ln1345_150_fu_5020_p1;
wire  signed [2:0] tmp_162_fu_5026_p4;
wire  signed [2:0] mul_ln1345_151_fu_5040_p1;
wire  signed [2:0] tmp_163_fu_5046_p4;
wire  signed [2:0] mul_ln1345_152_fu_5060_p1;
wire  signed [2:0] tmp_164_fu_5066_p4;
wire  signed [2:0] mul_ln1345_153_fu_5080_p1;
wire  signed [2:0] tmp_165_fu_5086_p4;
wire  signed [2:0] mul_ln1345_154_fu_5100_p1;
wire  signed [2:0] tmp_166_fu_5106_p4;
wire  signed [2:0] mul_ln1345_155_fu_5120_p1;
wire  signed [2:0] tmp_167_fu_5126_p4;
wire  signed [2:0] mul_ln1345_156_fu_5140_p1;
wire  signed [2:0] tmp_169_fu_5146_p4;
wire  signed [2:0] mul_ln1345_157_fu_5160_p1;
wire  signed [2:0] tmp_170_fu_5166_p4;
wire  signed [2:0] mul_ln1345_158_fu_5180_p1;
wire  signed [2:0] tmp_171_fu_5186_p4;
wire  signed [2:0] mul_ln1345_159_fu_5200_p1;
wire  signed [2:0] tmp_172_fu_5206_p4;
wire  signed [2:0] mul_ln1345_160_fu_5220_p1;
wire  signed [2:0] tmp_173_fu_5226_p4;
wire  signed [2:0] mul_ln1345_161_fu_5240_p1;
wire  signed [2:0] tmp_174_fu_5246_p4;
wire  signed [2:0] mul_ln1345_162_fu_5260_p1;
wire  signed [2:0] tmp_175_fu_5266_p4;
wire  signed [2:0] mul_ln1345_163_fu_5280_p1;
wire  signed [2:0] tmp_176_fu_5286_p4;
wire  signed [2:0] mul_ln1345_164_fu_5300_p1;
wire  signed [2:0] tmp_177_fu_5306_p4;
wire  signed [2:0] mul_ln1345_165_fu_5320_p1;
wire  signed [2:0] tmp_178_fu_5326_p4;
wire  signed [2:0] mul_ln1345_166_fu_5340_p1;
wire  signed [2:0] tmp_179_fu_5346_p4;
wire  signed [2:0] mul_ln1345_167_fu_5360_p1;
wire  signed [2:0] tmp_180_fu_5366_p4;
wire  signed [2:0] mul_ln1345_168_fu_5380_p1;
wire  signed [2:0] tmp_182_fu_5386_p4;
wire  signed [2:0] mul_ln1345_169_fu_5400_p1;
wire  signed [2:0] tmp_183_fu_5406_p4;
wire  signed [2:0] mul_ln1345_170_fu_5420_p1;
wire  signed [2:0] tmp_184_fu_5426_p4;
wire  signed [2:0] mul_ln1345_171_fu_5440_p1;
wire  signed [2:0] tmp_185_fu_5446_p4;
wire  signed [2:0] mul_ln1345_172_fu_5460_p1;
wire  signed [2:0] tmp_186_fu_5466_p4;
wire  signed [2:0] mul_ln1345_173_fu_5480_p1;
wire  signed [2:0] tmp_187_fu_5486_p4;
wire  signed [2:0] mul_ln1345_174_fu_5500_p1;
wire  signed [2:0] tmp_188_fu_5506_p4;
wire  signed [2:0] mul_ln1345_175_fu_5520_p1;
wire  signed [2:0] tmp_189_fu_5526_p4;
wire  signed [2:0] mul_ln1345_176_fu_5540_p1;
wire  signed [2:0] tmp_190_fu_5546_p4;
wire  signed [2:0] mul_ln1345_177_fu_5560_p1;
wire  signed [2:0] tmp_191_fu_5566_p4;
wire  signed [2:0] mul_ln1345_178_fu_5580_p1;
wire  signed [2:0] tmp_192_fu_5586_p4;
wire  signed [2:0] mul_ln1345_179_fu_5600_p1;
wire  signed [2:0] tmp_193_fu_5606_p4;
wire  signed [2:0] mul_ln1345_180_fu_5620_p1;
wire  signed [2:0] tmp_195_fu_5626_p4;
wire  signed [2:0] mul_ln1345_181_fu_5640_p1;
wire  signed [2:0] tmp_196_fu_5646_p4;
wire  signed [2:0] mul_ln1345_182_fu_5660_p1;
wire  signed [2:0] tmp_197_fu_5666_p4;
wire  signed [2:0] mul_ln1345_183_fu_5680_p1;
wire  signed [2:0] tmp_198_fu_5686_p4;
wire  signed [2:0] mul_ln1345_184_fu_5700_p1;
wire  signed [2:0] tmp_199_fu_5706_p4;
wire  signed [2:0] mul_ln1345_185_fu_5720_p1;
wire  signed [2:0] tmp_200_fu_5726_p4;
wire  signed [2:0] mul_ln1345_186_fu_5740_p1;
wire  signed [2:0] tmp_201_fu_5746_p4;
wire  signed [2:0] mul_ln1345_187_fu_5760_p1;
wire  signed [2:0] tmp_202_fu_5766_p4;
wire  signed [2:0] mul_ln1345_188_fu_5780_p1;
wire  signed [2:0] tmp_203_fu_5786_p4;
wire  signed [2:0] mul_ln1345_189_fu_5800_p1;
wire  signed [2:0] tmp_204_fu_5806_p4;
wire  signed [2:0] mul_ln1345_190_fu_5820_p1;
wire  signed [2:0] tmp_205_fu_5826_p4;
wire  signed [2:0] mul_ln1345_191_fu_5840_p1;
wire  signed [2:0] tmp_206_fu_5846_p4;
wire  signed [2:0] mul_ln1345_192_fu_5860_p1;
wire  signed [2:0] tmp_208_fu_5866_p4;
wire  signed [2:0] mul_ln1345_193_fu_5880_p1;
wire  signed [2:0] tmp_209_fu_5886_p4;
wire  signed [2:0] mul_ln1345_194_fu_5900_p1;
wire  signed [2:0] tmp_210_fu_5906_p4;
wire  signed [2:0] mul_ln1345_195_fu_5920_p1;
wire  signed [2:0] tmp_211_fu_5926_p4;
wire  signed [2:0] mul_ln1345_196_fu_5940_p1;
wire  signed [2:0] tmp_212_fu_5946_p4;
wire  signed [2:0] mul_ln1345_197_fu_5960_p1;
wire  signed [2:0] tmp_213_fu_5966_p4;
wire  signed [2:0] mul_ln1345_198_fu_5980_p1;
wire  signed [2:0] tmp_214_fu_5986_p4;
wire  signed [2:0] mul_ln1345_199_fu_6000_p1;
wire  signed [2:0] tmp_215_fu_6006_p4;
wire  signed [2:0] mul_ln1345_200_fu_6020_p1;
wire  signed [2:0] tmp_216_fu_6026_p4;
wire  signed [2:0] mul_ln1345_201_fu_6040_p1;
wire  signed [2:0] tmp_217_fu_6046_p4;
wire  signed [2:0] mul_ln1345_202_fu_6060_p1;
wire  signed [2:0] tmp_218_fu_6066_p4;
wire  signed [2:0] mul_ln1345_203_fu_6080_p1;
wire  signed [2:0] tmp_219_fu_6086_p4;
wire  signed [2:0] mul_ln1345_204_fu_6100_p1;
wire  signed [2:0] tmp_221_fu_6106_p4;
wire  signed [2:0] mul_ln1345_205_fu_6120_p1;
wire  signed [2:0] tmp_222_fu_6126_p4;
wire  signed [2:0] mul_ln1345_206_fu_6140_p1;
wire  signed [2:0] tmp_223_fu_6146_p4;
wire  signed [2:0] mul_ln1345_207_fu_6160_p1;
wire  signed [2:0] tmp_224_fu_6166_p4;
wire  signed [2:0] mul_ln1345_208_fu_6180_p1;
wire  signed [2:0] tmp_225_fu_6186_p4;
wire  signed [2:0] mul_ln1345_209_fu_6200_p1;
wire  signed [2:0] tmp_226_fu_6206_p4;
wire  signed [2:0] mul_ln1345_210_fu_6220_p1;
wire  signed [2:0] tmp_227_fu_6226_p4;
wire  signed [2:0] mul_ln1345_211_fu_6240_p1;
wire  signed [2:0] tmp_228_fu_6246_p4;
wire  signed [2:0] mul_ln1345_212_fu_6260_p1;
wire  signed [2:0] tmp_229_fu_6266_p4;
wire  signed [2:0] mul_ln1345_213_fu_6280_p1;
wire  signed [2:0] tmp_230_fu_6286_p4;
wire  signed [2:0] mul_ln1345_214_fu_6300_p1;
wire  signed [2:0] tmp_231_fu_6306_p4;
wire  signed [2:0] mul_ln1345_215_fu_6320_p1;
wire  signed [2:0] tmp_232_fu_6326_p4;
wire  signed [2:0] mul_ln1345_216_fu_6340_p1;
wire  signed [2:0] tmp_234_fu_6346_p4;
wire  signed [2:0] mul_ln1345_217_fu_6360_p1;
wire  signed [2:0] tmp_235_fu_6366_p4;
wire  signed [2:0] mul_ln1345_218_fu_6380_p1;
wire  signed [2:0] tmp_236_fu_6386_p4;
wire  signed [2:0] mul_ln1345_219_fu_6400_p1;
wire  signed [2:0] tmp_237_fu_6406_p4;
wire  signed [2:0] mul_ln1345_220_fu_6420_p1;
wire  signed [2:0] tmp_238_fu_6426_p4;
wire  signed [2:0] mul_ln1345_221_fu_6440_p1;
wire  signed [2:0] tmp_239_fu_6446_p4;
wire  signed [2:0] mul_ln1345_222_fu_6460_p1;
wire  signed [2:0] tmp_240_fu_6466_p4;
wire  signed [2:0] mul_ln1345_223_fu_6480_p1;
wire  signed [2:0] tmp_241_fu_6486_p4;
wire  signed [2:0] mul_ln1345_224_fu_6500_p1;
wire  signed [2:0] tmp_242_fu_6506_p4;
wire  signed [2:0] mul_ln1345_225_fu_6520_p1;
wire  signed [2:0] tmp_243_fu_6526_p4;
wire  signed [2:0] mul_ln1345_226_fu_6540_p1;
wire  signed [2:0] tmp_244_fu_6546_p4;
wire  signed [2:0] mul_ln1345_227_fu_6560_p1;
wire  signed [2:0] tmp_245_fu_6566_p4;
wire  signed [2:0] mul_ln1345_228_fu_6580_p1;
wire  signed [2:0] tmp_247_fu_6586_p4;
wire  signed [2:0] mul_ln1345_229_fu_6600_p1;
wire  signed [2:0] tmp_248_fu_6606_p4;
wire  signed [2:0] mul_ln1345_230_fu_6620_p1;
wire  signed [2:0] tmp_249_fu_6626_p4;
wire  signed [2:0] mul_ln1345_231_fu_6640_p1;
wire  signed [2:0] tmp_250_fu_6646_p4;
wire  signed [2:0] mul_ln1345_232_fu_6660_p1;
wire  signed [2:0] tmp_251_fu_6666_p4;
wire  signed [2:0] mul_ln1345_233_fu_6680_p1;
wire  signed [2:0] tmp_252_fu_6686_p4;
wire  signed [2:0] mul_ln1345_234_fu_6700_p1;
wire  signed [2:0] tmp_253_fu_6706_p4;
wire  signed [2:0] mul_ln1345_235_fu_6720_p1;
wire  signed [2:0] tmp_254_fu_6726_p4;
wire  signed [2:0] mul_ln1345_236_fu_6740_p1;
wire  signed [2:0] tmp_255_fu_6746_p4;
wire  signed [2:0] mul_ln1345_237_fu_6760_p1;
wire  signed [2:0] tmp_256_fu_6766_p4;
wire  signed [2:0] mul_ln1345_238_fu_6780_p1;
wire  signed [2:0] tmp_257_fu_6786_p4;
wire  signed [2:0] mul_ln1345_239_fu_6800_p1;
wire  signed [2:0] tmp_258_fu_6806_p4;
wire  signed [2:0] mul_ln1345_240_fu_6820_p1;
wire  signed [2:0] tmp_260_fu_6826_p4;
wire  signed [2:0] mul_ln1345_241_fu_6840_p1;
wire  signed [2:0] tmp_261_fu_6846_p4;
wire  signed [2:0] mul_ln1345_242_fu_6860_p1;
wire  signed [2:0] tmp_262_fu_6866_p4;
wire  signed [2:0] mul_ln1345_243_fu_6880_p1;
wire  signed [2:0] tmp_263_fu_6886_p4;
wire  signed [2:0] mul_ln1345_244_fu_6900_p1;
wire  signed [2:0] tmp_264_fu_6906_p4;
wire  signed [2:0] mul_ln1345_245_fu_6920_p1;
wire  signed [2:0] tmp_265_fu_6926_p4;
wire  signed [2:0] mul_ln1345_246_fu_6940_p1;
wire  signed [2:0] tmp_266_fu_6946_p4;
wire  signed [2:0] mul_ln1345_247_fu_6960_p1;
wire  signed [2:0] tmp_267_fu_6966_p4;
wire  signed [2:0] mul_ln1345_248_fu_6980_p1;
wire  signed [2:0] tmp_268_fu_6986_p4;
wire  signed [2:0] mul_ln1345_249_fu_7000_p1;
wire  signed [2:0] tmp_269_fu_7006_p4;
wire  signed [2:0] mul_ln1345_250_fu_7020_p1;
wire  signed [2:0] tmp_270_fu_7026_p4;
wire  signed [2:0] mul_ln1345_251_fu_7040_p1;
wire  signed [2:0] tmp_271_fu_7046_p4;
wire  signed [2:0] mul_ln1345_252_fu_7060_p1;
wire  signed [2:0] tmp_273_fu_7066_p4;
wire  signed [2:0] mul_ln1345_253_fu_7080_p1;
wire  signed [2:0] tmp_274_fu_7086_p4;
wire  signed [2:0] mul_ln1345_254_fu_7100_p1;
wire  signed [2:0] tmp_275_fu_7106_p4;
wire  signed [2:0] mul_ln1345_255_fu_7120_p1;
wire  signed [2:0] tmp_276_fu_7126_p4;
wire  signed [2:0] mul_ln1345_256_fu_7140_p1;
wire  signed [2:0] tmp_277_fu_7146_p4;
wire  signed [2:0] mul_ln1345_257_fu_7160_p1;
wire  signed [2:0] tmp_278_fu_7166_p4;
wire  signed [2:0] mul_ln1345_258_fu_7180_p1;
wire  signed [2:0] tmp_279_fu_7186_p4;
wire  signed [2:0] mul_ln1345_259_fu_7200_p1;
wire  signed [2:0] tmp_280_fu_7206_p4;
wire  signed [2:0] mul_ln1345_260_fu_7220_p1;
wire  signed [2:0] tmp_281_fu_7226_p4;
wire  signed [2:0] mul_ln1345_261_fu_7240_p1;
wire  signed [2:0] tmp_282_fu_7246_p4;
wire  signed [2:0] mul_ln1345_262_fu_7260_p1;
wire  signed [2:0] tmp_283_fu_7266_p4;
wire  signed [2:0] mul_ln1345_263_fu_7280_p1;
wire  signed [2:0] tmp_284_fu_7286_p4;
wire  signed [2:0] mul_ln1345_264_fu_7300_p1;
wire  signed [2:0] tmp_286_fu_7306_p4;
wire  signed [2:0] mul_ln1345_265_fu_7320_p1;
wire  signed [2:0] tmp_287_fu_7326_p4;
wire  signed [2:0] mul_ln1345_266_fu_7340_p1;
wire  signed [2:0] tmp_288_fu_7346_p4;
wire  signed [2:0] mul_ln1345_267_fu_7360_p1;
wire  signed [2:0] tmp_289_fu_7366_p4;
wire  signed [2:0] mul_ln1345_268_fu_7380_p1;
wire  signed [2:0] tmp_290_fu_7386_p4;
wire  signed [2:0] mul_ln1345_269_fu_7400_p1;
wire  signed [2:0] tmp_291_fu_7406_p4;
wire  signed [2:0] mul_ln1345_270_fu_7420_p1;
wire  signed [2:0] tmp_292_fu_7426_p4;
wire  signed [2:0] mul_ln1345_271_fu_7440_p1;
wire  signed [2:0] tmp_293_fu_7446_p4;
wire  signed [2:0] mul_ln1345_272_fu_7460_p1;
wire  signed [2:0] tmp_294_fu_7466_p4;
wire  signed [2:0] mul_ln1345_273_fu_7480_p1;
wire  signed [2:0] tmp_295_fu_7486_p4;
wire  signed [2:0] mul_ln1345_274_fu_7500_p1;
wire  signed [2:0] tmp_296_fu_7506_p4;
wire  signed [2:0] mul_ln1345_275_fu_7520_p1;
wire  signed [2:0] tmp_297_fu_7526_p4;
wire  signed [2:0] mul_ln1345_276_fu_7540_p1;
wire  signed [2:0] tmp_299_fu_7546_p4;
wire  signed [2:0] mul_ln1345_277_fu_7560_p1;
wire  signed [2:0] tmp_300_fu_7566_p4;
wire  signed [2:0] mul_ln1345_278_fu_7580_p1;
wire  signed [2:0] tmp_301_fu_7586_p4;
wire  signed [2:0] mul_ln1345_279_fu_7600_p1;
wire  signed [2:0] tmp_302_fu_7606_p4;
wire  signed [2:0] mul_ln1345_280_fu_7620_p1;
wire  signed [2:0] tmp_303_fu_7626_p4;
wire  signed [2:0] mul_ln1345_281_fu_7640_p1;
wire  signed [2:0] tmp_304_fu_7646_p4;
wire  signed [2:0] mul_ln1345_282_fu_7660_p1;
wire  signed [2:0] tmp_305_fu_7666_p4;
wire  signed [2:0] mul_ln1345_283_fu_7680_p1;
wire  signed [2:0] tmp_306_fu_7686_p4;
wire  signed [2:0] mul_ln1345_284_fu_7700_p1;
wire  signed [2:0] tmp_307_fu_7706_p4;
wire  signed [2:0] mul_ln1345_285_fu_7720_p1;
wire  signed [2:0] tmp_308_fu_7726_p4;
wire  signed [2:0] mul_ln1345_286_fu_7740_p1;
wire  signed [2:0] tmp_309_fu_7746_p4;
wire  signed [2:0] mul_ln1345_287_fu_7760_p1;
wire   [527:0] vec_o_data_M_elems_V_fu_7769_p3;
wire   [527:0] select_ln126_fu_7775_p3;
wire  signed [6:0] sext_ln151_8_fu_7813_p1;
wire  signed [6:0] sext_ln151_9_fu_7816_p1;
wire   [6:0] add_ln691_fu_7822_p2;
wire  signed [10:0] sext_ln691_2_fu_7828_p1;
wire   [10:0] trunc_ln691_fu_7785_p1;
wire  signed [6:0] sext_ln151_4_fu_7801_p1;
wire  signed [6:0] sext_ln151_6_fu_7807_p1;
wire   [6:0] add_ln691_2_fu_7838_p2;
wire  signed [6:0] sext_ln151_7_fu_7810_p1;
wire  signed [6:0] sext_ln151_fu_7789_p1;
wire  signed [6:0] sext_ln691_fu_7782_p1;
wire   [6:0] add_ln691_5_fu_7850_p2;
wire  signed [6:0] sext_ln151_5_fu_7804_p1;
wire   [6:0] add_ln691_6_fu_7856_p2;
wire  signed [6:0] sext_ln151_1_fu_7792_p1;
wire  signed [6:0] sext_ln151_3_fu_7798_p1;
wire   [6:0] add_ln691_7_fu_7866_p2;
wire  signed [6:0] sext_ln151_2_fu_7795_p1;
wire  signed [6:0] sext_ln691_1_fu_7819_p1;
wire   [6:0] add_ln691_8_fu_7876_p2;
wire  signed [7:0] sext_ln691_6_fu_7882_p1;
wire  signed [7:0] sext_ln691_5_fu_7872_p1;
wire   [7:0] add_ln691_9_fu_7886_p2;
wire  signed [7:0] sext_ln691_4_fu_7862_p1;
wire  signed [6:0] sext_ln151_18_fu_7935_p1;
wire  signed [6:0] sext_ln151_19_fu_7938_p1;
wire   [6:0] add_ln691_12_fu_7944_p2;
wire  signed [10:0] sext_ln691_10_fu_7950_p1;
wire   [10:0] tmp_12_fu_7901_p4;
wire  signed [6:0] sext_ln151_14_fu_7923_p1;
wire  signed [6:0] sext_ln151_16_fu_7929_p1;
wire   [6:0] add_ln691_14_fu_7960_p2;
wire  signed [6:0] sext_ln151_17_fu_7932_p1;
wire  signed [6:0] sext_ln151_10_fu_7911_p1;
wire  signed [6:0] sext_ln691_8_fu_7898_p1;
wire   [6:0] add_ln691_17_fu_7972_p2;
wire  signed [6:0] sext_ln151_15_fu_7926_p1;
wire   [6:0] add_ln691_18_fu_7978_p2;
wire  signed [6:0] sext_ln151_11_fu_7914_p1;
wire  signed [6:0] sext_ln151_13_fu_7920_p1;
wire   [6:0] add_ln691_19_fu_7988_p2;
wire  signed [6:0] sext_ln151_12_fu_7917_p1;
wire  signed [6:0] sext_ln691_9_fu_7941_p1;
wire   [6:0] add_ln691_20_fu_7998_p2;
wire  signed [7:0] sext_ln691_14_fu_8004_p1;
wire  signed [7:0] sext_ln691_13_fu_7994_p1;
wire   [7:0] add_ln691_21_fu_8008_p2;
wire  signed [7:0] sext_ln691_12_fu_7984_p1;
wire  signed [6:0] sext_ln151_28_fu_8057_p1;
wire  signed [6:0] sext_ln151_29_fu_8060_p1;
wire   [6:0] add_ln691_24_fu_8066_p2;
wire  signed [10:0] sext_ln691_18_fu_8072_p1;
wire   [10:0] tmp_25_fu_8023_p4;
wire  signed [6:0] sext_ln151_24_fu_8045_p1;
wire  signed [6:0] sext_ln151_26_fu_8051_p1;
wire   [6:0] add_ln691_26_fu_8082_p2;
wire  signed [6:0] sext_ln151_27_fu_8054_p1;
wire  signed [6:0] sext_ln151_20_fu_8033_p1;
wire  signed [6:0] sext_ln691_16_fu_8020_p1;
wire   [6:0] add_ln691_29_fu_8094_p2;
wire  signed [6:0] sext_ln151_25_fu_8048_p1;
wire   [6:0] add_ln691_30_fu_8100_p2;
wire  signed [6:0] sext_ln151_21_fu_8036_p1;
wire  signed [6:0] sext_ln151_23_fu_8042_p1;
wire   [6:0] add_ln691_31_fu_8110_p2;
wire  signed [6:0] sext_ln151_22_fu_8039_p1;
wire  signed [6:0] sext_ln691_17_fu_8063_p1;
wire   [6:0] add_ln691_32_fu_8120_p2;
wire  signed [7:0] sext_ln691_22_fu_8126_p1;
wire  signed [7:0] sext_ln691_21_fu_8116_p1;
wire   [7:0] add_ln691_33_fu_8130_p2;
wire  signed [7:0] sext_ln691_20_fu_8106_p1;
wire  signed [6:0] sext_ln151_38_fu_8179_p1;
wire  signed [6:0] sext_ln151_39_fu_8182_p1;
wire   [6:0] add_ln691_36_fu_8188_p2;
wire  signed [10:0] sext_ln691_26_fu_8194_p1;
wire   [10:0] tmp_38_fu_8145_p4;
wire  signed [6:0] sext_ln151_34_fu_8167_p1;
wire  signed [6:0] sext_ln151_36_fu_8173_p1;
wire   [6:0] add_ln691_38_fu_8204_p2;
wire  signed [6:0] sext_ln151_37_fu_8176_p1;
wire  signed [6:0] sext_ln151_30_fu_8155_p1;
wire  signed [6:0] sext_ln691_24_fu_8142_p1;
wire   [6:0] add_ln691_41_fu_8216_p2;
wire  signed [6:0] sext_ln151_35_fu_8170_p1;
wire   [6:0] add_ln691_42_fu_8222_p2;
wire  signed [6:0] sext_ln151_31_fu_8158_p1;
wire  signed [6:0] sext_ln151_33_fu_8164_p1;
wire   [6:0] add_ln691_43_fu_8232_p2;
wire  signed [6:0] sext_ln151_32_fu_8161_p1;
wire  signed [6:0] sext_ln691_25_fu_8185_p1;
wire   [6:0] add_ln691_44_fu_8242_p2;
wire  signed [7:0] sext_ln691_30_fu_8248_p1;
wire  signed [7:0] sext_ln691_29_fu_8238_p1;
wire   [7:0] add_ln691_45_fu_8252_p2;
wire  signed [7:0] sext_ln691_28_fu_8228_p1;
wire  signed [6:0] sext_ln151_48_fu_8301_p1;
wire  signed [6:0] sext_ln151_49_fu_8304_p1;
wire   [6:0] add_ln691_48_fu_8310_p2;
wire  signed [10:0] sext_ln691_34_fu_8316_p1;
wire   [10:0] tmp_51_fu_8267_p4;
wire  signed [6:0] sext_ln151_44_fu_8289_p1;
wire  signed [6:0] sext_ln151_46_fu_8295_p1;
wire   [6:0] add_ln691_50_fu_8326_p2;
wire  signed [6:0] sext_ln151_47_fu_8298_p1;
wire  signed [6:0] sext_ln151_40_fu_8277_p1;
wire  signed [6:0] sext_ln691_32_fu_8264_p1;
wire   [6:0] add_ln691_53_fu_8338_p2;
wire  signed [6:0] sext_ln151_45_fu_8292_p1;
wire   [6:0] add_ln691_54_fu_8344_p2;
wire  signed [6:0] sext_ln151_41_fu_8280_p1;
wire  signed [6:0] sext_ln151_43_fu_8286_p1;
wire   [6:0] add_ln691_55_fu_8354_p2;
wire  signed [6:0] sext_ln151_42_fu_8283_p1;
wire  signed [6:0] sext_ln691_33_fu_8307_p1;
wire   [6:0] add_ln691_56_fu_8364_p2;
wire  signed [7:0] sext_ln691_38_fu_8370_p1;
wire  signed [7:0] sext_ln691_37_fu_8360_p1;
wire   [7:0] add_ln691_57_fu_8374_p2;
wire  signed [7:0] sext_ln691_36_fu_8350_p1;
wire  signed [6:0] sext_ln151_58_fu_8423_p1;
wire  signed [6:0] sext_ln151_59_fu_8426_p1;
wire   [6:0] add_ln691_60_fu_8432_p2;
wire  signed [10:0] sext_ln691_42_fu_8438_p1;
wire   [10:0] tmp_64_fu_8389_p4;
wire  signed [6:0] sext_ln151_54_fu_8411_p1;
wire  signed [6:0] sext_ln151_56_fu_8417_p1;
wire   [6:0] add_ln691_62_fu_8448_p2;
wire  signed [6:0] sext_ln151_57_fu_8420_p1;
wire  signed [6:0] sext_ln151_50_fu_8399_p1;
wire  signed [6:0] sext_ln691_40_fu_8386_p1;
wire   [6:0] add_ln691_65_fu_8460_p2;
wire  signed [6:0] sext_ln151_55_fu_8414_p1;
wire   [6:0] add_ln691_66_fu_8466_p2;
wire  signed [6:0] sext_ln151_51_fu_8402_p1;
wire  signed [6:0] sext_ln151_53_fu_8408_p1;
wire   [6:0] add_ln691_67_fu_8476_p2;
wire  signed [6:0] sext_ln151_52_fu_8405_p1;
wire  signed [6:0] sext_ln691_41_fu_8429_p1;
wire   [6:0] add_ln691_68_fu_8486_p2;
wire  signed [7:0] sext_ln691_46_fu_8492_p1;
wire  signed [7:0] sext_ln691_45_fu_8482_p1;
wire   [7:0] add_ln691_69_fu_8496_p2;
wire  signed [7:0] sext_ln691_44_fu_8472_p1;
wire  signed [6:0] sext_ln151_68_fu_8545_p1;
wire  signed [6:0] sext_ln151_69_fu_8548_p1;
wire   [6:0] add_ln691_72_fu_8554_p2;
wire  signed [10:0] sext_ln691_50_fu_8560_p1;
wire   [10:0] tmp_77_fu_8511_p4;
wire  signed [6:0] sext_ln151_64_fu_8533_p1;
wire  signed [6:0] sext_ln151_66_fu_8539_p1;
wire   [6:0] add_ln691_74_fu_8570_p2;
wire  signed [6:0] sext_ln151_67_fu_8542_p1;
wire  signed [6:0] sext_ln151_60_fu_8521_p1;
wire  signed [6:0] sext_ln691_48_fu_8508_p1;
wire   [6:0] add_ln691_77_fu_8582_p2;
wire  signed [6:0] sext_ln151_65_fu_8536_p1;
wire   [6:0] add_ln691_78_fu_8588_p2;
wire  signed [6:0] sext_ln151_61_fu_8524_p1;
wire  signed [6:0] sext_ln151_63_fu_8530_p1;
wire   [6:0] add_ln691_79_fu_8598_p2;
wire  signed [6:0] sext_ln151_62_fu_8527_p1;
wire  signed [6:0] sext_ln691_49_fu_8551_p1;
wire   [6:0] add_ln691_80_fu_8608_p2;
wire  signed [7:0] sext_ln691_54_fu_8614_p1;
wire  signed [7:0] sext_ln691_53_fu_8604_p1;
wire   [7:0] add_ln691_81_fu_8618_p2;
wire  signed [7:0] sext_ln691_52_fu_8594_p1;
wire  signed [6:0] sext_ln151_78_fu_8667_p1;
wire  signed [6:0] sext_ln151_79_fu_8670_p1;
wire   [6:0] add_ln691_84_fu_8676_p2;
wire  signed [10:0] sext_ln691_58_fu_8682_p1;
wire   [10:0] tmp_90_fu_8633_p4;
wire  signed [6:0] sext_ln151_74_fu_8655_p1;
wire  signed [6:0] sext_ln151_76_fu_8661_p1;
wire   [6:0] add_ln691_86_fu_8692_p2;
wire  signed [6:0] sext_ln151_77_fu_8664_p1;
wire  signed [6:0] sext_ln151_70_fu_8643_p1;
wire  signed [6:0] sext_ln691_56_fu_8630_p1;
wire   [6:0] add_ln691_89_fu_8704_p2;
wire  signed [6:0] sext_ln151_75_fu_8658_p1;
wire   [6:0] add_ln691_90_fu_8710_p2;
wire  signed [6:0] sext_ln151_71_fu_8646_p1;
wire  signed [6:0] sext_ln151_73_fu_8652_p1;
wire   [6:0] add_ln691_91_fu_8720_p2;
wire  signed [6:0] sext_ln151_72_fu_8649_p1;
wire  signed [6:0] sext_ln691_57_fu_8673_p1;
wire   [6:0] add_ln691_92_fu_8730_p2;
wire  signed [7:0] sext_ln691_62_fu_8736_p1;
wire  signed [7:0] sext_ln691_61_fu_8726_p1;
wire   [7:0] add_ln691_93_fu_8740_p2;
wire  signed [7:0] sext_ln691_60_fu_8716_p1;
wire  signed [6:0] sext_ln151_88_fu_8789_p1;
wire  signed [6:0] sext_ln151_89_fu_8792_p1;
wire   [6:0] add_ln691_96_fu_8798_p2;
wire  signed [10:0] sext_ln691_66_fu_8804_p1;
wire   [10:0] tmp_103_fu_8755_p4;
wire  signed [6:0] sext_ln151_84_fu_8777_p1;
wire  signed [6:0] sext_ln151_86_fu_8783_p1;
wire   [6:0] add_ln691_98_fu_8814_p2;
wire  signed [6:0] sext_ln151_87_fu_8786_p1;
wire  signed [6:0] sext_ln151_80_fu_8765_p1;
wire  signed [6:0] sext_ln691_64_fu_8752_p1;
wire   [6:0] add_ln691_101_fu_8826_p2;
wire  signed [6:0] sext_ln151_85_fu_8780_p1;
wire   [6:0] add_ln691_102_fu_8832_p2;
wire  signed [6:0] sext_ln151_81_fu_8768_p1;
wire  signed [6:0] sext_ln151_83_fu_8774_p1;
wire   [6:0] add_ln691_103_fu_8842_p2;
wire  signed [6:0] sext_ln151_82_fu_8771_p1;
wire  signed [6:0] sext_ln691_65_fu_8795_p1;
wire   [6:0] add_ln691_104_fu_8852_p2;
wire  signed [7:0] sext_ln691_70_fu_8858_p1;
wire  signed [7:0] sext_ln691_69_fu_8848_p1;
wire   [7:0] add_ln691_105_fu_8862_p2;
wire  signed [7:0] sext_ln691_68_fu_8838_p1;
wire  signed [6:0] sext_ln151_98_fu_8911_p1;
wire  signed [6:0] sext_ln151_99_fu_8914_p1;
wire   [6:0] add_ln691_108_fu_8920_p2;
wire  signed [10:0] sext_ln691_74_fu_8926_p1;
wire   [10:0] tmp_116_fu_8877_p4;
wire  signed [6:0] sext_ln151_94_fu_8899_p1;
wire  signed [6:0] sext_ln151_96_fu_8905_p1;
wire   [6:0] add_ln691_110_fu_8936_p2;
wire  signed [6:0] sext_ln151_97_fu_8908_p1;
wire  signed [6:0] sext_ln151_90_fu_8887_p1;
wire  signed [6:0] sext_ln691_72_fu_8874_p1;
wire   [6:0] add_ln691_113_fu_8948_p2;
wire  signed [6:0] sext_ln151_95_fu_8902_p1;
wire   [6:0] add_ln691_114_fu_8954_p2;
wire  signed [6:0] sext_ln151_91_fu_8890_p1;
wire  signed [6:0] sext_ln151_93_fu_8896_p1;
wire   [6:0] add_ln691_115_fu_8964_p2;
wire  signed [6:0] sext_ln151_92_fu_8893_p1;
wire  signed [6:0] sext_ln691_73_fu_8917_p1;
wire   [6:0] add_ln691_116_fu_8974_p2;
wire  signed [7:0] sext_ln691_78_fu_8980_p1;
wire  signed [7:0] sext_ln691_77_fu_8970_p1;
wire   [7:0] add_ln691_117_fu_8984_p2;
wire  signed [7:0] sext_ln691_76_fu_8960_p1;
wire  signed [6:0] sext_ln151_108_fu_9033_p1;
wire  signed [6:0] sext_ln151_109_fu_9036_p1;
wire   [6:0] add_ln691_120_fu_9042_p2;
wire  signed [10:0] sext_ln691_82_fu_9048_p1;
wire   [10:0] tmp_129_fu_8999_p4;
wire  signed [6:0] sext_ln151_104_fu_9021_p1;
wire  signed [6:0] sext_ln151_106_fu_9027_p1;
wire   [6:0] add_ln691_122_fu_9058_p2;
wire  signed [6:0] sext_ln151_107_fu_9030_p1;
wire  signed [6:0] sext_ln151_100_fu_9009_p1;
wire  signed [6:0] sext_ln691_80_fu_8996_p1;
wire   [6:0] add_ln691_125_fu_9070_p2;
wire  signed [6:0] sext_ln151_105_fu_9024_p1;
wire   [6:0] add_ln691_126_fu_9076_p2;
wire  signed [6:0] sext_ln151_101_fu_9012_p1;
wire  signed [6:0] sext_ln151_103_fu_9018_p1;
wire   [6:0] add_ln691_127_fu_9086_p2;
wire  signed [6:0] sext_ln151_102_fu_9015_p1;
wire  signed [6:0] sext_ln691_81_fu_9039_p1;
wire   [6:0] add_ln691_128_fu_9096_p2;
wire  signed [7:0] sext_ln691_86_fu_9102_p1;
wire  signed [7:0] sext_ln691_85_fu_9092_p1;
wire   [7:0] add_ln691_129_fu_9106_p2;
wire  signed [7:0] sext_ln691_84_fu_9082_p1;
wire  signed [6:0] sext_ln151_118_fu_9155_p1;
wire  signed [6:0] sext_ln151_119_fu_9158_p1;
wire   [6:0] add_ln691_132_fu_9164_p2;
wire  signed [10:0] sext_ln691_90_fu_9170_p1;
wire   [10:0] tmp_142_fu_9121_p4;
wire  signed [6:0] sext_ln151_114_fu_9143_p1;
wire  signed [6:0] sext_ln151_116_fu_9149_p1;
wire   [6:0] add_ln691_134_fu_9180_p2;
wire  signed [6:0] sext_ln151_117_fu_9152_p1;
wire  signed [6:0] sext_ln151_110_fu_9131_p1;
wire  signed [6:0] sext_ln691_88_fu_9118_p1;
wire   [6:0] add_ln691_137_fu_9192_p2;
wire  signed [6:0] sext_ln151_115_fu_9146_p1;
wire   [6:0] add_ln691_138_fu_9198_p2;
wire  signed [6:0] sext_ln151_111_fu_9134_p1;
wire  signed [6:0] sext_ln151_113_fu_9140_p1;
wire   [6:0] add_ln691_139_fu_9208_p2;
wire  signed [6:0] sext_ln151_112_fu_9137_p1;
wire  signed [6:0] sext_ln691_89_fu_9161_p1;
wire   [6:0] add_ln691_140_fu_9218_p2;
wire  signed [7:0] sext_ln691_94_fu_9224_p1;
wire  signed [7:0] sext_ln691_93_fu_9214_p1;
wire   [7:0] add_ln691_141_fu_9228_p2;
wire  signed [7:0] sext_ln691_92_fu_9204_p1;
wire  signed [6:0] sext_ln151_128_fu_9277_p1;
wire  signed [6:0] sext_ln151_129_fu_9280_p1;
wire   [6:0] add_ln691_144_fu_9286_p2;
wire  signed [10:0] sext_ln691_98_fu_9292_p1;
wire   [10:0] tmp_155_fu_9243_p4;
wire  signed [6:0] sext_ln151_124_fu_9265_p1;
wire  signed [6:0] sext_ln151_126_fu_9271_p1;
wire   [6:0] add_ln691_146_fu_9302_p2;
wire  signed [6:0] sext_ln151_127_fu_9274_p1;
wire  signed [6:0] sext_ln151_120_fu_9253_p1;
wire  signed [6:0] sext_ln691_96_fu_9240_p1;
wire   [6:0] add_ln691_149_fu_9314_p2;
wire  signed [6:0] sext_ln151_125_fu_9268_p1;
wire   [6:0] add_ln691_150_fu_9320_p2;
wire  signed [6:0] sext_ln151_121_fu_9256_p1;
wire  signed [6:0] sext_ln151_123_fu_9262_p1;
wire   [6:0] add_ln691_151_fu_9330_p2;
wire  signed [6:0] sext_ln151_122_fu_9259_p1;
wire  signed [6:0] sext_ln691_97_fu_9283_p1;
wire   [6:0] add_ln691_152_fu_9340_p2;
wire  signed [7:0] sext_ln691_102_fu_9346_p1;
wire  signed [7:0] sext_ln691_101_fu_9336_p1;
wire   [7:0] add_ln691_153_fu_9350_p2;
wire  signed [7:0] sext_ln691_100_fu_9326_p1;
wire  signed [6:0] sext_ln151_138_fu_9399_p1;
wire  signed [6:0] sext_ln151_139_fu_9402_p1;
wire   [6:0] add_ln691_156_fu_9408_p2;
wire  signed [10:0] sext_ln691_106_fu_9414_p1;
wire   [10:0] tmp_168_fu_9365_p4;
wire  signed [6:0] sext_ln151_134_fu_9387_p1;
wire  signed [6:0] sext_ln151_136_fu_9393_p1;
wire   [6:0] add_ln691_158_fu_9424_p2;
wire  signed [6:0] sext_ln151_137_fu_9396_p1;
wire  signed [6:0] sext_ln151_130_fu_9375_p1;
wire  signed [6:0] sext_ln691_104_fu_9362_p1;
wire   [6:0] add_ln691_161_fu_9436_p2;
wire  signed [6:0] sext_ln151_135_fu_9390_p1;
wire   [6:0] add_ln691_162_fu_9442_p2;
wire  signed [6:0] sext_ln151_131_fu_9378_p1;
wire  signed [6:0] sext_ln151_133_fu_9384_p1;
wire   [6:0] add_ln691_163_fu_9452_p2;
wire  signed [6:0] sext_ln151_132_fu_9381_p1;
wire  signed [6:0] sext_ln691_105_fu_9405_p1;
wire   [6:0] add_ln691_164_fu_9462_p2;
wire  signed [7:0] sext_ln691_110_fu_9468_p1;
wire  signed [7:0] sext_ln691_109_fu_9458_p1;
wire   [7:0] add_ln691_165_fu_9472_p2;
wire  signed [7:0] sext_ln691_108_fu_9448_p1;
wire  signed [6:0] sext_ln151_148_fu_9521_p1;
wire  signed [6:0] sext_ln151_149_fu_9524_p1;
wire   [6:0] add_ln691_168_fu_9530_p2;
wire  signed [10:0] sext_ln691_114_fu_9536_p1;
wire   [10:0] tmp_181_fu_9487_p4;
wire  signed [6:0] sext_ln151_144_fu_9509_p1;
wire  signed [6:0] sext_ln151_146_fu_9515_p1;
wire   [6:0] add_ln691_170_fu_9546_p2;
wire  signed [6:0] sext_ln151_147_fu_9518_p1;
wire  signed [6:0] sext_ln151_140_fu_9497_p1;
wire  signed [6:0] sext_ln691_112_fu_9484_p1;
wire   [6:0] add_ln691_173_fu_9558_p2;
wire  signed [6:0] sext_ln151_145_fu_9512_p1;
wire   [6:0] add_ln691_174_fu_9564_p2;
wire  signed [6:0] sext_ln151_141_fu_9500_p1;
wire  signed [6:0] sext_ln151_143_fu_9506_p1;
wire   [6:0] add_ln691_175_fu_9574_p2;
wire  signed [6:0] sext_ln151_142_fu_9503_p1;
wire  signed [6:0] sext_ln691_113_fu_9527_p1;
wire   [6:0] add_ln691_176_fu_9584_p2;
wire  signed [7:0] sext_ln691_118_fu_9590_p1;
wire  signed [7:0] sext_ln691_117_fu_9580_p1;
wire   [7:0] add_ln691_177_fu_9594_p2;
wire  signed [7:0] sext_ln691_116_fu_9570_p1;
wire  signed [6:0] sext_ln151_158_fu_9643_p1;
wire  signed [6:0] sext_ln151_159_fu_9646_p1;
wire   [6:0] add_ln691_180_fu_9652_p2;
wire  signed [10:0] sext_ln691_122_fu_9658_p1;
wire   [10:0] tmp_194_fu_9609_p4;
wire  signed [6:0] sext_ln151_154_fu_9631_p1;
wire  signed [6:0] sext_ln151_156_fu_9637_p1;
wire   [6:0] add_ln691_182_fu_9668_p2;
wire  signed [6:0] sext_ln151_157_fu_9640_p1;
wire  signed [6:0] sext_ln151_150_fu_9619_p1;
wire  signed [6:0] sext_ln691_120_fu_9606_p1;
wire   [6:0] add_ln691_185_fu_9680_p2;
wire  signed [6:0] sext_ln151_155_fu_9634_p1;
wire   [6:0] add_ln691_186_fu_9686_p2;
wire  signed [6:0] sext_ln151_151_fu_9622_p1;
wire  signed [6:0] sext_ln151_153_fu_9628_p1;
wire   [6:0] add_ln691_187_fu_9696_p2;
wire  signed [6:0] sext_ln151_152_fu_9625_p1;
wire  signed [6:0] sext_ln691_121_fu_9649_p1;
wire   [6:0] add_ln691_188_fu_9706_p2;
wire  signed [7:0] sext_ln691_126_fu_9712_p1;
wire  signed [7:0] sext_ln691_125_fu_9702_p1;
wire   [7:0] add_ln691_189_fu_9716_p2;
wire  signed [7:0] sext_ln691_124_fu_9692_p1;
wire  signed [6:0] sext_ln151_168_fu_9765_p1;
wire  signed [6:0] sext_ln151_169_fu_9768_p1;
wire   [6:0] add_ln691_192_fu_9774_p2;
wire  signed [10:0] sext_ln691_130_fu_9780_p1;
wire   [10:0] tmp_207_fu_9731_p4;
wire  signed [6:0] sext_ln151_164_fu_9753_p1;
wire  signed [6:0] sext_ln151_166_fu_9759_p1;
wire   [6:0] add_ln691_194_fu_9790_p2;
wire  signed [6:0] sext_ln151_167_fu_9762_p1;
wire  signed [6:0] sext_ln151_160_fu_9741_p1;
wire  signed [6:0] sext_ln691_128_fu_9728_p1;
wire   [6:0] add_ln691_197_fu_9802_p2;
wire  signed [6:0] sext_ln151_165_fu_9756_p1;
wire   [6:0] add_ln691_198_fu_9808_p2;
wire  signed [6:0] sext_ln151_161_fu_9744_p1;
wire  signed [6:0] sext_ln151_163_fu_9750_p1;
wire   [6:0] add_ln691_199_fu_9818_p2;
wire  signed [6:0] sext_ln151_162_fu_9747_p1;
wire  signed [6:0] sext_ln691_129_fu_9771_p1;
wire   [6:0] add_ln691_200_fu_9828_p2;
wire  signed [7:0] sext_ln691_134_fu_9834_p1;
wire  signed [7:0] sext_ln691_133_fu_9824_p1;
wire   [7:0] add_ln691_201_fu_9838_p2;
wire  signed [7:0] sext_ln691_132_fu_9814_p1;
wire  signed [6:0] sext_ln151_178_fu_9887_p1;
wire  signed [6:0] sext_ln151_179_fu_9890_p1;
wire   [6:0] add_ln691_204_fu_9896_p2;
wire  signed [10:0] sext_ln691_138_fu_9902_p1;
wire   [10:0] tmp_220_fu_9853_p4;
wire  signed [6:0] sext_ln151_174_fu_9875_p1;
wire  signed [6:0] sext_ln151_176_fu_9881_p1;
wire   [6:0] add_ln691_206_fu_9912_p2;
wire  signed [6:0] sext_ln151_177_fu_9884_p1;
wire  signed [6:0] sext_ln151_170_fu_9863_p1;
wire  signed [6:0] sext_ln691_136_fu_9850_p1;
wire   [6:0] add_ln691_209_fu_9924_p2;
wire  signed [6:0] sext_ln151_175_fu_9878_p1;
wire   [6:0] add_ln691_210_fu_9930_p2;
wire  signed [6:0] sext_ln151_171_fu_9866_p1;
wire  signed [6:0] sext_ln151_173_fu_9872_p1;
wire   [6:0] add_ln691_211_fu_9940_p2;
wire  signed [6:0] sext_ln151_172_fu_9869_p1;
wire  signed [6:0] sext_ln691_137_fu_9893_p1;
wire   [6:0] add_ln691_212_fu_9950_p2;
wire  signed [7:0] sext_ln691_142_fu_9956_p1;
wire  signed [7:0] sext_ln691_141_fu_9946_p1;
wire   [7:0] add_ln691_213_fu_9960_p2;
wire  signed [7:0] sext_ln691_140_fu_9936_p1;
wire  signed [6:0] sext_ln151_188_fu_10009_p1;
wire  signed [6:0] sext_ln151_189_fu_10012_p1;
wire   [6:0] add_ln691_216_fu_10018_p2;
wire  signed [10:0] sext_ln691_146_fu_10024_p1;
wire   [10:0] tmp_233_fu_9975_p4;
wire  signed [6:0] sext_ln151_184_fu_9997_p1;
wire  signed [6:0] sext_ln151_186_fu_10003_p1;
wire   [6:0] add_ln691_218_fu_10034_p2;
wire  signed [6:0] sext_ln151_187_fu_10006_p1;
wire  signed [6:0] sext_ln151_180_fu_9985_p1;
wire  signed [6:0] sext_ln691_144_fu_9972_p1;
wire   [6:0] add_ln691_221_fu_10046_p2;
wire  signed [6:0] sext_ln151_185_fu_10000_p1;
wire   [6:0] add_ln691_222_fu_10052_p2;
wire  signed [6:0] sext_ln151_181_fu_9988_p1;
wire  signed [6:0] sext_ln151_183_fu_9994_p1;
wire   [6:0] add_ln691_223_fu_10062_p2;
wire  signed [6:0] sext_ln151_182_fu_9991_p1;
wire  signed [6:0] sext_ln691_145_fu_10015_p1;
wire   [6:0] add_ln691_224_fu_10072_p2;
wire  signed [7:0] sext_ln691_150_fu_10078_p1;
wire  signed [7:0] sext_ln691_149_fu_10068_p1;
wire   [7:0] add_ln691_225_fu_10082_p2;
wire  signed [7:0] sext_ln691_148_fu_10058_p1;
wire  signed [6:0] sext_ln151_198_fu_10131_p1;
wire  signed [6:0] sext_ln151_199_fu_10134_p1;
wire   [6:0] add_ln691_228_fu_10140_p2;
wire  signed [10:0] sext_ln691_154_fu_10146_p1;
wire   [10:0] tmp_246_fu_10097_p4;
wire  signed [6:0] sext_ln151_194_fu_10119_p1;
wire  signed [6:0] sext_ln151_196_fu_10125_p1;
wire   [6:0] add_ln691_230_fu_10156_p2;
wire  signed [6:0] sext_ln151_197_fu_10128_p1;
wire  signed [6:0] sext_ln151_190_fu_10107_p1;
wire  signed [6:0] sext_ln691_152_fu_10094_p1;
wire   [6:0] add_ln691_233_fu_10168_p2;
wire  signed [6:0] sext_ln151_195_fu_10122_p1;
wire   [6:0] add_ln691_234_fu_10174_p2;
wire  signed [6:0] sext_ln151_191_fu_10110_p1;
wire  signed [6:0] sext_ln151_193_fu_10116_p1;
wire   [6:0] add_ln691_235_fu_10184_p2;
wire  signed [6:0] sext_ln151_192_fu_10113_p1;
wire  signed [6:0] sext_ln691_153_fu_10137_p1;
wire   [6:0] add_ln691_236_fu_10194_p2;
wire  signed [7:0] sext_ln691_158_fu_10200_p1;
wire  signed [7:0] sext_ln691_157_fu_10190_p1;
wire   [7:0] add_ln691_237_fu_10204_p2;
wire  signed [7:0] sext_ln691_156_fu_10180_p1;
wire  signed [6:0] sext_ln151_208_fu_10253_p1;
wire  signed [6:0] sext_ln151_209_fu_10256_p1;
wire   [6:0] add_ln691_240_fu_10262_p2;
wire  signed [10:0] sext_ln691_162_fu_10268_p1;
wire   [10:0] tmp_259_fu_10219_p4;
wire  signed [6:0] sext_ln151_204_fu_10241_p1;
wire  signed [6:0] sext_ln151_206_fu_10247_p1;
wire   [6:0] add_ln691_242_fu_10278_p2;
wire  signed [6:0] sext_ln151_207_fu_10250_p1;
wire  signed [6:0] sext_ln151_200_fu_10229_p1;
wire  signed [6:0] sext_ln691_160_fu_10216_p1;
wire   [6:0] add_ln691_245_fu_10290_p2;
wire  signed [6:0] sext_ln151_205_fu_10244_p1;
wire   [6:0] add_ln691_246_fu_10296_p2;
wire  signed [6:0] sext_ln151_201_fu_10232_p1;
wire  signed [6:0] sext_ln151_203_fu_10238_p1;
wire   [6:0] add_ln691_247_fu_10306_p2;
wire  signed [6:0] sext_ln151_202_fu_10235_p1;
wire  signed [6:0] sext_ln691_161_fu_10259_p1;
wire   [6:0] add_ln691_248_fu_10316_p2;
wire  signed [7:0] sext_ln691_166_fu_10322_p1;
wire  signed [7:0] sext_ln691_165_fu_10312_p1;
wire   [7:0] add_ln691_249_fu_10326_p2;
wire  signed [7:0] sext_ln691_164_fu_10302_p1;
wire  signed [6:0] sext_ln151_218_fu_10375_p1;
wire  signed [6:0] sext_ln151_219_fu_10378_p1;
wire   [6:0] add_ln691_252_fu_10384_p2;
wire  signed [10:0] sext_ln691_170_fu_10390_p1;
wire   [10:0] tmp_272_fu_10341_p4;
wire  signed [6:0] sext_ln151_214_fu_10363_p1;
wire  signed [6:0] sext_ln151_216_fu_10369_p1;
wire   [6:0] add_ln691_254_fu_10400_p2;
wire  signed [6:0] sext_ln151_217_fu_10372_p1;
wire  signed [6:0] sext_ln151_210_fu_10351_p1;
wire  signed [6:0] sext_ln691_168_fu_10338_p1;
wire   [6:0] add_ln691_257_fu_10412_p2;
wire  signed [6:0] sext_ln151_215_fu_10366_p1;
wire   [6:0] add_ln691_258_fu_10418_p2;
wire  signed [6:0] sext_ln151_211_fu_10354_p1;
wire  signed [6:0] sext_ln151_213_fu_10360_p1;
wire   [6:0] add_ln691_259_fu_10428_p2;
wire  signed [6:0] sext_ln151_212_fu_10357_p1;
wire  signed [6:0] sext_ln691_169_fu_10381_p1;
wire   [6:0] add_ln691_260_fu_10438_p2;
wire  signed [7:0] sext_ln691_174_fu_10444_p1;
wire  signed [7:0] sext_ln691_173_fu_10434_p1;
wire   [7:0] add_ln691_261_fu_10448_p2;
wire  signed [7:0] sext_ln691_172_fu_10424_p1;
wire  signed [6:0] sext_ln151_228_fu_10497_p1;
wire  signed [6:0] sext_ln151_229_fu_10500_p1;
wire   [6:0] add_ln691_264_fu_10506_p2;
wire  signed [10:0] sext_ln691_178_fu_10512_p1;
wire   [10:0] tmp_285_fu_10463_p4;
wire  signed [6:0] sext_ln151_224_fu_10485_p1;
wire  signed [6:0] sext_ln151_226_fu_10491_p1;
wire   [6:0] add_ln691_266_fu_10522_p2;
wire  signed [6:0] sext_ln151_227_fu_10494_p1;
wire  signed [6:0] sext_ln151_220_fu_10473_p1;
wire  signed [6:0] sext_ln691_176_fu_10460_p1;
wire   [6:0] add_ln691_269_fu_10534_p2;
wire  signed [6:0] sext_ln151_225_fu_10488_p1;
wire   [6:0] add_ln691_270_fu_10540_p2;
wire  signed [6:0] sext_ln151_221_fu_10476_p1;
wire  signed [6:0] sext_ln151_223_fu_10482_p1;
wire   [6:0] add_ln691_271_fu_10550_p2;
wire  signed [6:0] sext_ln151_222_fu_10479_p1;
wire  signed [6:0] sext_ln691_177_fu_10503_p1;
wire   [6:0] add_ln691_272_fu_10560_p2;
wire  signed [7:0] sext_ln691_182_fu_10566_p1;
wire  signed [7:0] sext_ln691_181_fu_10556_p1;
wire   [7:0] add_ln691_273_fu_10570_p2;
wire  signed [7:0] sext_ln691_180_fu_10546_p1;
wire  signed [6:0] sext_ln151_238_fu_10619_p1;
wire  signed [6:0] sext_ln151_239_fu_10622_p1;
wire   [6:0] add_ln691_276_fu_10628_p2;
wire  signed [10:0] sext_ln691_186_fu_10634_p1;
wire   [10:0] tmp_298_fu_10585_p4;
wire  signed [6:0] sext_ln151_234_fu_10607_p1;
wire  signed [6:0] sext_ln151_236_fu_10613_p1;
wire   [6:0] add_ln691_278_fu_10644_p2;
wire  signed [6:0] sext_ln151_237_fu_10616_p1;
wire  signed [6:0] sext_ln151_230_fu_10595_p1;
wire  signed [6:0] sext_ln691_184_fu_10582_p1;
wire   [6:0] add_ln691_281_fu_10656_p2;
wire  signed [6:0] sext_ln151_235_fu_10610_p1;
wire   [6:0] add_ln691_282_fu_10662_p2;
wire  signed [6:0] sext_ln151_231_fu_10598_p1;
wire  signed [6:0] sext_ln151_233_fu_10604_p1;
wire   [6:0] add_ln691_283_fu_10672_p2;
wire  signed [6:0] sext_ln151_232_fu_10601_p1;
wire  signed [6:0] sext_ln691_185_fu_10625_p1;
wire   [6:0] add_ln691_284_fu_10682_p2;
wire  signed [7:0] sext_ln691_190_fu_10688_p1;
wire  signed [7:0] sext_ln691_189_fu_10678_p1;
wire   [7:0] add_ln691_285_fu_10692_p2;
wire  signed [7:0] sext_ln691_188_fu_10668_p1;
wire  signed [2:0] mul_ln1345_288_fu_10707_p0;
wire  signed [2:0] mul_ln1345_288_fu_10707_p1;
wire  signed [5:0] sext_ln1345_300_fu_10704_p1;
wire  signed [5:0] mul_ln1345_288_fu_10707_p2;
wire  signed [2:0] mul_ln1345_289_fu_10729_p0;
wire  signed [2:0] mul_ln1345_289_fu_10729_p1;
wire  signed [5:0] sext_ln1345_301_fu_10726_p1;
wire  signed [5:0] mul_ln1345_289_fu_10729_p2;
wire  signed [2:0] mul_ln1345_290_fu_10741_p0;
wire  signed [2:0] mul_ln1345_290_fu_10741_p1;
wire  signed [5:0] sext_ln1345_302_fu_10738_p1;
wire  signed [5:0] mul_ln1345_290_fu_10741_p2;
wire  signed [2:0] mul_ln1345_291_fu_10753_p0;
wire  signed [2:0] mul_ln1345_291_fu_10753_p1;
wire  signed [5:0] sext_ln1345_303_fu_10750_p1;
wire  signed [5:0] mul_ln1345_291_fu_10753_p2;
wire  signed [2:0] mul_ln1345_292_fu_10765_p0;
wire  signed [2:0] mul_ln1345_292_fu_10765_p1;
wire  signed [5:0] sext_ln1345_304_fu_10762_p1;
wire  signed [5:0] mul_ln1345_292_fu_10765_p2;
wire  signed [2:0] mul_ln1345_293_fu_10777_p0;
wire  signed [2:0] mul_ln1345_293_fu_10777_p1;
wire  signed [5:0] sext_ln1345_305_fu_10774_p1;
wire  signed [5:0] mul_ln1345_293_fu_10777_p2;
wire  signed [2:0] mul_ln1345_294_fu_10789_p0;
wire  signed [2:0] mul_ln1345_294_fu_10789_p1;
wire  signed [5:0] sext_ln1345_306_fu_10786_p1;
wire  signed [5:0] mul_ln1345_294_fu_10789_p2;
wire  signed [2:0] mul_ln1345_295_fu_10801_p0;
wire  signed [2:0] mul_ln1345_295_fu_10801_p1;
wire  signed [5:0] sext_ln1345_307_fu_10798_p1;
wire  signed [5:0] mul_ln1345_295_fu_10801_p2;
wire  signed [2:0] mul_ln1345_296_fu_10813_p0;
wire  signed [2:0] mul_ln1345_296_fu_10813_p1;
wire  signed [5:0] sext_ln1345_308_fu_10810_p1;
wire  signed [5:0] mul_ln1345_296_fu_10813_p2;
wire  signed [2:0] mul_ln1345_297_fu_10825_p0;
wire  signed [2:0] mul_ln1345_297_fu_10825_p1;
wire  signed [5:0] sext_ln1345_309_fu_10822_p1;
wire  signed [5:0] mul_ln1345_297_fu_10825_p2;
wire  signed [2:0] mul_ln1345_298_fu_10837_p0;
wire  signed [2:0] mul_ln1345_298_fu_10837_p1;
wire  signed [5:0] sext_ln1345_310_fu_10834_p1;
wire  signed [5:0] mul_ln1345_298_fu_10837_p2;
wire  signed [2:0] mul_ln1345_299_fu_10849_p0;
wire  signed [2:0] mul_ln1345_299_fu_10849_p1;
wire  signed [5:0] sext_ln1345_311_fu_10846_p1;
wire  signed [5:0] mul_ln1345_299_fu_10849_p2;
wire  signed [6:0] sext_ln151_248_fu_10830_p1;
wire  signed [6:0] sext_ln151_249_fu_10842_p1;
wire   [6:0] add_ln691_288_fu_10858_p2;
wire  signed [10:0] sext_ln691_194_fu_10864_p1;
wire   [10:0] tmp_310_fu_10716_p4;
wire  signed [6:0] sext_ln151_244_fu_10782_p1;
wire  signed [6:0] sext_ln151_246_fu_10806_p1;
wire   [6:0] add_ln691_290_fu_10874_p2;
wire  signed [6:0] sext_ln151_247_fu_10818_p1;
wire  signed [6:0] sext_ln151_240_fu_10734_p1;
wire  signed [6:0] sext_ln691_192_fu_10712_p1;
wire   [6:0] add_ln691_293_fu_10886_p2;
wire  signed [6:0] sext_ln151_245_fu_10794_p1;
wire   [6:0] add_ln691_294_fu_10892_p2;
wire  signed [6:0] sext_ln151_241_fu_10746_p1;
wire  signed [6:0] sext_ln151_243_fu_10770_p1;
wire   [6:0] add_ln691_295_fu_10902_p2;
wire  signed [6:0] sext_ln151_242_fu_10758_p1;
wire  signed [6:0] sext_ln691_193_fu_10854_p1;
wire   [6:0] add_ln691_296_fu_10912_p2;
wire  signed [7:0] sext_ln691_198_fu_10918_p1;
wire  signed [7:0] sext_ln691_197_fu_10908_p1;
wire   [7:0] add_ln691_297_fu_10922_p2;
wire  signed [7:0] sext_ln691_196_fu_10898_p1;
wire  signed [2:0] mul_ln1345_300_fu_10934_p0;
wire  signed [2:0] mul_ln1345_300_fu_10934_p1;
wire  signed [5:0] mul_ln1345_300_fu_10934_p2;
wire  signed [2:0] mul_ln1345_301_fu_10953_p0;
wire  signed [2:0] mul_ln1345_301_fu_10953_p1;
wire  signed [5:0] mul_ln1345_301_fu_10953_p2;
wire  signed [2:0] mul_ln1345_302_fu_10962_p0;
wire  signed [2:0] mul_ln1345_302_fu_10962_p1;
wire  signed [5:0] mul_ln1345_302_fu_10962_p2;
wire  signed [2:0] mul_ln1345_303_fu_10971_p0;
wire  signed [2:0] mul_ln1345_303_fu_10971_p1;
wire  signed [5:0] mul_ln1345_303_fu_10971_p2;
wire  signed [2:0] mul_ln1345_304_fu_10980_p0;
wire  signed [2:0] mul_ln1345_304_fu_10980_p1;
wire  signed [5:0] mul_ln1345_304_fu_10980_p2;
wire  signed [2:0] mul_ln1345_305_fu_10989_p0;
wire  signed [2:0] mul_ln1345_305_fu_10989_p1;
wire  signed [5:0] mul_ln1345_305_fu_10989_p2;
wire  signed [2:0] mul_ln1345_306_fu_10998_p0;
wire  signed [2:0] mul_ln1345_306_fu_10998_p1;
wire  signed [5:0] mul_ln1345_306_fu_10998_p2;
wire  signed [2:0] mul_ln1345_307_fu_11007_p0;
wire  signed [2:0] mul_ln1345_307_fu_11007_p1;
wire  signed [5:0] mul_ln1345_307_fu_11007_p2;
wire  signed [2:0] mul_ln1345_308_fu_11016_p0;
wire  signed [2:0] mul_ln1345_308_fu_11016_p1;
wire  signed [5:0] mul_ln1345_308_fu_11016_p2;
wire  signed [2:0] mul_ln1345_309_fu_11025_p0;
wire  signed [2:0] mul_ln1345_309_fu_11025_p1;
wire  signed [5:0] mul_ln1345_309_fu_11025_p2;
wire  signed [2:0] mul_ln1345_310_fu_11034_p0;
wire  signed [2:0] mul_ln1345_310_fu_11034_p1;
wire  signed [5:0] mul_ln1345_310_fu_11034_p2;
wire  signed [2:0] mul_ln1345_311_fu_11043_p0;
wire  signed [2:0] mul_ln1345_311_fu_11043_p1;
wire  signed [5:0] mul_ln1345_311_fu_11043_p2;
wire  signed [6:0] sext_ln151_258_fu_11030_p1;
wire  signed [6:0] sext_ln151_259_fu_11039_p1;
wire   [6:0] add_ln691_300_fu_11052_p2;
wire  signed [10:0] sext_ln691_202_fu_11058_p1;
wire   [10:0] tmp_311_fu_10943_p4;
wire  signed [6:0] sext_ln151_254_fu_10994_p1;
wire  signed [6:0] sext_ln151_256_fu_11012_p1;
wire   [6:0] add_ln691_302_fu_11068_p2;
wire  signed [6:0] sext_ln151_257_fu_11021_p1;
wire  signed [6:0] sext_ln151_250_fu_10958_p1;
wire  signed [6:0] sext_ln691_200_fu_10939_p1;
wire   [6:0] add_ln691_305_fu_11080_p2;
wire  signed [6:0] sext_ln151_255_fu_11003_p1;
wire   [6:0] add_ln691_306_fu_11086_p2;
wire  signed [6:0] sext_ln151_251_fu_10967_p1;
wire  signed [6:0] sext_ln151_253_fu_10985_p1;
wire   [6:0] add_ln691_307_fu_11096_p2;
wire  signed [6:0] sext_ln151_252_fu_10976_p1;
wire  signed [6:0] sext_ln691_201_fu_11048_p1;
wire   [6:0] add_ln691_308_fu_11106_p2;
wire  signed [7:0] sext_ln691_206_fu_11112_p1;
wire  signed [7:0] sext_ln691_205_fu_11102_p1;
wire   [7:0] add_ln691_309_fu_11116_p2;
wire  signed [7:0] sext_ln691_204_fu_11092_p1;
wire  signed [2:0] mul_ln1345_312_fu_11128_p0;
wire  signed [2:0] mul_ln1345_312_fu_11128_p1;
wire  signed [5:0] mul_ln1345_312_fu_11128_p2;
wire  signed [2:0] mul_ln1345_313_fu_11147_p0;
wire  signed [2:0] mul_ln1345_313_fu_11147_p1;
wire  signed [5:0] mul_ln1345_313_fu_11147_p2;
wire  signed [2:0] mul_ln1345_314_fu_11156_p0;
wire  signed [2:0] mul_ln1345_314_fu_11156_p1;
wire  signed [5:0] mul_ln1345_314_fu_11156_p2;
wire  signed [2:0] mul_ln1345_315_fu_11165_p0;
wire  signed [2:0] mul_ln1345_315_fu_11165_p1;
wire  signed [5:0] mul_ln1345_315_fu_11165_p2;
wire  signed [2:0] mul_ln1345_316_fu_11174_p0;
wire  signed [2:0] mul_ln1345_316_fu_11174_p1;
wire  signed [5:0] mul_ln1345_316_fu_11174_p2;
wire  signed [2:0] mul_ln1345_317_fu_11183_p0;
wire  signed [2:0] mul_ln1345_317_fu_11183_p1;
wire  signed [5:0] mul_ln1345_317_fu_11183_p2;
wire  signed [2:0] mul_ln1345_318_fu_11192_p0;
wire  signed [2:0] mul_ln1345_318_fu_11192_p1;
wire  signed [5:0] mul_ln1345_318_fu_11192_p2;
wire  signed [2:0] mul_ln1345_319_fu_11201_p0;
wire  signed [2:0] mul_ln1345_319_fu_11201_p1;
wire  signed [5:0] mul_ln1345_319_fu_11201_p2;
wire  signed [2:0] mul_ln1345_320_fu_11210_p0;
wire  signed [2:0] mul_ln1345_320_fu_11210_p1;
wire  signed [5:0] mul_ln1345_320_fu_11210_p2;
wire  signed [2:0] mul_ln1345_321_fu_11219_p0;
wire  signed [2:0] mul_ln1345_321_fu_11219_p1;
wire  signed [5:0] mul_ln1345_321_fu_11219_p2;
wire  signed [2:0] mul_ln1345_322_fu_11228_p0;
wire  signed [2:0] mul_ln1345_322_fu_11228_p1;
wire  signed [5:0] mul_ln1345_322_fu_11228_p2;
wire  signed [2:0] mul_ln1345_323_fu_11237_p0;
wire  signed [2:0] mul_ln1345_323_fu_11237_p1;
wire  signed [5:0] mul_ln1345_323_fu_11237_p2;
wire  signed [6:0] sext_ln151_268_fu_11224_p1;
wire  signed [6:0] sext_ln151_269_fu_11233_p1;
wire   [6:0] add_ln691_312_fu_11246_p2;
wire  signed [10:0] sext_ln691_210_fu_11252_p1;
wire   [10:0] tmp_312_fu_11137_p4;
wire  signed [6:0] sext_ln151_264_fu_11188_p1;
wire  signed [6:0] sext_ln151_266_fu_11206_p1;
wire   [6:0] add_ln691_314_fu_11262_p2;
wire  signed [6:0] sext_ln151_267_fu_11215_p1;
wire  signed [6:0] sext_ln151_260_fu_11152_p1;
wire  signed [6:0] sext_ln691_208_fu_11133_p1;
wire   [6:0] add_ln691_317_fu_11274_p2;
wire  signed [6:0] sext_ln151_265_fu_11197_p1;
wire   [6:0] add_ln691_318_fu_11280_p2;
wire  signed [6:0] sext_ln151_261_fu_11161_p1;
wire  signed [6:0] sext_ln151_263_fu_11179_p1;
wire   [6:0] add_ln691_319_fu_11290_p2;
wire  signed [6:0] sext_ln151_262_fu_11170_p1;
wire  signed [6:0] sext_ln691_209_fu_11242_p1;
wire   [6:0] add_ln691_320_fu_11300_p2;
wire  signed [7:0] sext_ln691_214_fu_11306_p1;
wire  signed [7:0] sext_ln691_213_fu_11296_p1;
wire   [7:0] add_ln691_321_fu_11310_p2;
wire  signed [7:0] sext_ln691_212_fu_11286_p1;
wire  signed [2:0] mul_ln1345_324_fu_11322_p0;
wire  signed [2:0] mul_ln1345_324_fu_11322_p1;
wire  signed [5:0] mul_ln1345_324_fu_11322_p2;
wire  signed [2:0] mul_ln1345_325_fu_11341_p0;
wire  signed [2:0] mul_ln1345_325_fu_11341_p1;
wire  signed [5:0] mul_ln1345_325_fu_11341_p2;
wire  signed [2:0] mul_ln1345_326_fu_11350_p0;
wire  signed [2:0] mul_ln1345_326_fu_11350_p1;
wire  signed [5:0] mul_ln1345_326_fu_11350_p2;
wire  signed [2:0] mul_ln1345_327_fu_11359_p0;
wire  signed [2:0] mul_ln1345_327_fu_11359_p1;
wire  signed [5:0] mul_ln1345_327_fu_11359_p2;
wire  signed [2:0] mul_ln1345_328_fu_11368_p0;
wire  signed [2:0] mul_ln1345_328_fu_11368_p1;
wire  signed [5:0] mul_ln1345_328_fu_11368_p2;
wire  signed [2:0] mul_ln1345_329_fu_11377_p0;
wire  signed [2:0] mul_ln1345_329_fu_11377_p1;
wire  signed [5:0] mul_ln1345_329_fu_11377_p2;
wire  signed [2:0] mul_ln1345_330_fu_11386_p0;
wire  signed [2:0] mul_ln1345_330_fu_11386_p1;
wire  signed [5:0] mul_ln1345_330_fu_11386_p2;
wire  signed [2:0] mul_ln1345_331_fu_11395_p0;
wire  signed [2:0] mul_ln1345_331_fu_11395_p1;
wire  signed [5:0] mul_ln1345_331_fu_11395_p2;
wire  signed [2:0] mul_ln1345_332_fu_11404_p0;
wire  signed [2:0] mul_ln1345_332_fu_11404_p1;
wire  signed [5:0] mul_ln1345_332_fu_11404_p2;
wire  signed [2:0] mul_ln1345_333_fu_11413_p0;
wire  signed [2:0] mul_ln1345_333_fu_11413_p1;
wire  signed [5:0] mul_ln1345_333_fu_11413_p2;
wire  signed [2:0] mul_ln1345_334_fu_11422_p0;
wire  signed [2:0] mul_ln1345_334_fu_11422_p1;
wire  signed [5:0] mul_ln1345_334_fu_11422_p2;
wire  signed [2:0] mul_ln1345_335_fu_11431_p0;
wire  signed [2:0] mul_ln1345_335_fu_11431_p1;
wire  signed [5:0] mul_ln1345_335_fu_11431_p2;
wire  signed [6:0] sext_ln151_278_fu_11418_p1;
wire  signed [6:0] sext_ln151_279_fu_11427_p1;
wire   [6:0] add_ln691_324_fu_11440_p2;
wire  signed [10:0] sext_ln691_218_fu_11446_p1;
wire   [10:0] tmp_313_fu_11331_p4;
wire  signed [6:0] sext_ln151_274_fu_11382_p1;
wire  signed [6:0] sext_ln151_276_fu_11400_p1;
wire   [6:0] add_ln691_326_fu_11456_p2;
wire  signed [6:0] sext_ln151_277_fu_11409_p1;
wire  signed [6:0] sext_ln151_270_fu_11346_p1;
wire  signed [6:0] sext_ln691_216_fu_11327_p1;
wire   [6:0] add_ln691_329_fu_11468_p2;
wire  signed [6:0] sext_ln151_275_fu_11391_p1;
wire   [6:0] add_ln691_330_fu_11474_p2;
wire  signed [6:0] sext_ln151_271_fu_11355_p1;
wire  signed [6:0] sext_ln151_273_fu_11373_p1;
wire   [6:0] add_ln691_331_fu_11484_p2;
wire  signed [6:0] sext_ln151_272_fu_11364_p1;
wire  signed [6:0] sext_ln691_217_fu_11436_p1;
wire   [6:0] add_ln691_332_fu_11494_p2;
wire  signed [7:0] sext_ln691_222_fu_11500_p1;
wire  signed [7:0] sext_ln691_221_fu_11490_p1;
wire   [7:0] add_ln691_333_fu_11504_p2;
wire  signed [7:0] sext_ln691_220_fu_11480_p1;
wire  signed [2:0] mul_ln1345_336_fu_11516_p0;
wire  signed [2:0] mul_ln1345_336_fu_11516_p1;
wire  signed [5:0] mul_ln1345_336_fu_11516_p2;
wire  signed [2:0] mul_ln1345_337_fu_11535_p0;
wire  signed [2:0] mul_ln1345_337_fu_11535_p1;
wire  signed [5:0] mul_ln1345_337_fu_11535_p2;
wire  signed [2:0] mul_ln1345_338_fu_11544_p0;
wire  signed [2:0] mul_ln1345_338_fu_11544_p1;
wire  signed [5:0] mul_ln1345_338_fu_11544_p2;
wire  signed [2:0] mul_ln1345_339_fu_11553_p0;
wire  signed [2:0] mul_ln1345_339_fu_11553_p1;
wire  signed [5:0] mul_ln1345_339_fu_11553_p2;
wire  signed [2:0] mul_ln1345_340_fu_11562_p0;
wire  signed [2:0] mul_ln1345_340_fu_11562_p1;
wire  signed [5:0] mul_ln1345_340_fu_11562_p2;
wire  signed [2:0] mul_ln1345_341_fu_11571_p0;
wire  signed [2:0] mul_ln1345_341_fu_11571_p1;
wire  signed [5:0] mul_ln1345_341_fu_11571_p2;
wire  signed [2:0] mul_ln1345_342_fu_11580_p0;
wire  signed [2:0] mul_ln1345_342_fu_11580_p1;
wire  signed [5:0] mul_ln1345_342_fu_11580_p2;
wire  signed [2:0] mul_ln1345_343_fu_11589_p0;
wire  signed [2:0] mul_ln1345_343_fu_11589_p1;
wire  signed [5:0] mul_ln1345_343_fu_11589_p2;
wire  signed [2:0] mul_ln1345_344_fu_11598_p0;
wire  signed [2:0] mul_ln1345_344_fu_11598_p1;
wire  signed [5:0] mul_ln1345_344_fu_11598_p2;
wire  signed [2:0] mul_ln1345_345_fu_11607_p0;
wire  signed [2:0] mul_ln1345_345_fu_11607_p1;
wire  signed [5:0] mul_ln1345_345_fu_11607_p2;
wire  signed [2:0] mul_ln1345_346_fu_11616_p0;
wire  signed [2:0] mul_ln1345_346_fu_11616_p1;
wire  signed [5:0] mul_ln1345_346_fu_11616_p2;
wire  signed [2:0] mul_ln1345_347_fu_11625_p0;
wire  signed [2:0] mul_ln1345_347_fu_11625_p1;
wire  signed [5:0] mul_ln1345_347_fu_11625_p2;
wire  signed [6:0] sext_ln151_288_fu_11612_p1;
wire  signed [6:0] sext_ln151_289_fu_11621_p1;
wire   [6:0] add_ln691_336_fu_11634_p2;
wire  signed [10:0] sext_ln691_226_fu_11640_p1;
wire   [10:0] tmp_314_fu_11525_p4;
wire  signed [6:0] sext_ln151_284_fu_11576_p1;
wire  signed [6:0] sext_ln151_286_fu_11594_p1;
wire   [6:0] add_ln691_338_fu_11650_p2;
wire  signed [6:0] sext_ln151_287_fu_11603_p1;
wire  signed [6:0] sext_ln151_280_fu_11540_p1;
wire  signed [6:0] sext_ln691_224_fu_11521_p1;
wire   [6:0] add_ln691_341_fu_11662_p2;
wire  signed [6:0] sext_ln151_285_fu_11585_p1;
wire   [6:0] add_ln691_342_fu_11668_p2;
wire  signed [6:0] sext_ln151_281_fu_11549_p1;
wire  signed [6:0] sext_ln151_283_fu_11567_p1;
wire   [6:0] add_ln691_343_fu_11678_p2;
wire  signed [6:0] sext_ln151_282_fu_11558_p1;
wire  signed [6:0] sext_ln691_225_fu_11630_p1;
wire   [6:0] add_ln691_344_fu_11688_p2;
wire  signed [7:0] sext_ln691_230_fu_11694_p1;
wire  signed [7:0] sext_ln691_229_fu_11684_p1;
wire   [7:0] add_ln691_345_fu_11698_p2;
wire  signed [7:0] sext_ln691_228_fu_11674_p1;
wire  signed [2:0] mul_ln1345_348_fu_11710_p0;
wire  signed [2:0] mul_ln1345_348_fu_11710_p1;
wire  signed [5:0] mul_ln1345_348_fu_11710_p2;
wire  signed [2:0] mul_ln1345_349_fu_11729_p0;
wire  signed [2:0] mul_ln1345_349_fu_11729_p1;
wire  signed [5:0] mul_ln1345_349_fu_11729_p2;
wire  signed [2:0] mul_ln1345_350_fu_11738_p0;
wire  signed [2:0] mul_ln1345_350_fu_11738_p1;
wire  signed [5:0] mul_ln1345_350_fu_11738_p2;
wire  signed [2:0] mul_ln1345_351_fu_11747_p0;
wire  signed [2:0] mul_ln1345_351_fu_11747_p1;
wire  signed [5:0] mul_ln1345_351_fu_11747_p2;
wire  signed [2:0] mul_ln1345_352_fu_11756_p0;
wire  signed [2:0] mul_ln1345_352_fu_11756_p1;
wire  signed [5:0] mul_ln1345_352_fu_11756_p2;
wire  signed [2:0] mul_ln1345_353_fu_11765_p0;
wire  signed [2:0] mul_ln1345_353_fu_11765_p1;
wire  signed [5:0] mul_ln1345_353_fu_11765_p2;
wire  signed [2:0] mul_ln1345_354_fu_11774_p0;
wire  signed [2:0] mul_ln1345_354_fu_11774_p1;
wire  signed [5:0] mul_ln1345_354_fu_11774_p2;
wire  signed [2:0] mul_ln1345_355_fu_11783_p0;
wire  signed [2:0] mul_ln1345_355_fu_11783_p1;
wire  signed [5:0] mul_ln1345_355_fu_11783_p2;
wire  signed [2:0] mul_ln1345_356_fu_11792_p0;
wire  signed [2:0] mul_ln1345_356_fu_11792_p1;
wire  signed [5:0] mul_ln1345_356_fu_11792_p2;
wire  signed [2:0] mul_ln1345_357_fu_11801_p0;
wire  signed [2:0] mul_ln1345_357_fu_11801_p1;
wire  signed [5:0] mul_ln1345_357_fu_11801_p2;
wire  signed [2:0] mul_ln1345_358_fu_11810_p0;
wire  signed [2:0] mul_ln1345_358_fu_11810_p1;
wire  signed [5:0] mul_ln1345_358_fu_11810_p2;
wire  signed [2:0] mul_ln1345_359_fu_11819_p0;
wire  signed [2:0] mul_ln1345_359_fu_11819_p1;
wire  signed [5:0] mul_ln1345_359_fu_11819_p2;
wire  signed [6:0] sext_ln151_298_fu_11806_p1;
wire  signed [6:0] sext_ln151_299_fu_11815_p1;
wire   [6:0] add_ln691_348_fu_11828_p2;
wire  signed [10:0] sext_ln691_234_fu_11834_p1;
wire   [10:0] tmp_315_fu_11719_p4;
wire  signed [6:0] sext_ln151_294_fu_11770_p1;
wire  signed [6:0] sext_ln151_296_fu_11788_p1;
wire   [6:0] add_ln691_350_fu_11844_p2;
wire  signed [6:0] sext_ln151_297_fu_11797_p1;
wire  signed [6:0] sext_ln151_290_fu_11734_p1;
wire  signed [6:0] sext_ln691_232_fu_11715_p1;
wire   [6:0] add_ln691_353_fu_11856_p2;
wire  signed [6:0] sext_ln151_295_fu_11779_p1;
wire   [6:0] add_ln691_354_fu_11862_p2;
wire  signed [6:0] sext_ln151_291_fu_11743_p1;
wire  signed [6:0] sext_ln151_293_fu_11761_p1;
wire   [6:0] add_ln691_355_fu_11872_p2;
wire  signed [6:0] sext_ln151_292_fu_11752_p1;
wire  signed [6:0] sext_ln691_233_fu_11824_p1;
wire   [6:0] add_ln691_356_fu_11882_p2;
wire  signed [7:0] sext_ln691_238_fu_11888_p1;
wire  signed [7:0] sext_ln691_237_fu_11878_p1;
wire   [7:0] add_ln691_357_fu_11892_p2;
wire  signed [7:0] sext_ln691_236_fu_11868_p1;
wire  signed [2:0] mul_ln1345_360_fu_11904_p0;
wire  signed [2:0] mul_ln1345_360_fu_11904_p1;
wire  signed [5:0] mul_ln1345_360_fu_11904_p2;
wire  signed [2:0] mul_ln1345_361_fu_11923_p0;
wire  signed [2:0] mul_ln1345_361_fu_11923_p1;
wire  signed [5:0] mul_ln1345_361_fu_11923_p2;
wire  signed [2:0] mul_ln1345_362_fu_11932_p0;
wire  signed [2:0] mul_ln1345_362_fu_11932_p1;
wire  signed [5:0] mul_ln1345_362_fu_11932_p2;
wire  signed [2:0] mul_ln1345_363_fu_11941_p0;
wire  signed [2:0] mul_ln1345_363_fu_11941_p1;
wire  signed [5:0] mul_ln1345_363_fu_11941_p2;
wire  signed [2:0] mul_ln1345_364_fu_11950_p0;
wire  signed [2:0] mul_ln1345_364_fu_11950_p1;
wire  signed [5:0] mul_ln1345_364_fu_11950_p2;
wire  signed [2:0] mul_ln1345_365_fu_11959_p0;
wire  signed [2:0] mul_ln1345_365_fu_11959_p1;
wire  signed [5:0] mul_ln1345_365_fu_11959_p2;
wire  signed [2:0] mul_ln1345_366_fu_11968_p0;
wire  signed [2:0] mul_ln1345_366_fu_11968_p1;
wire  signed [5:0] mul_ln1345_366_fu_11968_p2;
wire  signed [2:0] mul_ln1345_367_fu_11977_p0;
wire  signed [2:0] mul_ln1345_367_fu_11977_p1;
wire  signed [5:0] mul_ln1345_367_fu_11977_p2;
wire  signed [2:0] mul_ln1345_368_fu_11986_p0;
wire  signed [2:0] mul_ln1345_368_fu_11986_p1;
wire  signed [5:0] mul_ln1345_368_fu_11986_p2;
wire  signed [2:0] mul_ln1345_369_fu_11995_p0;
wire  signed [2:0] mul_ln1345_369_fu_11995_p1;
wire  signed [5:0] mul_ln1345_369_fu_11995_p2;
wire  signed [2:0] mul_ln1345_370_fu_12004_p0;
wire  signed [2:0] mul_ln1345_370_fu_12004_p1;
wire  signed [5:0] mul_ln1345_370_fu_12004_p2;
wire  signed [2:0] mul_ln1345_371_fu_12013_p0;
wire  signed [2:0] mul_ln1345_371_fu_12013_p1;
wire  signed [5:0] mul_ln1345_371_fu_12013_p2;
wire  signed [6:0] sext_ln151_308_fu_12000_p1;
wire  signed [6:0] sext_ln151_309_fu_12009_p1;
wire   [6:0] add_ln691_360_fu_12022_p2;
wire  signed [10:0] sext_ln691_242_fu_12028_p1;
wire   [10:0] tmp_316_fu_11913_p4;
wire  signed [6:0] sext_ln151_304_fu_11964_p1;
wire  signed [6:0] sext_ln151_306_fu_11982_p1;
wire   [6:0] add_ln691_362_fu_12038_p2;
wire  signed [6:0] sext_ln151_307_fu_11991_p1;
wire  signed [6:0] sext_ln151_300_fu_11928_p1;
wire  signed [6:0] sext_ln691_240_fu_11909_p1;
wire   [6:0] add_ln691_365_fu_12050_p2;
wire  signed [6:0] sext_ln151_305_fu_11973_p1;
wire   [6:0] add_ln691_366_fu_12056_p2;
wire  signed [6:0] sext_ln151_301_fu_11937_p1;
wire  signed [6:0] sext_ln151_303_fu_11955_p1;
wire   [6:0] add_ln691_367_fu_12066_p2;
wire  signed [6:0] sext_ln151_302_fu_11946_p1;
wire  signed [6:0] sext_ln691_241_fu_12018_p1;
wire   [6:0] add_ln691_368_fu_12076_p2;
wire  signed [7:0] sext_ln691_246_fu_12082_p1;
wire  signed [7:0] sext_ln691_245_fu_12072_p1;
wire   [7:0] add_ln691_369_fu_12086_p2;
wire  signed [7:0] sext_ln691_244_fu_12062_p1;
wire  signed [2:0] mul_ln1345_372_fu_12098_p0;
wire  signed [2:0] mul_ln1345_372_fu_12098_p1;
wire  signed [5:0] mul_ln1345_372_fu_12098_p2;
wire  signed [2:0] mul_ln1345_373_fu_12117_p0;
wire  signed [2:0] mul_ln1345_373_fu_12117_p1;
wire  signed [5:0] mul_ln1345_373_fu_12117_p2;
wire  signed [2:0] mul_ln1345_374_fu_12126_p0;
wire  signed [2:0] mul_ln1345_374_fu_12126_p1;
wire  signed [5:0] mul_ln1345_374_fu_12126_p2;
wire  signed [2:0] mul_ln1345_375_fu_12135_p0;
wire  signed [2:0] mul_ln1345_375_fu_12135_p1;
wire  signed [5:0] mul_ln1345_375_fu_12135_p2;
wire  signed [2:0] mul_ln1345_376_fu_12144_p0;
wire  signed [2:0] mul_ln1345_376_fu_12144_p1;
wire  signed [5:0] mul_ln1345_376_fu_12144_p2;
wire  signed [2:0] mul_ln1345_377_fu_12153_p0;
wire  signed [2:0] mul_ln1345_377_fu_12153_p1;
wire  signed [5:0] mul_ln1345_377_fu_12153_p2;
wire  signed [2:0] mul_ln1345_378_fu_12162_p0;
wire  signed [2:0] mul_ln1345_378_fu_12162_p1;
wire  signed [5:0] mul_ln1345_378_fu_12162_p2;
wire  signed [2:0] mul_ln1345_379_fu_12171_p0;
wire  signed [2:0] mul_ln1345_379_fu_12171_p1;
wire  signed [5:0] mul_ln1345_379_fu_12171_p2;
wire  signed [2:0] mul_ln1345_380_fu_12180_p0;
wire  signed [2:0] mul_ln1345_380_fu_12180_p1;
wire  signed [5:0] mul_ln1345_380_fu_12180_p2;
wire  signed [2:0] mul_ln1345_381_fu_12189_p0;
wire  signed [2:0] mul_ln1345_381_fu_12189_p1;
wire  signed [5:0] mul_ln1345_381_fu_12189_p2;
wire  signed [2:0] mul_ln1345_382_fu_12198_p0;
wire  signed [2:0] mul_ln1345_382_fu_12198_p1;
wire  signed [5:0] mul_ln1345_382_fu_12198_p2;
wire  signed [2:0] mul_ln1345_383_fu_12207_p0;
wire  signed [2:0] mul_ln1345_383_fu_12207_p1;
wire  signed [5:0] mul_ln1345_383_fu_12207_p2;
wire  signed [6:0] sext_ln151_318_fu_12194_p1;
wire  signed [6:0] sext_ln151_319_fu_12203_p1;
wire   [6:0] add_ln691_372_fu_12216_p2;
wire  signed [10:0] sext_ln691_250_fu_12222_p1;
wire   [10:0] tmp_317_fu_12107_p4;
wire  signed [6:0] sext_ln151_314_fu_12158_p1;
wire  signed [6:0] sext_ln151_316_fu_12176_p1;
wire   [6:0] add_ln691_374_fu_12232_p2;
wire  signed [6:0] sext_ln151_317_fu_12185_p1;
wire  signed [6:0] sext_ln151_310_fu_12122_p1;
wire  signed [6:0] sext_ln691_248_fu_12103_p1;
wire   [6:0] add_ln691_377_fu_12244_p2;
wire  signed [6:0] sext_ln151_315_fu_12167_p1;
wire   [6:0] add_ln691_378_fu_12250_p2;
wire  signed [6:0] sext_ln151_311_fu_12131_p1;
wire  signed [6:0] sext_ln151_313_fu_12149_p1;
wire   [6:0] add_ln691_379_fu_12260_p2;
wire  signed [6:0] sext_ln151_312_fu_12140_p1;
wire  signed [6:0] sext_ln691_249_fu_12212_p1;
wire   [6:0] add_ln691_380_fu_12270_p2;
wire  signed [7:0] sext_ln691_254_fu_12276_p1;
wire  signed [7:0] sext_ln691_253_fu_12266_p1;
wire   [7:0] add_ln691_381_fu_12280_p2;
wire  signed [7:0] sext_ln691_252_fu_12256_p1;
wire  signed [2:0] mul_ln1345_384_fu_12292_p0;
wire  signed [2:0] mul_ln1345_384_fu_12292_p1;
wire  signed [5:0] mul_ln1345_384_fu_12292_p2;
wire  signed [2:0] mul_ln1345_385_fu_12311_p0;
wire  signed [2:0] mul_ln1345_385_fu_12311_p1;
wire  signed [5:0] mul_ln1345_385_fu_12311_p2;
wire  signed [2:0] mul_ln1345_386_fu_12320_p0;
wire  signed [2:0] mul_ln1345_386_fu_12320_p1;
wire  signed [5:0] mul_ln1345_386_fu_12320_p2;
wire  signed [2:0] mul_ln1345_387_fu_12329_p0;
wire  signed [2:0] mul_ln1345_387_fu_12329_p1;
wire  signed [5:0] mul_ln1345_387_fu_12329_p2;
wire  signed [2:0] mul_ln1345_388_fu_12338_p0;
wire  signed [2:0] mul_ln1345_388_fu_12338_p1;
wire  signed [5:0] mul_ln1345_388_fu_12338_p2;
wire  signed [2:0] mul_ln1345_389_fu_12347_p0;
wire  signed [2:0] mul_ln1345_389_fu_12347_p1;
wire  signed [5:0] mul_ln1345_389_fu_12347_p2;
wire  signed [2:0] mul_ln1345_390_fu_12356_p0;
wire  signed [2:0] mul_ln1345_390_fu_12356_p1;
wire  signed [5:0] mul_ln1345_390_fu_12356_p2;
wire  signed [2:0] mul_ln1345_391_fu_12365_p0;
wire  signed [2:0] mul_ln1345_391_fu_12365_p1;
wire  signed [5:0] mul_ln1345_391_fu_12365_p2;
wire  signed [2:0] mul_ln1345_392_fu_12374_p0;
wire  signed [2:0] mul_ln1345_392_fu_12374_p1;
wire  signed [5:0] mul_ln1345_392_fu_12374_p2;
wire  signed [2:0] mul_ln1345_393_fu_12383_p0;
wire  signed [2:0] mul_ln1345_393_fu_12383_p1;
wire  signed [5:0] mul_ln1345_393_fu_12383_p2;
wire  signed [2:0] mul_ln1345_394_fu_12392_p0;
wire  signed [2:0] mul_ln1345_394_fu_12392_p1;
wire  signed [5:0] mul_ln1345_394_fu_12392_p2;
wire  signed [2:0] mul_ln1345_395_fu_12401_p0;
wire  signed [2:0] mul_ln1345_395_fu_12401_p1;
wire  signed [5:0] mul_ln1345_395_fu_12401_p2;
wire  signed [6:0] sext_ln151_328_fu_12388_p1;
wire  signed [6:0] sext_ln151_329_fu_12397_p1;
wire   [6:0] add_ln691_384_fu_12410_p2;
wire  signed [10:0] sext_ln691_258_fu_12416_p1;
wire   [10:0] tmp_318_fu_12301_p4;
wire  signed [6:0] sext_ln151_324_fu_12352_p1;
wire  signed [6:0] sext_ln151_326_fu_12370_p1;
wire   [6:0] add_ln691_386_fu_12426_p2;
wire  signed [6:0] sext_ln151_327_fu_12379_p1;
wire  signed [6:0] sext_ln151_320_fu_12316_p1;
wire  signed [6:0] sext_ln691_256_fu_12297_p1;
wire   [6:0] add_ln691_389_fu_12438_p2;
wire  signed [6:0] sext_ln151_325_fu_12361_p1;
wire   [6:0] add_ln691_390_fu_12444_p2;
wire  signed [6:0] sext_ln151_321_fu_12325_p1;
wire  signed [6:0] sext_ln151_323_fu_12343_p1;
wire   [6:0] add_ln691_391_fu_12454_p2;
wire  signed [6:0] sext_ln151_322_fu_12334_p1;
wire  signed [6:0] sext_ln691_257_fu_12406_p1;
wire   [6:0] add_ln691_392_fu_12464_p2;
wire  signed [7:0] sext_ln691_262_fu_12470_p1;
wire  signed [7:0] sext_ln691_261_fu_12460_p1;
wire   [7:0] add_ln691_393_fu_12474_p2;
wire  signed [7:0] sext_ln691_260_fu_12450_p1;
wire  signed [2:0] mul_ln1345_396_fu_12486_p0;
wire  signed [2:0] mul_ln1345_396_fu_12486_p1;
wire  signed [5:0] mul_ln1345_396_fu_12486_p2;
wire  signed [2:0] mul_ln1345_397_fu_12505_p0;
wire  signed [2:0] mul_ln1345_397_fu_12505_p1;
wire  signed [5:0] mul_ln1345_397_fu_12505_p2;
wire  signed [2:0] mul_ln1345_398_fu_12514_p0;
wire  signed [2:0] mul_ln1345_398_fu_12514_p1;
wire  signed [5:0] mul_ln1345_398_fu_12514_p2;
wire  signed [2:0] mul_ln1345_399_fu_12523_p0;
wire  signed [2:0] mul_ln1345_399_fu_12523_p1;
wire  signed [5:0] mul_ln1345_399_fu_12523_p2;
wire  signed [2:0] mul_ln1345_400_fu_12532_p0;
wire  signed [2:0] mul_ln1345_400_fu_12532_p1;
wire  signed [5:0] mul_ln1345_400_fu_12532_p2;
wire  signed [2:0] mul_ln1345_401_fu_12541_p0;
wire  signed [2:0] mul_ln1345_401_fu_12541_p1;
wire  signed [5:0] mul_ln1345_401_fu_12541_p2;
wire  signed [2:0] mul_ln1345_402_fu_12550_p0;
wire  signed [2:0] mul_ln1345_402_fu_12550_p1;
wire  signed [5:0] mul_ln1345_402_fu_12550_p2;
wire  signed [2:0] mul_ln1345_403_fu_12559_p0;
wire  signed [2:0] mul_ln1345_403_fu_12559_p1;
wire  signed [5:0] mul_ln1345_403_fu_12559_p2;
wire  signed [2:0] mul_ln1345_404_fu_12568_p0;
wire  signed [2:0] mul_ln1345_404_fu_12568_p1;
wire  signed [5:0] mul_ln1345_404_fu_12568_p2;
wire  signed [2:0] mul_ln1345_405_fu_12577_p0;
wire  signed [2:0] mul_ln1345_405_fu_12577_p1;
wire  signed [5:0] mul_ln1345_405_fu_12577_p2;
wire  signed [2:0] mul_ln1345_406_fu_12586_p0;
wire  signed [2:0] mul_ln1345_406_fu_12586_p1;
wire  signed [5:0] mul_ln1345_406_fu_12586_p2;
wire  signed [2:0] mul_ln1345_407_fu_12595_p0;
wire  signed [2:0] mul_ln1345_407_fu_12595_p1;
wire  signed [5:0] mul_ln1345_407_fu_12595_p2;
wire  signed [6:0] sext_ln151_338_fu_12582_p1;
wire  signed [6:0] sext_ln151_339_fu_12591_p1;
wire   [6:0] add_ln691_396_fu_12604_p2;
wire  signed [10:0] sext_ln691_266_fu_12610_p1;
wire   [10:0] tmp_319_fu_12495_p4;
wire  signed [6:0] sext_ln151_334_fu_12546_p1;
wire  signed [6:0] sext_ln151_336_fu_12564_p1;
wire   [6:0] add_ln691_398_fu_12620_p2;
wire  signed [6:0] sext_ln151_337_fu_12573_p1;
wire  signed [6:0] sext_ln151_330_fu_12510_p1;
wire  signed [6:0] sext_ln691_264_fu_12491_p1;
wire   [6:0] add_ln691_401_fu_12632_p2;
wire  signed [6:0] sext_ln151_335_fu_12555_p1;
wire   [6:0] add_ln691_402_fu_12638_p2;
wire  signed [6:0] sext_ln151_331_fu_12519_p1;
wire  signed [6:0] sext_ln151_333_fu_12537_p1;
wire   [6:0] add_ln691_403_fu_12648_p2;
wire  signed [6:0] sext_ln151_332_fu_12528_p1;
wire  signed [6:0] sext_ln691_265_fu_12600_p1;
wire   [6:0] add_ln691_404_fu_12658_p2;
wire  signed [7:0] sext_ln691_270_fu_12664_p1;
wire  signed [7:0] sext_ln691_269_fu_12654_p1;
wire   [7:0] add_ln691_405_fu_12668_p2;
wire  signed [7:0] sext_ln691_268_fu_12644_p1;
wire  signed [2:0] mul_ln1345_408_fu_12680_p0;
wire  signed [2:0] mul_ln1345_408_fu_12680_p1;
wire  signed [5:0] mul_ln1345_408_fu_12680_p2;
wire  signed [2:0] mul_ln1345_409_fu_12699_p0;
wire  signed [2:0] mul_ln1345_409_fu_12699_p1;
wire  signed [5:0] mul_ln1345_409_fu_12699_p2;
wire  signed [2:0] mul_ln1345_410_fu_12708_p0;
wire  signed [2:0] mul_ln1345_410_fu_12708_p1;
wire  signed [5:0] mul_ln1345_410_fu_12708_p2;
wire  signed [2:0] mul_ln1345_411_fu_12717_p0;
wire  signed [2:0] mul_ln1345_411_fu_12717_p1;
wire  signed [5:0] mul_ln1345_411_fu_12717_p2;
wire  signed [2:0] mul_ln1345_412_fu_12726_p0;
wire  signed [2:0] mul_ln1345_412_fu_12726_p1;
wire  signed [5:0] mul_ln1345_412_fu_12726_p2;
wire  signed [2:0] mul_ln1345_413_fu_12735_p0;
wire  signed [2:0] mul_ln1345_413_fu_12735_p1;
wire  signed [5:0] mul_ln1345_413_fu_12735_p2;
wire  signed [2:0] mul_ln1345_414_fu_12744_p0;
wire  signed [2:0] mul_ln1345_414_fu_12744_p1;
wire  signed [5:0] mul_ln1345_414_fu_12744_p2;
wire  signed [2:0] mul_ln1345_415_fu_12753_p0;
wire  signed [2:0] mul_ln1345_415_fu_12753_p1;
wire  signed [5:0] mul_ln1345_415_fu_12753_p2;
wire  signed [2:0] mul_ln1345_416_fu_12762_p0;
wire  signed [2:0] mul_ln1345_416_fu_12762_p1;
wire  signed [5:0] mul_ln1345_416_fu_12762_p2;
wire  signed [2:0] mul_ln1345_417_fu_12771_p0;
wire  signed [2:0] mul_ln1345_417_fu_12771_p1;
wire  signed [5:0] mul_ln1345_417_fu_12771_p2;
wire  signed [2:0] mul_ln1345_418_fu_12780_p0;
wire  signed [2:0] mul_ln1345_418_fu_12780_p1;
wire  signed [5:0] mul_ln1345_418_fu_12780_p2;
wire  signed [2:0] mul_ln1345_419_fu_12789_p0;
wire  signed [2:0] mul_ln1345_419_fu_12789_p1;
wire  signed [5:0] mul_ln1345_419_fu_12789_p2;
wire  signed [6:0] sext_ln151_348_fu_12776_p1;
wire  signed [6:0] sext_ln151_349_fu_12785_p1;
wire   [6:0] add_ln691_408_fu_12798_p2;
wire  signed [10:0] sext_ln691_274_fu_12804_p1;
wire   [10:0] tmp_320_fu_12689_p4;
wire  signed [6:0] sext_ln151_344_fu_12740_p1;
wire  signed [6:0] sext_ln151_346_fu_12758_p1;
wire   [6:0] add_ln691_410_fu_12814_p2;
wire  signed [6:0] sext_ln151_347_fu_12767_p1;
wire  signed [6:0] sext_ln151_340_fu_12704_p1;
wire  signed [6:0] sext_ln691_272_fu_12685_p1;
wire   [6:0] add_ln691_413_fu_12826_p2;
wire  signed [6:0] sext_ln151_345_fu_12749_p1;
wire   [6:0] add_ln691_414_fu_12832_p2;
wire  signed [6:0] sext_ln151_341_fu_12713_p1;
wire  signed [6:0] sext_ln151_343_fu_12731_p1;
wire   [6:0] add_ln691_415_fu_12842_p2;
wire  signed [6:0] sext_ln151_342_fu_12722_p1;
wire  signed [6:0] sext_ln691_273_fu_12794_p1;
wire   [6:0] add_ln691_416_fu_12852_p2;
wire  signed [7:0] sext_ln691_278_fu_12858_p1;
wire  signed [7:0] sext_ln691_277_fu_12848_p1;
wire   [7:0] add_ln691_417_fu_12862_p2;
wire  signed [7:0] sext_ln691_276_fu_12838_p1;
wire  signed [2:0] mul_ln1345_420_fu_12874_p0;
wire  signed [2:0] mul_ln1345_420_fu_12874_p1;
wire  signed [5:0] mul_ln1345_420_fu_12874_p2;
wire  signed [2:0] mul_ln1345_421_fu_12893_p0;
wire  signed [2:0] mul_ln1345_421_fu_12893_p1;
wire  signed [5:0] mul_ln1345_421_fu_12893_p2;
wire  signed [2:0] mul_ln1345_422_fu_12902_p0;
wire  signed [2:0] mul_ln1345_422_fu_12902_p1;
wire  signed [5:0] mul_ln1345_422_fu_12902_p2;
wire  signed [2:0] mul_ln1345_423_fu_12911_p0;
wire  signed [2:0] mul_ln1345_423_fu_12911_p1;
wire  signed [5:0] mul_ln1345_423_fu_12911_p2;
wire  signed [2:0] mul_ln1345_424_fu_12920_p0;
wire  signed [2:0] mul_ln1345_424_fu_12920_p1;
wire  signed [5:0] mul_ln1345_424_fu_12920_p2;
wire  signed [2:0] mul_ln1345_425_fu_12929_p0;
wire  signed [2:0] mul_ln1345_425_fu_12929_p1;
wire  signed [5:0] mul_ln1345_425_fu_12929_p2;
wire  signed [2:0] mul_ln1345_426_fu_12938_p0;
wire  signed [2:0] mul_ln1345_426_fu_12938_p1;
wire  signed [5:0] mul_ln1345_426_fu_12938_p2;
wire  signed [2:0] mul_ln1345_427_fu_12947_p0;
wire  signed [2:0] mul_ln1345_427_fu_12947_p1;
wire  signed [5:0] mul_ln1345_427_fu_12947_p2;
wire  signed [2:0] mul_ln1345_428_fu_12956_p0;
wire  signed [2:0] mul_ln1345_428_fu_12956_p1;
wire  signed [5:0] mul_ln1345_428_fu_12956_p2;
wire  signed [2:0] mul_ln1345_429_fu_12965_p0;
wire  signed [2:0] mul_ln1345_429_fu_12965_p1;
wire  signed [5:0] mul_ln1345_429_fu_12965_p2;
wire  signed [2:0] mul_ln1345_430_fu_12974_p0;
wire  signed [2:0] mul_ln1345_430_fu_12974_p1;
wire  signed [5:0] mul_ln1345_430_fu_12974_p2;
wire  signed [2:0] mul_ln1345_431_fu_12983_p0;
wire  signed [2:0] mul_ln1345_431_fu_12983_p1;
wire  signed [5:0] mul_ln1345_431_fu_12983_p2;
wire  signed [6:0] sext_ln151_358_fu_12970_p1;
wire  signed [6:0] sext_ln151_359_fu_12979_p1;
wire   [6:0] add_ln691_420_fu_12992_p2;
wire  signed [10:0] sext_ln691_282_fu_12998_p1;
wire   [10:0] tmp_321_fu_12883_p4;
wire  signed [6:0] sext_ln151_354_fu_12934_p1;
wire  signed [6:0] sext_ln151_356_fu_12952_p1;
wire   [6:0] add_ln691_422_fu_13008_p2;
wire  signed [6:0] sext_ln151_357_fu_12961_p1;
wire  signed [6:0] sext_ln151_350_fu_12898_p1;
wire  signed [6:0] sext_ln691_280_fu_12879_p1;
wire   [6:0] add_ln691_425_fu_13020_p2;
wire  signed [6:0] sext_ln151_355_fu_12943_p1;
wire   [6:0] add_ln691_426_fu_13026_p2;
wire  signed [6:0] sext_ln151_351_fu_12907_p1;
wire  signed [6:0] sext_ln151_353_fu_12925_p1;
wire   [6:0] add_ln691_427_fu_13036_p2;
wire  signed [6:0] sext_ln151_352_fu_12916_p1;
wire  signed [6:0] sext_ln691_281_fu_12988_p1;
wire   [6:0] add_ln691_428_fu_13046_p2;
wire  signed [7:0] sext_ln691_286_fu_13052_p1;
wire  signed [7:0] sext_ln691_285_fu_13042_p1;
wire   [7:0] add_ln691_429_fu_13056_p2;
wire  signed [7:0] sext_ln691_284_fu_13032_p1;
wire  signed [2:0] mul_ln1345_432_fu_13068_p0;
wire  signed [2:0] mul_ln1345_432_fu_13068_p1;
wire  signed [5:0] mul_ln1345_432_fu_13068_p2;
wire  signed [2:0] mul_ln1345_433_fu_13087_p0;
wire  signed [2:0] mul_ln1345_433_fu_13087_p1;
wire  signed [5:0] mul_ln1345_433_fu_13087_p2;
wire  signed [2:0] mul_ln1345_434_fu_13096_p0;
wire  signed [2:0] mul_ln1345_434_fu_13096_p1;
wire  signed [5:0] mul_ln1345_434_fu_13096_p2;
wire  signed [2:0] mul_ln1345_435_fu_13105_p0;
wire  signed [2:0] mul_ln1345_435_fu_13105_p1;
wire  signed [5:0] mul_ln1345_435_fu_13105_p2;
wire  signed [2:0] mul_ln1345_436_fu_13114_p0;
wire  signed [2:0] mul_ln1345_436_fu_13114_p1;
wire  signed [5:0] mul_ln1345_436_fu_13114_p2;
wire  signed [2:0] mul_ln1345_437_fu_13123_p0;
wire  signed [2:0] mul_ln1345_437_fu_13123_p1;
wire  signed [5:0] mul_ln1345_437_fu_13123_p2;
wire  signed [2:0] mul_ln1345_438_fu_13132_p0;
wire  signed [2:0] mul_ln1345_438_fu_13132_p1;
wire  signed [5:0] mul_ln1345_438_fu_13132_p2;
wire  signed [2:0] mul_ln1345_439_fu_13141_p0;
wire  signed [2:0] mul_ln1345_439_fu_13141_p1;
wire  signed [5:0] mul_ln1345_439_fu_13141_p2;
wire  signed [2:0] mul_ln1345_440_fu_13150_p0;
wire  signed [2:0] mul_ln1345_440_fu_13150_p1;
wire  signed [5:0] mul_ln1345_440_fu_13150_p2;
wire  signed [2:0] mul_ln1345_441_fu_13159_p0;
wire  signed [2:0] mul_ln1345_441_fu_13159_p1;
wire  signed [5:0] mul_ln1345_441_fu_13159_p2;
wire  signed [2:0] mul_ln1345_442_fu_13168_p0;
wire  signed [2:0] mul_ln1345_442_fu_13168_p1;
wire  signed [5:0] mul_ln1345_442_fu_13168_p2;
wire  signed [2:0] mul_ln1345_443_fu_13177_p0;
wire  signed [2:0] mul_ln1345_443_fu_13177_p1;
wire  signed [5:0] mul_ln1345_443_fu_13177_p2;
wire  signed [6:0] sext_ln151_368_fu_13164_p1;
wire  signed [6:0] sext_ln151_369_fu_13173_p1;
wire   [6:0] add_ln691_432_fu_13186_p2;
wire  signed [10:0] sext_ln691_290_fu_13192_p1;
wire   [10:0] tmp_322_fu_13077_p4;
wire  signed [6:0] sext_ln151_364_fu_13128_p1;
wire  signed [6:0] sext_ln151_366_fu_13146_p1;
wire   [6:0] add_ln691_434_fu_13202_p2;
wire  signed [6:0] sext_ln151_367_fu_13155_p1;
wire  signed [6:0] sext_ln151_360_fu_13092_p1;
wire  signed [6:0] sext_ln691_288_fu_13073_p1;
wire   [6:0] add_ln691_437_fu_13214_p2;
wire  signed [6:0] sext_ln151_365_fu_13137_p1;
wire   [6:0] add_ln691_438_fu_13220_p2;
wire  signed [6:0] sext_ln151_361_fu_13101_p1;
wire  signed [6:0] sext_ln151_363_fu_13119_p1;
wire   [6:0] add_ln691_439_fu_13230_p2;
wire  signed [6:0] sext_ln151_362_fu_13110_p1;
wire  signed [6:0] sext_ln691_289_fu_13182_p1;
wire   [6:0] add_ln691_440_fu_13240_p2;
wire  signed [7:0] sext_ln691_294_fu_13246_p1;
wire  signed [7:0] sext_ln691_293_fu_13236_p1;
wire   [7:0] add_ln691_441_fu_13250_p2;
wire  signed [7:0] sext_ln691_292_fu_13226_p1;
wire  signed [2:0] mul_ln1345_444_fu_13262_p0;
wire  signed [2:0] mul_ln1345_444_fu_13262_p1;
wire  signed [5:0] mul_ln1345_444_fu_13262_p2;
wire  signed [2:0] mul_ln1345_445_fu_13281_p0;
wire  signed [2:0] mul_ln1345_445_fu_13281_p1;
wire  signed [5:0] mul_ln1345_445_fu_13281_p2;
wire  signed [2:0] mul_ln1345_446_fu_13290_p0;
wire  signed [2:0] mul_ln1345_446_fu_13290_p1;
wire  signed [5:0] mul_ln1345_446_fu_13290_p2;
wire  signed [2:0] mul_ln1345_447_fu_13299_p0;
wire  signed [2:0] mul_ln1345_447_fu_13299_p1;
wire  signed [5:0] mul_ln1345_447_fu_13299_p2;
wire  signed [2:0] mul_ln1345_448_fu_13308_p0;
wire  signed [2:0] mul_ln1345_448_fu_13308_p1;
wire  signed [5:0] mul_ln1345_448_fu_13308_p2;
wire  signed [2:0] mul_ln1345_449_fu_13317_p0;
wire  signed [2:0] mul_ln1345_449_fu_13317_p1;
wire  signed [5:0] mul_ln1345_449_fu_13317_p2;
wire  signed [2:0] mul_ln1345_450_fu_13326_p0;
wire  signed [2:0] mul_ln1345_450_fu_13326_p1;
wire  signed [5:0] mul_ln1345_450_fu_13326_p2;
wire  signed [2:0] mul_ln1345_451_fu_13335_p0;
wire  signed [2:0] mul_ln1345_451_fu_13335_p1;
wire  signed [5:0] mul_ln1345_451_fu_13335_p2;
wire  signed [2:0] mul_ln1345_452_fu_13344_p0;
wire  signed [2:0] mul_ln1345_452_fu_13344_p1;
wire  signed [5:0] mul_ln1345_452_fu_13344_p2;
wire  signed [2:0] mul_ln1345_453_fu_13353_p0;
wire  signed [2:0] mul_ln1345_453_fu_13353_p1;
wire  signed [5:0] mul_ln1345_453_fu_13353_p2;
wire  signed [2:0] mul_ln1345_454_fu_13362_p0;
wire  signed [2:0] mul_ln1345_454_fu_13362_p1;
wire  signed [5:0] mul_ln1345_454_fu_13362_p2;
wire  signed [2:0] mul_ln1345_455_fu_13371_p0;
wire  signed [2:0] mul_ln1345_455_fu_13371_p1;
wire  signed [5:0] mul_ln1345_455_fu_13371_p2;
wire  signed [6:0] sext_ln151_378_fu_13358_p1;
wire  signed [6:0] sext_ln151_379_fu_13367_p1;
wire   [6:0] add_ln691_444_fu_13380_p2;
wire  signed [10:0] sext_ln691_298_fu_13386_p1;
wire   [10:0] tmp_323_fu_13271_p4;
wire  signed [6:0] sext_ln151_374_fu_13322_p1;
wire  signed [6:0] sext_ln151_376_fu_13340_p1;
wire   [6:0] add_ln691_446_fu_13396_p2;
wire  signed [6:0] sext_ln151_377_fu_13349_p1;
wire  signed [6:0] sext_ln151_370_fu_13286_p1;
wire  signed [6:0] sext_ln691_296_fu_13267_p1;
wire   [6:0] add_ln691_449_fu_13408_p2;
wire  signed [6:0] sext_ln151_375_fu_13331_p1;
wire   [6:0] add_ln691_450_fu_13414_p2;
wire  signed [6:0] sext_ln151_371_fu_13295_p1;
wire  signed [6:0] sext_ln151_373_fu_13313_p1;
wire   [6:0] add_ln691_451_fu_13424_p2;
wire  signed [6:0] sext_ln151_372_fu_13304_p1;
wire  signed [6:0] sext_ln691_297_fu_13376_p1;
wire   [6:0] add_ln691_452_fu_13434_p2;
wire  signed [7:0] sext_ln691_302_fu_13440_p1;
wire  signed [7:0] sext_ln691_301_fu_13430_p1;
wire   [7:0] add_ln691_453_fu_13444_p2;
wire  signed [7:0] sext_ln691_300_fu_13420_p1;
wire  signed [2:0] mul_ln1345_456_fu_13456_p0;
wire  signed [2:0] mul_ln1345_456_fu_13456_p1;
wire  signed [5:0] mul_ln1345_456_fu_13456_p2;
wire  signed [2:0] mul_ln1345_457_fu_13475_p0;
wire  signed [2:0] mul_ln1345_457_fu_13475_p1;
wire  signed [5:0] mul_ln1345_457_fu_13475_p2;
wire  signed [2:0] mul_ln1345_458_fu_13484_p0;
wire  signed [2:0] mul_ln1345_458_fu_13484_p1;
wire  signed [5:0] mul_ln1345_458_fu_13484_p2;
wire  signed [2:0] mul_ln1345_459_fu_13493_p0;
wire  signed [2:0] mul_ln1345_459_fu_13493_p1;
wire  signed [5:0] mul_ln1345_459_fu_13493_p2;
wire  signed [2:0] mul_ln1345_460_fu_13502_p0;
wire  signed [2:0] mul_ln1345_460_fu_13502_p1;
wire  signed [5:0] mul_ln1345_460_fu_13502_p2;
wire  signed [2:0] mul_ln1345_461_fu_13511_p0;
wire  signed [2:0] mul_ln1345_461_fu_13511_p1;
wire  signed [5:0] mul_ln1345_461_fu_13511_p2;
wire  signed [2:0] mul_ln1345_462_fu_13520_p0;
wire  signed [2:0] mul_ln1345_462_fu_13520_p1;
wire  signed [5:0] mul_ln1345_462_fu_13520_p2;
wire  signed [2:0] mul_ln1345_463_fu_13529_p0;
wire  signed [2:0] mul_ln1345_463_fu_13529_p1;
wire  signed [5:0] mul_ln1345_463_fu_13529_p2;
wire  signed [2:0] mul_ln1345_464_fu_13538_p0;
wire  signed [2:0] mul_ln1345_464_fu_13538_p1;
wire  signed [5:0] mul_ln1345_464_fu_13538_p2;
wire  signed [2:0] mul_ln1345_465_fu_13547_p0;
wire  signed [2:0] mul_ln1345_465_fu_13547_p1;
wire  signed [5:0] mul_ln1345_465_fu_13547_p2;
wire  signed [2:0] mul_ln1345_466_fu_13556_p0;
wire  signed [2:0] mul_ln1345_466_fu_13556_p1;
wire  signed [5:0] mul_ln1345_466_fu_13556_p2;
wire  signed [2:0] mul_ln1345_467_fu_13565_p0;
wire  signed [2:0] mul_ln1345_467_fu_13565_p1;
wire  signed [5:0] mul_ln1345_467_fu_13565_p2;
wire  signed [6:0] sext_ln151_388_fu_13552_p1;
wire  signed [6:0] sext_ln151_389_fu_13561_p1;
wire   [6:0] add_ln691_456_fu_13574_p2;
wire  signed [10:0] sext_ln691_306_fu_13580_p1;
wire   [10:0] tmp_324_fu_13465_p4;
wire  signed [6:0] sext_ln151_384_fu_13516_p1;
wire  signed [6:0] sext_ln151_386_fu_13534_p1;
wire   [6:0] add_ln691_458_fu_13590_p2;
wire  signed [6:0] sext_ln151_387_fu_13543_p1;
wire  signed [6:0] sext_ln151_380_fu_13480_p1;
wire  signed [6:0] sext_ln691_304_fu_13461_p1;
wire   [6:0] add_ln691_461_fu_13602_p2;
wire  signed [6:0] sext_ln151_385_fu_13525_p1;
wire   [6:0] add_ln691_462_fu_13608_p2;
wire  signed [6:0] sext_ln151_381_fu_13489_p1;
wire  signed [6:0] sext_ln151_383_fu_13507_p1;
wire   [6:0] add_ln691_463_fu_13618_p2;
wire  signed [6:0] sext_ln151_382_fu_13498_p1;
wire  signed [6:0] sext_ln691_305_fu_13570_p1;
wire   [6:0] add_ln691_464_fu_13628_p2;
wire  signed [7:0] sext_ln691_310_fu_13634_p1;
wire  signed [7:0] sext_ln691_309_fu_13624_p1;
wire   [7:0] add_ln691_465_fu_13638_p2;
wire  signed [7:0] sext_ln691_308_fu_13614_p1;
wire  signed [2:0] mul_ln1345_468_fu_13650_p0;
wire  signed [2:0] mul_ln1345_468_fu_13650_p1;
wire  signed [5:0] mul_ln1345_468_fu_13650_p2;
wire  signed [2:0] mul_ln1345_469_fu_13669_p0;
wire  signed [2:0] mul_ln1345_469_fu_13669_p1;
wire  signed [5:0] mul_ln1345_469_fu_13669_p2;
wire  signed [2:0] mul_ln1345_470_fu_13678_p0;
wire  signed [2:0] mul_ln1345_470_fu_13678_p1;
wire  signed [5:0] mul_ln1345_470_fu_13678_p2;
wire  signed [2:0] mul_ln1345_471_fu_13687_p0;
wire  signed [2:0] mul_ln1345_471_fu_13687_p1;
wire  signed [5:0] mul_ln1345_471_fu_13687_p2;
wire  signed [2:0] mul_ln1345_472_fu_13696_p0;
wire  signed [2:0] mul_ln1345_472_fu_13696_p1;
wire  signed [5:0] mul_ln1345_472_fu_13696_p2;
wire  signed [2:0] mul_ln1345_473_fu_13705_p0;
wire  signed [2:0] mul_ln1345_473_fu_13705_p1;
wire  signed [5:0] mul_ln1345_473_fu_13705_p2;
wire  signed [2:0] mul_ln1345_474_fu_13714_p0;
wire  signed [2:0] mul_ln1345_474_fu_13714_p1;
wire  signed [5:0] mul_ln1345_474_fu_13714_p2;
wire  signed [2:0] mul_ln1345_475_fu_13723_p0;
wire  signed [2:0] mul_ln1345_475_fu_13723_p1;
wire  signed [5:0] mul_ln1345_475_fu_13723_p2;
wire  signed [2:0] mul_ln1345_476_fu_13732_p0;
wire  signed [2:0] mul_ln1345_476_fu_13732_p1;
wire  signed [5:0] mul_ln1345_476_fu_13732_p2;
wire  signed [2:0] mul_ln1345_477_fu_13741_p0;
wire  signed [2:0] mul_ln1345_477_fu_13741_p1;
wire  signed [5:0] mul_ln1345_477_fu_13741_p2;
wire  signed [2:0] mul_ln1345_478_fu_13750_p0;
wire  signed [2:0] mul_ln1345_478_fu_13750_p1;
wire  signed [5:0] mul_ln1345_478_fu_13750_p2;
wire  signed [2:0] mul_ln1345_479_fu_13759_p0;
wire  signed [2:0] mul_ln1345_479_fu_13759_p1;
wire  signed [5:0] mul_ln1345_479_fu_13759_p2;
wire  signed [6:0] sext_ln151_398_fu_13746_p1;
wire  signed [6:0] sext_ln151_399_fu_13755_p1;
wire   [6:0] add_ln691_468_fu_13768_p2;
wire  signed [10:0] sext_ln691_314_fu_13774_p1;
wire   [10:0] tmp_325_fu_13659_p4;
wire  signed [6:0] sext_ln151_394_fu_13710_p1;
wire  signed [6:0] sext_ln151_396_fu_13728_p1;
wire   [6:0] add_ln691_470_fu_13784_p2;
wire  signed [6:0] sext_ln151_397_fu_13737_p1;
wire  signed [6:0] sext_ln151_390_fu_13674_p1;
wire  signed [6:0] sext_ln691_312_fu_13655_p1;
wire   [6:0] add_ln691_473_fu_13796_p2;
wire  signed [6:0] sext_ln151_395_fu_13719_p1;
wire   [6:0] add_ln691_474_fu_13802_p2;
wire  signed [6:0] sext_ln151_391_fu_13683_p1;
wire  signed [6:0] sext_ln151_393_fu_13701_p1;
wire   [6:0] add_ln691_475_fu_13812_p2;
wire  signed [6:0] sext_ln151_392_fu_13692_p1;
wire  signed [6:0] sext_ln691_313_fu_13764_p1;
wire   [6:0] add_ln691_476_fu_13822_p2;
wire  signed [7:0] sext_ln691_318_fu_13828_p1;
wire  signed [7:0] sext_ln691_317_fu_13818_p1;
wire   [7:0] add_ln691_477_fu_13832_p2;
wire  signed [7:0] sext_ln691_316_fu_13808_p1;
wire  signed [2:0] mul_ln1345_480_fu_13844_p0;
wire  signed [2:0] mul_ln1345_480_fu_13844_p1;
wire  signed [5:0] mul_ln1345_480_fu_13844_p2;
wire  signed [2:0] mul_ln1345_481_fu_13863_p0;
wire  signed [2:0] mul_ln1345_481_fu_13863_p1;
wire  signed [5:0] mul_ln1345_481_fu_13863_p2;
wire  signed [2:0] mul_ln1345_482_fu_13872_p0;
wire  signed [2:0] mul_ln1345_482_fu_13872_p1;
wire  signed [5:0] mul_ln1345_482_fu_13872_p2;
wire  signed [2:0] mul_ln1345_483_fu_13881_p0;
wire  signed [2:0] mul_ln1345_483_fu_13881_p1;
wire  signed [5:0] mul_ln1345_483_fu_13881_p2;
wire  signed [2:0] mul_ln1345_484_fu_13890_p0;
wire  signed [2:0] mul_ln1345_484_fu_13890_p1;
wire  signed [5:0] mul_ln1345_484_fu_13890_p2;
wire  signed [2:0] mul_ln1345_485_fu_13899_p0;
wire  signed [2:0] mul_ln1345_485_fu_13899_p1;
wire  signed [5:0] mul_ln1345_485_fu_13899_p2;
wire  signed [2:0] mul_ln1345_486_fu_13908_p0;
wire  signed [2:0] mul_ln1345_486_fu_13908_p1;
wire  signed [5:0] mul_ln1345_486_fu_13908_p2;
wire  signed [2:0] mul_ln1345_487_fu_13917_p0;
wire  signed [2:0] mul_ln1345_487_fu_13917_p1;
wire  signed [5:0] mul_ln1345_487_fu_13917_p2;
wire  signed [2:0] mul_ln1345_488_fu_13926_p0;
wire  signed [2:0] mul_ln1345_488_fu_13926_p1;
wire  signed [5:0] mul_ln1345_488_fu_13926_p2;
wire  signed [2:0] mul_ln1345_489_fu_13935_p0;
wire  signed [2:0] mul_ln1345_489_fu_13935_p1;
wire  signed [5:0] mul_ln1345_489_fu_13935_p2;
wire  signed [2:0] mul_ln1345_490_fu_13944_p0;
wire  signed [2:0] mul_ln1345_490_fu_13944_p1;
wire  signed [5:0] mul_ln1345_490_fu_13944_p2;
wire  signed [2:0] mul_ln1345_491_fu_13953_p0;
wire  signed [2:0] mul_ln1345_491_fu_13953_p1;
wire  signed [5:0] mul_ln1345_491_fu_13953_p2;
wire  signed [6:0] sext_ln151_408_fu_13940_p1;
wire  signed [6:0] sext_ln151_409_fu_13949_p1;
wire   [6:0] add_ln691_480_fu_13962_p2;
wire  signed [10:0] sext_ln691_322_fu_13968_p1;
wire   [10:0] tmp_326_fu_13853_p4;
wire  signed [6:0] sext_ln151_404_fu_13904_p1;
wire  signed [6:0] sext_ln151_406_fu_13922_p1;
wire   [6:0] add_ln691_482_fu_13978_p2;
wire  signed [6:0] sext_ln151_407_fu_13931_p1;
wire  signed [6:0] sext_ln151_400_fu_13868_p1;
wire  signed [6:0] sext_ln691_320_fu_13849_p1;
wire   [6:0] add_ln691_485_fu_13990_p2;
wire  signed [6:0] sext_ln151_405_fu_13913_p1;
wire   [6:0] add_ln691_486_fu_13996_p2;
wire  signed [6:0] sext_ln151_401_fu_13877_p1;
wire  signed [6:0] sext_ln151_403_fu_13895_p1;
wire   [6:0] add_ln691_487_fu_14006_p2;
wire  signed [6:0] sext_ln151_402_fu_13886_p1;
wire  signed [6:0] sext_ln691_321_fu_13958_p1;
wire   [6:0] add_ln691_488_fu_14016_p2;
wire  signed [7:0] sext_ln691_326_fu_14022_p1;
wire  signed [7:0] sext_ln691_325_fu_14012_p1;
wire   [7:0] add_ln691_489_fu_14026_p2;
wire  signed [7:0] sext_ln691_324_fu_14002_p1;
wire  signed [2:0] mul_ln1345_492_fu_14038_p0;
wire  signed [2:0] mul_ln1345_492_fu_14038_p1;
wire  signed [5:0] mul_ln1345_492_fu_14038_p2;
wire  signed [2:0] mul_ln1345_493_fu_14057_p0;
wire  signed [2:0] mul_ln1345_493_fu_14057_p1;
wire  signed [5:0] mul_ln1345_493_fu_14057_p2;
wire  signed [2:0] mul_ln1345_494_fu_14066_p0;
wire  signed [2:0] mul_ln1345_494_fu_14066_p1;
wire  signed [5:0] mul_ln1345_494_fu_14066_p2;
wire  signed [2:0] mul_ln1345_495_fu_14075_p0;
wire  signed [2:0] mul_ln1345_495_fu_14075_p1;
wire  signed [5:0] mul_ln1345_495_fu_14075_p2;
wire  signed [2:0] mul_ln1345_496_fu_14084_p0;
wire  signed [2:0] mul_ln1345_496_fu_14084_p1;
wire  signed [5:0] mul_ln1345_496_fu_14084_p2;
wire  signed [2:0] mul_ln1345_497_fu_14093_p0;
wire  signed [2:0] mul_ln1345_497_fu_14093_p1;
wire  signed [5:0] mul_ln1345_497_fu_14093_p2;
wire  signed [2:0] mul_ln1345_498_fu_14102_p0;
wire  signed [2:0] mul_ln1345_498_fu_14102_p1;
wire  signed [5:0] mul_ln1345_498_fu_14102_p2;
wire  signed [2:0] mul_ln1345_499_fu_14111_p0;
wire  signed [2:0] mul_ln1345_499_fu_14111_p1;
wire  signed [5:0] mul_ln1345_499_fu_14111_p2;
wire  signed [2:0] mul_ln1345_500_fu_14120_p0;
wire  signed [2:0] mul_ln1345_500_fu_14120_p1;
wire  signed [5:0] mul_ln1345_500_fu_14120_p2;
wire  signed [2:0] mul_ln1345_501_fu_14129_p0;
wire  signed [2:0] mul_ln1345_501_fu_14129_p1;
wire  signed [5:0] mul_ln1345_501_fu_14129_p2;
wire  signed [2:0] mul_ln1345_502_fu_14138_p0;
wire  signed [2:0] mul_ln1345_502_fu_14138_p1;
wire  signed [5:0] mul_ln1345_502_fu_14138_p2;
wire  signed [2:0] mul_ln1345_503_fu_14147_p0;
wire  signed [2:0] mul_ln1345_503_fu_14147_p1;
wire  signed [5:0] mul_ln1345_503_fu_14147_p2;
wire  signed [6:0] sext_ln151_418_fu_14134_p1;
wire  signed [6:0] sext_ln151_419_fu_14143_p1;
wire   [6:0] add_ln691_492_fu_14156_p2;
wire  signed [10:0] sext_ln691_330_fu_14162_p1;
wire   [10:0] tmp_327_fu_14047_p4;
wire  signed [6:0] sext_ln151_414_fu_14098_p1;
wire  signed [6:0] sext_ln151_416_fu_14116_p1;
wire   [6:0] add_ln691_494_fu_14172_p2;
wire  signed [6:0] sext_ln151_417_fu_14125_p1;
wire  signed [6:0] sext_ln151_410_fu_14062_p1;
wire  signed [6:0] sext_ln691_328_fu_14043_p1;
wire   [6:0] add_ln691_497_fu_14184_p2;
wire  signed [6:0] sext_ln151_415_fu_14107_p1;
wire   [6:0] add_ln691_498_fu_14190_p2;
wire  signed [6:0] sext_ln151_411_fu_14071_p1;
wire  signed [6:0] sext_ln151_413_fu_14089_p1;
wire   [6:0] add_ln691_499_fu_14200_p2;
wire  signed [6:0] sext_ln151_412_fu_14080_p1;
wire  signed [6:0] sext_ln691_329_fu_14152_p1;
wire   [6:0] add_ln691_500_fu_14210_p2;
wire  signed [7:0] sext_ln691_334_fu_14216_p1;
wire  signed [7:0] sext_ln691_333_fu_14206_p1;
wire   [7:0] add_ln691_501_fu_14220_p2;
wire  signed [7:0] sext_ln691_332_fu_14196_p1;
wire  signed [2:0] mul_ln1345_504_fu_14232_p0;
wire  signed [2:0] mul_ln1345_504_fu_14232_p1;
wire  signed [5:0] mul_ln1345_504_fu_14232_p2;
wire  signed [2:0] mul_ln1345_505_fu_14251_p0;
wire  signed [2:0] mul_ln1345_505_fu_14251_p1;
wire  signed [5:0] mul_ln1345_505_fu_14251_p2;
wire  signed [2:0] mul_ln1345_506_fu_14260_p0;
wire  signed [2:0] mul_ln1345_506_fu_14260_p1;
wire  signed [5:0] mul_ln1345_506_fu_14260_p2;
wire  signed [2:0] mul_ln1345_507_fu_14269_p0;
wire  signed [2:0] mul_ln1345_507_fu_14269_p1;
wire  signed [5:0] mul_ln1345_507_fu_14269_p2;
wire  signed [2:0] mul_ln1345_508_fu_14278_p0;
wire  signed [2:0] mul_ln1345_508_fu_14278_p1;
wire  signed [5:0] mul_ln1345_508_fu_14278_p2;
wire  signed [2:0] mul_ln1345_509_fu_14287_p0;
wire  signed [2:0] mul_ln1345_509_fu_14287_p1;
wire  signed [5:0] mul_ln1345_509_fu_14287_p2;
wire  signed [2:0] mul_ln1345_510_fu_14296_p0;
wire  signed [2:0] mul_ln1345_510_fu_14296_p1;
wire  signed [5:0] mul_ln1345_510_fu_14296_p2;
wire  signed [2:0] mul_ln1345_511_fu_14305_p0;
wire  signed [2:0] mul_ln1345_511_fu_14305_p1;
wire  signed [5:0] mul_ln1345_511_fu_14305_p2;
wire  signed [2:0] mul_ln1345_512_fu_14314_p0;
wire  signed [2:0] mul_ln1345_512_fu_14314_p1;
wire  signed [5:0] mul_ln1345_512_fu_14314_p2;
wire  signed [2:0] mul_ln1345_513_fu_14323_p0;
wire  signed [2:0] mul_ln1345_513_fu_14323_p1;
wire  signed [5:0] mul_ln1345_513_fu_14323_p2;
wire  signed [2:0] mul_ln1345_514_fu_14332_p0;
wire  signed [2:0] mul_ln1345_514_fu_14332_p1;
wire  signed [5:0] mul_ln1345_514_fu_14332_p2;
wire  signed [2:0] mul_ln1345_515_fu_14341_p0;
wire  signed [2:0] mul_ln1345_515_fu_14341_p1;
wire  signed [5:0] mul_ln1345_515_fu_14341_p2;
wire  signed [6:0] sext_ln151_428_fu_14328_p1;
wire  signed [6:0] sext_ln151_429_fu_14337_p1;
wire   [6:0] add_ln691_504_fu_14350_p2;
wire  signed [10:0] sext_ln691_338_fu_14356_p1;
wire   [10:0] tmp_328_fu_14241_p4;
wire  signed [6:0] sext_ln151_424_fu_14292_p1;
wire  signed [6:0] sext_ln151_426_fu_14310_p1;
wire   [6:0] add_ln691_506_fu_14366_p2;
wire  signed [6:0] sext_ln151_427_fu_14319_p1;
wire  signed [6:0] sext_ln151_420_fu_14256_p1;
wire  signed [6:0] sext_ln691_336_fu_14237_p1;
wire   [6:0] add_ln691_509_fu_14378_p2;
wire  signed [6:0] sext_ln151_425_fu_14301_p1;
wire   [6:0] add_ln691_510_fu_14384_p2;
wire  signed [6:0] sext_ln151_421_fu_14265_p1;
wire  signed [6:0] sext_ln151_423_fu_14283_p1;
wire   [6:0] add_ln691_511_fu_14394_p2;
wire  signed [6:0] sext_ln151_422_fu_14274_p1;
wire  signed [6:0] sext_ln691_337_fu_14346_p1;
wire   [6:0] add_ln691_512_fu_14404_p2;
wire  signed [7:0] sext_ln691_342_fu_14410_p1;
wire  signed [7:0] sext_ln691_341_fu_14400_p1;
wire   [7:0] add_ln691_513_fu_14414_p2;
wire  signed [7:0] sext_ln691_340_fu_14390_p1;
wire  signed [2:0] mul_ln1345_516_fu_14426_p0;
wire  signed [2:0] mul_ln1345_516_fu_14426_p1;
wire  signed [5:0] mul_ln1345_516_fu_14426_p2;
wire  signed [2:0] mul_ln1345_517_fu_14445_p0;
wire  signed [2:0] mul_ln1345_517_fu_14445_p1;
wire  signed [5:0] mul_ln1345_517_fu_14445_p2;
wire  signed [2:0] mul_ln1345_518_fu_14454_p0;
wire  signed [2:0] mul_ln1345_518_fu_14454_p1;
wire  signed [5:0] mul_ln1345_518_fu_14454_p2;
wire  signed [2:0] mul_ln1345_519_fu_14463_p0;
wire  signed [2:0] mul_ln1345_519_fu_14463_p1;
wire  signed [5:0] mul_ln1345_519_fu_14463_p2;
wire  signed [2:0] mul_ln1345_520_fu_14472_p0;
wire  signed [2:0] mul_ln1345_520_fu_14472_p1;
wire  signed [5:0] mul_ln1345_520_fu_14472_p2;
wire  signed [2:0] mul_ln1345_521_fu_14481_p0;
wire  signed [2:0] mul_ln1345_521_fu_14481_p1;
wire  signed [5:0] mul_ln1345_521_fu_14481_p2;
wire  signed [2:0] mul_ln1345_522_fu_14490_p0;
wire  signed [2:0] mul_ln1345_522_fu_14490_p1;
wire  signed [5:0] mul_ln1345_522_fu_14490_p2;
wire  signed [2:0] mul_ln1345_523_fu_14499_p0;
wire  signed [2:0] mul_ln1345_523_fu_14499_p1;
wire  signed [5:0] mul_ln1345_523_fu_14499_p2;
wire  signed [2:0] mul_ln1345_524_fu_14508_p0;
wire  signed [2:0] mul_ln1345_524_fu_14508_p1;
wire  signed [5:0] mul_ln1345_524_fu_14508_p2;
wire  signed [2:0] mul_ln1345_525_fu_14517_p0;
wire  signed [2:0] mul_ln1345_525_fu_14517_p1;
wire  signed [5:0] mul_ln1345_525_fu_14517_p2;
wire  signed [2:0] mul_ln1345_526_fu_14526_p0;
wire  signed [2:0] mul_ln1345_526_fu_14526_p1;
wire  signed [5:0] mul_ln1345_526_fu_14526_p2;
wire  signed [2:0] mul_ln1345_527_fu_14535_p0;
wire  signed [2:0] mul_ln1345_527_fu_14535_p1;
wire  signed [5:0] mul_ln1345_527_fu_14535_p2;
wire  signed [6:0] sext_ln151_438_fu_14522_p1;
wire  signed [6:0] sext_ln151_439_fu_14531_p1;
wire   [6:0] add_ln691_516_fu_14544_p2;
wire  signed [10:0] sext_ln691_346_fu_14550_p1;
wire   [10:0] tmp_329_fu_14435_p4;
wire  signed [6:0] sext_ln151_434_fu_14486_p1;
wire  signed [6:0] sext_ln151_436_fu_14504_p1;
wire   [6:0] add_ln691_518_fu_14560_p2;
wire  signed [6:0] sext_ln151_437_fu_14513_p1;
wire  signed [6:0] sext_ln151_430_fu_14450_p1;
wire  signed [6:0] sext_ln691_344_fu_14431_p1;
wire   [6:0] add_ln691_521_fu_14572_p2;
wire  signed [6:0] sext_ln151_435_fu_14495_p1;
wire   [6:0] add_ln691_522_fu_14578_p2;
wire  signed [6:0] sext_ln151_431_fu_14459_p1;
wire  signed [6:0] sext_ln151_433_fu_14477_p1;
wire   [6:0] add_ln691_523_fu_14588_p2;
wire  signed [6:0] sext_ln151_432_fu_14468_p1;
wire  signed [6:0] sext_ln691_345_fu_14540_p1;
wire   [6:0] add_ln691_524_fu_14598_p2;
wire  signed [7:0] sext_ln691_350_fu_14604_p1;
wire  signed [7:0] sext_ln691_349_fu_14594_p1;
wire   [7:0] add_ln691_525_fu_14608_p2;
wire  signed [7:0] sext_ln691_348_fu_14584_p1;
wire  signed [2:0] mul_ln1345_528_fu_14620_p0;
wire  signed [2:0] mul_ln1345_528_fu_14620_p1;
wire  signed [5:0] mul_ln1345_528_fu_14620_p2;
wire  signed [2:0] mul_ln1345_529_fu_14639_p0;
wire  signed [2:0] mul_ln1345_529_fu_14639_p1;
wire  signed [5:0] mul_ln1345_529_fu_14639_p2;
wire  signed [2:0] mul_ln1345_530_fu_14648_p0;
wire  signed [2:0] mul_ln1345_530_fu_14648_p1;
wire  signed [5:0] mul_ln1345_530_fu_14648_p2;
wire  signed [2:0] mul_ln1345_531_fu_14657_p0;
wire  signed [2:0] mul_ln1345_531_fu_14657_p1;
wire  signed [5:0] mul_ln1345_531_fu_14657_p2;
wire  signed [2:0] mul_ln1345_532_fu_14666_p0;
wire  signed [2:0] mul_ln1345_532_fu_14666_p1;
wire  signed [5:0] mul_ln1345_532_fu_14666_p2;
wire  signed [2:0] mul_ln1345_533_fu_14675_p0;
wire  signed [2:0] mul_ln1345_533_fu_14675_p1;
wire  signed [5:0] mul_ln1345_533_fu_14675_p2;
wire  signed [2:0] mul_ln1345_534_fu_14684_p0;
wire  signed [2:0] mul_ln1345_534_fu_14684_p1;
wire  signed [5:0] mul_ln1345_534_fu_14684_p2;
wire  signed [2:0] mul_ln1345_535_fu_14693_p0;
wire  signed [2:0] mul_ln1345_535_fu_14693_p1;
wire  signed [5:0] mul_ln1345_535_fu_14693_p2;
wire  signed [2:0] mul_ln1345_536_fu_14702_p0;
wire  signed [2:0] mul_ln1345_536_fu_14702_p1;
wire  signed [5:0] mul_ln1345_536_fu_14702_p2;
wire  signed [2:0] mul_ln1345_537_fu_14711_p0;
wire  signed [2:0] mul_ln1345_537_fu_14711_p1;
wire  signed [5:0] mul_ln1345_537_fu_14711_p2;
wire  signed [2:0] mul_ln1345_538_fu_14720_p0;
wire  signed [2:0] mul_ln1345_538_fu_14720_p1;
wire  signed [5:0] mul_ln1345_538_fu_14720_p2;
wire  signed [2:0] mul_ln1345_539_fu_14729_p0;
wire  signed [2:0] mul_ln1345_539_fu_14729_p1;
wire  signed [5:0] mul_ln1345_539_fu_14729_p2;
wire  signed [6:0] sext_ln151_448_fu_14716_p1;
wire  signed [6:0] sext_ln151_449_fu_14725_p1;
wire   [6:0] add_ln691_528_fu_14738_p2;
wire  signed [10:0] sext_ln691_354_fu_14744_p1;
wire   [10:0] tmp_330_fu_14629_p4;
wire  signed [6:0] sext_ln151_444_fu_14680_p1;
wire  signed [6:0] sext_ln151_446_fu_14698_p1;
wire   [6:0] add_ln691_530_fu_14754_p2;
wire  signed [6:0] sext_ln151_447_fu_14707_p1;
wire  signed [6:0] sext_ln151_440_fu_14644_p1;
wire  signed [6:0] sext_ln691_352_fu_14625_p1;
wire   [6:0] add_ln691_533_fu_14766_p2;
wire  signed [6:0] sext_ln151_445_fu_14689_p1;
wire   [6:0] add_ln691_534_fu_14772_p2;
wire  signed [6:0] sext_ln151_441_fu_14653_p1;
wire  signed [6:0] sext_ln151_443_fu_14671_p1;
wire   [6:0] add_ln691_535_fu_14782_p2;
wire  signed [6:0] sext_ln151_442_fu_14662_p1;
wire  signed [6:0] sext_ln691_353_fu_14734_p1;
wire   [6:0] add_ln691_536_fu_14792_p2;
wire  signed [7:0] sext_ln691_358_fu_14798_p1;
wire  signed [7:0] sext_ln691_357_fu_14788_p1;
wire   [7:0] add_ln691_537_fu_14802_p2;
wire  signed [7:0] sext_ln691_356_fu_14778_p1;
wire  signed [2:0] mul_ln1345_540_fu_14814_p0;
wire  signed [2:0] mul_ln1345_540_fu_14814_p1;
wire  signed [5:0] mul_ln1345_540_fu_14814_p2;
wire  signed [2:0] mul_ln1345_541_fu_14833_p0;
wire  signed [2:0] mul_ln1345_541_fu_14833_p1;
wire  signed [5:0] mul_ln1345_541_fu_14833_p2;
wire  signed [2:0] mul_ln1345_542_fu_14842_p0;
wire  signed [2:0] mul_ln1345_542_fu_14842_p1;
wire  signed [5:0] mul_ln1345_542_fu_14842_p2;
wire  signed [2:0] mul_ln1345_543_fu_14851_p0;
wire  signed [2:0] mul_ln1345_543_fu_14851_p1;
wire  signed [5:0] mul_ln1345_543_fu_14851_p2;
wire  signed [2:0] mul_ln1345_544_fu_14860_p0;
wire  signed [2:0] mul_ln1345_544_fu_14860_p1;
wire  signed [5:0] mul_ln1345_544_fu_14860_p2;
wire  signed [2:0] mul_ln1345_545_fu_14869_p0;
wire  signed [2:0] mul_ln1345_545_fu_14869_p1;
wire  signed [5:0] mul_ln1345_545_fu_14869_p2;
wire  signed [2:0] mul_ln1345_546_fu_14878_p0;
wire  signed [2:0] mul_ln1345_546_fu_14878_p1;
wire  signed [5:0] mul_ln1345_546_fu_14878_p2;
wire  signed [2:0] mul_ln1345_547_fu_14887_p0;
wire  signed [2:0] mul_ln1345_547_fu_14887_p1;
wire  signed [5:0] mul_ln1345_547_fu_14887_p2;
wire  signed [2:0] mul_ln1345_548_fu_14896_p0;
wire  signed [2:0] mul_ln1345_548_fu_14896_p1;
wire  signed [5:0] mul_ln1345_548_fu_14896_p2;
wire  signed [2:0] mul_ln1345_549_fu_14905_p0;
wire  signed [2:0] mul_ln1345_549_fu_14905_p1;
wire  signed [5:0] mul_ln1345_549_fu_14905_p2;
wire  signed [2:0] mul_ln1345_550_fu_14914_p0;
wire  signed [2:0] mul_ln1345_550_fu_14914_p1;
wire  signed [5:0] mul_ln1345_550_fu_14914_p2;
wire  signed [2:0] mul_ln1345_551_fu_14923_p0;
wire  signed [2:0] mul_ln1345_551_fu_14923_p1;
wire  signed [5:0] mul_ln1345_551_fu_14923_p2;
wire  signed [6:0] sext_ln151_458_fu_14910_p1;
wire  signed [6:0] sext_ln151_459_fu_14919_p1;
wire   [6:0] add_ln691_540_fu_14932_p2;
wire  signed [10:0] sext_ln691_362_fu_14938_p1;
wire   [10:0] tmp_331_fu_14823_p4;
wire  signed [6:0] sext_ln151_454_fu_14874_p1;
wire  signed [6:0] sext_ln151_456_fu_14892_p1;
wire   [6:0] add_ln691_542_fu_14948_p2;
wire  signed [6:0] sext_ln151_457_fu_14901_p1;
wire  signed [6:0] sext_ln151_450_fu_14838_p1;
wire  signed [6:0] sext_ln691_360_fu_14819_p1;
wire   [6:0] add_ln691_545_fu_14960_p2;
wire  signed [6:0] sext_ln151_455_fu_14883_p1;
wire   [6:0] add_ln691_546_fu_14966_p2;
wire  signed [6:0] sext_ln151_451_fu_14847_p1;
wire  signed [6:0] sext_ln151_453_fu_14865_p1;
wire   [6:0] add_ln691_547_fu_14976_p2;
wire  signed [6:0] sext_ln151_452_fu_14856_p1;
wire  signed [6:0] sext_ln691_361_fu_14928_p1;
wire   [6:0] add_ln691_548_fu_14986_p2;
wire  signed [7:0] sext_ln691_366_fu_14992_p1;
wire  signed [7:0] sext_ln691_365_fu_14982_p1;
wire   [7:0] add_ln691_549_fu_14996_p2;
wire  signed [7:0] sext_ln691_364_fu_14972_p1;
wire  signed [2:0] mul_ln1345_552_fu_15008_p0;
wire  signed [2:0] mul_ln1345_552_fu_15008_p1;
wire  signed [5:0] mul_ln1345_552_fu_15008_p2;
wire  signed [2:0] mul_ln1345_553_fu_15027_p0;
wire  signed [2:0] mul_ln1345_553_fu_15027_p1;
wire  signed [5:0] mul_ln1345_553_fu_15027_p2;
wire  signed [2:0] mul_ln1345_554_fu_15036_p0;
wire  signed [2:0] mul_ln1345_554_fu_15036_p1;
wire  signed [5:0] mul_ln1345_554_fu_15036_p2;
wire  signed [2:0] mul_ln1345_555_fu_15045_p0;
wire  signed [2:0] mul_ln1345_555_fu_15045_p1;
wire  signed [5:0] mul_ln1345_555_fu_15045_p2;
wire  signed [2:0] mul_ln1345_556_fu_15054_p0;
wire  signed [2:0] mul_ln1345_556_fu_15054_p1;
wire  signed [5:0] mul_ln1345_556_fu_15054_p2;
wire  signed [2:0] mul_ln1345_557_fu_15063_p0;
wire  signed [2:0] mul_ln1345_557_fu_15063_p1;
wire  signed [5:0] mul_ln1345_557_fu_15063_p2;
wire  signed [2:0] mul_ln1345_558_fu_15072_p0;
wire  signed [2:0] mul_ln1345_558_fu_15072_p1;
wire  signed [5:0] mul_ln1345_558_fu_15072_p2;
wire  signed [2:0] mul_ln1345_559_fu_15081_p0;
wire  signed [2:0] mul_ln1345_559_fu_15081_p1;
wire  signed [5:0] mul_ln1345_559_fu_15081_p2;
wire  signed [2:0] mul_ln1345_560_fu_15090_p0;
wire  signed [2:0] mul_ln1345_560_fu_15090_p1;
wire  signed [5:0] mul_ln1345_560_fu_15090_p2;
wire  signed [2:0] mul_ln1345_561_fu_15099_p0;
wire  signed [2:0] mul_ln1345_561_fu_15099_p1;
wire  signed [5:0] mul_ln1345_561_fu_15099_p2;
wire  signed [2:0] mul_ln1345_562_fu_15108_p0;
wire  signed [2:0] mul_ln1345_562_fu_15108_p1;
wire  signed [5:0] mul_ln1345_562_fu_15108_p2;
wire  signed [2:0] mul_ln1345_563_fu_15117_p0;
wire  signed [2:0] mul_ln1345_563_fu_15117_p1;
wire  signed [5:0] mul_ln1345_563_fu_15117_p2;
wire  signed [6:0] sext_ln151_468_fu_15104_p1;
wire  signed [6:0] sext_ln151_469_fu_15113_p1;
wire   [6:0] add_ln691_552_fu_15126_p2;
wire  signed [10:0] sext_ln691_370_fu_15132_p1;
wire   [10:0] tmp_332_fu_15017_p4;
wire  signed [6:0] sext_ln151_464_fu_15068_p1;
wire  signed [6:0] sext_ln151_466_fu_15086_p1;
wire   [6:0] add_ln691_554_fu_15142_p2;
wire  signed [6:0] sext_ln151_467_fu_15095_p1;
wire  signed [6:0] sext_ln151_460_fu_15032_p1;
wire  signed [6:0] sext_ln691_368_fu_15013_p1;
wire   [6:0] add_ln691_557_fu_15154_p2;
wire  signed [6:0] sext_ln151_465_fu_15077_p1;
wire   [6:0] add_ln691_558_fu_15160_p2;
wire  signed [6:0] sext_ln151_461_fu_15041_p1;
wire  signed [6:0] sext_ln151_463_fu_15059_p1;
wire   [6:0] add_ln691_559_fu_15170_p2;
wire  signed [6:0] sext_ln151_462_fu_15050_p1;
wire  signed [6:0] sext_ln691_369_fu_15122_p1;
wire   [6:0] add_ln691_560_fu_15180_p2;
wire  signed [7:0] sext_ln691_374_fu_15186_p1;
wire  signed [7:0] sext_ln691_373_fu_15176_p1;
wire   [7:0] add_ln691_561_fu_15190_p2;
wire  signed [7:0] sext_ln691_372_fu_15166_p1;
wire  signed [2:0] mul_ln1345_564_fu_15202_p0;
wire  signed [2:0] mul_ln1345_564_fu_15202_p1;
wire  signed [5:0] mul_ln1345_564_fu_15202_p2;
wire  signed [2:0] mul_ln1345_565_fu_15221_p0;
wire  signed [2:0] mul_ln1345_565_fu_15221_p1;
wire  signed [5:0] mul_ln1345_565_fu_15221_p2;
wire  signed [2:0] mul_ln1345_566_fu_15230_p0;
wire  signed [2:0] mul_ln1345_566_fu_15230_p1;
wire  signed [5:0] mul_ln1345_566_fu_15230_p2;
wire  signed [2:0] mul_ln1345_567_fu_15239_p0;
wire  signed [2:0] mul_ln1345_567_fu_15239_p1;
wire  signed [5:0] mul_ln1345_567_fu_15239_p2;
wire  signed [2:0] mul_ln1345_568_fu_15248_p0;
wire  signed [2:0] mul_ln1345_568_fu_15248_p1;
wire  signed [5:0] mul_ln1345_568_fu_15248_p2;
wire  signed [2:0] mul_ln1345_569_fu_15257_p0;
wire  signed [2:0] mul_ln1345_569_fu_15257_p1;
wire  signed [5:0] mul_ln1345_569_fu_15257_p2;
wire  signed [2:0] mul_ln1345_570_fu_15266_p0;
wire  signed [2:0] mul_ln1345_570_fu_15266_p1;
wire  signed [5:0] mul_ln1345_570_fu_15266_p2;
wire  signed [2:0] mul_ln1345_571_fu_15275_p0;
wire  signed [2:0] mul_ln1345_571_fu_15275_p1;
wire  signed [5:0] mul_ln1345_571_fu_15275_p2;
wire  signed [2:0] mul_ln1345_572_fu_15284_p0;
wire  signed [2:0] mul_ln1345_572_fu_15284_p1;
wire  signed [5:0] mul_ln1345_572_fu_15284_p2;
wire  signed [2:0] mul_ln1345_573_fu_15293_p0;
wire  signed [2:0] mul_ln1345_573_fu_15293_p1;
wire  signed [5:0] mul_ln1345_573_fu_15293_p2;
wire  signed [2:0] mul_ln1345_574_fu_15302_p0;
wire  signed [2:0] mul_ln1345_574_fu_15302_p1;
wire  signed [5:0] mul_ln1345_574_fu_15302_p2;
wire  signed [2:0] mul_ln1345_575_fu_15311_p0;
wire  signed [2:0] mul_ln1345_575_fu_15311_p1;
wire  signed [5:0] mul_ln1345_575_fu_15311_p2;
wire  signed [6:0] sext_ln151_478_fu_15298_p1;
wire  signed [6:0] sext_ln151_479_fu_15307_p1;
wire   [6:0] add_ln691_564_fu_15320_p2;
wire  signed [10:0] sext_ln691_378_fu_15326_p1;
wire   [10:0] tmp_333_fu_15211_p4;
wire  signed [6:0] sext_ln151_474_fu_15262_p1;
wire  signed [6:0] sext_ln151_476_fu_15280_p1;
wire   [6:0] add_ln691_566_fu_15336_p2;
wire  signed [6:0] sext_ln151_477_fu_15289_p1;
wire  signed [6:0] sext_ln151_470_fu_15226_p1;
wire  signed [6:0] sext_ln691_376_fu_15207_p1;
wire   [6:0] add_ln691_569_fu_15348_p2;
wire  signed [6:0] sext_ln151_475_fu_15271_p1;
wire   [6:0] add_ln691_570_fu_15354_p2;
wire  signed [6:0] sext_ln151_471_fu_15235_p1;
wire  signed [6:0] sext_ln151_473_fu_15253_p1;
wire   [6:0] add_ln691_571_fu_15364_p2;
wire  signed [6:0] sext_ln151_472_fu_15244_p1;
wire  signed [6:0] sext_ln691_377_fu_15316_p1;
wire   [6:0] add_ln691_572_fu_15374_p2;
wire  signed [7:0] sext_ln691_382_fu_15380_p1;
wire  signed [7:0] sext_ln691_381_fu_15370_p1;
wire   [7:0] add_ln691_573_fu_15384_p2;
wire  signed [7:0] sext_ln691_380_fu_15360_p1;
wire  signed [10:0] sext_ln691_3_fu_15396_p1;
wire  signed [10:0] sext_ln691_7_fu_15404_p1;
wire   [10:0] add_ln691_4_fu_15399_p2;
wire  signed [10:0] sext_ln691_11_fu_15413_p1;
wire  signed [10:0] sext_ln691_15_fu_15421_p1;
wire   [10:0] add_ln691_16_fu_15416_p2;
wire  signed [10:0] sext_ln691_19_fu_15430_p1;
wire  signed [10:0] sext_ln691_23_fu_15438_p1;
wire   [10:0] add_ln691_28_fu_15433_p2;
wire  signed [10:0] sext_ln691_27_fu_15447_p1;
wire  signed [10:0] sext_ln691_31_fu_15455_p1;
wire   [10:0] add_ln691_40_fu_15450_p2;
wire  signed [10:0] sext_ln691_35_fu_15464_p1;
wire  signed [10:0] sext_ln691_39_fu_15472_p1;
wire   [10:0] add_ln691_52_fu_15467_p2;
wire  signed [10:0] sext_ln691_43_fu_15481_p1;
wire  signed [10:0] sext_ln691_47_fu_15489_p1;
wire   [10:0] add_ln691_64_fu_15484_p2;
wire  signed [10:0] sext_ln691_51_fu_15498_p1;
wire  signed [10:0] sext_ln691_55_fu_15506_p1;
wire   [10:0] add_ln691_76_fu_15501_p2;
wire  signed [10:0] sext_ln691_59_fu_15515_p1;
wire  signed [10:0] sext_ln691_63_fu_15523_p1;
wire   [10:0] add_ln691_88_fu_15518_p2;
wire  signed [10:0] sext_ln691_67_fu_15532_p1;
wire  signed [10:0] sext_ln691_71_fu_15540_p1;
wire   [10:0] add_ln691_100_fu_15535_p2;
wire  signed [10:0] sext_ln691_75_fu_15549_p1;
wire  signed [10:0] sext_ln691_79_fu_15557_p1;
wire   [10:0] add_ln691_112_fu_15552_p2;
wire  signed [10:0] sext_ln691_83_fu_15566_p1;
wire  signed [10:0] sext_ln691_87_fu_15574_p1;
wire   [10:0] add_ln691_124_fu_15569_p2;
wire  signed [10:0] sext_ln691_91_fu_15583_p1;
wire  signed [10:0] sext_ln691_95_fu_15591_p1;
wire   [10:0] add_ln691_136_fu_15586_p2;
wire  signed [10:0] sext_ln691_99_fu_15600_p1;
wire  signed [10:0] sext_ln691_103_fu_15608_p1;
wire   [10:0] add_ln691_148_fu_15603_p2;
wire  signed [10:0] sext_ln691_107_fu_15617_p1;
wire  signed [10:0] sext_ln691_111_fu_15625_p1;
wire   [10:0] add_ln691_160_fu_15620_p2;
wire  signed [10:0] sext_ln691_115_fu_15634_p1;
wire  signed [10:0] sext_ln691_119_fu_15642_p1;
wire   [10:0] add_ln691_172_fu_15637_p2;
wire  signed [10:0] sext_ln691_123_fu_15651_p1;
wire  signed [10:0] sext_ln691_127_fu_15659_p1;
wire   [10:0] add_ln691_184_fu_15654_p2;
wire  signed [10:0] sext_ln691_131_fu_15668_p1;
wire  signed [10:0] sext_ln691_135_fu_15676_p1;
wire   [10:0] add_ln691_196_fu_15671_p2;
wire  signed [10:0] sext_ln691_139_fu_15685_p1;
wire  signed [10:0] sext_ln691_143_fu_15693_p1;
wire   [10:0] add_ln691_208_fu_15688_p2;
wire  signed [10:0] sext_ln691_147_fu_15702_p1;
wire  signed [10:0] sext_ln691_151_fu_15710_p1;
wire   [10:0] add_ln691_220_fu_15705_p2;
wire  signed [10:0] sext_ln691_155_fu_15719_p1;
wire  signed [10:0] sext_ln691_159_fu_15727_p1;
wire   [10:0] add_ln691_232_fu_15722_p2;
wire  signed [10:0] sext_ln691_163_fu_15736_p1;
wire  signed [10:0] sext_ln691_167_fu_15744_p1;
wire   [10:0] add_ln691_244_fu_15739_p2;
wire  signed [10:0] sext_ln691_171_fu_15753_p1;
wire  signed [10:0] sext_ln691_175_fu_15761_p1;
wire   [10:0] add_ln691_256_fu_15756_p2;
wire  signed [10:0] sext_ln691_179_fu_15770_p1;
wire  signed [10:0] sext_ln691_183_fu_15778_p1;
wire   [10:0] add_ln691_268_fu_15773_p2;
wire  signed [10:0] sext_ln691_187_fu_15787_p1;
wire  signed [10:0] sext_ln691_191_fu_15795_p1;
wire   [10:0] add_ln691_280_fu_15790_p2;
wire  signed [10:0] sext_ln691_195_fu_15804_p1;
wire  signed [10:0] sext_ln691_199_fu_15812_p1;
wire   [10:0] add_ln691_292_fu_15807_p2;
wire  signed [10:0] sext_ln691_203_fu_15821_p1;
wire  signed [10:0] sext_ln691_207_fu_15829_p1;
wire   [10:0] add_ln691_304_fu_15824_p2;
wire  signed [10:0] sext_ln691_211_fu_15838_p1;
wire  signed [10:0] sext_ln691_215_fu_15846_p1;
wire   [10:0] add_ln691_316_fu_15841_p2;
wire  signed [10:0] sext_ln691_219_fu_15855_p1;
wire  signed [10:0] sext_ln691_223_fu_15863_p1;
wire   [10:0] add_ln691_328_fu_15858_p2;
wire  signed [10:0] sext_ln691_227_fu_15872_p1;
wire  signed [10:0] sext_ln691_231_fu_15880_p1;
wire   [10:0] add_ln691_340_fu_15875_p2;
wire  signed [10:0] sext_ln691_235_fu_15889_p1;
wire  signed [10:0] sext_ln691_239_fu_15897_p1;
wire   [10:0] add_ln691_352_fu_15892_p2;
wire  signed [10:0] sext_ln691_243_fu_15906_p1;
wire  signed [10:0] sext_ln691_247_fu_15914_p1;
wire   [10:0] add_ln691_364_fu_15909_p2;
wire  signed [10:0] sext_ln691_251_fu_15923_p1;
wire  signed [10:0] sext_ln691_255_fu_15931_p1;
wire   [10:0] add_ln691_376_fu_15926_p2;
wire  signed [10:0] sext_ln691_259_fu_15940_p1;
wire  signed [10:0] sext_ln691_263_fu_15948_p1;
wire   [10:0] add_ln691_388_fu_15943_p2;
wire  signed [10:0] sext_ln691_267_fu_15957_p1;
wire  signed [10:0] sext_ln691_271_fu_15965_p1;
wire   [10:0] add_ln691_400_fu_15960_p2;
wire  signed [10:0] sext_ln691_275_fu_15974_p1;
wire  signed [10:0] sext_ln691_279_fu_15982_p1;
wire   [10:0] add_ln691_412_fu_15977_p2;
wire  signed [10:0] sext_ln691_283_fu_15991_p1;
wire  signed [10:0] sext_ln691_287_fu_15999_p1;
wire   [10:0] add_ln691_424_fu_15994_p2;
wire  signed [10:0] sext_ln691_291_fu_16008_p1;
wire  signed [10:0] sext_ln691_295_fu_16016_p1;
wire   [10:0] add_ln691_436_fu_16011_p2;
wire  signed [10:0] sext_ln691_299_fu_16025_p1;
wire  signed [10:0] sext_ln691_303_fu_16033_p1;
wire   [10:0] add_ln691_448_fu_16028_p2;
wire  signed [10:0] sext_ln691_307_fu_16042_p1;
wire  signed [10:0] sext_ln691_311_fu_16050_p1;
wire   [10:0] add_ln691_460_fu_16045_p2;
wire  signed [10:0] sext_ln691_315_fu_16059_p1;
wire  signed [10:0] sext_ln691_319_fu_16067_p1;
wire   [10:0] add_ln691_472_fu_16062_p2;
wire  signed [10:0] sext_ln691_323_fu_16076_p1;
wire  signed [10:0] sext_ln691_327_fu_16084_p1;
wire   [10:0] add_ln691_484_fu_16079_p2;
wire  signed [10:0] sext_ln691_331_fu_16093_p1;
wire  signed [10:0] sext_ln691_335_fu_16101_p1;
wire   [10:0] add_ln691_496_fu_16096_p2;
wire  signed [10:0] sext_ln691_339_fu_16110_p1;
wire  signed [10:0] sext_ln691_343_fu_16118_p1;
wire   [10:0] add_ln691_508_fu_16113_p2;
wire  signed [10:0] sext_ln691_347_fu_16127_p1;
wire  signed [10:0] sext_ln691_351_fu_16135_p1;
wire   [10:0] add_ln691_520_fu_16130_p2;
wire  signed [10:0] sext_ln691_355_fu_16144_p1;
wire  signed [10:0] sext_ln691_359_fu_16152_p1;
wire   [10:0] add_ln691_532_fu_16147_p2;
wire  signed [10:0] sext_ln691_363_fu_16161_p1;
wire  signed [10:0] sext_ln691_367_fu_16169_p1;
wire   [10:0] add_ln691_544_fu_16164_p2;
wire  signed [10:0] sext_ln691_371_fu_16178_p1;
wire  signed [10:0] sext_ln691_375_fu_16186_p1;
wire   [10:0] add_ln691_556_fu_16181_p2;
wire  signed [10:0] sext_ln691_379_fu_16195_p1;
wire  signed [10:0] sext_ln691_383_fu_16203_p1;
wire   [10:0] add_ln691_568_fu_16198_p2;
wire   [10:0] add_ln691_575_fu_16206_p2;
wire   [10:0] add_ln691_563_fu_16189_p2;
wire   [10:0] add_ln691_551_fu_16172_p2;
wire   [10:0] add_ln691_539_fu_16155_p2;
wire   [10:0] add_ln691_527_fu_16138_p2;
wire   [10:0] add_ln691_515_fu_16121_p2;
wire   [10:0] add_ln691_503_fu_16104_p2;
wire   [10:0] add_ln691_491_fu_16087_p2;
wire   [10:0] add_ln691_479_fu_16070_p2;
wire   [10:0] add_ln691_467_fu_16053_p2;
wire   [10:0] add_ln691_455_fu_16036_p2;
wire   [10:0] add_ln691_443_fu_16019_p2;
wire   [10:0] add_ln691_431_fu_16002_p2;
wire   [10:0] add_ln691_419_fu_15985_p2;
wire   [10:0] add_ln691_407_fu_15968_p2;
wire   [10:0] add_ln691_395_fu_15951_p2;
wire   [10:0] add_ln691_383_fu_15934_p2;
wire   [10:0] add_ln691_371_fu_15917_p2;
wire   [10:0] add_ln691_359_fu_15900_p2;
wire   [10:0] add_ln691_347_fu_15883_p2;
wire   [10:0] add_ln691_335_fu_15866_p2;
wire   [10:0] add_ln691_323_fu_15849_p2;
wire   [10:0] add_ln691_311_fu_15832_p2;
wire   [10:0] add_ln691_299_fu_15815_p2;
wire   [10:0] add_ln691_287_fu_15798_p2;
wire   [10:0] add_ln691_275_fu_15781_p2;
wire   [10:0] add_ln691_263_fu_15764_p2;
wire   [10:0] add_ln691_251_fu_15747_p2;
wire   [10:0] add_ln691_239_fu_15730_p2;
wire   [10:0] add_ln691_227_fu_15713_p2;
wire   [10:0] add_ln691_215_fu_15696_p2;
wire   [10:0] add_ln691_203_fu_15679_p2;
wire   [10:0] add_ln691_191_fu_15662_p2;
wire   [10:0] add_ln691_179_fu_15645_p2;
wire   [10:0] add_ln691_167_fu_15628_p2;
wire   [10:0] add_ln691_155_fu_15611_p2;
wire   [10:0] add_ln691_143_fu_15594_p2;
wire   [10:0] add_ln691_131_fu_15577_p2;
wire   [10:0] add_ln691_119_fu_15560_p2;
wire   [10:0] add_ln691_107_fu_15543_p2;
wire   [10:0] add_ln691_95_fu_15526_p2;
wire   [10:0] add_ln691_83_fu_15509_p2;
wire   [10:0] add_ln691_71_fu_15492_p2;
wire   [10:0] add_ln691_59_fu_15475_p2;
wire   [10:0] add_ln691_47_fu_15458_p2;
wire   [10:0] add_ln691_35_fu_15441_p2;
wire   [10:0] add_ln691_23_fu_15424_p2;
wire   [10:0] add_ln691_11_fu_15407_p2;
wire   [762:0] tmp_335_fu_16317_p96;
wire    ap_CS_fsm_state8;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 5'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

MLP0_matmul_step2_mac_1_mlp_inst_m1_bias_arr_V #(
    .DataWidth( 264 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mlp_inst_m1_bias_arr_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m1_bias_arr_V_address0),
    .ce0(mlp_inst_m1_bias_arr_V_ce0),
    .q0(mlp_inst_m1_bias_arr_V_q0)
);

MLP0_matmul_step2_mac_1_mlp_inst_m1_weight_arr_V #(
    .DataWidth( 864 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
mlp_inst_m1_weight_arr_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mlp_inst_m1_weight_arr_V_address0),
    .ce0(mlp_inst_m1_weight_arr_V_ce0),
    .q0(mlp_inst_m1_weight_arr_V_q0)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U31(
    .din0(trunc_ln215_2_fu_1964_p1),
    .din1(mul_ln1345_fu_1976_p1),
    .dout(mul_ln1345_fu_1976_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U32(
    .din0(tmp_2_fu_1982_p4),
    .din1(mul_ln1345_1_fu_2000_p1),
    .dout(mul_ln1345_1_fu_2000_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U33(
    .din0(tmp_3_fu_2006_p4),
    .din1(mul_ln1345_2_fu_2024_p1),
    .dout(mul_ln1345_2_fu_2024_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U34(
    .din0(tmp_4_fu_2030_p4),
    .din1(mul_ln1345_3_fu_2048_p1),
    .dout(mul_ln1345_3_fu_2048_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U35(
    .din0(tmp_5_fu_2054_p4),
    .din1(mul_ln1345_4_fu_2072_p1),
    .dout(mul_ln1345_4_fu_2072_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U36(
    .din0(tmp_6_fu_2078_p4),
    .din1(mul_ln1345_5_fu_2096_p1),
    .dout(mul_ln1345_5_fu_2096_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U37(
    .din0(tmp_7_fu_2102_p4),
    .din1(mul_ln1345_6_fu_2120_p1),
    .dout(mul_ln1345_6_fu_2120_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U38(
    .din0(tmp_8_fu_2126_p4),
    .din1(mul_ln1345_7_fu_2144_p1),
    .dout(mul_ln1345_7_fu_2144_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U39(
    .din0(tmp_9_fu_2150_p4),
    .din1(mul_ln1345_8_fu_2168_p1),
    .dout(mul_ln1345_8_fu_2168_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U40(
    .din0(tmp_s_fu_2174_p4),
    .din1(mul_ln1345_9_fu_2192_p1),
    .dout(mul_ln1345_9_fu_2192_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U41(
    .din0(tmp_1_fu_2198_p4),
    .din1(mul_ln1345_10_fu_2216_p1),
    .dout(mul_ln1345_10_fu_2216_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U42(
    .din0(tmp_10_fu_2222_p4),
    .din1(mul_ln1345_11_fu_2240_p1),
    .dout(mul_ln1345_11_fu_2240_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U43(
    .din0(tmp_11_fu_2246_p4),
    .din1(mul_ln1345_12_fu_2260_p1),
    .dout(mul_ln1345_12_fu_2260_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U44(
    .din0(tmp_13_fu_2266_p4),
    .din1(mul_ln1345_13_fu_2280_p1),
    .dout(mul_ln1345_13_fu_2280_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U45(
    .din0(tmp_14_fu_2286_p4),
    .din1(mul_ln1345_14_fu_2300_p1),
    .dout(mul_ln1345_14_fu_2300_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U46(
    .din0(tmp_15_fu_2306_p4),
    .din1(mul_ln1345_15_fu_2320_p1),
    .dout(mul_ln1345_15_fu_2320_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U47(
    .din0(tmp_16_fu_2326_p4),
    .din1(mul_ln1345_16_fu_2340_p1),
    .dout(mul_ln1345_16_fu_2340_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U48(
    .din0(tmp_17_fu_2346_p4),
    .din1(mul_ln1345_17_fu_2360_p1),
    .dout(mul_ln1345_17_fu_2360_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U49(
    .din0(tmp_18_fu_2366_p4),
    .din1(mul_ln1345_18_fu_2380_p1),
    .dout(mul_ln1345_18_fu_2380_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U50(
    .din0(tmp_19_fu_2386_p4),
    .din1(mul_ln1345_19_fu_2400_p1),
    .dout(mul_ln1345_19_fu_2400_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U51(
    .din0(tmp_20_fu_2406_p4),
    .din1(mul_ln1345_20_fu_2420_p1),
    .dout(mul_ln1345_20_fu_2420_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U52(
    .din0(tmp_21_fu_2426_p4),
    .din1(mul_ln1345_21_fu_2440_p1),
    .dout(mul_ln1345_21_fu_2440_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U53(
    .din0(tmp_22_fu_2446_p4),
    .din1(mul_ln1345_22_fu_2460_p1),
    .dout(mul_ln1345_22_fu_2460_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U54(
    .din0(tmp_23_fu_2466_p4),
    .din1(mul_ln1345_23_fu_2480_p1),
    .dout(mul_ln1345_23_fu_2480_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U55(
    .din0(tmp_24_fu_2486_p4),
    .din1(mul_ln1345_24_fu_2500_p1),
    .dout(mul_ln1345_24_fu_2500_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U56(
    .din0(tmp_26_fu_2506_p4),
    .din1(mul_ln1345_25_fu_2520_p1),
    .dout(mul_ln1345_25_fu_2520_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U57(
    .din0(tmp_27_fu_2526_p4),
    .din1(mul_ln1345_26_fu_2540_p1),
    .dout(mul_ln1345_26_fu_2540_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U58(
    .din0(tmp_28_fu_2546_p4),
    .din1(mul_ln1345_27_fu_2560_p1),
    .dout(mul_ln1345_27_fu_2560_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U59(
    .din0(tmp_29_fu_2566_p4),
    .din1(mul_ln1345_28_fu_2580_p1),
    .dout(mul_ln1345_28_fu_2580_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U60(
    .din0(tmp_30_fu_2586_p4),
    .din1(mul_ln1345_29_fu_2600_p1),
    .dout(mul_ln1345_29_fu_2600_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U61(
    .din0(tmp_31_fu_2606_p4),
    .din1(mul_ln1345_30_fu_2620_p1),
    .dout(mul_ln1345_30_fu_2620_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U62(
    .din0(tmp_32_fu_2626_p4),
    .din1(mul_ln1345_31_fu_2640_p1),
    .dout(mul_ln1345_31_fu_2640_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U63(
    .din0(tmp_33_fu_2646_p4),
    .din1(mul_ln1345_32_fu_2660_p1),
    .dout(mul_ln1345_32_fu_2660_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U64(
    .din0(tmp_34_fu_2666_p4),
    .din1(mul_ln1345_33_fu_2680_p1),
    .dout(mul_ln1345_33_fu_2680_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U65(
    .din0(tmp_35_fu_2686_p4),
    .din1(mul_ln1345_34_fu_2700_p1),
    .dout(mul_ln1345_34_fu_2700_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U66(
    .din0(tmp_36_fu_2706_p4),
    .din1(mul_ln1345_35_fu_2720_p1),
    .dout(mul_ln1345_35_fu_2720_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U67(
    .din0(tmp_37_fu_2726_p4),
    .din1(mul_ln1345_36_fu_2740_p1),
    .dout(mul_ln1345_36_fu_2740_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U68(
    .din0(tmp_39_fu_2746_p4),
    .din1(mul_ln1345_37_fu_2760_p1),
    .dout(mul_ln1345_37_fu_2760_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U69(
    .din0(tmp_40_fu_2766_p4),
    .din1(mul_ln1345_38_fu_2780_p1),
    .dout(mul_ln1345_38_fu_2780_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U70(
    .din0(tmp_41_fu_2786_p4),
    .din1(mul_ln1345_39_fu_2800_p1),
    .dout(mul_ln1345_39_fu_2800_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U71(
    .din0(tmp_42_fu_2806_p4),
    .din1(mul_ln1345_40_fu_2820_p1),
    .dout(mul_ln1345_40_fu_2820_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U72(
    .din0(tmp_43_fu_2826_p4),
    .din1(mul_ln1345_41_fu_2840_p1),
    .dout(mul_ln1345_41_fu_2840_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U73(
    .din0(tmp_44_fu_2846_p4),
    .din1(mul_ln1345_42_fu_2860_p1),
    .dout(mul_ln1345_42_fu_2860_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U74(
    .din0(tmp_45_fu_2866_p4),
    .din1(mul_ln1345_43_fu_2880_p1),
    .dout(mul_ln1345_43_fu_2880_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U75(
    .din0(tmp_46_fu_2886_p4),
    .din1(mul_ln1345_44_fu_2900_p1),
    .dout(mul_ln1345_44_fu_2900_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U76(
    .din0(tmp_47_fu_2906_p4),
    .din1(mul_ln1345_45_fu_2920_p1),
    .dout(mul_ln1345_45_fu_2920_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U77(
    .din0(tmp_48_fu_2926_p4),
    .din1(mul_ln1345_46_fu_2940_p1),
    .dout(mul_ln1345_46_fu_2940_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U78(
    .din0(tmp_49_fu_2946_p4),
    .din1(mul_ln1345_47_fu_2960_p1),
    .dout(mul_ln1345_47_fu_2960_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U79(
    .din0(tmp_50_fu_2966_p4),
    .din1(mul_ln1345_48_fu_2980_p1),
    .dout(mul_ln1345_48_fu_2980_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U80(
    .din0(tmp_52_fu_2986_p4),
    .din1(mul_ln1345_49_fu_3000_p1),
    .dout(mul_ln1345_49_fu_3000_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U81(
    .din0(tmp_53_fu_3006_p4),
    .din1(mul_ln1345_50_fu_3020_p1),
    .dout(mul_ln1345_50_fu_3020_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U82(
    .din0(tmp_54_fu_3026_p4),
    .din1(mul_ln1345_51_fu_3040_p1),
    .dout(mul_ln1345_51_fu_3040_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U83(
    .din0(tmp_55_fu_3046_p4),
    .din1(mul_ln1345_52_fu_3060_p1),
    .dout(mul_ln1345_52_fu_3060_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U84(
    .din0(tmp_56_fu_3066_p4),
    .din1(mul_ln1345_53_fu_3080_p1),
    .dout(mul_ln1345_53_fu_3080_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U85(
    .din0(tmp_57_fu_3086_p4),
    .din1(mul_ln1345_54_fu_3100_p1),
    .dout(mul_ln1345_54_fu_3100_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U86(
    .din0(tmp_58_fu_3106_p4),
    .din1(mul_ln1345_55_fu_3120_p1),
    .dout(mul_ln1345_55_fu_3120_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U87(
    .din0(tmp_59_fu_3126_p4),
    .din1(mul_ln1345_56_fu_3140_p1),
    .dout(mul_ln1345_56_fu_3140_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U88(
    .din0(tmp_60_fu_3146_p4),
    .din1(mul_ln1345_57_fu_3160_p1),
    .dout(mul_ln1345_57_fu_3160_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U89(
    .din0(tmp_61_fu_3166_p4),
    .din1(mul_ln1345_58_fu_3180_p1),
    .dout(mul_ln1345_58_fu_3180_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U90(
    .din0(tmp_62_fu_3186_p4),
    .din1(mul_ln1345_59_fu_3200_p1),
    .dout(mul_ln1345_59_fu_3200_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U91(
    .din0(tmp_63_fu_3206_p4),
    .din1(mul_ln1345_60_fu_3220_p1),
    .dout(mul_ln1345_60_fu_3220_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U92(
    .din0(tmp_65_fu_3226_p4),
    .din1(mul_ln1345_61_fu_3240_p1),
    .dout(mul_ln1345_61_fu_3240_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U93(
    .din0(tmp_66_fu_3246_p4),
    .din1(mul_ln1345_62_fu_3260_p1),
    .dout(mul_ln1345_62_fu_3260_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U94(
    .din0(tmp_67_fu_3266_p4),
    .din1(mul_ln1345_63_fu_3280_p1),
    .dout(mul_ln1345_63_fu_3280_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U95(
    .din0(tmp_68_fu_3286_p4),
    .din1(mul_ln1345_64_fu_3300_p1),
    .dout(mul_ln1345_64_fu_3300_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U96(
    .din0(tmp_69_fu_3306_p4),
    .din1(mul_ln1345_65_fu_3320_p1),
    .dout(mul_ln1345_65_fu_3320_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U97(
    .din0(tmp_70_fu_3326_p4),
    .din1(mul_ln1345_66_fu_3340_p1),
    .dout(mul_ln1345_66_fu_3340_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U98(
    .din0(tmp_71_fu_3346_p4),
    .din1(mul_ln1345_67_fu_3360_p1),
    .dout(mul_ln1345_67_fu_3360_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U99(
    .din0(tmp_72_fu_3366_p4),
    .din1(mul_ln1345_68_fu_3380_p1),
    .dout(mul_ln1345_68_fu_3380_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U100(
    .din0(tmp_73_fu_3386_p4),
    .din1(mul_ln1345_69_fu_3400_p1),
    .dout(mul_ln1345_69_fu_3400_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U101(
    .din0(tmp_74_fu_3406_p4),
    .din1(mul_ln1345_70_fu_3420_p1),
    .dout(mul_ln1345_70_fu_3420_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U102(
    .din0(tmp_75_fu_3426_p4),
    .din1(mul_ln1345_71_fu_3440_p1),
    .dout(mul_ln1345_71_fu_3440_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U103(
    .din0(tmp_76_fu_3446_p4),
    .din1(mul_ln1345_72_fu_3460_p1),
    .dout(mul_ln1345_72_fu_3460_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U104(
    .din0(tmp_78_fu_3466_p4),
    .din1(mul_ln1345_73_fu_3480_p1),
    .dout(mul_ln1345_73_fu_3480_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U105(
    .din0(tmp_79_fu_3486_p4),
    .din1(mul_ln1345_74_fu_3500_p1),
    .dout(mul_ln1345_74_fu_3500_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U106(
    .din0(tmp_80_fu_3506_p4),
    .din1(mul_ln1345_75_fu_3520_p1),
    .dout(mul_ln1345_75_fu_3520_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U107(
    .din0(tmp_81_fu_3526_p4),
    .din1(mul_ln1345_76_fu_3540_p1),
    .dout(mul_ln1345_76_fu_3540_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U108(
    .din0(tmp_82_fu_3546_p4),
    .din1(mul_ln1345_77_fu_3560_p1),
    .dout(mul_ln1345_77_fu_3560_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U109(
    .din0(tmp_83_fu_3566_p4),
    .din1(mul_ln1345_78_fu_3580_p1),
    .dout(mul_ln1345_78_fu_3580_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U110(
    .din0(tmp_84_fu_3586_p4),
    .din1(mul_ln1345_79_fu_3600_p1),
    .dout(mul_ln1345_79_fu_3600_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U111(
    .din0(tmp_85_fu_3606_p4),
    .din1(mul_ln1345_80_fu_3620_p1),
    .dout(mul_ln1345_80_fu_3620_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U112(
    .din0(tmp_86_fu_3626_p4),
    .din1(mul_ln1345_81_fu_3640_p1),
    .dout(mul_ln1345_81_fu_3640_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U113(
    .din0(tmp_87_fu_3646_p4),
    .din1(mul_ln1345_82_fu_3660_p1),
    .dout(mul_ln1345_82_fu_3660_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U114(
    .din0(tmp_88_fu_3666_p4),
    .din1(mul_ln1345_83_fu_3680_p1),
    .dout(mul_ln1345_83_fu_3680_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U115(
    .din0(tmp_89_fu_3686_p4),
    .din1(mul_ln1345_84_fu_3700_p1),
    .dout(mul_ln1345_84_fu_3700_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U116(
    .din0(tmp_91_fu_3706_p4),
    .din1(mul_ln1345_85_fu_3720_p1),
    .dout(mul_ln1345_85_fu_3720_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U117(
    .din0(tmp_92_fu_3726_p4),
    .din1(mul_ln1345_86_fu_3740_p1),
    .dout(mul_ln1345_86_fu_3740_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U118(
    .din0(tmp_93_fu_3746_p4),
    .din1(mul_ln1345_87_fu_3760_p1),
    .dout(mul_ln1345_87_fu_3760_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U119(
    .din0(tmp_94_fu_3766_p4),
    .din1(mul_ln1345_88_fu_3780_p1),
    .dout(mul_ln1345_88_fu_3780_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U120(
    .din0(tmp_95_fu_3786_p4),
    .din1(mul_ln1345_89_fu_3800_p1),
    .dout(mul_ln1345_89_fu_3800_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U121(
    .din0(tmp_96_fu_3806_p4),
    .din1(mul_ln1345_90_fu_3820_p1),
    .dout(mul_ln1345_90_fu_3820_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U122(
    .din0(tmp_97_fu_3826_p4),
    .din1(mul_ln1345_91_fu_3840_p1),
    .dout(mul_ln1345_91_fu_3840_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U123(
    .din0(tmp_98_fu_3846_p4),
    .din1(mul_ln1345_92_fu_3860_p1),
    .dout(mul_ln1345_92_fu_3860_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U124(
    .din0(tmp_99_fu_3866_p4),
    .din1(mul_ln1345_93_fu_3880_p1),
    .dout(mul_ln1345_93_fu_3880_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U125(
    .din0(tmp_100_fu_3886_p4),
    .din1(mul_ln1345_94_fu_3900_p1),
    .dout(mul_ln1345_94_fu_3900_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U126(
    .din0(tmp_101_fu_3906_p4),
    .din1(mul_ln1345_95_fu_3920_p1),
    .dout(mul_ln1345_95_fu_3920_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U127(
    .din0(tmp_102_fu_3926_p4),
    .din1(mul_ln1345_96_fu_3940_p1),
    .dout(mul_ln1345_96_fu_3940_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U128(
    .din0(tmp_104_fu_3946_p4),
    .din1(mul_ln1345_97_fu_3960_p1),
    .dout(mul_ln1345_97_fu_3960_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U129(
    .din0(tmp_105_fu_3966_p4),
    .din1(mul_ln1345_98_fu_3980_p1),
    .dout(mul_ln1345_98_fu_3980_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U130(
    .din0(tmp_106_fu_3986_p4),
    .din1(mul_ln1345_99_fu_4000_p1),
    .dout(mul_ln1345_99_fu_4000_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U131(
    .din0(tmp_107_fu_4006_p4),
    .din1(mul_ln1345_100_fu_4020_p1),
    .dout(mul_ln1345_100_fu_4020_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U132(
    .din0(tmp_108_fu_4026_p4),
    .din1(mul_ln1345_101_fu_4040_p1),
    .dout(mul_ln1345_101_fu_4040_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U133(
    .din0(tmp_109_fu_4046_p4),
    .din1(mul_ln1345_102_fu_4060_p1),
    .dout(mul_ln1345_102_fu_4060_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U134(
    .din0(tmp_110_fu_4066_p4),
    .din1(mul_ln1345_103_fu_4080_p1),
    .dout(mul_ln1345_103_fu_4080_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U135(
    .din0(tmp_111_fu_4086_p4),
    .din1(mul_ln1345_104_fu_4100_p1),
    .dout(mul_ln1345_104_fu_4100_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U136(
    .din0(tmp_112_fu_4106_p4),
    .din1(mul_ln1345_105_fu_4120_p1),
    .dout(mul_ln1345_105_fu_4120_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U137(
    .din0(tmp_113_fu_4126_p4),
    .din1(mul_ln1345_106_fu_4140_p1),
    .dout(mul_ln1345_106_fu_4140_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U138(
    .din0(tmp_114_fu_4146_p4),
    .din1(mul_ln1345_107_fu_4160_p1),
    .dout(mul_ln1345_107_fu_4160_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U139(
    .din0(tmp_115_fu_4166_p4),
    .din1(mul_ln1345_108_fu_4180_p1),
    .dout(mul_ln1345_108_fu_4180_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U140(
    .din0(tmp_117_fu_4186_p4),
    .din1(mul_ln1345_109_fu_4200_p1),
    .dout(mul_ln1345_109_fu_4200_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U141(
    .din0(tmp_118_fu_4206_p4),
    .din1(mul_ln1345_110_fu_4220_p1),
    .dout(mul_ln1345_110_fu_4220_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U142(
    .din0(tmp_119_fu_4226_p4),
    .din1(mul_ln1345_111_fu_4240_p1),
    .dout(mul_ln1345_111_fu_4240_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U143(
    .din0(tmp_120_fu_4246_p4),
    .din1(mul_ln1345_112_fu_4260_p1),
    .dout(mul_ln1345_112_fu_4260_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U144(
    .din0(tmp_121_fu_4266_p4),
    .din1(mul_ln1345_113_fu_4280_p1),
    .dout(mul_ln1345_113_fu_4280_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U145(
    .din0(tmp_122_fu_4286_p4),
    .din1(mul_ln1345_114_fu_4300_p1),
    .dout(mul_ln1345_114_fu_4300_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U146(
    .din0(tmp_123_fu_4306_p4),
    .din1(mul_ln1345_115_fu_4320_p1),
    .dout(mul_ln1345_115_fu_4320_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U147(
    .din0(tmp_124_fu_4326_p4),
    .din1(mul_ln1345_116_fu_4340_p1),
    .dout(mul_ln1345_116_fu_4340_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U148(
    .din0(tmp_125_fu_4346_p4),
    .din1(mul_ln1345_117_fu_4360_p1),
    .dout(mul_ln1345_117_fu_4360_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U149(
    .din0(tmp_126_fu_4366_p4),
    .din1(mul_ln1345_118_fu_4380_p1),
    .dout(mul_ln1345_118_fu_4380_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U150(
    .din0(tmp_127_fu_4386_p4),
    .din1(mul_ln1345_119_fu_4400_p1),
    .dout(mul_ln1345_119_fu_4400_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U151(
    .din0(tmp_128_fu_4406_p4),
    .din1(mul_ln1345_120_fu_4420_p1),
    .dout(mul_ln1345_120_fu_4420_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U152(
    .din0(tmp_130_fu_4426_p4),
    .din1(mul_ln1345_121_fu_4440_p1),
    .dout(mul_ln1345_121_fu_4440_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U153(
    .din0(tmp_131_fu_4446_p4),
    .din1(mul_ln1345_122_fu_4460_p1),
    .dout(mul_ln1345_122_fu_4460_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U154(
    .din0(tmp_132_fu_4466_p4),
    .din1(mul_ln1345_123_fu_4480_p1),
    .dout(mul_ln1345_123_fu_4480_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U155(
    .din0(tmp_133_fu_4486_p4),
    .din1(mul_ln1345_124_fu_4500_p1),
    .dout(mul_ln1345_124_fu_4500_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U156(
    .din0(tmp_134_fu_4506_p4),
    .din1(mul_ln1345_125_fu_4520_p1),
    .dout(mul_ln1345_125_fu_4520_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U157(
    .din0(tmp_135_fu_4526_p4),
    .din1(mul_ln1345_126_fu_4540_p1),
    .dout(mul_ln1345_126_fu_4540_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U158(
    .din0(tmp_136_fu_4546_p4),
    .din1(mul_ln1345_127_fu_4560_p1),
    .dout(mul_ln1345_127_fu_4560_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U159(
    .din0(tmp_137_fu_4566_p4),
    .din1(mul_ln1345_128_fu_4580_p1),
    .dout(mul_ln1345_128_fu_4580_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U160(
    .din0(tmp_138_fu_4586_p4),
    .din1(mul_ln1345_129_fu_4600_p1),
    .dout(mul_ln1345_129_fu_4600_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U161(
    .din0(tmp_139_fu_4606_p4),
    .din1(mul_ln1345_130_fu_4620_p1),
    .dout(mul_ln1345_130_fu_4620_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U162(
    .din0(tmp_140_fu_4626_p4),
    .din1(mul_ln1345_131_fu_4640_p1),
    .dout(mul_ln1345_131_fu_4640_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U163(
    .din0(tmp_141_fu_4646_p4),
    .din1(mul_ln1345_132_fu_4660_p1),
    .dout(mul_ln1345_132_fu_4660_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U164(
    .din0(tmp_143_fu_4666_p4),
    .din1(mul_ln1345_133_fu_4680_p1),
    .dout(mul_ln1345_133_fu_4680_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U165(
    .din0(tmp_144_fu_4686_p4),
    .din1(mul_ln1345_134_fu_4700_p1),
    .dout(mul_ln1345_134_fu_4700_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U166(
    .din0(tmp_145_fu_4706_p4),
    .din1(mul_ln1345_135_fu_4720_p1),
    .dout(mul_ln1345_135_fu_4720_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U167(
    .din0(tmp_146_fu_4726_p4),
    .din1(mul_ln1345_136_fu_4740_p1),
    .dout(mul_ln1345_136_fu_4740_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U168(
    .din0(tmp_147_fu_4746_p4),
    .din1(mul_ln1345_137_fu_4760_p1),
    .dout(mul_ln1345_137_fu_4760_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U169(
    .din0(tmp_148_fu_4766_p4),
    .din1(mul_ln1345_138_fu_4780_p1),
    .dout(mul_ln1345_138_fu_4780_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U170(
    .din0(tmp_149_fu_4786_p4),
    .din1(mul_ln1345_139_fu_4800_p1),
    .dout(mul_ln1345_139_fu_4800_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U171(
    .din0(tmp_150_fu_4806_p4),
    .din1(mul_ln1345_140_fu_4820_p1),
    .dout(mul_ln1345_140_fu_4820_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U172(
    .din0(tmp_151_fu_4826_p4),
    .din1(mul_ln1345_141_fu_4840_p1),
    .dout(mul_ln1345_141_fu_4840_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U173(
    .din0(tmp_152_fu_4846_p4),
    .din1(mul_ln1345_142_fu_4860_p1),
    .dout(mul_ln1345_142_fu_4860_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U174(
    .din0(tmp_153_fu_4866_p4),
    .din1(mul_ln1345_143_fu_4880_p1),
    .dout(mul_ln1345_143_fu_4880_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U175(
    .din0(tmp_154_fu_4886_p4),
    .din1(mul_ln1345_144_fu_4900_p1),
    .dout(mul_ln1345_144_fu_4900_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U176(
    .din0(tmp_156_fu_4906_p4),
    .din1(mul_ln1345_145_fu_4920_p1),
    .dout(mul_ln1345_145_fu_4920_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U177(
    .din0(tmp_157_fu_4926_p4),
    .din1(mul_ln1345_146_fu_4940_p1),
    .dout(mul_ln1345_146_fu_4940_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U178(
    .din0(tmp_158_fu_4946_p4),
    .din1(mul_ln1345_147_fu_4960_p1),
    .dout(mul_ln1345_147_fu_4960_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U179(
    .din0(tmp_159_fu_4966_p4),
    .din1(mul_ln1345_148_fu_4980_p1),
    .dout(mul_ln1345_148_fu_4980_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U180(
    .din0(tmp_160_fu_4986_p4),
    .din1(mul_ln1345_149_fu_5000_p1),
    .dout(mul_ln1345_149_fu_5000_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U181(
    .din0(tmp_161_fu_5006_p4),
    .din1(mul_ln1345_150_fu_5020_p1),
    .dout(mul_ln1345_150_fu_5020_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U182(
    .din0(tmp_162_fu_5026_p4),
    .din1(mul_ln1345_151_fu_5040_p1),
    .dout(mul_ln1345_151_fu_5040_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U183(
    .din0(tmp_163_fu_5046_p4),
    .din1(mul_ln1345_152_fu_5060_p1),
    .dout(mul_ln1345_152_fu_5060_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U184(
    .din0(tmp_164_fu_5066_p4),
    .din1(mul_ln1345_153_fu_5080_p1),
    .dout(mul_ln1345_153_fu_5080_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U185(
    .din0(tmp_165_fu_5086_p4),
    .din1(mul_ln1345_154_fu_5100_p1),
    .dout(mul_ln1345_154_fu_5100_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U186(
    .din0(tmp_166_fu_5106_p4),
    .din1(mul_ln1345_155_fu_5120_p1),
    .dout(mul_ln1345_155_fu_5120_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U187(
    .din0(tmp_167_fu_5126_p4),
    .din1(mul_ln1345_156_fu_5140_p1),
    .dout(mul_ln1345_156_fu_5140_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U188(
    .din0(tmp_169_fu_5146_p4),
    .din1(mul_ln1345_157_fu_5160_p1),
    .dout(mul_ln1345_157_fu_5160_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U189(
    .din0(tmp_170_fu_5166_p4),
    .din1(mul_ln1345_158_fu_5180_p1),
    .dout(mul_ln1345_158_fu_5180_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U190(
    .din0(tmp_171_fu_5186_p4),
    .din1(mul_ln1345_159_fu_5200_p1),
    .dout(mul_ln1345_159_fu_5200_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U191(
    .din0(tmp_172_fu_5206_p4),
    .din1(mul_ln1345_160_fu_5220_p1),
    .dout(mul_ln1345_160_fu_5220_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U192(
    .din0(tmp_173_fu_5226_p4),
    .din1(mul_ln1345_161_fu_5240_p1),
    .dout(mul_ln1345_161_fu_5240_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U193(
    .din0(tmp_174_fu_5246_p4),
    .din1(mul_ln1345_162_fu_5260_p1),
    .dout(mul_ln1345_162_fu_5260_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U194(
    .din0(tmp_175_fu_5266_p4),
    .din1(mul_ln1345_163_fu_5280_p1),
    .dout(mul_ln1345_163_fu_5280_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U195(
    .din0(tmp_176_fu_5286_p4),
    .din1(mul_ln1345_164_fu_5300_p1),
    .dout(mul_ln1345_164_fu_5300_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U196(
    .din0(tmp_177_fu_5306_p4),
    .din1(mul_ln1345_165_fu_5320_p1),
    .dout(mul_ln1345_165_fu_5320_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U197(
    .din0(tmp_178_fu_5326_p4),
    .din1(mul_ln1345_166_fu_5340_p1),
    .dout(mul_ln1345_166_fu_5340_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U198(
    .din0(tmp_179_fu_5346_p4),
    .din1(mul_ln1345_167_fu_5360_p1),
    .dout(mul_ln1345_167_fu_5360_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U199(
    .din0(tmp_180_fu_5366_p4),
    .din1(mul_ln1345_168_fu_5380_p1),
    .dout(mul_ln1345_168_fu_5380_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U200(
    .din0(tmp_182_fu_5386_p4),
    .din1(mul_ln1345_169_fu_5400_p1),
    .dout(mul_ln1345_169_fu_5400_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U201(
    .din0(tmp_183_fu_5406_p4),
    .din1(mul_ln1345_170_fu_5420_p1),
    .dout(mul_ln1345_170_fu_5420_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U202(
    .din0(tmp_184_fu_5426_p4),
    .din1(mul_ln1345_171_fu_5440_p1),
    .dout(mul_ln1345_171_fu_5440_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U203(
    .din0(tmp_185_fu_5446_p4),
    .din1(mul_ln1345_172_fu_5460_p1),
    .dout(mul_ln1345_172_fu_5460_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U204(
    .din0(tmp_186_fu_5466_p4),
    .din1(mul_ln1345_173_fu_5480_p1),
    .dout(mul_ln1345_173_fu_5480_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U205(
    .din0(tmp_187_fu_5486_p4),
    .din1(mul_ln1345_174_fu_5500_p1),
    .dout(mul_ln1345_174_fu_5500_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U206(
    .din0(tmp_188_fu_5506_p4),
    .din1(mul_ln1345_175_fu_5520_p1),
    .dout(mul_ln1345_175_fu_5520_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U207(
    .din0(tmp_189_fu_5526_p4),
    .din1(mul_ln1345_176_fu_5540_p1),
    .dout(mul_ln1345_176_fu_5540_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U208(
    .din0(tmp_190_fu_5546_p4),
    .din1(mul_ln1345_177_fu_5560_p1),
    .dout(mul_ln1345_177_fu_5560_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U209(
    .din0(tmp_191_fu_5566_p4),
    .din1(mul_ln1345_178_fu_5580_p1),
    .dout(mul_ln1345_178_fu_5580_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U210(
    .din0(tmp_192_fu_5586_p4),
    .din1(mul_ln1345_179_fu_5600_p1),
    .dout(mul_ln1345_179_fu_5600_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U211(
    .din0(tmp_193_fu_5606_p4),
    .din1(mul_ln1345_180_fu_5620_p1),
    .dout(mul_ln1345_180_fu_5620_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U212(
    .din0(tmp_195_fu_5626_p4),
    .din1(mul_ln1345_181_fu_5640_p1),
    .dout(mul_ln1345_181_fu_5640_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U213(
    .din0(tmp_196_fu_5646_p4),
    .din1(mul_ln1345_182_fu_5660_p1),
    .dout(mul_ln1345_182_fu_5660_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U214(
    .din0(tmp_197_fu_5666_p4),
    .din1(mul_ln1345_183_fu_5680_p1),
    .dout(mul_ln1345_183_fu_5680_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U215(
    .din0(tmp_198_fu_5686_p4),
    .din1(mul_ln1345_184_fu_5700_p1),
    .dout(mul_ln1345_184_fu_5700_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U216(
    .din0(tmp_199_fu_5706_p4),
    .din1(mul_ln1345_185_fu_5720_p1),
    .dout(mul_ln1345_185_fu_5720_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U217(
    .din0(tmp_200_fu_5726_p4),
    .din1(mul_ln1345_186_fu_5740_p1),
    .dout(mul_ln1345_186_fu_5740_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U218(
    .din0(tmp_201_fu_5746_p4),
    .din1(mul_ln1345_187_fu_5760_p1),
    .dout(mul_ln1345_187_fu_5760_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U219(
    .din0(tmp_202_fu_5766_p4),
    .din1(mul_ln1345_188_fu_5780_p1),
    .dout(mul_ln1345_188_fu_5780_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U220(
    .din0(tmp_203_fu_5786_p4),
    .din1(mul_ln1345_189_fu_5800_p1),
    .dout(mul_ln1345_189_fu_5800_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U221(
    .din0(tmp_204_fu_5806_p4),
    .din1(mul_ln1345_190_fu_5820_p1),
    .dout(mul_ln1345_190_fu_5820_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U222(
    .din0(tmp_205_fu_5826_p4),
    .din1(mul_ln1345_191_fu_5840_p1),
    .dout(mul_ln1345_191_fu_5840_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U223(
    .din0(tmp_206_fu_5846_p4),
    .din1(mul_ln1345_192_fu_5860_p1),
    .dout(mul_ln1345_192_fu_5860_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U224(
    .din0(tmp_208_fu_5866_p4),
    .din1(mul_ln1345_193_fu_5880_p1),
    .dout(mul_ln1345_193_fu_5880_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U225(
    .din0(tmp_209_fu_5886_p4),
    .din1(mul_ln1345_194_fu_5900_p1),
    .dout(mul_ln1345_194_fu_5900_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U226(
    .din0(tmp_210_fu_5906_p4),
    .din1(mul_ln1345_195_fu_5920_p1),
    .dout(mul_ln1345_195_fu_5920_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U227(
    .din0(tmp_211_fu_5926_p4),
    .din1(mul_ln1345_196_fu_5940_p1),
    .dout(mul_ln1345_196_fu_5940_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U228(
    .din0(tmp_212_fu_5946_p4),
    .din1(mul_ln1345_197_fu_5960_p1),
    .dout(mul_ln1345_197_fu_5960_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U229(
    .din0(tmp_213_fu_5966_p4),
    .din1(mul_ln1345_198_fu_5980_p1),
    .dout(mul_ln1345_198_fu_5980_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U230(
    .din0(tmp_214_fu_5986_p4),
    .din1(mul_ln1345_199_fu_6000_p1),
    .dout(mul_ln1345_199_fu_6000_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U231(
    .din0(tmp_215_fu_6006_p4),
    .din1(mul_ln1345_200_fu_6020_p1),
    .dout(mul_ln1345_200_fu_6020_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U232(
    .din0(tmp_216_fu_6026_p4),
    .din1(mul_ln1345_201_fu_6040_p1),
    .dout(mul_ln1345_201_fu_6040_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U233(
    .din0(tmp_217_fu_6046_p4),
    .din1(mul_ln1345_202_fu_6060_p1),
    .dout(mul_ln1345_202_fu_6060_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U234(
    .din0(tmp_218_fu_6066_p4),
    .din1(mul_ln1345_203_fu_6080_p1),
    .dout(mul_ln1345_203_fu_6080_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U235(
    .din0(tmp_219_fu_6086_p4),
    .din1(mul_ln1345_204_fu_6100_p1),
    .dout(mul_ln1345_204_fu_6100_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U236(
    .din0(tmp_221_fu_6106_p4),
    .din1(mul_ln1345_205_fu_6120_p1),
    .dout(mul_ln1345_205_fu_6120_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U237(
    .din0(tmp_222_fu_6126_p4),
    .din1(mul_ln1345_206_fu_6140_p1),
    .dout(mul_ln1345_206_fu_6140_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U238(
    .din0(tmp_223_fu_6146_p4),
    .din1(mul_ln1345_207_fu_6160_p1),
    .dout(mul_ln1345_207_fu_6160_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U239(
    .din0(tmp_224_fu_6166_p4),
    .din1(mul_ln1345_208_fu_6180_p1),
    .dout(mul_ln1345_208_fu_6180_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U240(
    .din0(tmp_225_fu_6186_p4),
    .din1(mul_ln1345_209_fu_6200_p1),
    .dout(mul_ln1345_209_fu_6200_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U241(
    .din0(tmp_226_fu_6206_p4),
    .din1(mul_ln1345_210_fu_6220_p1),
    .dout(mul_ln1345_210_fu_6220_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U242(
    .din0(tmp_227_fu_6226_p4),
    .din1(mul_ln1345_211_fu_6240_p1),
    .dout(mul_ln1345_211_fu_6240_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U243(
    .din0(tmp_228_fu_6246_p4),
    .din1(mul_ln1345_212_fu_6260_p1),
    .dout(mul_ln1345_212_fu_6260_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U244(
    .din0(tmp_229_fu_6266_p4),
    .din1(mul_ln1345_213_fu_6280_p1),
    .dout(mul_ln1345_213_fu_6280_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U245(
    .din0(tmp_230_fu_6286_p4),
    .din1(mul_ln1345_214_fu_6300_p1),
    .dout(mul_ln1345_214_fu_6300_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U246(
    .din0(tmp_231_fu_6306_p4),
    .din1(mul_ln1345_215_fu_6320_p1),
    .dout(mul_ln1345_215_fu_6320_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U247(
    .din0(tmp_232_fu_6326_p4),
    .din1(mul_ln1345_216_fu_6340_p1),
    .dout(mul_ln1345_216_fu_6340_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U248(
    .din0(tmp_234_fu_6346_p4),
    .din1(mul_ln1345_217_fu_6360_p1),
    .dout(mul_ln1345_217_fu_6360_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U249(
    .din0(tmp_235_fu_6366_p4),
    .din1(mul_ln1345_218_fu_6380_p1),
    .dout(mul_ln1345_218_fu_6380_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U250(
    .din0(tmp_236_fu_6386_p4),
    .din1(mul_ln1345_219_fu_6400_p1),
    .dout(mul_ln1345_219_fu_6400_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U251(
    .din0(tmp_237_fu_6406_p4),
    .din1(mul_ln1345_220_fu_6420_p1),
    .dout(mul_ln1345_220_fu_6420_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U252(
    .din0(tmp_238_fu_6426_p4),
    .din1(mul_ln1345_221_fu_6440_p1),
    .dout(mul_ln1345_221_fu_6440_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U253(
    .din0(tmp_239_fu_6446_p4),
    .din1(mul_ln1345_222_fu_6460_p1),
    .dout(mul_ln1345_222_fu_6460_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U254(
    .din0(tmp_240_fu_6466_p4),
    .din1(mul_ln1345_223_fu_6480_p1),
    .dout(mul_ln1345_223_fu_6480_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U255(
    .din0(tmp_241_fu_6486_p4),
    .din1(mul_ln1345_224_fu_6500_p1),
    .dout(mul_ln1345_224_fu_6500_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U256(
    .din0(tmp_242_fu_6506_p4),
    .din1(mul_ln1345_225_fu_6520_p1),
    .dout(mul_ln1345_225_fu_6520_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U257(
    .din0(tmp_243_fu_6526_p4),
    .din1(mul_ln1345_226_fu_6540_p1),
    .dout(mul_ln1345_226_fu_6540_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U258(
    .din0(tmp_244_fu_6546_p4),
    .din1(mul_ln1345_227_fu_6560_p1),
    .dout(mul_ln1345_227_fu_6560_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U259(
    .din0(tmp_245_fu_6566_p4),
    .din1(mul_ln1345_228_fu_6580_p1),
    .dout(mul_ln1345_228_fu_6580_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U260(
    .din0(tmp_247_fu_6586_p4),
    .din1(mul_ln1345_229_fu_6600_p1),
    .dout(mul_ln1345_229_fu_6600_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U261(
    .din0(tmp_248_fu_6606_p4),
    .din1(mul_ln1345_230_fu_6620_p1),
    .dout(mul_ln1345_230_fu_6620_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U262(
    .din0(tmp_249_fu_6626_p4),
    .din1(mul_ln1345_231_fu_6640_p1),
    .dout(mul_ln1345_231_fu_6640_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U263(
    .din0(tmp_250_fu_6646_p4),
    .din1(mul_ln1345_232_fu_6660_p1),
    .dout(mul_ln1345_232_fu_6660_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U264(
    .din0(tmp_251_fu_6666_p4),
    .din1(mul_ln1345_233_fu_6680_p1),
    .dout(mul_ln1345_233_fu_6680_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U265(
    .din0(tmp_252_fu_6686_p4),
    .din1(mul_ln1345_234_fu_6700_p1),
    .dout(mul_ln1345_234_fu_6700_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U266(
    .din0(tmp_253_fu_6706_p4),
    .din1(mul_ln1345_235_fu_6720_p1),
    .dout(mul_ln1345_235_fu_6720_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U267(
    .din0(tmp_254_fu_6726_p4),
    .din1(mul_ln1345_236_fu_6740_p1),
    .dout(mul_ln1345_236_fu_6740_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U268(
    .din0(tmp_255_fu_6746_p4),
    .din1(mul_ln1345_237_fu_6760_p1),
    .dout(mul_ln1345_237_fu_6760_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U269(
    .din0(tmp_256_fu_6766_p4),
    .din1(mul_ln1345_238_fu_6780_p1),
    .dout(mul_ln1345_238_fu_6780_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U270(
    .din0(tmp_257_fu_6786_p4),
    .din1(mul_ln1345_239_fu_6800_p1),
    .dout(mul_ln1345_239_fu_6800_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U271(
    .din0(tmp_258_fu_6806_p4),
    .din1(mul_ln1345_240_fu_6820_p1),
    .dout(mul_ln1345_240_fu_6820_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U272(
    .din0(tmp_260_fu_6826_p4),
    .din1(mul_ln1345_241_fu_6840_p1),
    .dout(mul_ln1345_241_fu_6840_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U273(
    .din0(tmp_261_fu_6846_p4),
    .din1(mul_ln1345_242_fu_6860_p1),
    .dout(mul_ln1345_242_fu_6860_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U274(
    .din0(tmp_262_fu_6866_p4),
    .din1(mul_ln1345_243_fu_6880_p1),
    .dout(mul_ln1345_243_fu_6880_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U275(
    .din0(tmp_263_fu_6886_p4),
    .din1(mul_ln1345_244_fu_6900_p1),
    .dout(mul_ln1345_244_fu_6900_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U276(
    .din0(tmp_264_fu_6906_p4),
    .din1(mul_ln1345_245_fu_6920_p1),
    .dout(mul_ln1345_245_fu_6920_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U277(
    .din0(tmp_265_fu_6926_p4),
    .din1(mul_ln1345_246_fu_6940_p1),
    .dout(mul_ln1345_246_fu_6940_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U278(
    .din0(tmp_266_fu_6946_p4),
    .din1(mul_ln1345_247_fu_6960_p1),
    .dout(mul_ln1345_247_fu_6960_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U279(
    .din0(tmp_267_fu_6966_p4),
    .din1(mul_ln1345_248_fu_6980_p1),
    .dout(mul_ln1345_248_fu_6980_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U280(
    .din0(tmp_268_fu_6986_p4),
    .din1(mul_ln1345_249_fu_7000_p1),
    .dout(mul_ln1345_249_fu_7000_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U281(
    .din0(tmp_269_fu_7006_p4),
    .din1(mul_ln1345_250_fu_7020_p1),
    .dout(mul_ln1345_250_fu_7020_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U282(
    .din0(tmp_270_fu_7026_p4),
    .din1(mul_ln1345_251_fu_7040_p1),
    .dout(mul_ln1345_251_fu_7040_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U283(
    .din0(tmp_271_fu_7046_p4),
    .din1(mul_ln1345_252_fu_7060_p1),
    .dout(mul_ln1345_252_fu_7060_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U284(
    .din0(tmp_273_fu_7066_p4),
    .din1(mul_ln1345_253_fu_7080_p1),
    .dout(mul_ln1345_253_fu_7080_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U285(
    .din0(tmp_274_fu_7086_p4),
    .din1(mul_ln1345_254_fu_7100_p1),
    .dout(mul_ln1345_254_fu_7100_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U286(
    .din0(tmp_275_fu_7106_p4),
    .din1(mul_ln1345_255_fu_7120_p1),
    .dout(mul_ln1345_255_fu_7120_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U287(
    .din0(tmp_276_fu_7126_p4),
    .din1(mul_ln1345_256_fu_7140_p1),
    .dout(mul_ln1345_256_fu_7140_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U288(
    .din0(tmp_277_fu_7146_p4),
    .din1(mul_ln1345_257_fu_7160_p1),
    .dout(mul_ln1345_257_fu_7160_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U289(
    .din0(tmp_278_fu_7166_p4),
    .din1(mul_ln1345_258_fu_7180_p1),
    .dout(mul_ln1345_258_fu_7180_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U290(
    .din0(tmp_279_fu_7186_p4),
    .din1(mul_ln1345_259_fu_7200_p1),
    .dout(mul_ln1345_259_fu_7200_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U291(
    .din0(tmp_280_fu_7206_p4),
    .din1(mul_ln1345_260_fu_7220_p1),
    .dout(mul_ln1345_260_fu_7220_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U292(
    .din0(tmp_281_fu_7226_p4),
    .din1(mul_ln1345_261_fu_7240_p1),
    .dout(mul_ln1345_261_fu_7240_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U293(
    .din0(tmp_282_fu_7246_p4),
    .din1(mul_ln1345_262_fu_7260_p1),
    .dout(mul_ln1345_262_fu_7260_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U294(
    .din0(tmp_283_fu_7266_p4),
    .din1(mul_ln1345_263_fu_7280_p1),
    .dout(mul_ln1345_263_fu_7280_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U295(
    .din0(tmp_284_fu_7286_p4),
    .din1(mul_ln1345_264_fu_7300_p1),
    .dout(mul_ln1345_264_fu_7300_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U296(
    .din0(tmp_286_fu_7306_p4),
    .din1(mul_ln1345_265_fu_7320_p1),
    .dout(mul_ln1345_265_fu_7320_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U297(
    .din0(tmp_287_fu_7326_p4),
    .din1(mul_ln1345_266_fu_7340_p1),
    .dout(mul_ln1345_266_fu_7340_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U298(
    .din0(tmp_288_fu_7346_p4),
    .din1(mul_ln1345_267_fu_7360_p1),
    .dout(mul_ln1345_267_fu_7360_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U299(
    .din0(tmp_289_fu_7366_p4),
    .din1(mul_ln1345_268_fu_7380_p1),
    .dout(mul_ln1345_268_fu_7380_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U300(
    .din0(tmp_290_fu_7386_p4),
    .din1(mul_ln1345_269_fu_7400_p1),
    .dout(mul_ln1345_269_fu_7400_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U301(
    .din0(tmp_291_fu_7406_p4),
    .din1(mul_ln1345_270_fu_7420_p1),
    .dout(mul_ln1345_270_fu_7420_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U302(
    .din0(tmp_292_fu_7426_p4),
    .din1(mul_ln1345_271_fu_7440_p1),
    .dout(mul_ln1345_271_fu_7440_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U303(
    .din0(tmp_293_fu_7446_p4),
    .din1(mul_ln1345_272_fu_7460_p1),
    .dout(mul_ln1345_272_fu_7460_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U304(
    .din0(tmp_294_fu_7466_p4),
    .din1(mul_ln1345_273_fu_7480_p1),
    .dout(mul_ln1345_273_fu_7480_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U305(
    .din0(tmp_295_fu_7486_p4),
    .din1(mul_ln1345_274_fu_7500_p1),
    .dout(mul_ln1345_274_fu_7500_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U306(
    .din0(tmp_296_fu_7506_p4),
    .din1(mul_ln1345_275_fu_7520_p1),
    .dout(mul_ln1345_275_fu_7520_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U307(
    .din0(tmp_297_fu_7526_p4),
    .din1(mul_ln1345_276_fu_7540_p1),
    .dout(mul_ln1345_276_fu_7540_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U308(
    .din0(tmp_299_fu_7546_p4),
    .din1(mul_ln1345_277_fu_7560_p1),
    .dout(mul_ln1345_277_fu_7560_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U309(
    .din0(tmp_300_fu_7566_p4),
    .din1(mul_ln1345_278_fu_7580_p1),
    .dout(mul_ln1345_278_fu_7580_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U310(
    .din0(tmp_301_fu_7586_p4),
    .din1(mul_ln1345_279_fu_7600_p1),
    .dout(mul_ln1345_279_fu_7600_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U311(
    .din0(tmp_302_fu_7606_p4),
    .din1(mul_ln1345_280_fu_7620_p1),
    .dout(mul_ln1345_280_fu_7620_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U312(
    .din0(tmp_303_fu_7626_p4),
    .din1(mul_ln1345_281_fu_7640_p1),
    .dout(mul_ln1345_281_fu_7640_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U313(
    .din0(tmp_304_fu_7646_p4),
    .din1(mul_ln1345_282_fu_7660_p1),
    .dout(mul_ln1345_282_fu_7660_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U314(
    .din0(tmp_305_fu_7666_p4),
    .din1(mul_ln1345_283_fu_7680_p1),
    .dout(mul_ln1345_283_fu_7680_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U315(
    .din0(tmp_306_fu_7686_p4),
    .din1(mul_ln1345_284_fu_7700_p1),
    .dout(mul_ln1345_284_fu_7700_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U316(
    .din0(tmp_307_fu_7706_p4),
    .din1(mul_ln1345_285_fu_7720_p1),
    .dout(mul_ln1345_285_fu_7720_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U317(
    .din0(tmp_308_fu_7726_p4),
    .din1(mul_ln1345_286_fu_7740_p1),
    .dout(mul_ln1345_286_fu_7740_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U318(
    .din0(tmp_309_fu_7746_p4),
    .din1(mul_ln1345_287_fu_7760_p1),
    .dout(mul_ln1345_287_fu_7760_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U319(
    .din0(mul_ln1345_288_fu_10707_p0),
    .din1(mul_ln1345_288_fu_10707_p1),
    .dout(mul_ln1345_288_fu_10707_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U320(
    .din0(mul_ln1345_289_fu_10729_p0),
    .din1(mul_ln1345_289_fu_10729_p1),
    .dout(mul_ln1345_289_fu_10729_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U321(
    .din0(mul_ln1345_290_fu_10741_p0),
    .din1(mul_ln1345_290_fu_10741_p1),
    .dout(mul_ln1345_290_fu_10741_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U322(
    .din0(mul_ln1345_291_fu_10753_p0),
    .din1(mul_ln1345_291_fu_10753_p1),
    .dout(mul_ln1345_291_fu_10753_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U323(
    .din0(mul_ln1345_292_fu_10765_p0),
    .din1(mul_ln1345_292_fu_10765_p1),
    .dout(mul_ln1345_292_fu_10765_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U324(
    .din0(mul_ln1345_293_fu_10777_p0),
    .din1(mul_ln1345_293_fu_10777_p1),
    .dout(mul_ln1345_293_fu_10777_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U325(
    .din0(mul_ln1345_294_fu_10789_p0),
    .din1(mul_ln1345_294_fu_10789_p1),
    .dout(mul_ln1345_294_fu_10789_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U326(
    .din0(mul_ln1345_295_fu_10801_p0),
    .din1(mul_ln1345_295_fu_10801_p1),
    .dout(mul_ln1345_295_fu_10801_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U327(
    .din0(mul_ln1345_296_fu_10813_p0),
    .din1(mul_ln1345_296_fu_10813_p1),
    .dout(mul_ln1345_296_fu_10813_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U328(
    .din0(mul_ln1345_297_fu_10825_p0),
    .din1(mul_ln1345_297_fu_10825_p1),
    .dout(mul_ln1345_297_fu_10825_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U329(
    .din0(mul_ln1345_298_fu_10837_p0),
    .din1(mul_ln1345_298_fu_10837_p1),
    .dout(mul_ln1345_298_fu_10837_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U330(
    .din0(mul_ln1345_299_fu_10849_p0),
    .din1(mul_ln1345_299_fu_10849_p1),
    .dout(mul_ln1345_299_fu_10849_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U331(
    .din0(mul_ln1345_300_fu_10934_p0),
    .din1(mul_ln1345_300_fu_10934_p1),
    .dout(mul_ln1345_300_fu_10934_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U332(
    .din0(mul_ln1345_301_fu_10953_p0),
    .din1(mul_ln1345_301_fu_10953_p1),
    .dout(mul_ln1345_301_fu_10953_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U333(
    .din0(mul_ln1345_302_fu_10962_p0),
    .din1(mul_ln1345_302_fu_10962_p1),
    .dout(mul_ln1345_302_fu_10962_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U334(
    .din0(mul_ln1345_303_fu_10971_p0),
    .din1(mul_ln1345_303_fu_10971_p1),
    .dout(mul_ln1345_303_fu_10971_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U335(
    .din0(mul_ln1345_304_fu_10980_p0),
    .din1(mul_ln1345_304_fu_10980_p1),
    .dout(mul_ln1345_304_fu_10980_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U336(
    .din0(mul_ln1345_305_fu_10989_p0),
    .din1(mul_ln1345_305_fu_10989_p1),
    .dout(mul_ln1345_305_fu_10989_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U337(
    .din0(mul_ln1345_306_fu_10998_p0),
    .din1(mul_ln1345_306_fu_10998_p1),
    .dout(mul_ln1345_306_fu_10998_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U338(
    .din0(mul_ln1345_307_fu_11007_p0),
    .din1(mul_ln1345_307_fu_11007_p1),
    .dout(mul_ln1345_307_fu_11007_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U339(
    .din0(mul_ln1345_308_fu_11016_p0),
    .din1(mul_ln1345_308_fu_11016_p1),
    .dout(mul_ln1345_308_fu_11016_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U340(
    .din0(mul_ln1345_309_fu_11025_p0),
    .din1(mul_ln1345_309_fu_11025_p1),
    .dout(mul_ln1345_309_fu_11025_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U341(
    .din0(mul_ln1345_310_fu_11034_p0),
    .din1(mul_ln1345_310_fu_11034_p1),
    .dout(mul_ln1345_310_fu_11034_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U342(
    .din0(mul_ln1345_311_fu_11043_p0),
    .din1(mul_ln1345_311_fu_11043_p1),
    .dout(mul_ln1345_311_fu_11043_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U343(
    .din0(mul_ln1345_312_fu_11128_p0),
    .din1(mul_ln1345_312_fu_11128_p1),
    .dout(mul_ln1345_312_fu_11128_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U344(
    .din0(mul_ln1345_313_fu_11147_p0),
    .din1(mul_ln1345_313_fu_11147_p1),
    .dout(mul_ln1345_313_fu_11147_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U345(
    .din0(mul_ln1345_314_fu_11156_p0),
    .din1(mul_ln1345_314_fu_11156_p1),
    .dout(mul_ln1345_314_fu_11156_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U346(
    .din0(mul_ln1345_315_fu_11165_p0),
    .din1(mul_ln1345_315_fu_11165_p1),
    .dout(mul_ln1345_315_fu_11165_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U347(
    .din0(mul_ln1345_316_fu_11174_p0),
    .din1(mul_ln1345_316_fu_11174_p1),
    .dout(mul_ln1345_316_fu_11174_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U348(
    .din0(mul_ln1345_317_fu_11183_p0),
    .din1(mul_ln1345_317_fu_11183_p1),
    .dout(mul_ln1345_317_fu_11183_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U349(
    .din0(mul_ln1345_318_fu_11192_p0),
    .din1(mul_ln1345_318_fu_11192_p1),
    .dout(mul_ln1345_318_fu_11192_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U350(
    .din0(mul_ln1345_319_fu_11201_p0),
    .din1(mul_ln1345_319_fu_11201_p1),
    .dout(mul_ln1345_319_fu_11201_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U351(
    .din0(mul_ln1345_320_fu_11210_p0),
    .din1(mul_ln1345_320_fu_11210_p1),
    .dout(mul_ln1345_320_fu_11210_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U352(
    .din0(mul_ln1345_321_fu_11219_p0),
    .din1(mul_ln1345_321_fu_11219_p1),
    .dout(mul_ln1345_321_fu_11219_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U353(
    .din0(mul_ln1345_322_fu_11228_p0),
    .din1(mul_ln1345_322_fu_11228_p1),
    .dout(mul_ln1345_322_fu_11228_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U354(
    .din0(mul_ln1345_323_fu_11237_p0),
    .din1(mul_ln1345_323_fu_11237_p1),
    .dout(mul_ln1345_323_fu_11237_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U355(
    .din0(mul_ln1345_324_fu_11322_p0),
    .din1(mul_ln1345_324_fu_11322_p1),
    .dout(mul_ln1345_324_fu_11322_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U356(
    .din0(mul_ln1345_325_fu_11341_p0),
    .din1(mul_ln1345_325_fu_11341_p1),
    .dout(mul_ln1345_325_fu_11341_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U357(
    .din0(mul_ln1345_326_fu_11350_p0),
    .din1(mul_ln1345_326_fu_11350_p1),
    .dout(mul_ln1345_326_fu_11350_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U358(
    .din0(mul_ln1345_327_fu_11359_p0),
    .din1(mul_ln1345_327_fu_11359_p1),
    .dout(mul_ln1345_327_fu_11359_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U359(
    .din0(mul_ln1345_328_fu_11368_p0),
    .din1(mul_ln1345_328_fu_11368_p1),
    .dout(mul_ln1345_328_fu_11368_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U360(
    .din0(mul_ln1345_329_fu_11377_p0),
    .din1(mul_ln1345_329_fu_11377_p1),
    .dout(mul_ln1345_329_fu_11377_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U361(
    .din0(mul_ln1345_330_fu_11386_p0),
    .din1(mul_ln1345_330_fu_11386_p1),
    .dout(mul_ln1345_330_fu_11386_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U362(
    .din0(mul_ln1345_331_fu_11395_p0),
    .din1(mul_ln1345_331_fu_11395_p1),
    .dout(mul_ln1345_331_fu_11395_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U363(
    .din0(mul_ln1345_332_fu_11404_p0),
    .din1(mul_ln1345_332_fu_11404_p1),
    .dout(mul_ln1345_332_fu_11404_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U364(
    .din0(mul_ln1345_333_fu_11413_p0),
    .din1(mul_ln1345_333_fu_11413_p1),
    .dout(mul_ln1345_333_fu_11413_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U365(
    .din0(mul_ln1345_334_fu_11422_p0),
    .din1(mul_ln1345_334_fu_11422_p1),
    .dout(mul_ln1345_334_fu_11422_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U366(
    .din0(mul_ln1345_335_fu_11431_p0),
    .din1(mul_ln1345_335_fu_11431_p1),
    .dout(mul_ln1345_335_fu_11431_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U367(
    .din0(mul_ln1345_336_fu_11516_p0),
    .din1(mul_ln1345_336_fu_11516_p1),
    .dout(mul_ln1345_336_fu_11516_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U368(
    .din0(mul_ln1345_337_fu_11535_p0),
    .din1(mul_ln1345_337_fu_11535_p1),
    .dout(mul_ln1345_337_fu_11535_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U369(
    .din0(mul_ln1345_338_fu_11544_p0),
    .din1(mul_ln1345_338_fu_11544_p1),
    .dout(mul_ln1345_338_fu_11544_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U370(
    .din0(mul_ln1345_339_fu_11553_p0),
    .din1(mul_ln1345_339_fu_11553_p1),
    .dout(mul_ln1345_339_fu_11553_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U371(
    .din0(mul_ln1345_340_fu_11562_p0),
    .din1(mul_ln1345_340_fu_11562_p1),
    .dout(mul_ln1345_340_fu_11562_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U372(
    .din0(mul_ln1345_341_fu_11571_p0),
    .din1(mul_ln1345_341_fu_11571_p1),
    .dout(mul_ln1345_341_fu_11571_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U373(
    .din0(mul_ln1345_342_fu_11580_p0),
    .din1(mul_ln1345_342_fu_11580_p1),
    .dout(mul_ln1345_342_fu_11580_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U374(
    .din0(mul_ln1345_343_fu_11589_p0),
    .din1(mul_ln1345_343_fu_11589_p1),
    .dout(mul_ln1345_343_fu_11589_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U375(
    .din0(mul_ln1345_344_fu_11598_p0),
    .din1(mul_ln1345_344_fu_11598_p1),
    .dout(mul_ln1345_344_fu_11598_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U376(
    .din0(mul_ln1345_345_fu_11607_p0),
    .din1(mul_ln1345_345_fu_11607_p1),
    .dout(mul_ln1345_345_fu_11607_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U377(
    .din0(mul_ln1345_346_fu_11616_p0),
    .din1(mul_ln1345_346_fu_11616_p1),
    .dout(mul_ln1345_346_fu_11616_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U378(
    .din0(mul_ln1345_347_fu_11625_p0),
    .din1(mul_ln1345_347_fu_11625_p1),
    .dout(mul_ln1345_347_fu_11625_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U379(
    .din0(mul_ln1345_348_fu_11710_p0),
    .din1(mul_ln1345_348_fu_11710_p1),
    .dout(mul_ln1345_348_fu_11710_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U380(
    .din0(mul_ln1345_349_fu_11729_p0),
    .din1(mul_ln1345_349_fu_11729_p1),
    .dout(mul_ln1345_349_fu_11729_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U381(
    .din0(mul_ln1345_350_fu_11738_p0),
    .din1(mul_ln1345_350_fu_11738_p1),
    .dout(mul_ln1345_350_fu_11738_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U382(
    .din0(mul_ln1345_351_fu_11747_p0),
    .din1(mul_ln1345_351_fu_11747_p1),
    .dout(mul_ln1345_351_fu_11747_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U383(
    .din0(mul_ln1345_352_fu_11756_p0),
    .din1(mul_ln1345_352_fu_11756_p1),
    .dout(mul_ln1345_352_fu_11756_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U384(
    .din0(mul_ln1345_353_fu_11765_p0),
    .din1(mul_ln1345_353_fu_11765_p1),
    .dout(mul_ln1345_353_fu_11765_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U385(
    .din0(mul_ln1345_354_fu_11774_p0),
    .din1(mul_ln1345_354_fu_11774_p1),
    .dout(mul_ln1345_354_fu_11774_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U386(
    .din0(mul_ln1345_355_fu_11783_p0),
    .din1(mul_ln1345_355_fu_11783_p1),
    .dout(mul_ln1345_355_fu_11783_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U387(
    .din0(mul_ln1345_356_fu_11792_p0),
    .din1(mul_ln1345_356_fu_11792_p1),
    .dout(mul_ln1345_356_fu_11792_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U388(
    .din0(mul_ln1345_357_fu_11801_p0),
    .din1(mul_ln1345_357_fu_11801_p1),
    .dout(mul_ln1345_357_fu_11801_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U389(
    .din0(mul_ln1345_358_fu_11810_p0),
    .din1(mul_ln1345_358_fu_11810_p1),
    .dout(mul_ln1345_358_fu_11810_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U390(
    .din0(mul_ln1345_359_fu_11819_p0),
    .din1(mul_ln1345_359_fu_11819_p1),
    .dout(mul_ln1345_359_fu_11819_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U391(
    .din0(mul_ln1345_360_fu_11904_p0),
    .din1(mul_ln1345_360_fu_11904_p1),
    .dout(mul_ln1345_360_fu_11904_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U392(
    .din0(mul_ln1345_361_fu_11923_p0),
    .din1(mul_ln1345_361_fu_11923_p1),
    .dout(mul_ln1345_361_fu_11923_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U393(
    .din0(mul_ln1345_362_fu_11932_p0),
    .din1(mul_ln1345_362_fu_11932_p1),
    .dout(mul_ln1345_362_fu_11932_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U394(
    .din0(mul_ln1345_363_fu_11941_p0),
    .din1(mul_ln1345_363_fu_11941_p1),
    .dout(mul_ln1345_363_fu_11941_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U395(
    .din0(mul_ln1345_364_fu_11950_p0),
    .din1(mul_ln1345_364_fu_11950_p1),
    .dout(mul_ln1345_364_fu_11950_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U396(
    .din0(mul_ln1345_365_fu_11959_p0),
    .din1(mul_ln1345_365_fu_11959_p1),
    .dout(mul_ln1345_365_fu_11959_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U397(
    .din0(mul_ln1345_366_fu_11968_p0),
    .din1(mul_ln1345_366_fu_11968_p1),
    .dout(mul_ln1345_366_fu_11968_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U398(
    .din0(mul_ln1345_367_fu_11977_p0),
    .din1(mul_ln1345_367_fu_11977_p1),
    .dout(mul_ln1345_367_fu_11977_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U399(
    .din0(mul_ln1345_368_fu_11986_p0),
    .din1(mul_ln1345_368_fu_11986_p1),
    .dout(mul_ln1345_368_fu_11986_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U400(
    .din0(mul_ln1345_369_fu_11995_p0),
    .din1(mul_ln1345_369_fu_11995_p1),
    .dout(mul_ln1345_369_fu_11995_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U401(
    .din0(mul_ln1345_370_fu_12004_p0),
    .din1(mul_ln1345_370_fu_12004_p1),
    .dout(mul_ln1345_370_fu_12004_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U402(
    .din0(mul_ln1345_371_fu_12013_p0),
    .din1(mul_ln1345_371_fu_12013_p1),
    .dout(mul_ln1345_371_fu_12013_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U403(
    .din0(mul_ln1345_372_fu_12098_p0),
    .din1(mul_ln1345_372_fu_12098_p1),
    .dout(mul_ln1345_372_fu_12098_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U404(
    .din0(mul_ln1345_373_fu_12117_p0),
    .din1(mul_ln1345_373_fu_12117_p1),
    .dout(mul_ln1345_373_fu_12117_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U405(
    .din0(mul_ln1345_374_fu_12126_p0),
    .din1(mul_ln1345_374_fu_12126_p1),
    .dout(mul_ln1345_374_fu_12126_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U406(
    .din0(mul_ln1345_375_fu_12135_p0),
    .din1(mul_ln1345_375_fu_12135_p1),
    .dout(mul_ln1345_375_fu_12135_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U407(
    .din0(mul_ln1345_376_fu_12144_p0),
    .din1(mul_ln1345_376_fu_12144_p1),
    .dout(mul_ln1345_376_fu_12144_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U408(
    .din0(mul_ln1345_377_fu_12153_p0),
    .din1(mul_ln1345_377_fu_12153_p1),
    .dout(mul_ln1345_377_fu_12153_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U409(
    .din0(mul_ln1345_378_fu_12162_p0),
    .din1(mul_ln1345_378_fu_12162_p1),
    .dout(mul_ln1345_378_fu_12162_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U410(
    .din0(mul_ln1345_379_fu_12171_p0),
    .din1(mul_ln1345_379_fu_12171_p1),
    .dout(mul_ln1345_379_fu_12171_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U411(
    .din0(mul_ln1345_380_fu_12180_p0),
    .din1(mul_ln1345_380_fu_12180_p1),
    .dout(mul_ln1345_380_fu_12180_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U412(
    .din0(mul_ln1345_381_fu_12189_p0),
    .din1(mul_ln1345_381_fu_12189_p1),
    .dout(mul_ln1345_381_fu_12189_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U413(
    .din0(mul_ln1345_382_fu_12198_p0),
    .din1(mul_ln1345_382_fu_12198_p1),
    .dout(mul_ln1345_382_fu_12198_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U414(
    .din0(mul_ln1345_383_fu_12207_p0),
    .din1(mul_ln1345_383_fu_12207_p1),
    .dout(mul_ln1345_383_fu_12207_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U415(
    .din0(mul_ln1345_384_fu_12292_p0),
    .din1(mul_ln1345_384_fu_12292_p1),
    .dout(mul_ln1345_384_fu_12292_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U416(
    .din0(mul_ln1345_385_fu_12311_p0),
    .din1(mul_ln1345_385_fu_12311_p1),
    .dout(mul_ln1345_385_fu_12311_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U417(
    .din0(mul_ln1345_386_fu_12320_p0),
    .din1(mul_ln1345_386_fu_12320_p1),
    .dout(mul_ln1345_386_fu_12320_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U418(
    .din0(mul_ln1345_387_fu_12329_p0),
    .din1(mul_ln1345_387_fu_12329_p1),
    .dout(mul_ln1345_387_fu_12329_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U419(
    .din0(mul_ln1345_388_fu_12338_p0),
    .din1(mul_ln1345_388_fu_12338_p1),
    .dout(mul_ln1345_388_fu_12338_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U420(
    .din0(mul_ln1345_389_fu_12347_p0),
    .din1(mul_ln1345_389_fu_12347_p1),
    .dout(mul_ln1345_389_fu_12347_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U421(
    .din0(mul_ln1345_390_fu_12356_p0),
    .din1(mul_ln1345_390_fu_12356_p1),
    .dout(mul_ln1345_390_fu_12356_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U422(
    .din0(mul_ln1345_391_fu_12365_p0),
    .din1(mul_ln1345_391_fu_12365_p1),
    .dout(mul_ln1345_391_fu_12365_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U423(
    .din0(mul_ln1345_392_fu_12374_p0),
    .din1(mul_ln1345_392_fu_12374_p1),
    .dout(mul_ln1345_392_fu_12374_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U424(
    .din0(mul_ln1345_393_fu_12383_p0),
    .din1(mul_ln1345_393_fu_12383_p1),
    .dout(mul_ln1345_393_fu_12383_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U425(
    .din0(mul_ln1345_394_fu_12392_p0),
    .din1(mul_ln1345_394_fu_12392_p1),
    .dout(mul_ln1345_394_fu_12392_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U426(
    .din0(mul_ln1345_395_fu_12401_p0),
    .din1(mul_ln1345_395_fu_12401_p1),
    .dout(mul_ln1345_395_fu_12401_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U427(
    .din0(mul_ln1345_396_fu_12486_p0),
    .din1(mul_ln1345_396_fu_12486_p1),
    .dout(mul_ln1345_396_fu_12486_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U428(
    .din0(mul_ln1345_397_fu_12505_p0),
    .din1(mul_ln1345_397_fu_12505_p1),
    .dout(mul_ln1345_397_fu_12505_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U429(
    .din0(mul_ln1345_398_fu_12514_p0),
    .din1(mul_ln1345_398_fu_12514_p1),
    .dout(mul_ln1345_398_fu_12514_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U430(
    .din0(mul_ln1345_399_fu_12523_p0),
    .din1(mul_ln1345_399_fu_12523_p1),
    .dout(mul_ln1345_399_fu_12523_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U431(
    .din0(mul_ln1345_400_fu_12532_p0),
    .din1(mul_ln1345_400_fu_12532_p1),
    .dout(mul_ln1345_400_fu_12532_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U432(
    .din0(mul_ln1345_401_fu_12541_p0),
    .din1(mul_ln1345_401_fu_12541_p1),
    .dout(mul_ln1345_401_fu_12541_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U433(
    .din0(mul_ln1345_402_fu_12550_p0),
    .din1(mul_ln1345_402_fu_12550_p1),
    .dout(mul_ln1345_402_fu_12550_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U434(
    .din0(mul_ln1345_403_fu_12559_p0),
    .din1(mul_ln1345_403_fu_12559_p1),
    .dout(mul_ln1345_403_fu_12559_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U435(
    .din0(mul_ln1345_404_fu_12568_p0),
    .din1(mul_ln1345_404_fu_12568_p1),
    .dout(mul_ln1345_404_fu_12568_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U436(
    .din0(mul_ln1345_405_fu_12577_p0),
    .din1(mul_ln1345_405_fu_12577_p1),
    .dout(mul_ln1345_405_fu_12577_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U437(
    .din0(mul_ln1345_406_fu_12586_p0),
    .din1(mul_ln1345_406_fu_12586_p1),
    .dout(mul_ln1345_406_fu_12586_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U438(
    .din0(mul_ln1345_407_fu_12595_p0),
    .din1(mul_ln1345_407_fu_12595_p1),
    .dout(mul_ln1345_407_fu_12595_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U439(
    .din0(mul_ln1345_408_fu_12680_p0),
    .din1(mul_ln1345_408_fu_12680_p1),
    .dout(mul_ln1345_408_fu_12680_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U440(
    .din0(mul_ln1345_409_fu_12699_p0),
    .din1(mul_ln1345_409_fu_12699_p1),
    .dout(mul_ln1345_409_fu_12699_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U441(
    .din0(mul_ln1345_410_fu_12708_p0),
    .din1(mul_ln1345_410_fu_12708_p1),
    .dout(mul_ln1345_410_fu_12708_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U442(
    .din0(mul_ln1345_411_fu_12717_p0),
    .din1(mul_ln1345_411_fu_12717_p1),
    .dout(mul_ln1345_411_fu_12717_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U443(
    .din0(mul_ln1345_412_fu_12726_p0),
    .din1(mul_ln1345_412_fu_12726_p1),
    .dout(mul_ln1345_412_fu_12726_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U444(
    .din0(mul_ln1345_413_fu_12735_p0),
    .din1(mul_ln1345_413_fu_12735_p1),
    .dout(mul_ln1345_413_fu_12735_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U445(
    .din0(mul_ln1345_414_fu_12744_p0),
    .din1(mul_ln1345_414_fu_12744_p1),
    .dout(mul_ln1345_414_fu_12744_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U446(
    .din0(mul_ln1345_415_fu_12753_p0),
    .din1(mul_ln1345_415_fu_12753_p1),
    .dout(mul_ln1345_415_fu_12753_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U447(
    .din0(mul_ln1345_416_fu_12762_p0),
    .din1(mul_ln1345_416_fu_12762_p1),
    .dout(mul_ln1345_416_fu_12762_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U448(
    .din0(mul_ln1345_417_fu_12771_p0),
    .din1(mul_ln1345_417_fu_12771_p1),
    .dout(mul_ln1345_417_fu_12771_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U449(
    .din0(mul_ln1345_418_fu_12780_p0),
    .din1(mul_ln1345_418_fu_12780_p1),
    .dout(mul_ln1345_418_fu_12780_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U450(
    .din0(mul_ln1345_419_fu_12789_p0),
    .din1(mul_ln1345_419_fu_12789_p1),
    .dout(mul_ln1345_419_fu_12789_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U451(
    .din0(mul_ln1345_420_fu_12874_p0),
    .din1(mul_ln1345_420_fu_12874_p1),
    .dout(mul_ln1345_420_fu_12874_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U452(
    .din0(mul_ln1345_421_fu_12893_p0),
    .din1(mul_ln1345_421_fu_12893_p1),
    .dout(mul_ln1345_421_fu_12893_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U453(
    .din0(mul_ln1345_422_fu_12902_p0),
    .din1(mul_ln1345_422_fu_12902_p1),
    .dout(mul_ln1345_422_fu_12902_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U454(
    .din0(mul_ln1345_423_fu_12911_p0),
    .din1(mul_ln1345_423_fu_12911_p1),
    .dout(mul_ln1345_423_fu_12911_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U455(
    .din0(mul_ln1345_424_fu_12920_p0),
    .din1(mul_ln1345_424_fu_12920_p1),
    .dout(mul_ln1345_424_fu_12920_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U456(
    .din0(mul_ln1345_425_fu_12929_p0),
    .din1(mul_ln1345_425_fu_12929_p1),
    .dout(mul_ln1345_425_fu_12929_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U457(
    .din0(mul_ln1345_426_fu_12938_p0),
    .din1(mul_ln1345_426_fu_12938_p1),
    .dout(mul_ln1345_426_fu_12938_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U458(
    .din0(mul_ln1345_427_fu_12947_p0),
    .din1(mul_ln1345_427_fu_12947_p1),
    .dout(mul_ln1345_427_fu_12947_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U459(
    .din0(mul_ln1345_428_fu_12956_p0),
    .din1(mul_ln1345_428_fu_12956_p1),
    .dout(mul_ln1345_428_fu_12956_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U460(
    .din0(mul_ln1345_429_fu_12965_p0),
    .din1(mul_ln1345_429_fu_12965_p1),
    .dout(mul_ln1345_429_fu_12965_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U461(
    .din0(mul_ln1345_430_fu_12974_p0),
    .din1(mul_ln1345_430_fu_12974_p1),
    .dout(mul_ln1345_430_fu_12974_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U462(
    .din0(mul_ln1345_431_fu_12983_p0),
    .din1(mul_ln1345_431_fu_12983_p1),
    .dout(mul_ln1345_431_fu_12983_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U463(
    .din0(mul_ln1345_432_fu_13068_p0),
    .din1(mul_ln1345_432_fu_13068_p1),
    .dout(mul_ln1345_432_fu_13068_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U464(
    .din0(mul_ln1345_433_fu_13087_p0),
    .din1(mul_ln1345_433_fu_13087_p1),
    .dout(mul_ln1345_433_fu_13087_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U465(
    .din0(mul_ln1345_434_fu_13096_p0),
    .din1(mul_ln1345_434_fu_13096_p1),
    .dout(mul_ln1345_434_fu_13096_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U466(
    .din0(mul_ln1345_435_fu_13105_p0),
    .din1(mul_ln1345_435_fu_13105_p1),
    .dout(mul_ln1345_435_fu_13105_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U467(
    .din0(mul_ln1345_436_fu_13114_p0),
    .din1(mul_ln1345_436_fu_13114_p1),
    .dout(mul_ln1345_436_fu_13114_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U468(
    .din0(mul_ln1345_437_fu_13123_p0),
    .din1(mul_ln1345_437_fu_13123_p1),
    .dout(mul_ln1345_437_fu_13123_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U469(
    .din0(mul_ln1345_438_fu_13132_p0),
    .din1(mul_ln1345_438_fu_13132_p1),
    .dout(mul_ln1345_438_fu_13132_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U470(
    .din0(mul_ln1345_439_fu_13141_p0),
    .din1(mul_ln1345_439_fu_13141_p1),
    .dout(mul_ln1345_439_fu_13141_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U471(
    .din0(mul_ln1345_440_fu_13150_p0),
    .din1(mul_ln1345_440_fu_13150_p1),
    .dout(mul_ln1345_440_fu_13150_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U472(
    .din0(mul_ln1345_441_fu_13159_p0),
    .din1(mul_ln1345_441_fu_13159_p1),
    .dout(mul_ln1345_441_fu_13159_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U473(
    .din0(mul_ln1345_442_fu_13168_p0),
    .din1(mul_ln1345_442_fu_13168_p1),
    .dout(mul_ln1345_442_fu_13168_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U474(
    .din0(mul_ln1345_443_fu_13177_p0),
    .din1(mul_ln1345_443_fu_13177_p1),
    .dout(mul_ln1345_443_fu_13177_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U475(
    .din0(mul_ln1345_444_fu_13262_p0),
    .din1(mul_ln1345_444_fu_13262_p1),
    .dout(mul_ln1345_444_fu_13262_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U476(
    .din0(mul_ln1345_445_fu_13281_p0),
    .din1(mul_ln1345_445_fu_13281_p1),
    .dout(mul_ln1345_445_fu_13281_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U477(
    .din0(mul_ln1345_446_fu_13290_p0),
    .din1(mul_ln1345_446_fu_13290_p1),
    .dout(mul_ln1345_446_fu_13290_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U478(
    .din0(mul_ln1345_447_fu_13299_p0),
    .din1(mul_ln1345_447_fu_13299_p1),
    .dout(mul_ln1345_447_fu_13299_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U479(
    .din0(mul_ln1345_448_fu_13308_p0),
    .din1(mul_ln1345_448_fu_13308_p1),
    .dout(mul_ln1345_448_fu_13308_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U480(
    .din0(mul_ln1345_449_fu_13317_p0),
    .din1(mul_ln1345_449_fu_13317_p1),
    .dout(mul_ln1345_449_fu_13317_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U481(
    .din0(mul_ln1345_450_fu_13326_p0),
    .din1(mul_ln1345_450_fu_13326_p1),
    .dout(mul_ln1345_450_fu_13326_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U482(
    .din0(mul_ln1345_451_fu_13335_p0),
    .din1(mul_ln1345_451_fu_13335_p1),
    .dout(mul_ln1345_451_fu_13335_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U483(
    .din0(mul_ln1345_452_fu_13344_p0),
    .din1(mul_ln1345_452_fu_13344_p1),
    .dout(mul_ln1345_452_fu_13344_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U484(
    .din0(mul_ln1345_453_fu_13353_p0),
    .din1(mul_ln1345_453_fu_13353_p1),
    .dout(mul_ln1345_453_fu_13353_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U485(
    .din0(mul_ln1345_454_fu_13362_p0),
    .din1(mul_ln1345_454_fu_13362_p1),
    .dout(mul_ln1345_454_fu_13362_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U486(
    .din0(mul_ln1345_455_fu_13371_p0),
    .din1(mul_ln1345_455_fu_13371_p1),
    .dout(mul_ln1345_455_fu_13371_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U487(
    .din0(mul_ln1345_456_fu_13456_p0),
    .din1(mul_ln1345_456_fu_13456_p1),
    .dout(mul_ln1345_456_fu_13456_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U488(
    .din0(mul_ln1345_457_fu_13475_p0),
    .din1(mul_ln1345_457_fu_13475_p1),
    .dout(mul_ln1345_457_fu_13475_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U489(
    .din0(mul_ln1345_458_fu_13484_p0),
    .din1(mul_ln1345_458_fu_13484_p1),
    .dout(mul_ln1345_458_fu_13484_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U490(
    .din0(mul_ln1345_459_fu_13493_p0),
    .din1(mul_ln1345_459_fu_13493_p1),
    .dout(mul_ln1345_459_fu_13493_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U491(
    .din0(mul_ln1345_460_fu_13502_p0),
    .din1(mul_ln1345_460_fu_13502_p1),
    .dout(mul_ln1345_460_fu_13502_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U492(
    .din0(mul_ln1345_461_fu_13511_p0),
    .din1(mul_ln1345_461_fu_13511_p1),
    .dout(mul_ln1345_461_fu_13511_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U493(
    .din0(mul_ln1345_462_fu_13520_p0),
    .din1(mul_ln1345_462_fu_13520_p1),
    .dout(mul_ln1345_462_fu_13520_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U494(
    .din0(mul_ln1345_463_fu_13529_p0),
    .din1(mul_ln1345_463_fu_13529_p1),
    .dout(mul_ln1345_463_fu_13529_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U495(
    .din0(mul_ln1345_464_fu_13538_p0),
    .din1(mul_ln1345_464_fu_13538_p1),
    .dout(mul_ln1345_464_fu_13538_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U496(
    .din0(mul_ln1345_465_fu_13547_p0),
    .din1(mul_ln1345_465_fu_13547_p1),
    .dout(mul_ln1345_465_fu_13547_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U497(
    .din0(mul_ln1345_466_fu_13556_p0),
    .din1(mul_ln1345_466_fu_13556_p1),
    .dout(mul_ln1345_466_fu_13556_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U498(
    .din0(mul_ln1345_467_fu_13565_p0),
    .din1(mul_ln1345_467_fu_13565_p1),
    .dout(mul_ln1345_467_fu_13565_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U499(
    .din0(mul_ln1345_468_fu_13650_p0),
    .din1(mul_ln1345_468_fu_13650_p1),
    .dout(mul_ln1345_468_fu_13650_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U500(
    .din0(mul_ln1345_469_fu_13669_p0),
    .din1(mul_ln1345_469_fu_13669_p1),
    .dout(mul_ln1345_469_fu_13669_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U501(
    .din0(mul_ln1345_470_fu_13678_p0),
    .din1(mul_ln1345_470_fu_13678_p1),
    .dout(mul_ln1345_470_fu_13678_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U502(
    .din0(mul_ln1345_471_fu_13687_p0),
    .din1(mul_ln1345_471_fu_13687_p1),
    .dout(mul_ln1345_471_fu_13687_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U503(
    .din0(mul_ln1345_472_fu_13696_p0),
    .din1(mul_ln1345_472_fu_13696_p1),
    .dout(mul_ln1345_472_fu_13696_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U504(
    .din0(mul_ln1345_473_fu_13705_p0),
    .din1(mul_ln1345_473_fu_13705_p1),
    .dout(mul_ln1345_473_fu_13705_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U505(
    .din0(mul_ln1345_474_fu_13714_p0),
    .din1(mul_ln1345_474_fu_13714_p1),
    .dout(mul_ln1345_474_fu_13714_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U506(
    .din0(mul_ln1345_475_fu_13723_p0),
    .din1(mul_ln1345_475_fu_13723_p1),
    .dout(mul_ln1345_475_fu_13723_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U507(
    .din0(mul_ln1345_476_fu_13732_p0),
    .din1(mul_ln1345_476_fu_13732_p1),
    .dout(mul_ln1345_476_fu_13732_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U508(
    .din0(mul_ln1345_477_fu_13741_p0),
    .din1(mul_ln1345_477_fu_13741_p1),
    .dout(mul_ln1345_477_fu_13741_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U509(
    .din0(mul_ln1345_478_fu_13750_p0),
    .din1(mul_ln1345_478_fu_13750_p1),
    .dout(mul_ln1345_478_fu_13750_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U510(
    .din0(mul_ln1345_479_fu_13759_p0),
    .din1(mul_ln1345_479_fu_13759_p1),
    .dout(mul_ln1345_479_fu_13759_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U511(
    .din0(mul_ln1345_480_fu_13844_p0),
    .din1(mul_ln1345_480_fu_13844_p1),
    .dout(mul_ln1345_480_fu_13844_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U512(
    .din0(mul_ln1345_481_fu_13863_p0),
    .din1(mul_ln1345_481_fu_13863_p1),
    .dout(mul_ln1345_481_fu_13863_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U513(
    .din0(mul_ln1345_482_fu_13872_p0),
    .din1(mul_ln1345_482_fu_13872_p1),
    .dout(mul_ln1345_482_fu_13872_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U514(
    .din0(mul_ln1345_483_fu_13881_p0),
    .din1(mul_ln1345_483_fu_13881_p1),
    .dout(mul_ln1345_483_fu_13881_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U515(
    .din0(mul_ln1345_484_fu_13890_p0),
    .din1(mul_ln1345_484_fu_13890_p1),
    .dout(mul_ln1345_484_fu_13890_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U516(
    .din0(mul_ln1345_485_fu_13899_p0),
    .din1(mul_ln1345_485_fu_13899_p1),
    .dout(mul_ln1345_485_fu_13899_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U517(
    .din0(mul_ln1345_486_fu_13908_p0),
    .din1(mul_ln1345_486_fu_13908_p1),
    .dout(mul_ln1345_486_fu_13908_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U518(
    .din0(mul_ln1345_487_fu_13917_p0),
    .din1(mul_ln1345_487_fu_13917_p1),
    .dout(mul_ln1345_487_fu_13917_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U519(
    .din0(mul_ln1345_488_fu_13926_p0),
    .din1(mul_ln1345_488_fu_13926_p1),
    .dout(mul_ln1345_488_fu_13926_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U520(
    .din0(mul_ln1345_489_fu_13935_p0),
    .din1(mul_ln1345_489_fu_13935_p1),
    .dout(mul_ln1345_489_fu_13935_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U521(
    .din0(mul_ln1345_490_fu_13944_p0),
    .din1(mul_ln1345_490_fu_13944_p1),
    .dout(mul_ln1345_490_fu_13944_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U522(
    .din0(mul_ln1345_491_fu_13953_p0),
    .din1(mul_ln1345_491_fu_13953_p1),
    .dout(mul_ln1345_491_fu_13953_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U523(
    .din0(mul_ln1345_492_fu_14038_p0),
    .din1(mul_ln1345_492_fu_14038_p1),
    .dout(mul_ln1345_492_fu_14038_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U524(
    .din0(mul_ln1345_493_fu_14057_p0),
    .din1(mul_ln1345_493_fu_14057_p1),
    .dout(mul_ln1345_493_fu_14057_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U525(
    .din0(mul_ln1345_494_fu_14066_p0),
    .din1(mul_ln1345_494_fu_14066_p1),
    .dout(mul_ln1345_494_fu_14066_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U526(
    .din0(mul_ln1345_495_fu_14075_p0),
    .din1(mul_ln1345_495_fu_14075_p1),
    .dout(mul_ln1345_495_fu_14075_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U527(
    .din0(mul_ln1345_496_fu_14084_p0),
    .din1(mul_ln1345_496_fu_14084_p1),
    .dout(mul_ln1345_496_fu_14084_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U528(
    .din0(mul_ln1345_497_fu_14093_p0),
    .din1(mul_ln1345_497_fu_14093_p1),
    .dout(mul_ln1345_497_fu_14093_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U529(
    .din0(mul_ln1345_498_fu_14102_p0),
    .din1(mul_ln1345_498_fu_14102_p1),
    .dout(mul_ln1345_498_fu_14102_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U530(
    .din0(mul_ln1345_499_fu_14111_p0),
    .din1(mul_ln1345_499_fu_14111_p1),
    .dout(mul_ln1345_499_fu_14111_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U531(
    .din0(mul_ln1345_500_fu_14120_p0),
    .din1(mul_ln1345_500_fu_14120_p1),
    .dout(mul_ln1345_500_fu_14120_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U532(
    .din0(mul_ln1345_501_fu_14129_p0),
    .din1(mul_ln1345_501_fu_14129_p1),
    .dout(mul_ln1345_501_fu_14129_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U533(
    .din0(mul_ln1345_502_fu_14138_p0),
    .din1(mul_ln1345_502_fu_14138_p1),
    .dout(mul_ln1345_502_fu_14138_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U534(
    .din0(mul_ln1345_503_fu_14147_p0),
    .din1(mul_ln1345_503_fu_14147_p1),
    .dout(mul_ln1345_503_fu_14147_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U535(
    .din0(mul_ln1345_504_fu_14232_p0),
    .din1(mul_ln1345_504_fu_14232_p1),
    .dout(mul_ln1345_504_fu_14232_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U536(
    .din0(mul_ln1345_505_fu_14251_p0),
    .din1(mul_ln1345_505_fu_14251_p1),
    .dout(mul_ln1345_505_fu_14251_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U537(
    .din0(mul_ln1345_506_fu_14260_p0),
    .din1(mul_ln1345_506_fu_14260_p1),
    .dout(mul_ln1345_506_fu_14260_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U538(
    .din0(mul_ln1345_507_fu_14269_p0),
    .din1(mul_ln1345_507_fu_14269_p1),
    .dout(mul_ln1345_507_fu_14269_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U539(
    .din0(mul_ln1345_508_fu_14278_p0),
    .din1(mul_ln1345_508_fu_14278_p1),
    .dout(mul_ln1345_508_fu_14278_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U540(
    .din0(mul_ln1345_509_fu_14287_p0),
    .din1(mul_ln1345_509_fu_14287_p1),
    .dout(mul_ln1345_509_fu_14287_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U541(
    .din0(mul_ln1345_510_fu_14296_p0),
    .din1(mul_ln1345_510_fu_14296_p1),
    .dout(mul_ln1345_510_fu_14296_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U542(
    .din0(mul_ln1345_511_fu_14305_p0),
    .din1(mul_ln1345_511_fu_14305_p1),
    .dout(mul_ln1345_511_fu_14305_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U543(
    .din0(mul_ln1345_512_fu_14314_p0),
    .din1(mul_ln1345_512_fu_14314_p1),
    .dout(mul_ln1345_512_fu_14314_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U544(
    .din0(mul_ln1345_513_fu_14323_p0),
    .din1(mul_ln1345_513_fu_14323_p1),
    .dout(mul_ln1345_513_fu_14323_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U545(
    .din0(mul_ln1345_514_fu_14332_p0),
    .din1(mul_ln1345_514_fu_14332_p1),
    .dout(mul_ln1345_514_fu_14332_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U546(
    .din0(mul_ln1345_515_fu_14341_p0),
    .din1(mul_ln1345_515_fu_14341_p1),
    .dout(mul_ln1345_515_fu_14341_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U547(
    .din0(mul_ln1345_516_fu_14426_p0),
    .din1(mul_ln1345_516_fu_14426_p1),
    .dout(mul_ln1345_516_fu_14426_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U548(
    .din0(mul_ln1345_517_fu_14445_p0),
    .din1(mul_ln1345_517_fu_14445_p1),
    .dout(mul_ln1345_517_fu_14445_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U549(
    .din0(mul_ln1345_518_fu_14454_p0),
    .din1(mul_ln1345_518_fu_14454_p1),
    .dout(mul_ln1345_518_fu_14454_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U550(
    .din0(mul_ln1345_519_fu_14463_p0),
    .din1(mul_ln1345_519_fu_14463_p1),
    .dout(mul_ln1345_519_fu_14463_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U551(
    .din0(mul_ln1345_520_fu_14472_p0),
    .din1(mul_ln1345_520_fu_14472_p1),
    .dout(mul_ln1345_520_fu_14472_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U552(
    .din0(mul_ln1345_521_fu_14481_p0),
    .din1(mul_ln1345_521_fu_14481_p1),
    .dout(mul_ln1345_521_fu_14481_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U553(
    .din0(mul_ln1345_522_fu_14490_p0),
    .din1(mul_ln1345_522_fu_14490_p1),
    .dout(mul_ln1345_522_fu_14490_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U554(
    .din0(mul_ln1345_523_fu_14499_p0),
    .din1(mul_ln1345_523_fu_14499_p1),
    .dout(mul_ln1345_523_fu_14499_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U555(
    .din0(mul_ln1345_524_fu_14508_p0),
    .din1(mul_ln1345_524_fu_14508_p1),
    .dout(mul_ln1345_524_fu_14508_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U556(
    .din0(mul_ln1345_525_fu_14517_p0),
    .din1(mul_ln1345_525_fu_14517_p1),
    .dout(mul_ln1345_525_fu_14517_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U557(
    .din0(mul_ln1345_526_fu_14526_p0),
    .din1(mul_ln1345_526_fu_14526_p1),
    .dout(mul_ln1345_526_fu_14526_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U558(
    .din0(mul_ln1345_527_fu_14535_p0),
    .din1(mul_ln1345_527_fu_14535_p1),
    .dout(mul_ln1345_527_fu_14535_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U559(
    .din0(mul_ln1345_528_fu_14620_p0),
    .din1(mul_ln1345_528_fu_14620_p1),
    .dout(mul_ln1345_528_fu_14620_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U560(
    .din0(mul_ln1345_529_fu_14639_p0),
    .din1(mul_ln1345_529_fu_14639_p1),
    .dout(mul_ln1345_529_fu_14639_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U561(
    .din0(mul_ln1345_530_fu_14648_p0),
    .din1(mul_ln1345_530_fu_14648_p1),
    .dout(mul_ln1345_530_fu_14648_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U562(
    .din0(mul_ln1345_531_fu_14657_p0),
    .din1(mul_ln1345_531_fu_14657_p1),
    .dout(mul_ln1345_531_fu_14657_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U563(
    .din0(mul_ln1345_532_fu_14666_p0),
    .din1(mul_ln1345_532_fu_14666_p1),
    .dout(mul_ln1345_532_fu_14666_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U564(
    .din0(mul_ln1345_533_fu_14675_p0),
    .din1(mul_ln1345_533_fu_14675_p1),
    .dout(mul_ln1345_533_fu_14675_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U565(
    .din0(mul_ln1345_534_fu_14684_p0),
    .din1(mul_ln1345_534_fu_14684_p1),
    .dout(mul_ln1345_534_fu_14684_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U566(
    .din0(mul_ln1345_535_fu_14693_p0),
    .din1(mul_ln1345_535_fu_14693_p1),
    .dout(mul_ln1345_535_fu_14693_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U567(
    .din0(mul_ln1345_536_fu_14702_p0),
    .din1(mul_ln1345_536_fu_14702_p1),
    .dout(mul_ln1345_536_fu_14702_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U568(
    .din0(mul_ln1345_537_fu_14711_p0),
    .din1(mul_ln1345_537_fu_14711_p1),
    .dout(mul_ln1345_537_fu_14711_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U569(
    .din0(mul_ln1345_538_fu_14720_p0),
    .din1(mul_ln1345_538_fu_14720_p1),
    .dout(mul_ln1345_538_fu_14720_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U570(
    .din0(mul_ln1345_539_fu_14729_p0),
    .din1(mul_ln1345_539_fu_14729_p1),
    .dout(mul_ln1345_539_fu_14729_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U571(
    .din0(mul_ln1345_540_fu_14814_p0),
    .din1(mul_ln1345_540_fu_14814_p1),
    .dout(mul_ln1345_540_fu_14814_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U572(
    .din0(mul_ln1345_541_fu_14833_p0),
    .din1(mul_ln1345_541_fu_14833_p1),
    .dout(mul_ln1345_541_fu_14833_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U573(
    .din0(mul_ln1345_542_fu_14842_p0),
    .din1(mul_ln1345_542_fu_14842_p1),
    .dout(mul_ln1345_542_fu_14842_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U574(
    .din0(mul_ln1345_543_fu_14851_p0),
    .din1(mul_ln1345_543_fu_14851_p1),
    .dout(mul_ln1345_543_fu_14851_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U575(
    .din0(mul_ln1345_544_fu_14860_p0),
    .din1(mul_ln1345_544_fu_14860_p1),
    .dout(mul_ln1345_544_fu_14860_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U576(
    .din0(mul_ln1345_545_fu_14869_p0),
    .din1(mul_ln1345_545_fu_14869_p1),
    .dout(mul_ln1345_545_fu_14869_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U577(
    .din0(mul_ln1345_546_fu_14878_p0),
    .din1(mul_ln1345_546_fu_14878_p1),
    .dout(mul_ln1345_546_fu_14878_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U578(
    .din0(mul_ln1345_547_fu_14887_p0),
    .din1(mul_ln1345_547_fu_14887_p1),
    .dout(mul_ln1345_547_fu_14887_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U579(
    .din0(mul_ln1345_548_fu_14896_p0),
    .din1(mul_ln1345_548_fu_14896_p1),
    .dout(mul_ln1345_548_fu_14896_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U580(
    .din0(mul_ln1345_549_fu_14905_p0),
    .din1(mul_ln1345_549_fu_14905_p1),
    .dout(mul_ln1345_549_fu_14905_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U581(
    .din0(mul_ln1345_550_fu_14914_p0),
    .din1(mul_ln1345_550_fu_14914_p1),
    .dout(mul_ln1345_550_fu_14914_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U582(
    .din0(mul_ln1345_551_fu_14923_p0),
    .din1(mul_ln1345_551_fu_14923_p1),
    .dout(mul_ln1345_551_fu_14923_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U583(
    .din0(mul_ln1345_552_fu_15008_p0),
    .din1(mul_ln1345_552_fu_15008_p1),
    .dout(mul_ln1345_552_fu_15008_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U584(
    .din0(mul_ln1345_553_fu_15027_p0),
    .din1(mul_ln1345_553_fu_15027_p1),
    .dout(mul_ln1345_553_fu_15027_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U585(
    .din0(mul_ln1345_554_fu_15036_p0),
    .din1(mul_ln1345_554_fu_15036_p1),
    .dout(mul_ln1345_554_fu_15036_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U586(
    .din0(mul_ln1345_555_fu_15045_p0),
    .din1(mul_ln1345_555_fu_15045_p1),
    .dout(mul_ln1345_555_fu_15045_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U587(
    .din0(mul_ln1345_556_fu_15054_p0),
    .din1(mul_ln1345_556_fu_15054_p1),
    .dout(mul_ln1345_556_fu_15054_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U588(
    .din0(mul_ln1345_557_fu_15063_p0),
    .din1(mul_ln1345_557_fu_15063_p1),
    .dout(mul_ln1345_557_fu_15063_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U589(
    .din0(mul_ln1345_558_fu_15072_p0),
    .din1(mul_ln1345_558_fu_15072_p1),
    .dout(mul_ln1345_558_fu_15072_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U590(
    .din0(mul_ln1345_559_fu_15081_p0),
    .din1(mul_ln1345_559_fu_15081_p1),
    .dout(mul_ln1345_559_fu_15081_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U591(
    .din0(mul_ln1345_560_fu_15090_p0),
    .din1(mul_ln1345_560_fu_15090_p1),
    .dout(mul_ln1345_560_fu_15090_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U592(
    .din0(mul_ln1345_561_fu_15099_p0),
    .din1(mul_ln1345_561_fu_15099_p1),
    .dout(mul_ln1345_561_fu_15099_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U593(
    .din0(mul_ln1345_562_fu_15108_p0),
    .din1(mul_ln1345_562_fu_15108_p1),
    .dout(mul_ln1345_562_fu_15108_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U594(
    .din0(mul_ln1345_563_fu_15117_p0),
    .din1(mul_ln1345_563_fu_15117_p1),
    .dout(mul_ln1345_563_fu_15117_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U595(
    .din0(mul_ln1345_564_fu_15202_p0),
    .din1(mul_ln1345_564_fu_15202_p1),
    .dout(mul_ln1345_564_fu_15202_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U596(
    .din0(mul_ln1345_565_fu_15221_p0),
    .din1(mul_ln1345_565_fu_15221_p1),
    .dout(mul_ln1345_565_fu_15221_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U597(
    .din0(mul_ln1345_566_fu_15230_p0),
    .din1(mul_ln1345_566_fu_15230_p1),
    .dout(mul_ln1345_566_fu_15230_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U598(
    .din0(mul_ln1345_567_fu_15239_p0),
    .din1(mul_ln1345_567_fu_15239_p1),
    .dout(mul_ln1345_567_fu_15239_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U599(
    .din0(mul_ln1345_568_fu_15248_p0),
    .din1(mul_ln1345_568_fu_15248_p1),
    .dout(mul_ln1345_568_fu_15248_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U600(
    .din0(mul_ln1345_569_fu_15257_p0),
    .din1(mul_ln1345_569_fu_15257_p1),
    .dout(mul_ln1345_569_fu_15257_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U601(
    .din0(mul_ln1345_570_fu_15266_p0),
    .din1(mul_ln1345_570_fu_15266_p1),
    .dout(mul_ln1345_570_fu_15266_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U602(
    .din0(mul_ln1345_571_fu_15275_p0),
    .din1(mul_ln1345_571_fu_15275_p1),
    .dout(mul_ln1345_571_fu_15275_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U603(
    .din0(mul_ln1345_572_fu_15284_p0),
    .din1(mul_ln1345_572_fu_15284_p1),
    .dout(mul_ln1345_572_fu_15284_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U604(
    .din0(mul_ln1345_573_fu_15293_p0),
    .din1(mul_ln1345_573_fu_15293_p1),
    .dout(mul_ln1345_573_fu_15293_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U605(
    .din0(mul_ln1345_574_fu_15302_p0),
    .din1(mul_ln1345_574_fu_15302_p1),
    .dout(mul_ln1345_574_fu_15302_p2)
);

MLP0_mul_3s_3s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3s_3s_6_1_1_U606(
    .din0(mul_ln1345_575_fu_15311_p0),
    .din1(mul_ln1345_575_fu_15311_p1),
    .dout(mul_ln1345_575_fu_15311_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cit_reg_1559 <= add_ln122_reg_16609;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cit_reg_1559 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cot_reg_1547 <= select_ln121_3_reg_16590;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cot_reg_1547 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten20_reg_1524 <= add_ln120_reg_16575;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten20_reg_1524 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1536 <= select_ln121_4_reg_16614;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_1536 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln120_reg_16575 <= add_ln120_fu_1639_p2;
        mlp_inst_m1_bias_arr_V_load_reg_16580 <= mlp_inst_m1_bias_arr_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln120_fu_1575_p2 == 1'd0))) begin
        add_ln121_1_reg_16570 <= add_ln121_1_fu_1633_p2;
        add_ln121_reg_16555 <= add_ln121_fu_1613_p2;
        and_ln120_reg_16548 <= and_ln120_fu_1607_p2;
        icmp_ln121_reg_16536 <= icmp_ln121_fu_1581_p2;
        select_ln120_reg_16543 <= select_ln120_fu_1587_p3;
        select_ln121_reg_16562 <= select_ln121_fu_1625_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln122_reg_16609 <= add_ln122_fu_1707_p2;
        select_ln121_3_reg_16590 <= select_ln121_3_fu_1678_p3;
        select_ln121_4_reg_16614 <= select_ln121_4_fu_1712_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln120_reg_16532_pp0_iter1_reg == 1'd0))) begin
        add_ln691_106_reg_19695 <= add_ln691_106_fu_8868_p2;
        add_ln691_109_reg_19700 <= add_ln691_109_fu_8930_p2;
        add_ln691_10_reg_19575 <= add_ln691_10_fu_7892_p2;
        add_ln691_111_reg_19705 <= add_ln691_111_fu_8942_p2;
        add_ln691_118_reg_19710 <= add_ln691_118_fu_8990_p2;
        add_ln691_121_reg_19715 <= add_ln691_121_fu_9052_p2;
        add_ln691_123_reg_19720 <= add_ln691_123_fu_9064_p2;
        add_ln691_130_reg_19725 <= add_ln691_130_fu_9112_p2;
        add_ln691_133_reg_19730 <= add_ln691_133_fu_9174_p2;
        add_ln691_135_reg_19735 <= add_ln691_135_fu_9186_p2;
        add_ln691_13_reg_19580 <= add_ln691_13_fu_7954_p2;
        add_ln691_142_reg_19740 <= add_ln691_142_fu_9234_p2;
        add_ln691_145_reg_19745 <= add_ln691_145_fu_9296_p2;
        add_ln691_147_reg_19750 <= add_ln691_147_fu_9308_p2;
        add_ln691_154_reg_19755 <= add_ln691_154_fu_9356_p2;
        add_ln691_157_reg_19760 <= add_ln691_157_fu_9418_p2;
        add_ln691_159_reg_19765 <= add_ln691_159_fu_9430_p2;
        add_ln691_15_reg_19585 <= add_ln691_15_fu_7966_p2;
        add_ln691_166_reg_19770 <= add_ln691_166_fu_9478_p2;
        add_ln691_169_reg_19775 <= add_ln691_169_fu_9540_p2;
        add_ln691_171_reg_19780 <= add_ln691_171_fu_9552_p2;
        add_ln691_178_reg_19785 <= add_ln691_178_fu_9600_p2;
        add_ln691_181_reg_19790 <= add_ln691_181_fu_9662_p2;
        add_ln691_183_reg_19795 <= add_ln691_183_fu_9674_p2;
        add_ln691_190_reg_19800 <= add_ln691_190_fu_9722_p2;
        add_ln691_193_reg_19805 <= add_ln691_193_fu_9784_p2;
        add_ln691_195_reg_19810 <= add_ln691_195_fu_9796_p2;
        add_ln691_1_reg_19565 <= add_ln691_1_fu_7832_p2;
        add_ln691_202_reg_19815 <= add_ln691_202_fu_9844_p2;
        add_ln691_205_reg_19820 <= add_ln691_205_fu_9906_p2;
        add_ln691_207_reg_19825 <= add_ln691_207_fu_9918_p2;
        add_ln691_214_reg_19830 <= add_ln691_214_fu_9966_p2;
        add_ln691_217_reg_19835 <= add_ln691_217_fu_10028_p2;
        add_ln691_219_reg_19840 <= add_ln691_219_fu_10040_p2;
        add_ln691_226_reg_19845 <= add_ln691_226_fu_10088_p2;
        add_ln691_229_reg_19850 <= add_ln691_229_fu_10150_p2;
        add_ln691_22_reg_19590 <= add_ln691_22_fu_8014_p2;
        add_ln691_231_reg_19855 <= add_ln691_231_fu_10162_p2;
        add_ln691_238_reg_19860 <= add_ln691_238_fu_10210_p2;
        add_ln691_241_reg_19865 <= add_ln691_241_fu_10272_p2;
        add_ln691_243_reg_19870 <= add_ln691_243_fu_10284_p2;
        add_ln691_250_reg_19875 <= add_ln691_250_fu_10332_p2;
        add_ln691_253_reg_19880 <= add_ln691_253_fu_10394_p2;
        add_ln691_255_reg_19885 <= add_ln691_255_fu_10406_p2;
        add_ln691_25_reg_19595 <= add_ln691_25_fu_8076_p2;
        add_ln691_262_reg_19890 <= add_ln691_262_fu_10454_p2;
        add_ln691_265_reg_19895 <= add_ln691_265_fu_10516_p2;
        add_ln691_267_reg_19900 <= add_ln691_267_fu_10528_p2;
        add_ln691_274_reg_19905 <= add_ln691_274_fu_10576_p2;
        add_ln691_277_reg_19910 <= add_ln691_277_fu_10638_p2;
        add_ln691_279_reg_19915 <= add_ln691_279_fu_10650_p2;
        add_ln691_27_reg_19600 <= add_ln691_27_fu_8088_p2;
        add_ln691_286_reg_19920 <= add_ln691_286_fu_10698_p2;
        add_ln691_289_reg_19925 <= add_ln691_289_fu_10868_p2;
        add_ln691_291_reg_19930 <= add_ln691_291_fu_10880_p2;
        add_ln691_298_reg_19935 <= add_ln691_298_fu_10928_p2;
        add_ln691_301_reg_19940 <= add_ln691_301_fu_11062_p2;
        add_ln691_303_reg_19945 <= add_ln691_303_fu_11074_p2;
        add_ln691_310_reg_19950 <= add_ln691_310_fu_11122_p2;
        add_ln691_313_reg_19955 <= add_ln691_313_fu_11256_p2;
        add_ln691_315_reg_19960 <= add_ln691_315_fu_11268_p2;
        add_ln691_322_reg_19965 <= add_ln691_322_fu_11316_p2;
        add_ln691_325_reg_19970 <= add_ln691_325_fu_11450_p2;
        add_ln691_327_reg_19975 <= add_ln691_327_fu_11462_p2;
        add_ln691_334_reg_19980 <= add_ln691_334_fu_11510_p2;
        add_ln691_337_reg_19985 <= add_ln691_337_fu_11644_p2;
        add_ln691_339_reg_19990 <= add_ln691_339_fu_11656_p2;
        add_ln691_346_reg_19995 <= add_ln691_346_fu_11704_p2;
        add_ln691_349_reg_20000 <= add_ln691_349_fu_11838_p2;
        add_ln691_34_reg_19605 <= add_ln691_34_fu_8136_p2;
        add_ln691_351_reg_20005 <= add_ln691_351_fu_11850_p2;
        add_ln691_358_reg_20010 <= add_ln691_358_fu_11898_p2;
        add_ln691_361_reg_20015 <= add_ln691_361_fu_12032_p2;
        add_ln691_363_reg_20020 <= add_ln691_363_fu_12044_p2;
        add_ln691_370_reg_20025 <= add_ln691_370_fu_12092_p2;
        add_ln691_373_reg_20030 <= add_ln691_373_fu_12226_p2;
        add_ln691_375_reg_20035 <= add_ln691_375_fu_12238_p2;
        add_ln691_37_reg_19610 <= add_ln691_37_fu_8198_p2;
        add_ln691_382_reg_20040 <= add_ln691_382_fu_12286_p2;
        add_ln691_385_reg_20045 <= add_ln691_385_fu_12420_p2;
        add_ln691_387_reg_20050 <= add_ln691_387_fu_12432_p2;
        add_ln691_394_reg_20055 <= add_ln691_394_fu_12480_p2;
        add_ln691_397_reg_20060 <= add_ln691_397_fu_12614_p2;
        add_ln691_399_reg_20065 <= add_ln691_399_fu_12626_p2;
        add_ln691_39_reg_19615 <= add_ln691_39_fu_8210_p2;
        add_ln691_3_reg_19570 <= add_ln691_3_fu_7844_p2;
        add_ln691_406_reg_20070 <= add_ln691_406_fu_12674_p2;
        add_ln691_409_reg_20075 <= add_ln691_409_fu_12808_p2;
        add_ln691_411_reg_20080 <= add_ln691_411_fu_12820_p2;
        add_ln691_418_reg_20085 <= add_ln691_418_fu_12868_p2;
        add_ln691_421_reg_20090 <= add_ln691_421_fu_13002_p2;
        add_ln691_423_reg_20095 <= add_ln691_423_fu_13014_p2;
        add_ln691_430_reg_20100 <= add_ln691_430_fu_13062_p2;
        add_ln691_433_reg_20105 <= add_ln691_433_fu_13196_p2;
        add_ln691_435_reg_20110 <= add_ln691_435_fu_13208_p2;
        add_ln691_442_reg_20115 <= add_ln691_442_fu_13256_p2;
        add_ln691_445_reg_20120 <= add_ln691_445_fu_13390_p2;
        add_ln691_447_reg_20125 <= add_ln691_447_fu_13402_p2;
        add_ln691_454_reg_20130 <= add_ln691_454_fu_13450_p2;
        add_ln691_457_reg_20135 <= add_ln691_457_fu_13584_p2;
        add_ln691_459_reg_20140 <= add_ln691_459_fu_13596_p2;
        add_ln691_466_reg_20145 <= add_ln691_466_fu_13644_p2;
        add_ln691_469_reg_20150 <= add_ln691_469_fu_13778_p2;
        add_ln691_46_reg_19620 <= add_ln691_46_fu_8258_p2;
        add_ln691_471_reg_20155 <= add_ln691_471_fu_13790_p2;
        add_ln691_478_reg_20160 <= add_ln691_478_fu_13838_p2;
        add_ln691_481_reg_20165 <= add_ln691_481_fu_13972_p2;
        add_ln691_483_reg_20170 <= add_ln691_483_fu_13984_p2;
        add_ln691_490_reg_20175 <= add_ln691_490_fu_14032_p2;
        add_ln691_493_reg_20180 <= add_ln691_493_fu_14166_p2;
        add_ln691_495_reg_20185 <= add_ln691_495_fu_14178_p2;
        add_ln691_49_reg_19625 <= add_ln691_49_fu_8320_p2;
        add_ln691_502_reg_20190 <= add_ln691_502_fu_14226_p2;
        add_ln691_505_reg_20195 <= add_ln691_505_fu_14360_p2;
        add_ln691_507_reg_20200 <= add_ln691_507_fu_14372_p2;
        add_ln691_514_reg_20205 <= add_ln691_514_fu_14420_p2;
        add_ln691_517_reg_20210 <= add_ln691_517_fu_14554_p2;
        add_ln691_519_reg_20215 <= add_ln691_519_fu_14566_p2;
        add_ln691_51_reg_19630 <= add_ln691_51_fu_8332_p2;
        add_ln691_526_reg_20220 <= add_ln691_526_fu_14614_p2;
        add_ln691_529_reg_20225 <= add_ln691_529_fu_14748_p2;
        add_ln691_531_reg_20230 <= add_ln691_531_fu_14760_p2;
        add_ln691_538_reg_20235 <= add_ln691_538_fu_14808_p2;
        add_ln691_541_reg_20240 <= add_ln691_541_fu_14942_p2;
        add_ln691_543_reg_20245 <= add_ln691_543_fu_14954_p2;
        add_ln691_550_reg_20250 <= add_ln691_550_fu_15002_p2;
        add_ln691_553_reg_20255 <= add_ln691_553_fu_15136_p2;
        add_ln691_555_reg_20260 <= add_ln691_555_fu_15148_p2;
        add_ln691_562_reg_20265 <= add_ln691_562_fu_15196_p2;
        add_ln691_565_reg_20270 <= add_ln691_565_fu_15330_p2;
        add_ln691_567_reg_20275 <= add_ln691_567_fu_15342_p2;
        add_ln691_574_reg_20280 <= add_ln691_574_fu_15390_p2;
        add_ln691_58_reg_19635 <= add_ln691_58_fu_8380_p2;
        add_ln691_61_reg_19640 <= add_ln691_61_fu_8442_p2;
        add_ln691_63_reg_19645 <= add_ln691_63_fu_8454_p2;
        add_ln691_70_reg_19650 <= add_ln691_70_fu_8502_p2;
        add_ln691_73_reg_19655 <= add_ln691_73_fu_8564_p2;
        add_ln691_75_reg_19660 <= add_ln691_75_fu_8576_p2;
        add_ln691_82_reg_19665 <= add_ln691_82_fu_8624_p2;
        add_ln691_85_reg_19670 <= add_ln691_85_fu_8686_p2;
        add_ln691_87_reg_19675 <= add_ln691_87_fu_8698_p2;
        add_ln691_94_reg_19680 <= add_ln691_94_fu_8746_p2;
        add_ln691_97_reg_19685 <= add_ln691_97_fu_8808_p2;
        add_ln691_99_reg_19690 <= add_ln691_99_fu_8820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln120_reg_16532 <= icmp_ln120_fu_1575_p2;
        icmp_ln120_reg_16532_pp0_iter1_reg <= icmp_ln120_reg_16532;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln126_reg_16600 <= icmp_ln126_fu_1697_p2;
        icmp_ln161_reg_16605 <= icmp_ln161_fu_1702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln161_reg_16605_pp0_iter1_reg <= icmp_ln161_reg_16605;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mlp_inst_m1_bias_arr_V_load_1_reg_16522 <= mlp_inst_m1_bias_arr_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_ln1345_100_reg_17690 <= mul_ln1345_100_fu_4020_p2;
        mul_ln1345_101_reg_17700 <= mul_ln1345_101_fu_4040_p2;
        mul_ln1345_102_reg_17710 <= mul_ln1345_102_fu_4060_p2;
        mul_ln1345_103_reg_17720 <= mul_ln1345_103_fu_4080_p2;
        mul_ln1345_104_reg_17730 <= mul_ln1345_104_fu_4100_p2;
        mul_ln1345_105_reg_17740 <= mul_ln1345_105_fu_4120_p2;
        mul_ln1345_106_reg_17750 <= mul_ln1345_106_fu_4140_p2;
        mul_ln1345_107_reg_17760 <= mul_ln1345_107_fu_4160_p2;
        mul_ln1345_108_reg_17770 <= mul_ln1345_108_fu_4180_p2;
        mul_ln1345_109_reg_17780 <= mul_ln1345_109_fu_4200_p2;
        mul_ln1345_10_reg_16790 <= mul_ln1345_10_fu_2216_p2;
        mul_ln1345_110_reg_17790 <= mul_ln1345_110_fu_4220_p2;
        mul_ln1345_111_reg_17800 <= mul_ln1345_111_fu_4240_p2;
        mul_ln1345_112_reg_17810 <= mul_ln1345_112_fu_4260_p2;
        mul_ln1345_113_reg_17820 <= mul_ln1345_113_fu_4280_p2;
        mul_ln1345_114_reg_17830 <= mul_ln1345_114_fu_4300_p2;
        mul_ln1345_115_reg_17840 <= mul_ln1345_115_fu_4320_p2;
        mul_ln1345_116_reg_17850 <= mul_ln1345_116_fu_4340_p2;
        mul_ln1345_117_reg_17860 <= mul_ln1345_117_fu_4360_p2;
        mul_ln1345_118_reg_17870 <= mul_ln1345_118_fu_4380_p2;
        mul_ln1345_119_reg_17880 <= mul_ln1345_119_fu_4400_p2;
        mul_ln1345_11_reg_16800 <= mul_ln1345_11_fu_2240_p2;
        mul_ln1345_120_reg_17890 <= mul_ln1345_120_fu_4420_p2;
        mul_ln1345_121_reg_17900 <= mul_ln1345_121_fu_4440_p2;
        mul_ln1345_122_reg_17910 <= mul_ln1345_122_fu_4460_p2;
        mul_ln1345_123_reg_17920 <= mul_ln1345_123_fu_4480_p2;
        mul_ln1345_124_reg_17930 <= mul_ln1345_124_fu_4500_p2;
        mul_ln1345_125_reg_17940 <= mul_ln1345_125_fu_4520_p2;
        mul_ln1345_126_reg_17950 <= mul_ln1345_126_fu_4540_p2;
        mul_ln1345_127_reg_17960 <= mul_ln1345_127_fu_4560_p2;
        mul_ln1345_128_reg_17970 <= mul_ln1345_128_fu_4580_p2;
        mul_ln1345_129_reg_17980 <= mul_ln1345_129_fu_4600_p2;
        mul_ln1345_12_reg_16810 <= mul_ln1345_12_fu_2260_p2;
        mul_ln1345_130_reg_17990 <= mul_ln1345_130_fu_4620_p2;
        mul_ln1345_131_reg_18000 <= mul_ln1345_131_fu_4640_p2;
        mul_ln1345_132_reg_18010 <= mul_ln1345_132_fu_4660_p2;
        mul_ln1345_133_reg_18020 <= mul_ln1345_133_fu_4680_p2;
        mul_ln1345_134_reg_18030 <= mul_ln1345_134_fu_4700_p2;
        mul_ln1345_135_reg_18040 <= mul_ln1345_135_fu_4720_p2;
        mul_ln1345_136_reg_18050 <= mul_ln1345_136_fu_4740_p2;
        mul_ln1345_137_reg_18060 <= mul_ln1345_137_fu_4760_p2;
        mul_ln1345_138_reg_18070 <= mul_ln1345_138_fu_4780_p2;
        mul_ln1345_139_reg_18080 <= mul_ln1345_139_fu_4800_p2;
        mul_ln1345_13_reg_16820 <= mul_ln1345_13_fu_2280_p2;
        mul_ln1345_140_reg_18090 <= mul_ln1345_140_fu_4820_p2;
        mul_ln1345_141_reg_18100 <= mul_ln1345_141_fu_4840_p2;
        mul_ln1345_142_reg_18110 <= mul_ln1345_142_fu_4860_p2;
        mul_ln1345_143_reg_18120 <= mul_ln1345_143_fu_4880_p2;
        mul_ln1345_144_reg_18130 <= mul_ln1345_144_fu_4900_p2;
        mul_ln1345_145_reg_18140 <= mul_ln1345_145_fu_4920_p2;
        mul_ln1345_146_reg_18150 <= mul_ln1345_146_fu_4940_p2;
        mul_ln1345_147_reg_18160 <= mul_ln1345_147_fu_4960_p2;
        mul_ln1345_148_reg_18170 <= mul_ln1345_148_fu_4980_p2;
        mul_ln1345_149_reg_18180 <= mul_ln1345_149_fu_5000_p2;
        mul_ln1345_14_reg_16830 <= mul_ln1345_14_fu_2300_p2;
        mul_ln1345_150_reg_18190 <= mul_ln1345_150_fu_5020_p2;
        mul_ln1345_151_reg_18200 <= mul_ln1345_151_fu_5040_p2;
        mul_ln1345_152_reg_18210 <= mul_ln1345_152_fu_5060_p2;
        mul_ln1345_153_reg_18220 <= mul_ln1345_153_fu_5080_p2;
        mul_ln1345_154_reg_18230 <= mul_ln1345_154_fu_5100_p2;
        mul_ln1345_155_reg_18240 <= mul_ln1345_155_fu_5120_p2;
        mul_ln1345_156_reg_18250 <= mul_ln1345_156_fu_5140_p2;
        mul_ln1345_157_reg_18260 <= mul_ln1345_157_fu_5160_p2;
        mul_ln1345_158_reg_18270 <= mul_ln1345_158_fu_5180_p2;
        mul_ln1345_159_reg_18280 <= mul_ln1345_159_fu_5200_p2;
        mul_ln1345_15_reg_16840 <= mul_ln1345_15_fu_2320_p2;
        mul_ln1345_160_reg_18290 <= mul_ln1345_160_fu_5220_p2;
        mul_ln1345_161_reg_18300 <= mul_ln1345_161_fu_5240_p2;
        mul_ln1345_162_reg_18310 <= mul_ln1345_162_fu_5260_p2;
        mul_ln1345_163_reg_18320 <= mul_ln1345_163_fu_5280_p2;
        mul_ln1345_164_reg_18330 <= mul_ln1345_164_fu_5300_p2;
        mul_ln1345_165_reg_18340 <= mul_ln1345_165_fu_5320_p2;
        mul_ln1345_166_reg_18350 <= mul_ln1345_166_fu_5340_p2;
        mul_ln1345_167_reg_18360 <= mul_ln1345_167_fu_5360_p2;
        mul_ln1345_168_reg_18370 <= mul_ln1345_168_fu_5380_p2;
        mul_ln1345_169_reg_18380 <= mul_ln1345_169_fu_5400_p2;
        mul_ln1345_16_reg_16850 <= mul_ln1345_16_fu_2340_p2;
        mul_ln1345_170_reg_18390 <= mul_ln1345_170_fu_5420_p2;
        mul_ln1345_171_reg_18400 <= mul_ln1345_171_fu_5440_p2;
        mul_ln1345_172_reg_18410 <= mul_ln1345_172_fu_5460_p2;
        mul_ln1345_173_reg_18420 <= mul_ln1345_173_fu_5480_p2;
        mul_ln1345_174_reg_18430 <= mul_ln1345_174_fu_5500_p2;
        mul_ln1345_175_reg_18440 <= mul_ln1345_175_fu_5520_p2;
        mul_ln1345_176_reg_18450 <= mul_ln1345_176_fu_5540_p2;
        mul_ln1345_177_reg_18460 <= mul_ln1345_177_fu_5560_p2;
        mul_ln1345_178_reg_18470 <= mul_ln1345_178_fu_5580_p2;
        mul_ln1345_179_reg_18480 <= mul_ln1345_179_fu_5600_p2;
        mul_ln1345_17_reg_16860 <= mul_ln1345_17_fu_2360_p2;
        mul_ln1345_180_reg_18490 <= mul_ln1345_180_fu_5620_p2;
        mul_ln1345_181_reg_18500 <= mul_ln1345_181_fu_5640_p2;
        mul_ln1345_182_reg_18510 <= mul_ln1345_182_fu_5660_p2;
        mul_ln1345_183_reg_18520 <= mul_ln1345_183_fu_5680_p2;
        mul_ln1345_184_reg_18530 <= mul_ln1345_184_fu_5700_p2;
        mul_ln1345_185_reg_18540 <= mul_ln1345_185_fu_5720_p2;
        mul_ln1345_186_reg_18550 <= mul_ln1345_186_fu_5740_p2;
        mul_ln1345_187_reg_18560 <= mul_ln1345_187_fu_5760_p2;
        mul_ln1345_188_reg_18570 <= mul_ln1345_188_fu_5780_p2;
        mul_ln1345_189_reg_18580 <= mul_ln1345_189_fu_5800_p2;
        mul_ln1345_18_reg_16870 <= mul_ln1345_18_fu_2380_p2;
        mul_ln1345_190_reg_18590 <= mul_ln1345_190_fu_5820_p2;
        mul_ln1345_191_reg_18600 <= mul_ln1345_191_fu_5840_p2;
        mul_ln1345_192_reg_18610 <= mul_ln1345_192_fu_5860_p2;
        mul_ln1345_193_reg_18620 <= mul_ln1345_193_fu_5880_p2;
        mul_ln1345_194_reg_18630 <= mul_ln1345_194_fu_5900_p2;
        mul_ln1345_195_reg_18640 <= mul_ln1345_195_fu_5920_p2;
        mul_ln1345_196_reg_18650 <= mul_ln1345_196_fu_5940_p2;
        mul_ln1345_197_reg_18660 <= mul_ln1345_197_fu_5960_p2;
        mul_ln1345_198_reg_18670 <= mul_ln1345_198_fu_5980_p2;
        mul_ln1345_199_reg_18680 <= mul_ln1345_199_fu_6000_p2;
        mul_ln1345_19_reg_16880 <= mul_ln1345_19_fu_2400_p2;
        mul_ln1345_1_reg_16700 <= mul_ln1345_1_fu_2000_p2;
        mul_ln1345_200_reg_18690 <= mul_ln1345_200_fu_6020_p2;
        mul_ln1345_201_reg_18700 <= mul_ln1345_201_fu_6040_p2;
        mul_ln1345_202_reg_18710 <= mul_ln1345_202_fu_6060_p2;
        mul_ln1345_203_reg_18720 <= mul_ln1345_203_fu_6080_p2;
        mul_ln1345_204_reg_18730 <= mul_ln1345_204_fu_6100_p2;
        mul_ln1345_205_reg_18740 <= mul_ln1345_205_fu_6120_p2;
        mul_ln1345_206_reg_18750 <= mul_ln1345_206_fu_6140_p2;
        mul_ln1345_207_reg_18760 <= mul_ln1345_207_fu_6160_p2;
        mul_ln1345_208_reg_18770 <= mul_ln1345_208_fu_6180_p2;
        mul_ln1345_209_reg_18780 <= mul_ln1345_209_fu_6200_p2;
        mul_ln1345_20_reg_16890 <= mul_ln1345_20_fu_2420_p2;
        mul_ln1345_210_reg_18790 <= mul_ln1345_210_fu_6220_p2;
        mul_ln1345_211_reg_18800 <= mul_ln1345_211_fu_6240_p2;
        mul_ln1345_212_reg_18810 <= mul_ln1345_212_fu_6260_p2;
        mul_ln1345_213_reg_18820 <= mul_ln1345_213_fu_6280_p2;
        mul_ln1345_214_reg_18830 <= mul_ln1345_214_fu_6300_p2;
        mul_ln1345_215_reg_18840 <= mul_ln1345_215_fu_6320_p2;
        mul_ln1345_216_reg_18850 <= mul_ln1345_216_fu_6340_p2;
        mul_ln1345_217_reg_18860 <= mul_ln1345_217_fu_6360_p2;
        mul_ln1345_218_reg_18870 <= mul_ln1345_218_fu_6380_p2;
        mul_ln1345_219_reg_18880 <= mul_ln1345_219_fu_6400_p2;
        mul_ln1345_21_reg_16900 <= mul_ln1345_21_fu_2440_p2;
        mul_ln1345_220_reg_18890 <= mul_ln1345_220_fu_6420_p2;
        mul_ln1345_221_reg_18900 <= mul_ln1345_221_fu_6440_p2;
        mul_ln1345_222_reg_18910 <= mul_ln1345_222_fu_6460_p2;
        mul_ln1345_223_reg_18920 <= mul_ln1345_223_fu_6480_p2;
        mul_ln1345_224_reg_18930 <= mul_ln1345_224_fu_6500_p2;
        mul_ln1345_225_reg_18940 <= mul_ln1345_225_fu_6520_p2;
        mul_ln1345_226_reg_18950 <= mul_ln1345_226_fu_6540_p2;
        mul_ln1345_227_reg_18960 <= mul_ln1345_227_fu_6560_p2;
        mul_ln1345_228_reg_18970 <= mul_ln1345_228_fu_6580_p2;
        mul_ln1345_229_reg_18980 <= mul_ln1345_229_fu_6600_p2;
        mul_ln1345_22_reg_16910 <= mul_ln1345_22_fu_2460_p2;
        mul_ln1345_230_reg_18990 <= mul_ln1345_230_fu_6620_p2;
        mul_ln1345_231_reg_19000 <= mul_ln1345_231_fu_6640_p2;
        mul_ln1345_232_reg_19010 <= mul_ln1345_232_fu_6660_p2;
        mul_ln1345_233_reg_19020 <= mul_ln1345_233_fu_6680_p2;
        mul_ln1345_234_reg_19030 <= mul_ln1345_234_fu_6700_p2;
        mul_ln1345_235_reg_19040 <= mul_ln1345_235_fu_6720_p2;
        mul_ln1345_236_reg_19050 <= mul_ln1345_236_fu_6740_p2;
        mul_ln1345_237_reg_19060 <= mul_ln1345_237_fu_6760_p2;
        mul_ln1345_238_reg_19070 <= mul_ln1345_238_fu_6780_p2;
        mul_ln1345_239_reg_19080 <= mul_ln1345_239_fu_6800_p2;
        mul_ln1345_23_reg_16920 <= mul_ln1345_23_fu_2480_p2;
        mul_ln1345_240_reg_19090 <= mul_ln1345_240_fu_6820_p2;
        mul_ln1345_241_reg_19100 <= mul_ln1345_241_fu_6840_p2;
        mul_ln1345_242_reg_19110 <= mul_ln1345_242_fu_6860_p2;
        mul_ln1345_243_reg_19120 <= mul_ln1345_243_fu_6880_p2;
        mul_ln1345_244_reg_19130 <= mul_ln1345_244_fu_6900_p2;
        mul_ln1345_245_reg_19140 <= mul_ln1345_245_fu_6920_p2;
        mul_ln1345_246_reg_19150 <= mul_ln1345_246_fu_6940_p2;
        mul_ln1345_247_reg_19160 <= mul_ln1345_247_fu_6960_p2;
        mul_ln1345_248_reg_19170 <= mul_ln1345_248_fu_6980_p2;
        mul_ln1345_249_reg_19180 <= mul_ln1345_249_fu_7000_p2;
        mul_ln1345_24_reg_16930 <= mul_ln1345_24_fu_2500_p2;
        mul_ln1345_250_reg_19190 <= mul_ln1345_250_fu_7020_p2;
        mul_ln1345_251_reg_19200 <= mul_ln1345_251_fu_7040_p2;
        mul_ln1345_252_reg_19210 <= mul_ln1345_252_fu_7060_p2;
        mul_ln1345_253_reg_19220 <= mul_ln1345_253_fu_7080_p2;
        mul_ln1345_254_reg_19230 <= mul_ln1345_254_fu_7100_p2;
        mul_ln1345_255_reg_19240 <= mul_ln1345_255_fu_7120_p2;
        mul_ln1345_256_reg_19250 <= mul_ln1345_256_fu_7140_p2;
        mul_ln1345_257_reg_19260 <= mul_ln1345_257_fu_7160_p2;
        mul_ln1345_258_reg_19270 <= mul_ln1345_258_fu_7180_p2;
        mul_ln1345_259_reg_19280 <= mul_ln1345_259_fu_7200_p2;
        mul_ln1345_25_reg_16940 <= mul_ln1345_25_fu_2520_p2;
        mul_ln1345_260_reg_19290 <= mul_ln1345_260_fu_7220_p2;
        mul_ln1345_261_reg_19300 <= mul_ln1345_261_fu_7240_p2;
        mul_ln1345_262_reg_19310 <= mul_ln1345_262_fu_7260_p2;
        mul_ln1345_263_reg_19320 <= mul_ln1345_263_fu_7280_p2;
        mul_ln1345_264_reg_19330 <= mul_ln1345_264_fu_7300_p2;
        mul_ln1345_265_reg_19340 <= mul_ln1345_265_fu_7320_p2;
        mul_ln1345_266_reg_19350 <= mul_ln1345_266_fu_7340_p2;
        mul_ln1345_267_reg_19360 <= mul_ln1345_267_fu_7360_p2;
        mul_ln1345_268_reg_19370 <= mul_ln1345_268_fu_7380_p2;
        mul_ln1345_269_reg_19380 <= mul_ln1345_269_fu_7400_p2;
        mul_ln1345_26_reg_16950 <= mul_ln1345_26_fu_2540_p2;
        mul_ln1345_270_reg_19390 <= mul_ln1345_270_fu_7420_p2;
        mul_ln1345_271_reg_19400 <= mul_ln1345_271_fu_7440_p2;
        mul_ln1345_272_reg_19410 <= mul_ln1345_272_fu_7460_p2;
        mul_ln1345_273_reg_19420 <= mul_ln1345_273_fu_7480_p2;
        mul_ln1345_274_reg_19430 <= mul_ln1345_274_fu_7500_p2;
        mul_ln1345_275_reg_19440 <= mul_ln1345_275_fu_7520_p2;
        mul_ln1345_276_reg_19450 <= mul_ln1345_276_fu_7540_p2;
        mul_ln1345_277_reg_19460 <= mul_ln1345_277_fu_7560_p2;
        mul_ln1345_278_reg_19470 <= mul_ln1345_278_fu_7580_p2;
        mul_ln1345_279_reg_19480 <= mul_ln1345_279_fu_7600_p2;
        mul_ln1345_27_reg_16960 <= mul_ln1345_27_fu_2560_p2;
        mul_ln1345_280_reg_19490 <= mul_ln1345_280_fu_7620_p2;
        mul_ln1345_281_reg_19500 <= mul_ln1345_281_fu_7640_p2;
        mul_ln1345_282_reg_19510 <= mul_ln1345_282_fu_7660_p2;
        mul_ln1345_283_reg_19520 <= mul_ln1345_283_fu_7680_p2;
        mul_ln1345_284_reg_19530 <= mul_ln1345_284_fu_7700_p2;
        mul_ln1345_285_reg_19540 <= mul_ln1345_285_fu_7720_p2;
        mul_ln1345_286_reg_19550 <= mul_ln1345_286_fu_7740_p2;
        mul_ln1345_287_reg_19560 <= mul_ln1345_287_fu_7760_p2;
        mul_ln1345_28_reg_16970 <= mul_ln1345_28_fu_2580_p2;
        mul_ln1345_29_reg_16980 <= mul_ln1345_29_fu_2600_p2;
        mul_ln1345_2_reg_16710 <= mul_ln1345_2_fu_2024_p2;
        mul_ln1345_30_reg_16990 <= mul_ln1345_30_fu_2620_p2;
        mul_ln1345_31_reg_17000 <= mul_ln1345_31_fu_2640_p2;
        mul_ln1345_32_reg_17010 <= mul_ln1345_32_fu_2660_p2;
        mul_ln1345_33_reg_17020 <= mul_ln1345_33_fu_2680_p2;
        mul_ln1345_34_reg_17030 <= mul_ln1345_34_fu_2700_p2;
        mul_ln1345_35_reg_17040 <= mul_ln1345_35_fu_2720_p2;
        mul_ln1345_36_reg_17050 <= mul_ln1345_36_fu_2740_p2;
        mul_ln1345_37_reg_17060 <= mul_ln1345_37_fu_2760_p2;
        mul_ln1345_38_reg_17070 <= mul_ln1345_38_fu_2780_p2;
        mul_ln1345_39_reg_17080 <= mul_ln1345_39_fu_2800_p2;
        mul_ln1345_3_reg_16720 <= mul_ln1345_3_fu_2048_p2;
        mul_ln1345_40_reg_17090 <= mul_ln1345_40_fu_2820_p2;
        mul_ln1345_41_reg_17100 <= mul_ln1345_41_fu_2840_p2;
        mul_ln1345_42_reg_17110 <= mul_ln1345_42_fu_2860_p2;
        mul_ln1345_43_reg_17120 <= mul_ln1345_43_fu_2880_p2;
        mul_ln1345_44_reg_17130 <= mul_ln1345_44_fu_2900_p2;
        mul_ln1345_45_reg_17140 <= mul_ln1345_45_fu_2920_p2;
        mul_ln1345_46_reg_17150 <= mul_ln1345_46_fu_2940_p2;
        mul_ln1345_47_reg_17160 <= mul_ln1345_47_fu_2960_p2;
        mul_ln1345_48_reg_17170 <= mul_ln1345_48_fu_2980_p2;
        mul_ln1345_49_reg_17180 <= mul_ln1345_49_fu_3000_p2;
        mul_ln1345_4_reg_16730 <= mul_ln1345_4_fu_2072_p2;
        mul_ln1345_50_reg_17190 <= mul_ln1345_50_fu_3020_p2;
        mul_ln1345_51_reg_17200 <= mul_ln1345_51_fu_3040_p2;
        mul_ln1345_52_reg_17210 <= mul_ln1345_52_fu_3060_p2;
        mul_ln1345_53_reg_17220 <= mul_ln1345_53_fu_3080_p2;
        mul_ln1345_54_reg_17230 <= mul_ln1345_54_fu_3100_p2;
        mul_ln1345_55_reg_17240 <= mul_ln1345_55_fu_3120_p2;
        mul_ln1345_56_reg_17250 <= mul_ln1345_56_fu_3140_p2;
        mul_ln1345_57_reg_17260 <= mul_ln1345_57_fu_3160_p2;
        mul_ln1345_58_reg_17270 <= mul_ln1345_58_fu_3180_p2;
        mul_ln1345_59_reg_17280 <= mul_ln1345_59_fu_3200_p2;
        mul_ln1345_5_reg_16740 <= mul_ln1345_5_fu_2096_p2;
        mul_ln1345_60_reg_17290 <= mul_ln1345_60_fu_3220_p2;
        mul_ln1345_61_reg_17300 <= mul_ln1345_61_fu_3240_p2;
        mul_ln1345_62_reg_17310 <= mul_ln1345_62_fu_3260_p2;
        mul_ln1345_63_reg_17320 <= mul_ln1345_63_fu_3280_p2;
        mul_ln1345_64_reg_17330 <= mul_ln1345_64_fu_3300_p2;
        mul_ln1345_65_reg_17340 <= mul_ln1345_65_fu_3320_p2;
        mul_ln1345_66_reg_17350 <= mul_ln1345_66_fu_3340_p2;
        mul_ln1345_67_reg_17360 <= mul_ln1345_67_fu_3360_p2;
        mul_ln1345_68_reg_17370 <= mul_ln1345_68_fu_3380_p2;
        mul_ln1345_69_reg_17380 <= mul_ln1345_69_fu_3400_p2;
        mul_ln1345_6_reg_16750 <= mul_ln1345_6_fu_2120_p2;
        mul_ln1345_70_reg_17390 <= mul_ln1345_70_fu_3420_p2;
        mul_ln1345_71_reg_17400 <= mul_ln1345_71_fu_3440_p2;
        mul_ln1345_72_reg_17410 <= mul_ln1345_72_fu_3460_p2;
        mul_ln1345_73_reg_17420 <= mul_ln1345_73_fu_3480_p2;
        mul_ln1345_74_reg_17430 <= mul_ln1345_74_fu_3500_p2;
        mul_ln1345_75_reg_17440 <= mul_ln1345_75_fu_3520_p2;
        mul_ln1345_76_reg_17450 <= mul_ln1345_76_fu_3540_p2;
        mul_ln1345_77_reg_17460 <= mul_ln1345_77_fu_3560_p2;
        mul_ln1345_78_reg_17470 <= mul_ln1345_78_fu_3580_p2;
        mul_ln1345_79_reg_17480 <= mul_ln1345_79_fu_3600_p2;
        mul_ln1345_7_reg_16760 <= mul_ln1345_7_fu_2144_p2;
        mul_ln1345_80_reg_17490 <= mul_ln1345_80_fu_3620_p2;
        mul_ln1345_81_reg_17500 <= mul_ln1345_81_fu_3640_p2;
        mul_ln1345_82_reg_17510 <= mul_ln1345_82_fu_3660_p2;
        mul_ln1345_83_reg_17520 <= mul_ln1345_83_fu_3680_p2;
        mul_ln1345_84_reg_17530 <= mul_ln1345_84_fu_3700_p2;
        mul_ln1345_85_reg_17540 <= mul_ln1345_85_fu_3720_p2;
        mul_ln1345_86_reg_17550 <= mul_ln1345_86_fu_3740_p2;
        mul_ln1345_87_reg_17560 <= mul_ln1345_87_fu_3760_p2;
        mul_ln1345_88_reg_17570 <= mul_ln1345_88_fu_3780_p2;
        mul_ln1345_89_reg_17580 <= mul_ln1345_89_fu_3800_p2;
        mul_ln1345_8_reg_16770 <= mul_ln1345_8_fu_2168_p2;
        mul_ln1345_90_reg_17590 <= mul_ln1345_90_fu_3820_p2;
        mul_ln1345_91_reg_17600 <= mul_ln1345_91_fu_3840_p2;
        mul_ln1345_92_reg_17610 <= mul_ln1345_92_fu_3860_p2;
        mul_ln1345_93_reg_17620 <= mul_ln1345_93_fu_3880_p2;
        mul_ln1345_94_reg_17630 <= mul_ln1345_94_fu_3900_p2;
        mul_ln1345_95_reg_17640 <= mul_ln1345_95_fu_3920_p2;
        mul_ln1345_96_reg_17650 <= mul_ln1345_96_fu_3940_p2;
        mul_ln1345_97_reg_17660 <= mul_ln1345_97_fu_3960_p2;
        mul_ln1345_98_reg_17670 <= mul_ln1345_98_fu_3980_p2;
        mul_ln1345_99_reg_17680 <= mul_ln1345_99_fu_4000_p2;
        mul_ln1345_9_reg_16780 <= mul_ln1345_9_fu_2192_p2;
        mul_ln1345_reg_16690 <= mul_ln1345_fu_1976_p2;
        sext_ln1345_100_reg_17565 <= sext_ln1345_100_fu_3776_p1;
        sext_ln1345_101_reg_17575 <= sext_ln1345_101_fu_3796_p1;
        sext_ln1345_102_reg_17585 <= sext_ln1345_102_fu_3816_p1;
        sext_ln1345_103_reg_17595 <= sext_ln1345_103_fu_3836_p1;
        sext_ln1345_104_reg_17605 <= sext_ln1345_104_fu_3856_p1;
        sext_ln1345_105_reg_17615 <= sext_ln1345_105_fu_3876_p1;
        sext_ln1345_106_reg_17625 <= sext_ln1345_106_fu_3896_p1;
        sext_ln1345_107_reg_17635 <= sext_ln1345_107_fu_3916_p1;
        sext_ln1345_108_reg_17645 <= sext_ln1345_108_fu_3936_p1;
        sext_ln1345_109_reg_17655 <= sext_ln1345_109_fu_3956_p1;
        sext_ln1345_110_reg_17665 <= sext_ln1345_110_fu_3976_p1;
        sext_ln1345_111_reg_17675 <= sext_ln1345_111_fu_3996_p1;
        sext_ln1345_112_reg_17685 <= sext_ln1345_112_fu_4016_p1;
        sext_ln1345_113_reg_17695 <= sext_ln1345_113_fu_4036_p1;
        sext_ln1345_114_reg_17705 <= sext_ln1345_114_fu_4056_p1;
        sext_ln1345_115_reg_17715 <= sext_ln1345_115_fu_4076_p1;
        sext_ln1345_116_reg_17725 <= sext_ln1345_116_fu_4096_p1;
        sext_ln1345_117_reg_17735 <= sext_ln1345_117_fu_4116_p1;
        sext_ln1345_118_reg_17745 <= sext_ln1345_118_fu_4136_p1;
        sext_ln1345_119_reg_17755 <= sext_ln1345_119_fu_4156_p1;
        sext_ln1345_11_reg_16735 <= sext_ln1345_11_fu_2092_p1;
        sext_ln1345_120_reg_17765 <= sext_ln1345_120_fu_4176_p1;
        sext_ln1345_121_reg_17775 <= sext_ln1345_121_fu_4196_p1;
        sext_ln1345_122_reg_17785 <= sext_ln1345_122_fu_4216_p1;
        sext_ln1345_123_reg_17795 <= sext_ln1345_123_fu_4236_p1;
        sext_ln1345_124_reg_17805 <= sext_ln1345_124_fu_4256_p1;
        sext_ln1345_125_reg_17815 <= sext_ln1345_125_fu_4276_p1;
        sext_ln1345_126_reg_17825 <= sext_ln1345_126_fu_4296_p1;
        sext_ln1345_127_reg_17835 <= sext_ln1345_127_fu_4316_p1;
        sext_ln1345_128_reg_17845 <= sext_ln1345_128_fu_4336_p1;
        sext_ln1345_129_reg_17855 <= sext_ln1345_129_fu_4356_p1;
        sext_ln1345_130_reg_17865 <= sext_ln1345_130_fu_4376_p1;
        sext_ln1345_131_reg_17875 <= sext_ln1345_131_fu_4396_p1;
        sext_ln1345_132_reg_17885 <= sext_ln1345_132_fu_4416_p1;
        sext_ln1345_133_reg_17895 <= sext_ln1345_133_fu_4436_p1;
        sext_ln1345_134_reg_17905 <= sext_ln1345_134_fu_4456_p1;
        sext_ln1345_135_reg_17915 <= sext_ln1345_135_fu_4476_p1;
        sext_ln1345_136_reg_17925 <= sext_ln1345_136_fu_4496_p1;
        sext_ln1345_137_reg_17935 <= sext_ln1345_137_fu_4516_p1;
        sext_ln1345_138_reg_17945 <= sext_ln1345_138_fu_4536_p1;
        sext_ln1345_139_reg_17955 <= sext_ln1345_139_fu_4556_p1;
        sext_ln1345_13_reg_16745 <= sext_ln1345_13_fu_2116_p1;
        sext_ln1345_140_reg_17965 <= sext_ln1345_140_fu_4576_p1;
        sext_ln1345_141_reg_17975 <= sext_ln1345_141_fu_4596_p1;
        sext_ln1345_142_reg_17985 <= sext_ln1345_142_fu_4616_p1;
        sext_ln1345_143_reg_17995 <= sext_ln1345_143_fu_4636_p1;
        sext_ln1345_144_reg_18005 <= sext_ln1345_144_fu_4656_p1;
        sext_ln1345_145_reg_18015 <= sext_ln1345_145_fu_4676_p1;
        sext_ln1345_146_reg_18025 <= sext_ln1345_146_fu_4696_p1;
        sext_ln1345_147_reg_18035 <= sext_ln1345_147_fu_4716_p1;
        sext_ln1345_148_reg_18045 <= sext_ln1345_148_fu_4736_p1;
        sext_ln1345_149_reg_18055 <= sext_ln1345_149_fu_4756_p1;
        sext_ln1345_150_reg_18065 <= sext_ln1345_150_fu_4776_p1;
        sext_ln1345_151_reg_18075 <= sext_ln1345_151_fu_4796_p1;
        sext_ln1345_152_reg_18085 <= sext_ln1345_152_fu_4816_p1;
        sext_ln1345_153_reg_18095 <= sext_ln1345_153_fu_4836_p1;
        sext_ln1345_154_reg_18105 <= sext_ln1345_154_fu_4856_p1;
        sext_ln1345_155_reg_18115 <= sext_ln1345_155_fu_4876_p1;
        sext_ln1345_156_reg_18125 <= sext_ln1345_156_fu_4896_p1;
        sext_ln1345_157_reg_18135 <= sext_ln1345_157_fu_4916_p1;
        sext_ln1345_158_reg_18145 <= sext_ln1345_158_fu_4936_p1;
        sext_ln1345_159_reg_18155 <= sext_ln1345_159_fu_4956_p1;
        sext_ln1345_15_reg_16755 <= sext_ln1345_15_fu_2140_p1;
        sext_ln1345_160_reg_18165 <= sext_ln1345_160_fu_4976_p1;
        sext_ln1345_161_reg_18175 <= sext_ln1345_161_fu_4996_p1;
        sext_ln1345_162_reg_18185 <= sext_ln1345_162_fu_5016_p1;
        sext_ln1345_163_reg_18195 <= sext_ln1345_163_fu_5036_p1;
        sext_ln1345_164_reg_18205 <= sext_ln1345_164_fu_5056_p1;
        sext_ln1345_165_reg_18215 <= sext_ln1345_165_fu_5076_p1;
        sext_ln1345_166_reg_18225 <= sext_ln1345_166_fu_5096_p1;
        sext_ln1345_167_reg_18235 <= sext_ln1345_167_fu_5116_p1;
        sext_ln1345_168_reg_18245 <= sext_ln1345_168_fu_5136_p1;
        sext_ln1345_169_reg_18255 <= sext_ln1345_169_fu_5156_p1;
        sext_ln1345_170_reg_18265 <= sext_ln1345_170_fu_5176_p1;
        sext_ln1345_171_reg_18275 <= sext_ln1345_171_fu_5196_p1;
        sext_ln1345_172_reg_18285 <= sext_ln1345_172_fu_5216_p1;
        sext_ln1345_173_reg_18295 <= sext_ln1345_173_fu_5236_p1;
        sext_ln1345_174_reg_18305 <= sext_ln1345_174_fu_5256_p1;
        sext_ln1345_175_reg_18315 <= sext_ln1345_175_fu_5276_p1;
        sext_ln1345_176_reg_18325 <= sext_ln1345_176_fu_5296_p1;
        sext_ln1345_177_reg_18335 <= sext_ln1345_177_fu_5316_p1;
        sext_ln1345_178_reg_18345 <= sext_ln1345_178_fu_5336_p1;
        sext_ln1345_179_reg_18355 <= sext_ln1345_179_fu_5356_p1;
        sext_ln1345_17_reg_16765 <= sext_ln1345_17_fu_2164_p1;
        sext_ln1345_180_reg_18365 <= sext_ln1345_180_fu_5376_p1;
        sext_ln1345_181_reg_18375 <= sext_ln1345_181_fu_5396_p1;
        sext_ln1345_182_reg_18385 <= sext_ln1345_182_fu_5416_p1;
        sext_ln1345_183_reg_18395 <= sext_ln1345_183_fu_5436_p1;
        sext_ln1345_184_reg_18405 <= sext_ln1345_184_fu_5456_p1;
        sext_ln1345_185_reg_18415 <= sext_ln1345_185_fu_5476_p1;
        sext_ln1345_186_reg_18425 <= sext_ln1345_186_fu_5496_p1;
        sext_ln1345_187_reg_18435 <= sext_ln1345_187_fu_5516_p1;
        sext_ln1345_188_reg_18445 <= sext_ln1345_188_fu_5536_p1;
        sext_ln1345_189_reg_18455 <= sext_ln1345_189_fu_5556_p1;
        sext_ln1345_190_reg_18465 <= sext_ln1345_190_fu_5576_p1;
        sext_ln1345_191_reg_18475 <= sext_ln1345_191_fu_5596_p1;
        sext_ln1345_192_reg_18485 <= sext_ln1345_192_fu_5616_p1;
        sext_ln1345_193_reg_18495 <= sext_ln1345_193_fu_5636_p1;
        sext_ln1345_194_reg_18505 <= sext_ln1345_194_fu_5656_p1;
        sext_ln1345_195_reg_18515 <= sext_ln1345_195_fu_5676_p1;
        sext_ln1345_196_reg_18525 <= sext_ln1345_196_fu_5696_p1;
        sext_ln1345_197_reg_18535 <= sext_ln1345_197_fu_5716_p1;
        sext_ln1345_198_reg_18545 <= sext_ln1345_198_fu_5736_p1;
        sext_ln1345_199_reg_18555 <= sext_ln1345_199_fu_5756_p1;
        sext_ln1345_19_reg_16775 <= sext_ln1345_19_fu_2188_p1;
        sext_ln1345_1_reg_16685 <= sext_ln1345_1_fu_1972_p1;
        sext_ln1345_200_reg_18565 <= sext_ln1345_200_fu_5776_p1;
        sext_ln1345_201_reg_18575 <= sext_ln1345_201_fu_5796_p1;
        sext_ln1345_202_reg_18585 <= sext_ln1345_202_fu_5816_p1;
        sext_ln1345_203_reg_18595 <= sext_ln1345_203_fu_5836_p1;
        sext_ln1345_204_reg_18605 <= sext_ln1345_204_fu_5856_p1;
        sext_ln1345_205_reg_18615 <= sext_ln1345_205_fu_5876_p1;
        sext_ln1345_206_reg_18625 <= sext_ln1345_206_fu_5896_p1;
        sext_ln1345_207_reg_18635 <= sext_ln1345_207_fu_5916_p1;
        sext_ln1345_208_reg_18645 <= sext_ln1345_208_fu_5936_p1;
        sext_ln1345_209_reg_18655 <= sext_ln1345_209_fu_5956_p1;
        sext_ln1345_210_reg_18665 <= sext_ln1345_210_fu_5976_p1;
        sext_ln1345_211_reg_18675 <= sext_ln1345_211_fu_5996_p1;
        sext_ln1345_212_reg_18685 <= sext_ln1345_212_fu_6016_p1;
        sext_ln1345_213_reg_18695 <= sext_ln1345_213_fu_6036_p1;
        sext_ln1345_214_reg_18705 <= sext_ln1345_214_fu_6056_p1;
        sext_ln1345_215_reg_18715 <= sext_ln1345_215_fu_6076_p1;
        sext_ln1345_216_reg_18725 <= sext_ln1345_216_fu_6096_p1;
        sext_ln1345_217_reg_18735 <= sext_ln1345_217_fu_6116_p1;
        sext_ln1345_218_reg_18745 <= sext_ln1345_218_fu_6136_p1;
        sext_ln1345_219_reg_18755 <= sext_ln1345_219_fu_6156_p1;
        sext_ln1345_21_reg_16785 <= sext_ln1345_21_fu_2212_p1;
        sext_ln1345_220_reg_18765 <= sext_ln1345_220_fu_6176_p1;
        sext_ln1345_221_reg_18775 <= sext_ln1345_221_fu_6196_p1;
        sext_ln1345_222_reg_18785 <= sext_ln1345_222_fu_6216_p1;
        sext_ln1345_223_reg_18795 <= sext_ln1345_223_fu_6236_p1;
        sext_ln1345_224_reg_18805 <= sext_ln1345_224_fu_6256_p1;
        sext_ln1345_225_reg_18815 <= sext_ln1345_225_fu_6276_p1;
        sext_ln1345_226_reg_18825 <= sext_ln1345_226_fu_6296_p1;
        sext_ln1345_227_reg_18835 <= sext_ln1345_227_fu_6316_p1;
        sext_ln1345_228_reg_18845 <= sext_ln1345_228_fu_6336_p1;
        sext_ln1345_229_reg_18855 <= sext_ln1345_229_fu_6356_p1;
        sext_ln1345_230_reg_18865 <= sext_ln1345_230_fu_6376_p1;
        sext_ln1345_231_reg_18875 <= sext_ln1345_231_fu_6396_p1;
        sext_ln1345_232_reg_18885 <= sext_ln1345_232_fu_6416_p1;
        sext_ln1345_233_reg_18895 <= sext_ln1345_233_fu_6436_p1;
        sext_ln1345_234_reg_18905 <= sext_ln1345_234_fu_6456_p1;
        sext_ln1345_235_reg_18915 <= sext_ln1345_235_fu_6476_p1;
        sext_ln1345_236_reg_18925 <= sext_ln1345_236_fu_6496_p1;
        sext_ln1345_237_reg_18935 <= sext_ln1345_237_fu_6516_p1;
        sext_ln1345_238_reg_18945 <= sext_ln1345_238_fu_6536_p1;
        sext_ln1345_239_reg_18955 <= sext_ln1345_239_fu_6556_p1;
        sext_ln1345_23_reg_16795 <= sext_ln1345_23_fu_2236_p1;
        sext_ln1345_240_reg_18965 <= sext_ln1345_240_fu_6576_p1;
        sext_ln1345_241_reg_18975 <= sext_ln1345_241_fu_6596_p1;
        sext_ln1345_242_reg_18985 <= sext_ln1345_242_fu_6616_p1;
        sext_ln1345_243_reg_18995 <= sext_ln1345_243_fu_6636_p1;
        sext_ln1345_244_reg_19005 <= sext_ln1345_244_fu_6656_p1;
        sext_ln1345_245_reg_19015 <= sext_ln1345_245_fu_6676_p1;
        sext_ln1345_246_reg_19025 <= sext_ln1345_246_fu_6696_p1;
        sext_ln1345_247_reg_19035 <= sext_ln1345_247_fu_6716_p1;
        sext_ln1345_248_reg_19045 <= sext_ln1345_248_fu_6736_p1;
        sext_ln1345_249_reg_19055 <= sext_ln1345_249_fu_6756_p1;
        sext_ln1345_24_reg_16805 <= sext_ln1345_24_fu_2256_p1;
        sext_ln1345_250_reg_19065 <= sext_ln1345_250_fu_6776_p1;
        sext_ln1345_251_reg_19075 <= sext_ln1345_251_fu_6796_p1;
        sext_ln1345_252_reg_19085 <= sext_ln1345_252_fu_6816_p1;
        sext_ln1345_253_reg_19095 <= sext_ln1345_253_fu_6836_p1;
        sext_ln1345_254_reg_19105 <= sext_ln1345_254_fu_6856_p1;
        sext_ln1345_255_reg_19115 <= sext_ln1345_255_fu_6876_p1;
        sext_ln1345_256_reg_19125 <= sext_ln1345_256_fu_6896_p1;
        sext_ln1345_257_reg_19135 <= sext_ln1345_257_fu_6916_p1;
        sext_ln1345_258_reg_19145 <= sext_ln1345_258_fu_6936_p1;
        sext_ln1345_259_reg_19155 <= sext_ln1345_259_fu_6956_p1;
        sext_ln1345_25_reg_16815 <= sext_ln1345_25_fu_2276_p1;
        sext_ln1345_260_reg_19165 <= sext_ln1345_260_fu_6976_p1;
        sext_ln1345_261_reg_19175 <= sext_ln1345_261_fu_6996_p1;
        sext_ln1345_262_reg_19185 <= sext_ln1345_262_fu_7016_p1;
        sext_ln1345_263_reg_19195 <= sext_ln1345_263_fu_7036_p1;
        sext_ln1345_264_reg_19205 <= sext_ln1345_264_fu_7056_p1;
        sext_ln1345_265_reg_19215 <= sext_ln1345_265_fu_7076_p1;
        sext_ln1345_266_reg_19225 <= sext_ln1345_266_fu_7096_p1;
        sext_ln1345_267_reg_19235 <= sext_ln1345_267_fu_7116_p1;
        sext_ln1345_268_reg_19245 <= sext_ln1345_268_fu_7136_p1;
        sext_ln1345_269_reg_19255 <= sext_ln1345_269_fu_7156_p1;
        sext_ln1345_26_reg_16825 <= sext_ln1345_26_fu_2296_p1;
        sext_ln1345_270_reg_19265 <= sext_ln1345_270_fu_7176_p1;
        sext_ln1345_271_reg_19275 <= sext_ln1345_271_fu_7196_p1;
        sext_ln1345_272_reg_19285 <= sext_ln1345_272_fu_7216_p1;
        sext_ln1345_273_reg_19295 <= sext_ln1345_273_fu_7236_p1;
        sext_ln1345_274_reg_19305 <= sext_ln1345_274_fu_7256_p1;
        sext_ln1345_275_reg_19315 <= sext_ln1345_275_fu_7276_p1;
        sext_ln1345_276_reg_19325 <= sext_ln1345_276_fu_7296_p1;
        sext_ln1345_277_reg_19335 <= sext_ln1345_277_fu_7316_p1;
        sext_ln1345_278_reg_19345 <= sext_ln1345_278_fu_7336_p1;
        sext_ln1345_279_reg_19355 <= sext_ln1345_279_fu_7356_p1;
        sext_ln1345_27_reg_16835 <= sext_ln1345_27_fu_2316_p1;
        sext_ln1345_280_reg_19365 <= sext_ln1345_280_fu_7376_p1;
        sext_ln1345_281_reg_19375 <= sext_ln1345_281_fu_7396_p1;
        sext_ln1345_282_reg_19385 <= sext_ln1345_282_fu_7416_p1;
        sext_ln1345_283_reg_19395 <= sext_ln1345_283_fu_7436_p1;
        sext_ln1345_284_reg_19405 <= sext_ln1345_284_fu_7456_p1;
        sext_ln1345_285_reg_19415 <= sext_ln1345_285_fu_7476_p1;
        sext_ln1345_286_reg_19425 <= sext_ln1345_286_fu_7496_p1;
        sext_ln1345_287_reg_19435 <= sext_ln1345_287_fu_7516_p1;
        sext_ln1345_288_reg_19445 <= sext_ln1345_288_fu_7536_p1;
        sext_ln1345_289_reg_19455 <= sext_ln1345_289_fu_7556_p1;
        sext_ln1345_28_reg_16845 <= sext_ln1345_28_fu_2336_p1;
        sext_ln1345_290_reg_19465 <= sext_ln1345_290_fu_7576_p1;
        sext_ln1345_291_reg_19475 <= sext_ln1345_291_fu_7596_p1;
        sext_ln1345_292_reg_19485 <= sext_ln1345_292_fu_7616_p1;
        sext_ln1345_293_reg_19495 <= sext_ln1345_293_fu_7636_p1;
        sext_ln1345_294_reg_19505 <= sext_ln1345_294_fu_7656_p1;
        sext_ln1345_295_reg_19515 <= sext_ln1345_295_fu_7676_p1;
        sext_ln1345_296_reg_19525 <= sext_ln1345_296_fu_7696_p1;
        sext_ln1345_297_reg_19535 <= sext_ln1345_297_fu_7716_p1;
        sext_ln1345_298_reg_19545 <= sext_ln1345_298_fu_7736_p1;
        sext_ln1345_299_reg_19555 <= sext_ln1345_299_fu_7756_p1;
        sext_ln1345_29_reg_16855 <= sext_ln1345_29_fu_2356_p1;
        sext_ln1345_30_reg_16865 <= sext_ln1345_30_fu_2376_p1;
        sext_ln1345_31_reg_16875 <= sext_ln1345_31_fu_2396_p1;
        sext_ln1345_32_reg_16885 <= sext_ln1345_32_fu_2416_p1;
        sext_ln1345_33_reg_16895 <= sext_ln1345_33_fu_2436_p1;
        sext_ln1345_34_reg_16905 <= sext_ln1345_34_fu_2456_p1;
        sext_ln1345_35_reg_16915 <= sext_ln1345_35_fu_2476_p1;
        sext_ln1345_36_reg_16925 <= sext_ln1345_36_fu_2496_p1;
        sext_ln1345_37_reg_16935 <= sext_ln1345_37_fu_2516_p1;
        sext_ln1345_38_reg_16945 <= sext_ln1345_38_fu_2536_p1;
        sext_ln1345_39_reg_16955 <= sext_ln1345_39_fu_2556_p1;
        sext_ln1345_3_reg_16695 <= sext_ln1345_3_fu_1996_p1;
        sext_ln1345_40_reg_16965 <= sext_ln1345_40_fu_2576_p1;
        sext_ln1345_41_reg_16975 <= sext_ln1345_41_fu_2596_p1;
        sext_ln1345_42_reg_16985 <= sext_ln1345_42_fu_2616_p1;
        sext_ln1345_43_reg_16995 <= sext_ln1345_43_fu_2636_p1;
        sext_ln1345_44_reg_17005 <= sext_ln1345_44_fu_2656_p1;
        sext_ln1345_45_reg_17015 <= sext_ln1345_45_fu_2676_p1;
        sext_ln1345_46_reg_17025 <= sext_ln1345_46_fu_2696_p1;
        sext_ln1345_47_reg_17035 <= sext_ln1345_47_fu_2716_p1;
        sext_ln1345_48_reg_17045 <= sext_ln1345_48_fu_2736_p1;
        sext_ln1345_49_reg_17055 <= sext_ln1345_49_fu_2756_p1;
        sext_ln1345_50_reg_17065 <= sext_ln1345_50_fu_2776_p1;
        sext_ln1345_51_reg_17075 <= sext_ln1345_51_fu_2796_p1;
        sext_ln1345_52_reg_17085 <= sext_ln1345_52_fu_2816_p1;
        sext_ln1345_53_reg_17095 <= sext_ln1345_53_fu_2836_p1;
        sext_ln1345_54_reg_17105 <= sext_ln1345_54_fu_2856_p1;
        sext_ln1345_55_reg_17115 <= sext_ln1345_55_fu_2876_p1;
        sext_ln1345_56_reg_17125 <= sext_ln1345_56_fu_2896_p1;
        sext_ln1345_57_reg_17135 <= sext_ln1345_57_fu_2916_p1;
        sext_ln1345_58_reg_17145 <= sext_ln1345_58_fu_2936_p1;
        sext_ln1345_59_reg_17155 <= sext_ln1345_59_fu_2956_p1;
        sext_ln1345_5_reg_16705 <= sext_ln1345_5_fu_2020_p1;
        sext_ln1345_60_reg_17165 <= sext_ln1345_60_fu_2976_p1;
        sext_ln1345_61_reg_17175 <= sext_ln1345_61_fu_2996_p1;
        sext_ln1345_62_reg_17185 <= sext_ln1345_62_fu_3016_p1;
        sext_ln1345_63_reg_17195 <= sext_ln1345_63_fu_3036_p1;
        sext_ln1345_64_reg_17205 <= sext_ln1345_64_fu_3056_p1;
        sext_ln1345_65_reg_17215 <= sext_ln1345_65_fu_3076_p1;
        sext_ln1345_66_reg_17225 <= sext_ln1345_66_fu_3096_p1;
        sext_ln1345_67_reg_17235 <= sext_ln1345_67_fu_3116_p1;
        sext_ln1345_68_reg_17245 <= sext_ln1345_68_fu_3136_p1;
        sext_ln1345_69_reg_17255 <= sext_ln1345_69_fu_3156_p1;
        sext_ln1345_70_reg_17265 <= sext_ln1345_70_fu_3176_p1;
        sext_ln1345_71_reg_17275 <= sext_ln1345_71_fu_3196_p1;
        sext_ln1345_72_reg_17285 <= sext_ln1345_72_fu_3216_p1;
        sext_ln1345_73_reg_17295 <= sext_ln1345_73_fu_3236_p1;
        sext_ln1345_74_reg_17305 <= sext_ln1345_74_fu_3256_p1;
        sext_ln1345_75_reg_17315 <= sext_ln1345_75_fu_3276_p1;
        sext_ln1345_76_reg_17325 <= sext_ln1345_76_fu_3296_p1;
        sext_ln1345_77_reg_17335 <= sext_ln1345_77_fu_3316_p1;
        sext_ln1345_78_reg_17345 <= sext_ln1345_78_fu_3336_p1;
        sext_ln1345_79_reg_17355 <= sext_ln1345_79_fu_3356_p1;
        sext_ln1345_7_reg_16715 <= sext_ln1345_7_fu_2044_p1;
        sext_ln1345_80_reg_17365 <= sext_ln1345_80_fu_3376_p1;
        sext_ln1345_81_reg_17375 <= sext_ln1345_81_fu_3396_p1;
        sext_ln1345_82_reg_17385 <= sext_ln1345_82_fu_3416_p1;
        sext_ln1345_83_reg_17395 <= sext_ln1345_83_fu_3436_p1;
        sext_ln1345_84_reg_17405 <= sext_ln1345_84_fu_3456_p1;
        sext_ln1345_85_reg_17415 <= sext_ln1345_85_fu_3476_p1;
        sext_ln1345_86_reg_17425 <= sext_ln1345_86_fu_3496_p1;
        sext_ln1345_87_reg_17435 <= sext_ln1345_87_fu_3516_p1;
        sext_ln1345_88_reg_17445 <= sext_ln1345_88_fu_3536_p1;
        sext_ln1345_89_reg_17455 <= sext_ln1345_89_fu_3556_p1;
        sext_ln1345_90_reg_17465 <= sext_ln1345_90_fu_3576_p1;
        sext_ln1345_91_reg_17475 <= sext_ln1345_91_fu_3596_p1;
        sext_ln1345_92_reg_17485 <= sext_ln1345_92_fu_3616_p1;
        sext_ln1345_93_reg_17495 <= sext_ln1345_93_fu_3636_p1;
        sext_ln1345_94_reg_17505 <= sext_ln1345_94_fu_3656_p1;
        sext_ln1345_95_reg_17515 <= sext_ln1345_95_fu_3676_p1;
        sext_ln1345_96_reg_17525 <= sext_ln1345_96_fu_3696_p1;
        sext_ln1345_97_reg_17535 <= sext_ln1345_97_fu_3716_p1;
        sext_ln1345_98_reg_17545 <= sext_ln1345_98_fu_3736_p1;
        sext_ln1345_99_reg_17555 <= sext_ln1345_99_fu_3756_p1;
        sext_ln1345_9_reg_16725 <= sext_ln1345_9_fu_2068_p1;
        trunc_ln145_11_reg_16625 <= {{cache_window_sm_dout[98:96]}};
        trunc_ln145_12_reg_16630 <= {{cache_window_sm_dout[106:104]}};
        trunc_ln145_13_reg_16635 <= {{cache_window_sm_dout[114:112]}};
        trunc_ln145_14_reg_16640 <= {{cache_window_sm_dout[122:120]}};
        trunc_ln145_15_reg_16645 <= {{cache_window_sm_dout[130:128]}};
        trunc_ln145_16_reg_16650 <= {{cache_window_sm_dout[138:136]}};
        trunc_ln145_17_reg_16655 <= {{cache_window_sm_dout[146:144]}};
        trunc_ln145_18_reg_16660 <= {{cache_window_sm_dout[154:152]}};
        trunc_ln145_19_reg_16665 <= {{cache_window_sm_dout[162:160]}};
        trunc_ln145_20_reg_16670 <= {{cache_window_sm_dout[170:168]}};
        trunc_ln145_21_reg_16675 <= {{cache_window_sm_dout[178:176]}};
        trunc_ln145_22_reg_16680 <= {{cache_window_sm_dout[186:184]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln126_reg_16600 == 1'd1))) begin
        select_ln121_2_reg_16619 <= select_ln121_2_fu_1723_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln120_reg_16532_pp0_iter1_reg == 1'd0))) begin
        vec_o_data_M_elems_V_2_fu_1472 <= tmp_334_fu_16212_p49;
    end
end

always @ (*) begin
    if ((icmp_ln120_reg_16532 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cit_phi_fu_1563_p4 = add_ln122_reg_16609;
    end else begin
        ap_phi_mux_cit_phi_fu_1563_p4 = cit_reg_1559;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_cot_phi_fu_1551_p4 = select_ln121_3_reg_16590;
    end else begin
        ap_phi_mux_cot_phi_fu_1551_p4 = cot_reg_1547;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten20_phi_fu_1528_p4 = add_ln120_reg_16575;
    end else begin
        ap_phi_mux_indvar_flatten20_phi_fu_1528_p4 = indvar_flatten20_reg_1524;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_1540_p4 = select_ln121_4_reg_16614;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_1540_p4 = indvar_flatten_reg_1536;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cache_window_sm_blk_n = cache_window_sm_empty_n;
    end else begin
        cache_window_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_16532 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cache_window_sm_read = 1'b1;
    end else begin
        cache_window_sm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln161_reg_16605_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mac_sm_blk_n = mac_sm_full_n;
    end else begin
        mac_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln161_reg_16605_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mac_sm_write = 1'b1;
    end else begin
        mac_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mlp_inst_m1_bias_arr_V_address0 = zext_ln121_1_fu_1645_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mlp_inst_m1_bias_arr_V_address0 = zext_ln121_fu_1570_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        mlp_inst_m1_bias_arr_V_address0 = 5'd0;
    end else begin
        mlp_inst_m1_bias_arr_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        mlp_inst_m1_bias_arr_V_ce0 = 1'b1;
    end else begin
        mlp_inst_m1_bias_arr_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mlp_inst_m1_weight_arr_V_ce0 = 1'b1;
    end else begin
        mlp_inst_m1_weight_arr_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((icmp_ln120_reg_16532 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln120_reg_16532 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln120_fu_1639_p2 = (indvar_flatten20_reg_1524 + 16'd1);

assign add_ln121_1_fu_1633_p2 = (ap_phi_mux_indvar_flatten_phi_fu_1540_p4 + 11'd1);

assign add_ln121_fu_1613_p2 = (select_ln120_fu_1587_p3 + 6'd1);

assign add_ln122_fu_1707_p2 = (select_ln121_reg_16562 + 5'd1);

assign add_ln215_fu_1686_p2 = (tmp_cast_fu_1670_p3 + zext_ln215_fu_1683_p1);

assign add_ln691_100_fu_15535_p2 = ($signed(sext_ln691_67_fu_15532_p1) + $signed(add_ln691_97_reg_19685));

assign add_ln691_101_fu_8826_p2 = ($signed(sext_ln151_80_fu_8765_p1) + $signed(sext_ln691_64_fu_8752_p1));

assign add_ln691_102_fu_8832_p2 = ($signed(add_ln691_101_fu_8826_p2) + $signed(sext_ln151_85_fu_8780_p1));

assign add_ln691_103_fu_8842_p2 = ($signed(sext_ln151_81_fu_8768_p1) + $signed(sext_ln151_83_fu_8774_p1));

assign add_ln691_104_fu_8852_p2 = ($signed(sext_ln151_82_fu_8771_p1) + $signed(sext_ln691_65_fu_8795_p1));

assign add_ln691_105_fu_8862_p2 = ($signed(sext_ln691_70_fu_8858_p1) + $signed(sext_ln691_69_fu_8848_p1));

assign add_ln691_106_fu_8868_p2 = ($signed(add_ln691_105_fu_8862_p2) + $signed(sext_ln691_68_fu_8838_p1));

assign add_ln691_107_fu_15543_p2 = ($signed(sext_ln691_71_fu_15540_p1) + $signed(add_ln691_100_fu_15535_p2));

assign add_ln691_108_fu_8920_p2 = ($signed(sext_ln151_98_fu_8911_p1) + $signed(sext_ln151_99_fu_8914_p1));

assign add_ln691_109_fu_8930_p2 = ($signed(sext_ln691_74_fu_8926_p1) + $signed(tmp_116_fu_8877_p4));

assign add_ln691_10_fu_7892_p2 = ($signed(add_ln691_9_fu_7886_p2) + $signed(sext_ln691_4_fu_7862_p1));

assign add_ln691_110_fu_8936_p2 = ($signed(sext_ln151_94_fu_8899_p1) + $signed(sext_ln151_96_fu_8905_p1));

assign add_ln691_111_fu_8942_p2 = ($signed(add_ln691_110_fu_8936_p2) + $signed(sext_ln151_97_fu_8908_p1));

assign add_ln691_112_fu_15552_p2 = ($signed(sext_ln691_75_fu_15549_p1) + $signed(add_ln691_109_reg_19700));

assign add_ln691_113_fu_8948_p2 = ($signed(sext_ln151_90_fu_8887_p1) + $signed(sext_ln691_72_fu_8874_p1));

assign add_ln691_114_fu_8954_p2 = ($signed(add_ln691_113_fu_8948_p2) + $signed(sext_ln151_95_fu_8902_p1));

assign add_ln691_115_fu_8964_p2 = ($signed(sext_ln151_91_fu_8890_p1) + $signed(sext_ln151_93_fu_8896_p1));

assign add_ln691_116_fu_8974_p2 = ($signed(sext_ln151_92_fu_8893_p1) + $signed(sext_ln691_73_fu_8917_p1));

assign add_ln691_117_fu_8984_p2 = ($signed(sext_ln691_78_fu_8980_p1) + $signed(sext_ln691_77_fu_8970_p1));

assign add_ln691_118_fu_8990_p2 = ($signed(add_ln691_117_fu_8984_p2) + $signed(sext_ln691_76_fu_8960_p1));

assign add_ln691_119_fu_15560_p2 = ($signed(sext_ln691_79_fu_15557_p1) + $signed(add_ln691_112_fu_15552_p2));

assign add_ln691_11_fu_15407_p2 = ($signed(sext_ln691_7_fu_15404_p1) + $signed(add_ln691_4_fu_15399_p2));

assign add_ln691_120_fu_9042_p2 = ($signed(sext_ln151_108_fu_9033_p1) + $signed(sext_ln151_109_fu_9036_p1));

assign add_ln691_121_fu_9052_p2 = ($signed(sext_ln691_82_fu_9048_p1) + $signed(tmp_129_fu_8999_p4));

assign add_ln691_122_fu_9058_p2 = ($signed(sext_ln151_104_fu_9021_p1) + $signed(sext_ln151_106_fu_9027_p1));

assign add_ln691_123_fu_9064_p2 = ($signed(add_ln691_122_fu_9058_p2) + $signed(sext_ln151_107_fu_9030_p1));

assign add_ln691_124_fu_15569_p2 = ($signed(sext_ln691_83_fu_15566_p1) + $signed(add_ln691_121_reg_19715));

assign add_ln691_125_fu_9070_p2 = ($signed(sext_ln151_100_fu_9009_p1) + $signed(sext_ln691_80_fu_8996_p1));

assign add_ln691_126_fu_9076_p2 = ($signed(add_ln691_125_fu_9070_p2) + $signed(sext_ln151_105_fu_9024_p1));

assign add_ln691_127_fu_9086_p2 = ($signed(sext_ln151_101_fu_9012_p1) + $signed(sext_ln151_103_fu_9018_p1));

assign add_ln691_128_fu_9096_p2 = ($signed(sext_ln151_102_fu_9015_p1) + $signed(sext_ln691_81_fu_9039_p1));

assign add_ln691_129_fu_9106_p2 = ($signed(sext_ln691_86_fu_9102_p1) + $signed(sext_ln691_85_fu_9092_p1));

assign add_ln691_12_fu_7944_p2 = ($signed(sext_ln151_18_fu_7935_p1) + $signed(sext_ln151_19_fu_7938_p1));

assign add_ln691_130_fu_9112_p2 = ($signed(add_ln691_129_fu_9106_p2) + $signed(sext_ln691_84_fu_9082_p1));

assign add_ln691_131_fu_15577_p2 = ($signed(sext_ln691_87_fu_15574_p1) + $signed(add_ln691_124_fu_15569_p2));

assign add_ln691_132_fu_9164_p2 = ($signed(sext_ln151_118_fu_9155_p1) + $signed(sext_ln151_119_fu_9158_p1));

assign add_ln691_133_fu_9174_p2 = ($signed(sext_ln691_90_fu_9170_p1) + $signed(tmp_142_fu_9121_p4));

assign add_ln691_134_fu_9180_p2 = ($signed(sext_ln151_114_fu_9143_p1) + $signed(sext_ln151_116_fu_9149_p1));

assign add_ln691_135_fu_9186_p2 = ($signed(add_ln691_134_fu_9180_p2) + $signed(sext_ln151_117_fu_9152_p1));

assign add_ln691_136_fu_15586_p2 = ($signed(sext_ln691_91_fu_15583_p1) + $signed(add_ln691_133_reg_19730));

assign add_ln691_137_fu_9192_p2 = ($signed(sext_ln151_110_fu_9131_p1) + $signed(sext_ln691_88_fu_9118_p1));

assign add_ln691_138_fu_9198_p2 = ($signed(add_ln691_137_fu_9192_p2) + $signed(sext_ln151_115_fu_9146_p1));

assign add_ln691_139_fu_9208_p2 = ($signed(sext_ln151_111_fu_9134_p1) + $signed(sext_ln151_113_fu_9140_p1));

assign add_ln691_13_fu_7954_p2 = ($signed(sext_ln691_10_fu_7950_p1) + $signed(tmp_12_fu_7901_p4));

assign add_ln691_140_fu_9218_p2 = ($signed(sext_ln151_112_fu_9137_p1) + $signed(sext_ln691_89_fu_9161_p1));

assign add_ln691_141_fu_9228_p2 = ($signed(sext_ln691_94_fu_9224_p1) + $signed(sext_ln691_93_fu_9214_p1));

assign add_ln691_142_fu_9234_p2 = ($signed(add_ln691_141_fu_9228_p2) + $signed(sext_ln691_92_fu_9204_p1));

assign add_ln691_143_fu_15594_p2 = ($signed(sext_ln691_95_fu_15591_p1) + $signed(add_ln691_136_fu_15586_p2));

assign add_ln691_144_fu_9286_p2 = ($signed(sext_ln151_128_fu_9277_p1) + $signed(sext_ln151_129_fu_9280_p1));

assign add_ln691_145_fu_9296_p2 = ($signed(sext_ln691_98_fu_9292_p1) + $signed(tmp_155_fu_9243_p4));

assign add_ln691_146_fu_9302_p2 = ($signed(sext_ln151_124_fu_9265_p1) + $signed(sext_ln151_126_fu_9271_p1));

assign add_ln691_147_fu_9308_p2 = ($signed(add_ln691_146_fu_9302_p2) + $signed(sext_ln151_127_fu_9274_p1));

assign add_ln691_148_fu_15603_p2 = ($signed(sext_ln691_99_fu_15600_p1) + $signed(add_ln691_145_reg_19745));

assign add_ln691_149_fu_9314_p2 = ($signed(sext_ln151_120_fu_9253_p1) + $signed(sext_ln691_96_fu_9240_p1));

assign add_ln691_14_fu_7960_p2 = ($signed(sext_ln151_14_fu_7923_p1) + $signed(sext_ln151_16_fu_7929_p1));

assign add_ln691_150_fu_9320_p2 = ($signed(add_ln691_149_fu_9314_p2) + $signed(sext_ln151_125_fu_9268_p1));

assign add_ln691_151_fu_9330_p2 = ($signed(sext_ln151_121_fu_9256_p1) + $signed(sext_ln151_123_fu_9262_p1));

assign add_ln691_152_fu_9340_p2 = ($signed(sext_ln151_122_fu_9259_p1) + $signed(sext_ln691_97_fu_9283_p1));

assign add_ln691_153_fu_9350_p2 = ($signed(sext_ln691_102_fu_9346_p1) + $signed(sext_ln691_101_fu_9336_p1));

assign add_ln691_154_fu_9356_p2 = ($signed(add_ln691_153_fu_9350_p2) + $signed(sext_ln691_100_fu_9326_p1));

assign add_ln691_155_fu_15611_p2 = ($signed(sext_ln691_103_fu_15608_p1) + $signed(add_ln691_148_fu_15603_p2));

assign add_ln691_156_fu_9408_p2 = ($signed(sext_ln151_138_fu_9399_p1) + $signed(sext_ln151_139_fu_9402_p1));

assign add_ln691_157_fu_9418_p2 = ($signed(sext_ln691_106_fu_9414_p1) + $signed(tmp_168_fu_9365_p4));

assign add_ln691_158_fu_9424_p2 = ($signed(sext_ln151_134_fu_9387_p1) + $signed(sext_ln151_136_fu_9393_p1));

assign add_ln691_159_fu_9430_p2 = ($signed(add_ln691_158_fu_9424_p2) + $signed(sext_ln151_137_fu_9396_p1));

assign add_ln691_15_fu_7966_p2 = ($signed(add_ln691_14_fu_7960_p2) + $signed(sext_ln151_17_fu_7932_p1));

assign add_ln691_160_fu_15620_p2 = ($signed(sext_ln691_107_fu_15617_p1) + $signed(add_ln691_157_reg_19760));

assign add_ln691_161_fu_9436_p2 = ($signed(sext_ln151_130_fu_9375_p1) + $signed(sext_ln691_104_fu_9362_p1));

assign add_ln691_162_fu_9442_p2 = ($signed(add_ln691_161_fu_9436_p2) + $signed(sext_ln151_135_fu_9390_p1));

assign add_ln691_163_fu_9452_p2 = ($signed(sext_ln151_131_fu_9378_p1) + $signed(sext_ln151_133_fu_9384_p1));

assign add_ln691_164_fu_9462_p2 = ($signed(sext_ln151_132_fu_9381_p1) + $signed(sext_ln691_105_fu_9405_p1));

assign add_ln691_165_fu_9472_p2 = ($signed(sext_ln691_110_fu_9468_p1) + $signed(sext_ln691_109_fu_9458_p1));

assign add_ln691_166_fu_9478_p2 = ($signed(add_ln691_165_fu_9472_p2) + $signed(sext_ln691_108_fu_9448_p1));

assign add_ln691_167_fu_15628_p2 = ($signed(sext_ln691_111_fu_15625_p1) + $signed(add_ln691_160_fu_15620_p2));

assign add_ln691_168_fu_9530_p2 = ($signed(sext_ln151_148_fu_9521_p1) + $signed(sext_ln151_149_fu_9524_p1));

assign add_ln691_169_fu_9540_p2 = ($signed(sext_ln691_114_fu_9536_p1) + $signed(tmp_181_fu_9487_p4));

assign add_ln691_16_fu_15416_p2 = ($signed(sext_ln691_11_fu_15413_p1) + $signed(add_ln691_13_reg_19580));

assign add_ln691_170_fu_9546_p2 = ($signed(sext_ln151_144_fu_9509_p1) + $signed(sext_ln151_146_fu_9515_p1));

assign add_ln691_171_fu_9552_p2 = ($signed(add_ln691_170_fu_9546_p2) + $signed(sext_ln151_147_fu_9518_p1));

assign add_ln691_172_fu_15637_p2 = ($signed(sext_ln691_115_fu_15634_p1) + $signed(add_ln691_169_reg_19775));

assign add_ln691_173_fu_9558_p2 = ($signed(sext_ln151_140_fu_9497_p1) + $signed(sext_ln691_112_fu_9484_p1));

assign add_ln691_174_fu_9564_p2 = ($signed(add_ln691_173_fu_9558_p2) + $signed(sext_ln151_145_fu_9512_p1));

assign add_ln691_175_fu_9574_p2 = ($signed(sext_ln151_141_fu_9500_p1) + $signed(sext_ln151_143_fu_9506_p1));

assign add_ln691_176_fu_9584_p2 = ($signed(sext_ln151_142_fu_9503_p1) + $signed(sext_ln691_113_fu_9527_p1));

assign add_ln691_177_fu_9594_p2 = ($signed(sext_ln691_118_fu_9590_p1) + $signed(sext_ln691_117_fu_9580_p1));

assign add_ln691_178_fu_9600_p2 = ($signed(add_ln691_177_fu_9594_p2) + $signed(sext_ln691_116_fu_9570_p1));

assign add_ln691_179_fu_15645_p2 = ($signed(sext_ln691_119_fu_15642_p1) + $signed(add_ln691_172_fu_15637_p2));

assign add_ln691_17_fu_7972_p2 = ($signed(sext_ln151_10_fu_7911_p1) + $signed(sext_ln691_8_fu_7898_p1));

assign add_ln691_180_fu_9652_p2 = ($signed(sext_ln151_158_fu_9643_p1) + $signed(sext_ln151_159_fu_9646_p1));

assign add_ln691_181_fu_9662_p2 = ($signed(sext_ln691_122_fu_9658_p1) + $signed(tmp_194_fu_9609_p4));

assign add_ln691_182_fu_9668_p2 = ($signed(sext_ln151_154_fu_9631_p1) + $signed(sext_ln151_156_fu_9637_p1));

assign add_ln691_183_fu_9674_p2 = ($signed(add_ln691_182_fu_9668_p2) + $signed(sext_ln151_157_fu_9640_p1));

assign add_ln691_184_fu_15654_p2 = ($signed(sext_ln691_123_fu_15651_p1) + $signed(add_ln691_181_reg_19790));

assign add_ln691_185_fu_9680_p2 = ($signed(sext_ln151_150_fu_9619_p1) + $signed(sext_ln691_120_fu_9606_p1));

assign add_ln691_186_fu_9686_p2 = ($signed(add_ln691_185_fu_9680_p2) + $signed(sext_ln151_155_fu_9634_p1));

assign add_ln691_187_fu_9696_p2 = ($signed(sext_ln151_151_fu_9622_p1) + $signed(sext_ln151_153_fu_9628_p1));

assign add_ln691_188_fu_9706_p2 = ($signed(sext_ln151_152_fu_9625_p1) + $signed(sext_ln691_121_fu_9649_p1));

assign add_ln691_189_fu_9716_p2 = ($signed(sext_ln691_126_fu_9712_p1) + $signed(sext_ln691_125_fu_9702_p1));

assign add_ln691_18_fu_7978_p2 = ($signed(add_ln691_17_fu_7972_p2) + $signed(sext_ln151_15_fu_7926_p1));

assign add_ln691_190_fu_9722_p2 = ($signed(add_ln691_189_fu_9716_p2) + $signed(sext_ln691_124_fu_9692_p1));

assign add_ln691_191_fu_15662_p2 = ($signed(sext_ln691_127_fu_15659_p1) + $signed(add_ln691_184_fu_15654_p2));

assign add_ln691_192_fu_9774_p2 = ($signed(sext_ln151_168_fu_9765_p1) + $signed(sext_ln151_169_fu_9768_p1));

assign add_ln691_193_fu_9784_p2 = ($signed(sext_ln691_130_fu_9780_p1) + $signed(tmp_207_fu_9731_p4));

assign add_ln691_194_fu_9790_p2 = ($signed(sext_ln151_164_fu_9753_p1) + $signed(sext_ln151_166_fu_9759_p1));

assign add_ln691_195_fu_9796_p2 = ($signed(add_ln691_194_fu_9790_p2) + $signed(sext_ln151_167_fu_9762_p1));

assign add_ln691_196_fu_15671_p2 = ($signed(sext_ln691_131_fu_15668_p1) + $signed(add_ln691_193_reg_19805));

assign add_ln691_197_fu_9802_p2 = ($signed(sext_ln151_160_fu_9741_p1) + $signed(sext_ln691_128_fu_9728_p1));

assign add_ln691_198_fu_9808_p2 = ($signed(add_ln691_197_fu_9802_p2) + $signed(sext_ln151_165_fu_9756_p1));

assign add_ln691_199_fu_9818_p2 = ($signed(sext_ln151_161_fu_9744_p1) + $signed(sext_ln151_163_fu_9750_p1));

assign add_ln691_19_fu_7988_p2 = ($signed(sext_ln151_11_fu_7914_p1) + $signed(sext_ln151_13_fu_7920_p1));

assign add_ln691_1_fu_7832_p2 = ($signed(sext_ln691_2_fu_7828_p1) + $signed(trunc_ln691_fu_7785_p1));

assign add_ln691_200_fu_9828_p2 = ($signed(sext_ln151_162_fu_9747_p1) + $signed(sext_ln691_129_fu_9771_p1));

assign add_ln691_201_fu_9838_p2 = ($signed(sext_ln691_134_fu_9834_p1) + $signed(sext_ln691_133_fu_9824_p1));

assign add_ln691_202_fu_9844_p2 = ($signed(add_ln691_201_fu_9838_p2) + $signed(sext_ln691_132_fu_9814_p1));

assign add_ln691_203_fu_15679_p2 = ($signed(sext_ln691_135_fu_15676_p1) + $signed(add_ln691_196_fu_15671_p2));

assign add_ln691_204_fu_9896_p2 = ($signed(sext_ln151_178_fu_9887_p1) + $signed(sext_ln151_179_fu_9890_p1));

assign add_ln691_205_fu_9906_p2 = ($signed(sext_ln691_138_fu_9902_p1) + $signed(tmp_220_fu_9853_p4));

assign add_ln691_206_fu_9912_p2 = ($signed(sext_ln151_174_fu_9875_p1) + $signed(sext_ln151_176_fu_9881_p1));

assign add_ln691_207_fu_9918_p2 = ($signed(add_ln691_206_fu_9912_p2) + $signed(sext_ln151_177_fu_9884_p1));

assign add_ln691_208_fu_15688_p2 = ($signed(sext_ln691_139_fu_15685_p1) + $signed(add_ln691_205_reg_19820));

assign add_ln691_209_fu_9924_p2 = ($signed(sext_ln151_170_fu_9863_p1) + $signed(sext_ln691_136_fu_9850_p1));

assign add_ln691_20_fu_7998_p2 = ($signed(sext_ln151_12_fu_7917_p1) + $signed(sext_ln691_9_fu_7941_p1));

assign add_ln691_210_fu_9930_p2 = ($signed(add_ln691_209_fu_9924_p2) + $signed(sext_ln151_175_fu_9878_p1));

assign add_ln691_211_fu_9940_p2 = ($signed(sext_ln151_171_fu_9866_p1) + $signed(sext_ln151_173_fu_9872_p1));

assign add_ln691_212_fu_9950_p2 = ($signed(sext_ln151_172_fu_9869_p1) + $signed(sext_ln691_137_fu_9893_p1));

assign add_ln691_213_fu_9960_p2 = ($signed(sext_ln691_142_fu_9956_p1) + $signed(sext_ln691_141_fu_9946_p1));

assign add_ln691_214_fu_9966_p2 = ($signed(add_ln691_213_fu_9960_p2) + $signed(sext_ln691_140_fu_9936_p1));

assign add_ln691_215_fu_15696_p2 = ($signed(sext_ln691_143_fu_15693_p1) + $signed(add_ln691_208_fu_15688_p2));

assign add_ln691_216_fu_10018_p2 = ($signed(sext_ln151_188_fu_10009_p1) + $signed(sext_ln151_189_fu_10012_p1));

assign add_ln691_217_fu_10028_p2 = ($signed(sext_ln691_146_fu_10024_p1) + $signed(tmp_233_fu_9975_p4));

assign add_ln691_218_fu_10034_p2 = ($signed(sext_ln151_184_fu_9997_p1) + $signed(sext_ln151_186_fu_10003_p1));

assign add_ln691_219_fu_10040_p2 = ($signed(add_ln691_218_fu_10034_p2) + $signed(sext_ln151_187_fu_10006_p1));

assign add_ln691_21_fu_8008_p2 = ($signed(sext_ln691_14_fu_8004_p1) + $signed(sext_ln691_13_fu_7994_p1));

assign add_ln691_220_fu_15705_p2 = ($signed(sext_ln691_147_fu_15702_p1) + $signed(add_ln691_217_reg_19835));

assign add_ln691_221_fu_10046_p2 = ($signed(sext_ln151_180_fu_9985_p1) + $signed(sext_ln691_144_fu_9972_p1));

assign add_ln691_222_fu_10052_p2 = ($signed(add_ln691_221_fu_10046_p2) + $signed(sext_ln151_185_fu_10000_p1));

assign add_ln691_223_fu_10062_p2 = ($signed(sext_ln151_181_fu_9988_p1) + $signed(sext_ln151_183_fu_9994_p1));

assign add_ln691_224_fu_10072_p2 = ($signed(sext_ln151_182_fu_9991_p1) + $signed(sext_ln691_145_fu_10015_p1));

assign add_ln691_225_fu_10082_p2 = ($signed(sext_ln691_150_fu_10078_p1) + $signed(sext_ln691_149_fu_10068_p1));

assign add_ln691_226_fu_10088_p2 = ($signed(add_ln691_225_fu_10082_p2) + $signed(sext_ln691_148_fu_10058_p1));

assign add_ln691_227_fu_15713_p2 = ($signed(sext_ln691_151_fu_15710_p1) + $signed(add_ln691_220_fu_15705_p2));

assign add_ln691_228_fu_10140_p2 = ($signed(sext_ln151_198_fu_10131_p1) + $signed(sext_ln151_199_fu_10134_p1));

assign add_ln691_229_fu_10150_p2 = ($signed(sext_ln691_154_fu_10146_p1) + $signed(tmp_246_fu_10097_p4));

assign add_ln691_22_fu_8014_p2 = ($signed(add_ln691_21_fu_8008_p2) + $signed(sext_ln691_12_fu_7984_p1));

assign add_ln691_230_fu_10156_p2 = ($signed(sext_ln151_194_fu_10119_p1) + $signed(sext_ln151_196_fu_10125_p1));

assign add_ln691_231_fu_10162_p2 = ($signed(add_ln691_230_fu_10156_p2) + $signed(sext_ln151_197_fu_10128_p1));

assign add_ln691_232_fu_15722_p2 = ($signed(sext_ln691_155_fu_15719_p1) + $signed(add_ln691_229_reg_19850));

assign add_ln691_233_fu_10168_p2 = ($signed(sext_ln151_190_fu_10107_p1) + $signed(sext_ln691_152_fu_10094_p1));

assign add_ln691_234_fu_10174_p2 = ($signed(add_ln691_233_fu_10168_p2) + $signed(sext_ln151_195_fu_10122_p1));

assign add_ln691_235_fu_10184_p2 = ($signed(sext_ln151_191_fu_10110_p1) + $signed(sext_ln151_193_fu_10116_p1));

assign add_ln691_236_fu_10194_p2 = ($signed(sext_ln151_192_fu_10113_p1) + $signed(sext_ln691_153_fu_10137_p1));

assign add_ln691_237_fu_10204_p2 = ($signed(sext_ln691_158_fu_10200_p1) + $signed(sext_ln691_157_fu_10190_p1));

assign add_ln691_238_fu_10210_p2 = ($signed(add_ln691_237_fu_10204_p2) + $signed(sext_ln691_156_fu_10180_p1));

assign add_ln691_239_fu_15730_p2 = ($signed(sext_ln691_159_fu_15727_p1) + $signed(add_ln691_232_fu_15722_p2));

assign add_ln691_23_fu_15424_p2 = ($signed(sext_ln691_15_fu_15421_p1) + $signed(add_ln691_16_fu_15416_p2));

assign add_ln691_240_fu_10262_p2 = ($signed(sext_ln151_208_fu_10253_p1) + $signed(sext_ln151_209_fu_10256_p1));

assign add_ln691_241_fu_10272_p2 = ($signed(sext_ln691_162_fu_10268_p1) + $signed(tmp_259_fu_10219_p4));

assign add_ln691_242_fu_10278_p2 = ($signed(sext_ln151_204_fu_10241_p1) + $signed(sext_ln151_206_fu_10247_p1));

assign add_ln691_243_fu_10284_p2 = ($signed(add_ln691_242_fu_10278_p2) + $signed(sext_ln151_207_fu_10250_p1));

assign add_ln691_244_fu_15739_p2 = ($signed(sext_ln691_163_fu_15736_p1) + $signed(add_ln691_241_reg_19865));

assign add_ln691_245_fu_10290_p2 = ($signed(sext_ln151_200_fu_10229_p1) + $signed(sext_ln691_160_fu_10216_p1));

assign add_ln691_246_fu_10296_p2 = ($signed(add_ln691_245_fu_10290_p2) + $signed(sext_ln151_205_fu_10244_p1));

assign add_ln691_247_fu_10306_p2 = ($signed(sext_ln151_201_fu_10232_p1) + $signed(sext_ln151_203_fu_10238_p1));

assign add_ln691_248_fu_10316_p2 = ($signed(sext_ln151_202_fu_10235_p1) + $signed(sext_ln691_161_fu_10259_p1));

assign add_ln691_249_fu_10326_p2 = ($signed(sext_ln691_166_fu_10322_p1) + $signed(sext_ln691_165_fu_10312_p1));

assign add_ln691_24_fu_8066_p2 = ($signed(sext_ln151_28_fu_8057_p1) + $signed(sext_ln151_29_fu_8060_p1));

assign add_ln691_250_fu_10332_p2 = ($signed(add_ln691_249_fu_10326_p2) + $signed(sext_ln691_164_fu_10302_p1));

assign add_ln691_251_fu_15747_p2 = ($signed(sext_ln691_167_fu_15744_p1) + $signed(add_ln691_244_fu_15739_p2));

assign add_ln691_252_fu_10384_p2 = ($signed(sext_ln151_218_fu_10375_p1) + $signed(sext_ln151_219_fu_10378_p1));

assign add_ln691_253_fu_10394_p2 = ($signed(sext_ln691_170_fu_10390_p1) + $signed(tmp_272_fu_10341_p4));

assign add_ln691_254_fu_10400_p2 = ($signed(sext_ln151_214_fu_10363_p1) + $signed(sext_ln151_216_fu_10369_p1));

assign add_ln691_255_fu_10406_p2 = ($signed(add_ln691_254_fu_10400_p2) + $signed(sext_ln151_217_fu_10372_p1));

assign add_ln691_256_fu_15756_p2 = ($signed(sext_ln691_171_fu_15753_p1) + $signed(add_ln691_253_reg_19880));

assign add_ln691_257_fu_10412_p2 = ($signed(sext_ln151_210_fu_10351_p1) + $signed(sext_ln691_168_fu_10338_p1));

assign add_ln691_258_fu_10418_p2 = ($signed(add_ln691_257_fu_10412_p2) + $signed(sext_ln151_215_fu_10366_p1));

assign add_ln691_259_fu_10428_p2 = ($signed(sext_ln151_211_fu_10354_p1) + $signed(sext_ln151_213_fu_10360_p1));

assign add_ln691_25_fu_8076_p2 = ($signed(sext_ln691_18_fu_8072_p1) + $signed(tmp_25_fu_8023_p4));

assign add_ln691_260_fu_10438_p2 = ($signed(sext_ln151_212_fu_10357_p1) + $signed(sext_ln691_169_fu_10381_p1));

assign add_ln691_261_fu_10448_p2 = ($signed(sext_ln691_174_fu_10444_p1) + $signed(sext_ln691_173_fu_10434_p1));

assign add_ln691_262_fu_10454_p2 = ($signed(add_ln691_261_fu_10448_p2) + $signed(sext_ln691_172_fu_10424_p1));

assign add_ln691_263_fu_15764_p2 = ($signed(sext_ln691_175_fu_15761_p1) + $signed(add_ln691_256_fu_15756_p2));

assign add_ln691_264_fu_10506_p2 = ($signed(sext_ln151_228_fu_10497_p1) + $signed(sext_ln151_229_fu_10500_p1));

assign add_ln691_265_fu_10516_p2 = ($signed(sext_ln691_178_fu_10512_p1) + $signed(tmp_285_fu_10463_p4));

assign add_ln691_266_fu_10522_p2 = ($signed(sext_ln151_224_fu_10485_p1) + $signed(sext_ln151_226_fu_10491_p1));

assign add_ln691_267_fu_10528_p2 = ($signed(add_ln691_266_fu_10522_p2) + $signed(sext_ln151_227_fu_10494_p1));

assign add_ln691_268_fu_15773_p2 = ($signed(sext_ln691_179_fu_15770_p1) + $signed(add_ln691_265_reg_19895));

assign add_ln691_269_fu_10534_p2 = ($signed(sext_ln151_220_fu_10473_p1) + $signed(sext_ln691_176_fu_10460_p1));

assign add_ln691_26_fu_8082_p2 = ($signed(sext_ln151_24_fu_8045_p1) + $signed(sext_ln151_26_fu_8051_p1));

assign add_ln691_270_fu_10540_p2 = ($signed(add_ln691_269_fu_10534_p2) + $signed(sext_ln151_225_fu_10488_p1));

assign add_ln691_271_fu_10550_p2 = ($signed(sext_ln151_221_fu_10476_p1) + $signed(sext_ln151_223_fu_10482_p1));

assign add_ln691_272_fu_10560_p2 = ($signed(sext_ln151_222_fu_10479_p1) + $signed(sext_ln691_177_fu_10503_p1));

assign add_ln691_273_fu_10570_p2 = ($signed(sext_ln691_182_fu_10566_p1) + $signed(sext_ln691_181_fu_10556_p1));

assign add_ln691_274_fu_10576_p2 = ($signed(add_ln691_273_fu_10570_p2) + $signed(sext_ln691_180_fu_10546_p1));

assign add_ln691_275_fu_15781_p2 = ($signed(sext_ln691_183_fu_15778_p1) + $signed(add_ln691_268_fu_15773_p2));

assign add_ln691_276_fu_10628_p2 = ($signed(sext_ln151_238_fu_10619_p1) + $signed(sext_ln151_239_fu_10622_p1));

assign add_ln691_277_fu_10638_p2 = ($signed(sext_ln691_186_fu_10634_p1) + $signed(tmp_298_fu_10585_p4));

assign add_ln691_278_fu_10644_p2 = ($signed(sext_ln151_234_fu_10607_p1) + $signed(sext_ln151_236_fu_10613_p1));

assign add_ln691_279_fu_10650_p2 = ($signed(add_ln691_278_fu_10644_p2) + $signed(sext_ln151_237_fu_10616_p1));

assign add_ln691_27_fu_8088_p2 = ($signed(add_ln691_26_fu_8082_p2) + $signed(sext_ln151_27_fu_8054_p1));

assign add_ln691_280_fu_15790_p2 = ($signed(sext_ln691_187_fu_15787_p1) + $signed(add_ln691_277_reg_19910));

assign add_ln691_281_fu_10656_p2 = ($signed(sext_ln151_230_fu_10595_p1) + $signed(sext_ln691_184_fu_10582_p1));

assign add_ln691_282_fu_10662_p2 = ($signed(add_ln691_281_fu_10656_p2) + $signed(sext_ln151_235_fu_10610_p1));

assign add_ln691_283_fu_10672_p2 = ($signed(sext_ln151_231_fu_10598_p1) + $signed(sext_ln151_233_fu_10604_p1));

assign add_ln691_284_fu_10682_p2 = ($signed(sext_ln151_232_fu_10601_p1) + $signed(sext_ln691_185_fu_10625_p1));

assign add_ln691_285_fu_10692_p2 = ($signed(sext_ln691_190_fu_10688_p1) + $signed(sext_ln691_189_fu_10678_p1));

assign add_ln691_286_fu_10698_p2 = ($signed(add_ln691_285_fu_10692_p2) + $signed(sext_ln691_188_fu_10668_p1));

assign add_ln691_287_fu_15798_p2 = ($signed(sext_ln691_191_fu_15795_p1) + $signed(add_ln691_280_fu_15790_p2));

assign add_ln691_288_fu_10858_p2 = ($signed(sext_ln151_248_fu_10830_p1) + $signed(sext_ln151_249_fu_10842_p1));

assign add_ln691_289_fu_10868_p2 = ($signed(sext_ln691_194_fu_10864_p1) + $signed(tmp_310_fu_10716_p4));

assign add_ln691_28_fu_15433_p2 = ($signed(sext_ln691_19_fu_15430_p1) + $signed(add_ln691_25_reg_19595));

assign add_ln691_290_fu_10874_p2 = ($signed(sext_ln151_244_fu_10782_p1) + $signed(sext_ln151_246_fu_10806_p1));

assign add_ln691_291_fu_10880_p2 = ($signed(add_ln691_290_fu_10874_p2) + $signed(sext_ln151_247_fu_10818_p1));

assign add_ln691_292_fu_15807_p2 = ($signed(sext_ln691_195_fu_15804_p1) + $signed(add_ln691_289_reg_19925));

assign add_ln691_293_fu_10886_p2 = ($signed(sext_ln151_240_fu_10734_p1) + $signed(sext_ln691_192_fu_10712_p1));

assign add_ln691_294_fu_10892_p2 = ($signed(add_ln691_293_fu_10886_p2) + $signed(sext_ln151_245_fu_10794_p1));

assign add_ln691_295_fu_10902_p2 = ($signed(sext_ln151_241_fu_10746_p1) + $signed(sext_ln151_243_fu_10770_p1));

assign add_ln691_296_fu_10912_p2 = ($signed(sext_ln151_242_fu_10758_p1) + $signed(sext_ln691_193_fu_10854_p1));

assign add_ln691_297_fu_10922_p2 = ($signed(sext_ln691_198_fu_10918_p1) + $signed(sext_ln691_197_fu_10908_p1));

assign add_ln691_298_fu_10928_p2 = ($signed(add_ln691_297_fu_10922_p2) + $signed(sext_ln691_196_fu_10898_p1));

assign add_ln691_299_fu_15815_p2 = ($signed(sext_ln691_199_fu_15812_p1) + $signed(add_ln691_292_fu_15807_p2));

assign add_ln691_29_fu_8094_p2 = ($signed(sext_ln151_20_fu_8033_p1) + $signed(sext_ln691_16_fu_8020_p1));

assign add_ln691_2_fu_7838_p2 = ($signed(sext_ln151_4_fu_7801_p1) + $signed(sext_ln151_6_fu_7807_p1));

assign add_ln691_300_fu_11052_p2 = ($signed(sext_ln151_258_fu_11030_p1) + $signed(sext_ln151_259_fu_11039_p1));

assign add_ln691_301_fu_11062_p2 = ($signed(sext_ln691_202_fu_11058_p1) + $signed(tmp_311_fu_10943_p4));

assign add_ln691_302_fu_11068_p2 = ($signed(sext_ln151_254_fu_10994_p1) + $signed(sext_ln151_256_fu_11012_p1));

assign add_ln691_303_fu_11074_p2 = ($signed(add_ln691_302_fu_11068_p2) + $signed(sext_ln151_257_fu_11021_p1));

assign add_ln691_304_fu_15824_p2 = ($signed(sext_ln691_203_fu_15821_p1) + $signed(add_ln691_301_reg_19940));

assign add_ln691_305_fu_11080_p2 = ($signed(sext_ln151_250_fu_10958_p1) + $signed(sext_ln691_200_fu_10939_p1));

assign add_ln691_306_fu_11086_p2 = ($signed(add_ln691_305_fu_11080_p2) + $signed(sext_ln151_255_fu_11003_p1));

assign add_ln691_307_fu_11096_p2 = ($signed(sext_ln151_251_fu_10967_p1) + $signed(sext_ln151_253_fu_10985_p1));

assign add_ln691_308_fu_11106_p2 = ($signed(sext_ln151_252_fu_10976_p1) + $signed(sext_ln691_201_fu_11048_p1));

assign add_ln691_309_fu_11116_p2 = ($signed(sext_ln691_206_fu_11112_p1) + $signed(sext_ln691_205_fu_11102_p1));

assign add_ln691_30_fu_8100_p2 = ($signed(add_ln691_29_fu_8094_p2) + $signed(sext_ln151_25_fu_8048_p1));

assign add_ln691_310_fu_11122_p2 = ($signed(add_ln691_309_fu_11116_p2) + $signed(sext_ln691_204_fu_11092_p1));

assign add_ln691_311_fu_15832_p2 = ($signed(sext_ln691_207_fu_15829_p1) + $signed(add_ln691_304_fu_15824_p2));

assign add_ln691_312_fu_11246_p2 = ($signed(sext_ln151_268_fu_11224_p1) + $signed(sext_ln151_269_fu_11233_p1));

assign add_ln691_313_fu_11256_p2 = ($signed(sext_ln691_210_fu_11252_p1) + $signed(tmp_312_fu_11137_p4));

assign add_ln691_314_fu_11262_p2 = ($signed(sext_ln151_264_fu_11188_p1) + $signed(sext_ln151_266_fu_11206_p1));

assign add_ln691_315_fu_11268_p2 = ($signed(add_ln691_314_fu_11262_p2) + $signed(sext_ln151_267_fu_11215_p1));

assign add_ln691_316_fu_15841_p2 = ($signed(sext_ln691_211_fu_15838_p1) + $signed(add_ln691_313_reg_19955));

assign add_ln691_317_fu_11274_p2 = ($signed(sext_ln151_260_fu_11152_p1) + $signed(sext_ln691_208_fu_11133_p1));

assign add_ln691_318_fu_11280_p2 = ($signed(add_ln691_317_fu_11274_p2) + $signed(sext_ln151_265_fu_11197_p1));

assign add_ln691_319_fu_11290_p2 = ($signed(sext_ln151_261_fu_11161_p1) + $signed(sext_ln151_263_fu_11179_p1));

assign add_ln691_31_fu_8110_p2 = ($signed(sext_ln151_21_fu_8036_p1) + $signed(sext_ln151_23_fu_8042_p1));

assign add_ln691_320_fu_11300_p2 = ($signed(sext_ln151_262_fu_11170_p1) + $signed(sext_ln691_209_fu_11242_p1));

assign add_ln691_321_fu_11310_p2 = ($signed(sext_ln691_214_fu_11306_p1) + $signed(sext_ln691_213_fu_11296_p1));

assign add_ln691_322_fu_11316_p2 = ($signed(add_ln691_321_fu_11310_p2) + $signed(sext_ln691_212_fu_11286_p1));

assign add_ln691_323_fu_15849_p2 = ($signed(sext_ln691_215_fu_15846_p1) + $signed(add_ln691_316_fu_15841_p2));

assign add_ln691_324_fu_11440_p2 = ($signed(sext_ln151_278_fu_11418_p1) + $signed(sext_ln151_279_fu_11427_p1));

assign add_ln691_325_fu_11450_p2 = ($signed(sext_ln691_218_fu_11446_p1) + $signed(tmp_313_fu_11331_p4));

assign add_ln691_326_fu_11456_p2 = ($signed(sext_ln151_274_fu_11382_p1) + $signed(sext_ln151_276_fu_11400_p1));

assign add_ln691_327_fu_11462_p2 = ($signed(add_ln691_326_fu_11456_p2) + $signed(sext_ln151_277_fu_11409_p1));

assign add_ln691_328_fu_15858_p2 = ($signed(sext_ln691_219_fu_15855_p1) + $signed(add_ln691_325_reg_19970));

assign add_ln691_329_fu_11468_p2 = ($signed(sext_ln151_270_fu_11346_p1) + $signed(sext_ln691_216_fu_11327_p1));

assign add_ln691_32_fu_8120_p2 = ($signed(sext_ln151_22_fu_8039_p1) + $signed(sext_ln691_17_fu_8063_p1));

assign add_ln691_330_fu_11474_p2 = ($signed(add_ln691_329_fu_11468_p2) + $signed(sext_ln151_275_fu_11391_p1));

assign add_ln691_331_fu_11484_p2 = ($signed(sext_ln151_271_fu_11355_p1) + $signed(sext_ln151_273_fu_11373_p1));

assign add_ln691_332_fu_11494_p2 = ($signed(sext_ln151_272_fu_11364_p1) + $signed(sext_ln691_217_fu_11436_p1));

assign add_ln691_333_fu_11504_p2 = ($signed(sext_ln691_222_fu_11500_p1) + $signed(sext_ln691_221_fu_11490_p1));

assign add_ln691_334_fu_11510_p2 = ($signed(add_ln691_333_fu_11504_p2) + $signed(sext_ln691_220_fu_11480_p1));

assign add_ln691_335_fu_15866_p2 = ($signed(sext_ln691_223_fu_15863_p1) + $signed(add_ln691_328_fu_15858_p2));

assign add_ln691_336_fu_11634_p2 = ($signed(sext_ln151_288_fu_11612_p1) + $signed(sext_ln151_289_fu_11621_p1));

assign add_ln691_337_fu_11644_p2 = ($signed(sext_ln691_226_fu_11640_p1) + $signed(tmp_314_fu_11525_p4));

assign add_ln691_338_fu_11650_p2 = ($signed(sext_ln151_284_fu_11576_p1) + $signed(sext_ln151_286_fu_11594_p1));

assign add_ln691_339_fu_11656_p2 = ($signed(add_ln691_338_fu_11650_p2) + $signed(sext_ln151_287_fu_11603_p1));

assign add_ln691_33_fu_8130_p2 = ($signed(sext_ln691_22_fu_8126_p1) + $signed(sext_ln691_21_fu_8116_p1));

assign add_ln691_340_fu_15875_p2 = ($signed(sext_ln691_227_fu_15872_p1) + $signed(add_ln691_337_reg_19985));

assign add_ln691_341_fu_11662_p2 = ($signed(sext_ln151_280_fu_11540_p1) + $signed(sext_ln691_224_fu_11521_p1));

assign add_ln691_342_fu_11668_p2 = ($signed(add_ln691_341_fu_11662_p2) + $signed(sext_ln151_285_fu_11585_p1));

assign add_ln691_343_fu_11678_p2 = ($signed(sext_ln151_281_fu_11549_p1) + $signed(sext_ln151_283_fu_11567_p1));

assign add_ln691_344_fu_11688_p2 = ($signed(sext_ln151_282_fu_11558_p1) + $signed(sext_ln691_225_fu_11630_p1));

assign add_ln691_345_fu_11698_p2 = ($signed(sext_ln691_230_fu_11694_p1) + $signed(sext_ln691_229_fu_11684_p1));

assign add_ln691_346_fu_11704_p2 = ($signed(add_ln691_345_fu_11698_p2) + $signed(sext_ln691_228_fu_11674_p1));

assign add_ln691_347_fu_15883_p2 = ($signed(sext_ln691_231_fu_15880_p1) + $signed(add_ln691_340_fu_15875_p2));

assign add_ln691_348_fu_11828_p2 = ($signed(sext_ln151_298_fu_11806_p1) + $signed(sext_ln151_299_fu_11815_p1));

assign add_ln691_349_fu_11838_p2 = ($signed(sext_ln691_234_fu_11834_p1) + $signed(tmp_315_fu_11719_p4));

assign add_ln691_34_fu_8136_p2 = ($signed(add_ln691_33_fu_8130_p2) + $signed(sext_ln691_20_fu_8106_p1));

assign add_ln691_350_fu_11844_p2 = ($signed(sext_ln151_294_fu_11770_p1) + $signed(sext_ln151_296_fu_11788_p1));

assign add_ln691_351_fu_11850_p2 = ($signed(add_ln691_350_fu_11844_p2) + $signed(sext_ln151_297_fu_11797_p1));

assign add_ln691_352_fu_15892_p2 = ($signed(sext_ln691_235_fu_15889_p1) + $signed(add_ln691_349_reg_20000));

assign add_ln691_353_fu_11856_p2 = ($signed(sext_ln151_290_fu_11734_p1) + $signed(sext_ln691_232_fu_11715_p1));

assign add_ln691_354_fu_11862_p2 = ($signed(add_ln691_353_fu_11856_p2) + $signed(sext_ln151_295_fu_11779_p1));

assign add_ln691_355_fu_11872_p2 = ($signed(sext_ln151_291_fu_11743_p1) + $signed(sext_ln151_293_fu_11761_p1));

assign add_ln691_356_fu_11882_p2 = ($signed(sext_ln151_292_fu_11752_p1) + $signed(sext_ln691_233_fu_11824_p1));

assign add_ln691_357_fu_11892_p2 = ($signed(sext_ln691_238_fu_11888_p1) + $signed(sext_ln691_237_fu_11878_p1));

assign add_ln691_358_fu_11898_p2 = ($signed(add_ln691_357_fu_11892_p2) + $signed(sext_ln691_236_fu_11868_p1));

assign add_ln691_359_fu_15900_p2 = ($signed(sext_ln691_239_fu_15897_p1) + $signed(add_ln691_352_fu_15892_p2));

assign add_ln691_35_fu_15441_p2 = ($signed(sext_ln691_23_fu_15438_p1) + $signed(add_ln691_28_fu_15433_p2));

assign add_ln691_360_fu_12022_p2 = ($signed(sext_ln151_308_fu_12000_p1) + $signed(sext_ln151_309_fu_12009_p1));

assign add_ln691_361_fu_12032_p2 = ($signed(sext_ln691_242_fu_12028_p1) + $signed(tmp_316_fu_11913_p4));

assign add_ln691_362_fu_12038_p2 = ($signed(sext_ln151_304_fu_11964_p1) + $signed(sext_ln151_306_fu_11982_p1));

assign add_ln691_363_fu_12044_p2 = ($signed(add_ln691_362_fu_12038_p2) + $signed(sext_ln151_307_fu_11991_p1));

assign add_ln691_364_fu_15909_p2 = ($signed(sext_ln691_243_fu_15906_p1) + $signed(add_ln691_361_reg_20015));

assign add_ln691_365_fu_12050_p2 = ($signed(sext_ln151_300_fu_11928_p1) + $signed(sext_ln691_240_fu_11909_p1));

assign add_ln691_366_fu_12056_p2 = ($signed(add_ln691_365_fu_12050_p2) + $signed(sext_ln151_305_fu_11973_p1));

assign add_ln691_367_fu_12066_p2 = ($signed(sext_ln151_301_fu_11937_p1) + $signed(sext_ln151_303_fu_11955_p1));

assign add_ln691_368_fu_12076_p2 = ($signed(sext_ln151_302_fu_11946_p1) + $signed(sext_ln691_241_fu_12018_p1));

assign add_ln691_369_fu_12086_p2 = ($signed(sext_ln691_246_fu_12082_p1) + $signed(sext_ln691_245_fu_12072_p1));

assign add_ln691_36_fu_8188_p2 = ($signed(sext_ln151_38_fu_8179_p1) + $signed(sext_ln151_39_fu_8182_p1));

assign add_ln691_370_fu_12092_p2 = ($signed(add_ln691_369_fu_12086_p2) + $signed(sext_ln691_244_fu_12062_p1));

assign add_ln691_371_fu_15917_p2 = ($signed(sext_ln691_247_fu_15914_p1) + $signed(add_ln691_364_fu_15909_p2));

assign add_ln691_372_fu_12216_p2 = ($signed(sext_ln151_318_fu_12194_p1) + $signed(sext_ln151_319_fu_12203_p1));

assign add_ln691_373_fu_12226_p2 = ($signed(sext_ln691_250_fu_12222_p1) + $signed(tmp_317_fu_12107_p4));

assign add_ln691_374_fu_12232_p2 = ($signed(sext_ln151_314_fu_12158_p1) + $signed(sext_ln151_316_fu_12176_p1));

assign add_ln691_375_fu_12238_p2 = ($signed(add_ln691_374_fu_12232_p2) + $signed(sext_ln151_317_fu_12185_p1));

assign add_ln691_376_fu_15926_p2 = ($signed(sext_ln691_251_fu_15923_p1) + $signed(add_ln691_373_reg_20030));

assign add_ln691_377_fu_12244_p2 = ($signed(sext_ln151_310_fu_12122_p1) + $signed(sext_ln691_248_fu_12103_p1));

assign add_ln691_378_fu_12250_p2 = ($signed(add_ln691_377_fu_12244_p2) + $signed(sext_ln151_315_fu_12167_p1));

assign add_ln691_379_fu_12260_p2 = ($signed(sext_ln151_311_fu_12131_p1) + $signed(sext_ln151_313_fu_12149_p1));

assign add_ln691_37_fu_8198_p2 = ($signed(sext_ln691_26_fu_8194_p1) + $signed(tmp_38_fu_8145_p4));

assign add_ln691_380_fu_12270_p2 = ($signed(sext_ln151_312_fu_12140_p1) + $signed(sext_ln691_249_fu_12212_p1));

assign add_ln691_381_fu_12280_p2 = ($signed(sext_ln691_254_fu_12276_p1) + $signed(sext_ln691_253_fu_12266_p1));

assign add_ln691_382_fu_12286_p2 = ($signed(add_ln691_381_fu_12280_p2) + $signed(sext_ln691_252_fu_12256_p1));

assign add_ln691_383_fu_15934_p2 = ($signed(sext_ln691_255_fu_15931_p1) + $signed(add_ln691_376_fu_15926_p2));

assign add_ln691_384_fu_12410_p2 = ($signed(sext_ln151_328_fu_12388_p1) + $signed(sext_ln151_329_fu_12397_p1));

assign add_ln691_385_fu_12420_p2 = ($signed(sext_ln691_258_fu_12416_p1) + $signed(tmp_318_fu_12301_p4));

assign add_ln691_386_fu_12426_p2 = ($signed(sext_ln151_324_fu_12352_p1) + $signed(sext_ln151_326_fu_12370_p1));

assign add_ln691_387_fu_12432_p2 = ($signed(add_ln691_386_fu_12426_p2) + $signed(sext_ln151_327_fu_12379_p1));

assign add_ln691_388_fu_15943_p2 = ($signed(sext_ln691_259_fu_15940_p1) + $signed(add_ln691_385_reg_20045));

assign add_ln691_389_fu_12438_p2 = ($signed(sext_ln151_320_fu_12316_p1) + $signed(sext_ln691_256_fu_12297_p1));

assign add_ln691_38_fu_8204_p2 = ($signed(sext_ln151_34_fu_8167_p1) + $signed(sext_ln151_36_fu_8173_p1));

assign add_ln691_390_fu_12444_p2 = ($signed(add_ln691_389_fu_12438_p2) + $signed(sext_ln151_325_fu_12361_p1));

assign add_ln691_391_fu_12454_p2 = ($signed(sext_ln151_321_fu_12325_p1) + $signed(sext_ln151_323_fu_12343_p1));

assign add_ln691_392_fu_12464_p2 = ($signed(sext_ln151_322_fu_12334_p1) + $signed(sext_ln691_257_fu_12406_p1));

assign add_ln691_393_fu_12474_p2 = ($signed(sext_ln691_262_fu_12470_p1) + $signed(sext_ln691_261_fu_12460_p1));

assign add_ln691_394_fu_12480_p2 = ($signed(add_ln691_393_fu_12474_p2) + $signed(sext_ln691_260_fu_12450_p1));

assign add_ln691_395_fu_15951_p2 = ($signed(sext_ln691_263_fu_15948_p1) + $signed(add_ln691_388_fu_15943_p2));

assign add_ln691_396_fu_12604_p2 = ($signed(sext_ln151_338_fu_12582_p1) + $signed(sext_ln151_339_fu_12591_p1));

assign add_ln691_397_fu_12614_p2 = ($signed(sext_ln691_266_fu_12610_p1) + $signed(tmp_319_fu_12495_p4));

assign add_ln691_398_fu_12620_p2 = ($signed(sext_ln151_334_fu_12546_p1) + $signed(sext_ln151_336_fu_12564_p1));

assign add_ln691_399_fu_12626_p2 = ($signed(add_ln691_398_fu_12620_p2) + $signed(sext_ln151_337_fu_12573_p1));

assign add_ln691_39_fu_8210_p2 = ($signed(add_ln691_38_fu_8204_p2) + $signed(sext_ln151_37_fu_8176_p1));

assign add_ln691_3_fu_7844_p2 = ($signed(add_ln691_2_fu_7838_p2) + $signed(sext_ln151_7_fu_7810_p1));

assign add_ln691_400_fu_15960_p2 = ($signed(sext_ln691_267_fu_15957_p1) + $signed(add_ln691_397_reg_20060));

assign add_ln691_401_fu_12632_p2 = ($signed(sext_ln151_330_fu_12510_p1) + $signed(sext_ln691_264_fu_12491_p1));

assign add_ln691_402_fu_12638_p2 = ($signed(add_ln691_401_fu_12632_p2) + $signed(sext_ln151_335_fu_12555_p1));

assign add_ln691_403_fu_12648_p2 = ($signed(sext_ln151_331_fu_12519_p1) + $signed(sext_ln151_333_fu_12537_p1));

assign add_ln691_404_fu_12658_p2 = ($signed(sext_ln151_332_fu_12528_p1) + $signed(sext_ln691_265_fu_12600_p1));

assign add_ln691_405_fu_12668_p2 = ($signed(sext_ln691_270_fu_12664_p1) + $signed(sext_ln691_269_fu_12654_p1));

assign add_ln691_406_fu_12674_p2 = ($signed(add_ln691_405_fu_12668_p2) + $signed(sext_ln691_268_fu_12644_p1));

assign add_ln691_407_fu_15968_p2 = ($signed(sext_ln691_271_fu_15965_p1) + $signed(add_ln691_400_fu_15960_p2));

assign add_ln691_408_fu_12798_p2 = ($signed(sext_ln151_348_fu_12776_p1) + $signed(sext_ln151_349_fu_12785_p1));

assign add_ln691_409_fu_12808_p2 = ($signed(sext_ln691_274_fu_12804_p1) + $signed(tmp_320_fu_12689_p4));

assign add_ln691_40_fu_15450_p2 = ($signed(sext_ln691_27_fu_15447_p1) + $signed(add_ln691_37_reg_19610));

assign add_ln691_410_fu_12814_p2 = ($signed(sext_ln151_344_fu_12740_p1) + $signed(sext_ln151_346_fu_12758_p1));

assign add_ln691_411_fu_12820_p2 = ($signed(add_ln691_410_fu_12814_p2) + $signed(sext_ln151_347_fu_12767_p1));

assign add_ln691_412_fu_15977_p2 = ($signed(sext_ln691_275_fu_15974_p1) + $signed(add_ln691_409_reg_20075));

assign add_ln691_413_fu_12826_p2 = ($signed(sext_ln151_340_fu_12704_p1) + $signed(sext_ln691_272_fu_12685_p1));

assign add_ln691_414_fu_12832_p2 = ($signed(add_ln691_413_fu_12826_p2) + $signed(sext_ln151_345_fu_12749_p1));

assign add_ln691_415_fu_12842_p2 = ($signed(sext_ln151_341_fu_12713_p1) + $signed(sext_ln151_343_fu_12731_p1));

assign add_ln691_416_fu_12852_p2 = ($signed(sext_ln151_342_fu_12722_p1) + $signed(sext_ln691_273_fu_12794_p1));

assign add_ln691_417_fu_12862_p2 = ($signed(sext_ln691_278_fu_12858_p1) + $signed(sext_ln691_277_fu_12848_p1));

assign add_ln691_418_fu_12868_p2 = ($signed(add_ln691_417_fu_12862_p2) + $signed(sext_ln691_276_fu_12838_p1));

assign add_ln691_419_fu_15985_p2 = ($signed(sext_ln691_279_fu_15982_p1) + $signed(add_ln691_412_fu_15977_p2));

assign add_ln691_41_fu_8216_p2 = ($signed(sext_ln151_30_fu_8155_p1) + $signed(sext_ln691_24_fu_8142_p1));

assign add_ln691_420_fu_12992_p2 = ($signed(sext_ln151_358_fu_12970_p1) + $signed(sext_ln151_359_fu_12979_p1));

assign add_ln691_421_fu_13002_p2 = ($signed(sext_ln691_282_fu_12998_p1) + $signed(tmp_321_fu_12883_p4));

assign add_ln691_422_fu_13008_p2 = ($signed(sext_ln151_354_fu_12934_p1) + $signed(sext_ln151_356_fu_12952_p1));

assign add_ln691_423_fu_13014_p2 = ($signed(add_ln691_422_fu_13008_p2) + $signed(sext_ln151_357_fu_12961_p1));

assign add_ln691_424_fu_15994_p2 = ($signed(sext_ln691_283_fu_15991_p1) + $signed(add_ln691_421_reg_20090));

assign add_ln691_425_fu_13020_p2 = ($signed(sext_ln151_350_fu_12898_p1) + $signed(sext_ln691_280_fu_12879_p1));

assign add_ln691_426_fu_13026_p2 = ($signed(add_ln691_425_fu_13020_p2) + $signed(sext_ln151_355_fu_12943_p1));

assign add_ln691_427_fu_13036_p2 = ($signed(sext_ln151_351_fu_12907_p1) + $signed(sext_ln151_353_fu_12925_p1));

assign add_ln691_428_fu_13046_p2 = ($signed(sext_ln151_352_fu_12916_p1) + $signed(sext_ln691_281_fu_12988_p1));

assign add_ln691_429_fu_13056_p2 = ($signed(sext_ln691_286_fu_13052_p1) + $signed(sext_ln691_285_fu_13042_p1));

assign add_ln691_42_fu_8222_p2 = ($signed(add_ln691_41_fu_8216_p2) + $signed(sext_ln151_35_fu_8170_p1));

assign add_ln691_430_fu_13062_p2 = ($signed(add_ln691_429_fu_13056_p2) + $signed(sext_ln691_284_fu_13032_p1));

assign add_ln691_431_fu_16002_p2 = ($signed(sext_ln691_287_fu_15999_p1) + $signed(add_ln691_424_fu_15994_p2));

assign add_ln691_432_fu_13186_p2 = ($signed(sext_ln151_368_fu_13164_p1) + $signed(sext_ln151_369_fu_13173_p1));

assign add_ln691_433_fu_13196_p2 = ($signed(sext_ln691_290_fu_13192_p1) + $signed(tmp_322_fu_13077_p4));

assign add_ln691_434_fu_13202_p2 = ($signed(sext_ln151_364_fu_13128_p1) + $signed(sext_ln151_366_fu_13146_p1));

assign add_ln691_435_fu_13208_p2 = ($signed(add_ln691_434_fu_13202_p2) + $signed(sext_ln151_367_fu_13155_p1));

assign add_ln691_436_fu_16011_p2 = ($signed(sext_ln691_291_fu_16008_p1) + $signed(add_ln691_433_reg_20105));

assign add_ln691_437_fu_13214_p2 = ($signed(sext_ln151_360_fu_13092_p1) + $signed(sext_ln691_288_fu_13073_p1));

assign add_ln691_438_fu_13220_p2 = ($signed(add_ln691_437_fu_13214_p2) + $signed(sext_ln151_365_fu_13137_p1));

assign add_ln691_439_fu_13230_p2 = ($signed(sext_ln151_361_fu_13101_p1) + $signed(sext_ln151_363_fu_13119_p1));

assign add_ln691_43_fu_8232_p2 = ($signed(sext_ln151_31_fu_8158_p1) + $signed(sext_ln151_33_fu_8164_p1));

assign add_ln691_440_fu_13240_p2 = ($signed(sext_ln151_362_fu_13110_p1) + $signed(sext_ln691_289_fu_13182_p1));

assign add_ln691_441_fu_13250_p2 = ($signed(sext_ln691_294_fu_13246_p1) + $signed(sext_ln691_293_fu_13236_p1));

assign add_ln691_442_fu_13256_p2 = ($signed(add_ln691_441_fu_13250_p2) + $signed(sext_ln691_292_fu_13226_p1));

assign add_ln691_443_fu_16019_p2 = ($signed(sext_ln691_295_fu_16016_p1) + $signed(add_ln691_436_fu_16011_p2));

assign add_ln691_444_fu_13380_p2 = ($signed(sext_ln151_378_fu_13358_p1) + $signed(sext_ln151_379_fu_13367_p1));

assign add_ln691_445_fu_13390_p2 = ($signed(sext_ln691_298_fu_13386_p1) + $signed(tmp_323_fu_13271_p4));

assign add_ln691_446_fu_13396_p2 = ($signed(sext_ln151_374_fu_13322_p1) + $signed(sext_ln151_376_fu_13340_p1));

assign add_ln691_447_fu_13402_p2 = ($signed(add_ln691_446_fu_13396_p2) + $signed(sext_ln151_377_fu_13349_p1));

assign add_ln691_448_fu_16028_p2 = ($signed(sext_ln691_299_fu_16025_p1) + $signed(add_ln691_445_reg_20120));

assign add_ln691_449_fu_13408_p2 = ($signed(sext_ln151_370_fu_13286_p1) + $signed(sext_ln691_296_fu_13267_p1));

assign add_ln691_44_fu_8242_p2 = ($signed(sext_ln151_32_fu_8161_p1) + $signed(sext_ln691_25_fu_8185_p1));

assign add_ln691_450_fu_13414_p2 = ($signed(add_ln691_449_fu_13408_p2) + $signed(sext_ln151_375_fu_13331_p1));

assign add_ln691_451_fu_13424_p2 = ($signed(sext_ln151_371_fu_13295_p1) + $signed(sext_ln151_373_fu_13313_p1));

assign add_ln691_452_fu_13434_p2 = ($signed(sext_ln151_372_fu_13304_p1) + $signed(sext_ln691_297_fu_13376_p1));

assign add_ln691_453_fu_13444_p2 = ($signed(sext_ln691_302_fu_13440_p1) + $signed(sext_ln691_301_fu_13430_p1));

assign add_ln691_454_fu_13450_p2 = ($signed(add_ln691_453_fu_13444_p2) + $signed(sext_ln691_300_fu_13420_p1));

assign add_ln691_455_fu_16036_p2 = ($signed(sext_ln691_303_fu_16033_p1) + $signed(add_ln691_448_fu_16028_p2));

assign add_ln691_456_fu_13574_p2 = ($signed(sext_ln151_388_fu_13552_p1) + $signed(sext_ln151_389_fu_13561_p1));

assign add_ln691_457_fu_13584_p2 = ($signed(sext_ln691_306_fu_13580_p1) + $signed(tmp_324_fu_13465_p4));

assign add_ln691_458_fu_13590_p2 = ($signed(sext_ln151_384_fu_13516_p1) + $signed(sext_ln151_386_fu_13534_p1));

assign add_ln691_459_fu_13596_p2 = ($signed(add_ln691_458_fu_13590_p2) + $signed(sext_ln151_387_fu_13543_p1));

assign add_ln691_45_fu_8252_p2 = ($signed(sext_ln691_30_fu_8248_p1) + $signed(sext_ln691_29_fu_8238_p1));

assign add_ln691_460_fu_16045_p2 = ($signed(sext_ln691_307_fu_16042_p1) + $signed(add_ln691_457_reg_20135));

assign add_ln691_461_fu_13602_p2 = ($signed(sext_ln151_380_fu_13480_p1) + $signed(sext_ln691_304_fu_13461_p1));

assign add_ln691_462_fu_13608_p2 = ($signed(add_ln691_461_fu_13602_p2) + $signed(sext_ln151_385_fu_13525_p1));

assign add_ln691_463_fu_13618_p2 = ($signed(sext_ln151_381_fu_13489_p1) + $signed(sext_ln151_383_fu_13507_p1));

assign add_ln691_464_fu_13628_p2 = ($signed(sext_ln151_382_fu_13498_p1) + $signed(sext_ln691_305_fu_13570_p1));

assign add_ln691_465_fu_13638_p2 = ($signed(sext_ln691_310_fu_13634_p1) + $signed(sext_ln691_309_fu_13624_p1));

assign add_ln691_466_fu_13644_p2 = ($signed(add_ln691_465_fu_13638_p2) + $signed(sext_ln691_308_fu_13614_p1));

assign add_ln691_467_fu_16053_p2 = ($signed(sext_ln691_311_fu_16050_p1) + $signed(add_ln691_460_fu_16045_p2));

assign add_ln691_468_fu_13768_p2 = ($signed(sext_ln151_398_fu_13746_p1) + $signed(sext_ln151_399_fu_13755_p1));

assign add_ln691_469_fu_13778_p2 = ($signed(sext_ln691_314_fu_13774_p1) + $signed(tmp_325_fu_13659_p4));

assign add_ln691_46_fu_8258_p2 = ($signed(add_ln691_45_fu_8252_p2) + $signed(sext_ln691_28_fu_8228_p1));

assign add_ln691_470_fu_13784_p2 = ($signed(sext_ln151_394_fu_13710_p1) + $signed(sext_ln151_396_fu_13728_p1));

assign add_ln691_471_fu_13790_p2 = ($signed(add_ln691_470_fu_13784_p2) + $signed(sext_ln151_397_fu_13737_p1));

assign add_ln691_472_fu_16062_p2 = ($signed(sext_ln691_315_fu_16059_p1) + $signed(add_ln691_469_reg_20150));

assign add_ln691_473_fu_13796_p2 = ($signed(sext_ln151_390_fu_13674_p1) + $signed(sext_ln691_312_fu_13655_p1));

assign add_ln691_474_fu_13802_p2 = ($signed(add_ln691_473_fu_13796_p2) + $signed(sext_ln151_395_fu_13719_p1));

assign add_ln691_475_fu_13812_p2 = ($signed(sext_ln151_391_fu_13683_p1) + $signed(sext_ln151_393_fu_13701_p1));

assign add_ln691_476_fu_13822_p2 = ($signed(sext_ln151_392_fu_13692_p1) + $signed(sext_ln691_313_fu_13764_p1));

assign add_ln691_477_fu_13832_p2 = ($signed(sext_ln691_318_fu_13828_p1) + $signed(sext_ln691_317_fu_13818_p1));

assign add_ln691_478_fu_13838_p2 = ($signed(add_ln691_477_fu_13832_p2) + $signed(sext_ln691_316_fu_13808_p1));

assign add_ln691_479_fu_16070_p2 = ($signed(sext_ln691_319_fu_16067_p1) + $signed(add_ln691_472_fu_16062_p2));

assign add_ln691_47_fu_15458_p2 = ($signed(sext_ln691_31_fu_15455_p1) + $signed(add_ln691_40_fu_15450_p2));

assign add_ln691_480_fu_13962_p2 = ($signed(sext_ln151_408_fu_13940_p1) + $signed(sext_ln151_409_fu_13949_p1));

assign add_ln691_481_fu_13972_p2 = ($signed(sext_ln691_322_fu_13968_p1) + $signed(tmp_326_fu_13853_p4));

assign add_ln691_482_fu_13978_p2 = ($signed(sext_ln151_404_fu_13904_p1) + $signed(sext_ln151_406_fu_13922_p1));

assign add_ln691_483_fu_13984_p2 = ($signed(add_ln691_482_fu_13978_p2) + $signed(sext_ln151_407_fu_13931_p1));

assign add_ln691_484_fu_16079_p2 = ($signed(sext_ln691_323_fu_16076_p1) + $signed(add_ln691_481_reg_20165));

assign add_ln691_485_fu_13990_p2 = ($signed(sext_ln151_400_fu_13868_p1) + $signed(sext_ln691_320_fu_13849_p1));

assign add_ln691_486_fu_13996_p2 = ($signed(add_ln691_485_fu_13990_p2) + $signed(sext_ln151_405_fu_13913_p1));

assign add_ln691_487_fu_14006_p2 = ($signed(sext_ln151_401_fu_13877_p1) + $signed(sext_ln151_403_fu_13895_p1));

assign add_ln691_488_fu_14016_p2 = ($signed(sext_ln151_402_fu_13886_p1) + $signed(sext_ln691_321_fu_13958_p1));

assign add_ln691_489_fu_14026_p2 = ($signed(sext_ln691_326_fu_14022_p1) + $signed(sext_ln691_325_fu_14012_p1));

assign add_ln691_48_fu_8310_p2 = ($signed(sext_ln151_48_fu_8301_p1) + $signed(sext_ln151_49_fu_8304_p1));

assign add_ln691_490_fu_14032_p2 = ($signed(add_ln691_489_fu_14026_p2) + $signed(sext_ln691_324_fu_14002_p1));

assign add_ln691_491_fu_16087_p2 = ($signed(sext_ln691_327_fu_16084_p1) + $signed(add_ln691_484_fu_16079_p2));

assign add_ln691_492_fu_14156_p2 = ($signed(sext_ln151_418_fu_14134_p1) + $signed(sext_ln151_419_fu_14143_p1));

assign add_ln691_493_fu_14166_p2 = ($signed(sext_ln691_330_fu_14162_p1) + $signed(tmp_327_fu_14047_p4));

assign add_ln691_494_fu_14172_p2 = ($signed(sext_ln151_414_fu_14098_p1) + $signed(sext_ln151_416_fu_14116_p1));

assign add_ln691_495_fu_14178_p2 = ($signed(add_ln691_494_fu_14172_p2) + $signed(sext_ln151_417_fu_14125_p1));

assign add_ln691_496_fu_16096_p2 = ($signed(sext_ln691_331_fu_16093_p1) + $signed(add_ln691_493_reg_20180));

assign add_ln691_497_fu_14184_p2 = ($signed(sext_ln151_410_fu_14062_p1) + $signed(sext_ln691_328_fu_14043_p1));

assign add_ln691_498_fu_14190_p2 = ($signed(add_ln691_497_fu_14184_p2) + $signed(sext_ln151_415_fu_14107_p1));

assign add_ln691_499_fu_14200_p2 = ($signed(sext_ln151_411_fu_14071_p1) + $signed(sext_ln151_413_fu_14089_p1));

assign add_ln691_49_fu_8320_p2 = ($signed(sext_ln691_34_fu_8316_p1) + $signed(tmp_51_fu_8267_p4));

assign add_ln691_4_fu_15399_p2 = ($signed(sext_ln691_3_fu_15396_p1) + $signed(add_ln691_1_reg_19565));

assign add_ln691_500_fu_14210_p2 = ($signed(sext_ln151_412_fu_14080_p1) + $signed(sext_ln691_329_fu_14152_p1));

assign add_ln691_501_fu_14220_p2 = ($signed(sext_ln691_334_fu_14216_p1) + $signed(sext_ln691_333_fu_14206_p1));

assign add_ln691_502_fu_14226_p2 = ($signed(add_ln691_501_fu_14220_p2) + $signed(sext_ln691_332_fu_14196_p1));

assign add_ln691_503_fu_16104_p2 = ($signed(sext_ln691_335_fu_16101_p1) + $signed(add_ln691_496_fu_16096_p2));

assign add_ln691_504_fu_14350_p2 = ($signed(sext_ln151_428_fu_14328_p1) + $signed(sext_ln151_429_fu_14337_p1));

assign add_ln691_505_fu_14360_p2 = ($signed(sext_ln691_338_fu_14356_p1) + $signed(tmp_328_fu_14241_p4));

assign add_ln691_506_fu_14366_p2 = ($signed(sext_ln151_424_fu_14292_p1) + $signed(sext_ln151_426_fu_14310_p1));

assign add_ln691_507_fu_14372_p2 = ($signed(add_ln691_506_fu_14366_p2) + $signed(sext_ln151_427_fu_14319_p1));

assign add_ln691_508_fu_16113_p2 = ($signed(sext_ln691_339_fu_16110_p1) + $signed(add_ln691_505_reg_20195));

assign add_ln691_509_fu_14378_p2 = ($signed(sext_ln151_420_fu_14256_p1) + $signed(sext_ln691_336_fu_14237_p1));

assign add_ln691_50_fu_8326_p2 = ($signed(sext_ln151_44_fu_8289_p1) + $signed(sext_ln151_46_fu_8295_p1));

assign add_ln691_510_fu_14384_p2 = ($signed(add_ln691_509_fu_14378_p2) + $signed(sext_ln151_425_fu_14301_p1));

assign add_ln691_511_fu_14394_p2 = ($signed(sext_ln151_421_fu_14265_p1) + $signed(sext_ln151_423_fu_14283_p1));

assign add_ln691_512_fu_14404_p2 = ($signed(sext_ln151_422_fu_14274_p1) + $signed(sext_ln691_337_fu_14346_p1));

assign add_ln691_513_fu_14414_p2 = ($signed(sext_ln691_342_fu_14410_p1) + $signed(sext_ln691_341_fu_14400_p1));

assign add_ln691_514_fu_14420_p2 = ($signed(add_ln691_513_fu_14414_p2) + $signed(sext_ln691_340_fu_14390_p1));

assign add_ln691_515_fu_16121_p2 = ($signed(sext_ln691_343_fu_16118_p1) + $signed(add_ln691_508_fu_16113_p2));

assign add_ln691_516_fu_14544_p2 = ($signed(sext_ln151_438_fu_14522_p1) + $signed(sext_ln151_439_fu_14531_p1));

assign add_ln691_517_fu_14554_p2 = ($signed(sext_ln691_346_fu_14550_p1) + $signed(tmp_329_fu_14435_p4));

assign add_ln691_518_fu_14560_p2 = ($signed(sext_ln151_434_fu_14486_p1) + $signed(sext_ln151_436_fu_14504_p1));

assign add_ln691_519_fu_14566_p2 = ($signed(add_ln691_518_fu_14560_p2) + $signed(sext_ln151_437_fu_14513_p1));

assign add_ln691_51_fu_8332_p2 = ($signed(add_ln691_50_fu_8326_p2) + $signed(sext_ln151_47_fu_8298_p1));

assign add_ln691_520_fu_16130_p2 = ($signed(sext_ln691_347_fu_16127_p1) + $signed(add_ln691_517_reg_20210));

assign add_ln691_521_fu_14572_p2 = ($signed(sext_ln151_430_fu_14450_p1) + $signed(sext_ln691_344_fu_14431_p1));

assign add_ln691_522_fu_14578_p2 = ($signed(add_ln691_521_fu_14572_p2) + $signed(sext_ln151_435_fu_14495_p1));

assign add_ln691_523_fu_14588_p2 = ($signed(sext_ln151_431_fu_14459_p1) + $signed(sext_ln151_433_fu_14477_p1));

assign add_ln691_524_fu_14598_p2 = ($signed(sext_ln151_432_fu_14468_p1) + $signed(sext_ln691_345_fu_14540_p1));

assign add_ln691_525_fu_14608_p2 = ($signed(sext_ln691_350_fu_14604_p1) + $signed(sext_ln691_349_fu_14594_p1));

assign add_ln691_526_fu_14614_p2 = ($signed(add_ln691_525_fu_14608_p2) + $signed(sext_ln691_348_fu_14584_p1));

assign add_ln691_527_fu_16138_p2 = ($signed(sext_ln691_351_fu_16135_p1) + $signed(add_ln691_520_fu_16130_p2));

assign add_ln691_528_fu_14738_p2 = ($signed(sext_ln151_448_fu_14716_p1) + $signed(sext_ln151_449_fu_14725_p1));

assign add_ln691_529_fu_14748_p2 = ($signed(sext_ln691_354_fu_14744_p1) + $signed(tmp_330_fu_14629_p4));

assign add_ln691_52_fu_15467_p2 = ($signed(sext_ln691_35_fu_15464_p1) + $signed(add_ln691_49_reg_19625));

assign add_ln691_530_fu_14754_p2 = ($signed(sext_ln151_444_fu_14680_p1) + $signed(sext_ln151_446_fu_14698_p1));

assign add_ln691_531_fu_14760_p2 = ($signed(add_ln691_530_fu_14754_p2) + $signed(sext_ln151_447_fu_14707_p1));

assign add_ln691_532_fu_16147_p2 = ($signed(sext_ln691_355_fu_16144_p1) + $signed(add_ln691_529_reg_20225));

assign add_ln691_533_fu_14766_p2 = ($signed(sext_ln151_440_fu_14644_p1) + $signed(sext_ln691_352_fu_14625_p1));

assign add_ln691_534_fu_14772_p2 = ($signed(add_ln691_533_fu_14766_p2) + $signed(sext_ln151_445_fu_14689_p1));

assign add_ln691_535_fu_14782_p2 = ($signed(sext_ln151_441_fu_14653_p1) + $signed(sext_ln151_443_fu_14671_p1));

assign add_ln691_536_fu_14792_p2 = ($signed(sext_ln151_442_fu_14662_p1) + $signed(sext_ln691_353_fu_14734_p1));

assign add_ln691_537_fu_14802_p2 = ($signed(sext_ln691_358_fu_14798_p1) + $signed(sext_ln691_357_fu_14788_p1));

assign add_ln691_538_fu_14808_p2 = ($signed(add_ln691_537_fu_14802_p2) + $signed(sext_ln691_356_fu_14778_p1));

assign add_ln691_539_fu_16155_p2 = ($signed(sext_ln691_359_fu_16152_p1) + $signed(add_ln691_532_fu_16147_p2));

assign add_ln691_53_fu_8338_p2 = ($signed(sext_ln151_40_fu_8277_p1) + $signed(sext_ln691_32_fu_8264_p1));

assign add_ln691_540_fu_14932_p2 = ($signed(sext_ln151_458_fu_14910_p1) + $signed(sext_ln151_459_fu_14919_p1));

assign add_ln691_541_fu_14942_p2 = ($signed(sext_ln691_362_fu_14938_p1) + $signed(tmp_331_fu_14823_p4));

assign add_ln691_542_fu_14948_p2 = ($signed(sext_ln151_454_fu_14874_p1) + $signed(sext_ln151_456_fu_14892_p1));

assign add_ln691_543_fu_14954_p2 = ($signed(add_ln691_542_fu_14948_p2) + $signed(sext_ln151_457_fu_14901_p1));

assign add_ln691_544_fu_16164_p2 = ($signed(sext_ln691_363_fu_16161_p1) + $signed(add_ln691_541_reg_20240));

assign add_ln691_545_fu_14960_p2 = ($signed(sext_ln151_450_fu_14838_p1) + $signed(sext_ln691_360_fu_14819_p1));

assign add_ln691_546_fu_14966_p2 = ($signed(add_ln691_545_fu_14960_p2) + $signed(sext_ln151_455_fu_14883_p1));

assign add_ln691_547_fu_14976_p2 = ($signed(sext_ln151_451_fu_14847_p1) + $signed(sext_ln151_453_fu_14865_p1));

assign add_ln691_548_fu_14986_p2 = ($signed(sext_ln151_452_fu_14856_p1) + $signed(sext_ln691_361_fu_14928_p1));

assign add_ln691_549_fu_14996_p2 = ($signed(sext_ln691_366_fu_14992_p1) + $signed(sext_ln691_365_fu_14982_p1));

assign add_ln691_54_fu_8344_p2 = ($signed(add_ln691_53_fu_8338_p2) + $signed(sext_ln151_45_fu_8292_p1));

assign add_ln691_550_fu_15002_p2 = ($signed(add_ln691_549_fu_14996_p2) + $signed(sext_ln691_364_fu_14972_p1));

assign add_ln691_551_fu_16172_p2 = ($signed(sext_ln691_367_fu_16169_p1) + $signed(add_ln691_544_fu_16164_p2));

assign add_ln691_552_fu_15126_p2 = ($signed(sext_ln151_468_fu_15104_p1) + $signed(sext_ln151_469_fu_15113_p1));

assign add_ln691_553_fu_15136_p2 = ($signed(sext_ln691_370_fu_15132_p1) + $signed(tmp_332_fu_15017_p4));

assign add_ln691_554_fu_15142_p2 = ($signed(sext_ln151_464_fu_15068_p1) + $signed(sext_ln151_466_fu_15086_p1));

assign add_ln691_555_fu_15148_p2 = ($signed(add_ln691_554_fu_15142_p2) + $signed(sext_ln151_467_fu_15095_p1));

assign add_ln691_556_fu_16181_p2 = ($signed(sext_ln691_371_fu_16178_p1) + $signed(add_ln691_553_reg_20255));

assign add_ln691_557_fu_15154_p2 = ($signed(sext_ln151_460_fu_15032_p1) + $signed(sext_ln691_368_fu_15013_p1));

assign add_ln691_558_fu_15160_p2 = ($signed(add_ln691_557_fu_15154_p2) + $signed(sext_ln151_465_fu_15077_p1));

assign add_ln691_559_fu_15170_p2 = ($signed(sext_ln151_461_fu_15041_p1) + $signed(sext_ln151_463_fu_15059_p1));

assign add_ln691_55_fu_8354_p2 = ($signed(sext_ln151_41_fu_8280_p1) + $signed(sext_ln151_43_fu_8286_p1));

assign add_ln691_560_fu_15180_p2 = ($signed(sext_ln151_462_fu_15050_p1) + $signed(sext_ln691_369_fu_15122_p1));

assign add_ln691_561_fu_15190_p2 = ($signed(sext_ln691_374_fu_15186_p1) + $signed(sext_ln691_373_fu_15176_p1));

assign add_ln691_562_fu_15196_p2 = ($signed(add_ln691_561_fu_15190_p2) + $signed(sext_ln691_372_fu_15166_p1));

assign add_ln691_563_fu_16189_p2 = ($signed(sext_ln691_375_fu_16186_p1) + $signed(add_ln691_556_fu_16181_p2));

assign add_ln691_564_fu_15320_p2 = ($signed(sext_ln151_478_fu_15298_p1) + $signed(sext_ln151_479_fu_15307_p1));

assign add_ln691_565_fu_15330_p2 = ($signed(sext_ln691_378_fu_15326_p1) + $signed(tmp_333_fu_15211_p4));

assign add_ln691_566_fu_15336_p2 = ($signed(sext_ln151_474_fu_15262_p1) + $signed(sext_ln151_476_fu_15280_p1));

assign add_ln691_567_fu_15342_p2 = ($signed(add_ln691_566_fu_15336_p2) + $signed(sext_ln151_477_fu_15289_p1));

assign add_ln691_568_fu_16198_p2 = ($signed(sext_ln691_379_fu_16195_p1) + $signed(add_ln691_565_reg_20270));

assign add_ln691_569_fu_15348_p2 = ($signed(sext_ln151_470_fu_15226_p1) + $signed(sext_ln691_376_fu_15207_p1));

assign add_ln691_56_fu_8364_p2 = ($signed(sext_ln151_42_fu_8283_p1) + $signed(sext_ln691_33_fu_8307_p1));

assign add_ln691_570_fu_15354_p2 = ($signed(add_ln691_569_fu_15348_p2) + $signed(sext_ln151_475_fu_15271_p1));

assign add_ln691_571_fu_15364_p2 = ($signed(sext_ln151_471_fu_15235_p1) + $signed(sext_ln151_473_fu_15253_p1));

assign add_ln691_572_fu_15374_p2 = ($signed(sext_ln151_472_fu_15244_p1) + $signed(sext_ln691_377_fu_15316_p1));

assign add_ln691_573_fu_15384_p2 = ($signed(sext_ln691_382_fu_15380_p1) + $signed(sext_ln691_381_fu_15370_p1));

assign add_ln691_574_fu_15390_p2 = ($signed(add_ln691_573_fu_15384_p2) + $signed(sext_ln691_380_fu_15360_p1));

assign add_ln691_575_fu_16206_p2 = ($signed(sext_ln691_383_fu_16203_p1) + $signed(add_ln691_568_fu_16198_p2));

assign add_ln691_57_fu_8374_p2 = ($signed(sext_ln691_38_fu_8370_p1) + $signed(sext_ln691_37_fu_8360_p1));

assign add_ln691_58_fu_8380_p2 = ($signed(add_ln691_57_fu_8374_p2) + $signed(sext_ln691_36_fu_8350_p1));

assign add_ln691_59_fu_15475_p2 = ($signed(sext_ln691_39_fu_15472_p1) + $signed(add_ln691_52_fu_15467_p2));

assign add_ln691_5_fu_7850_p2 = ($signed(sext_ln151_fu_7789_p1) + $signed(sext_ln691_fu_7782_p1));

assign add_ln691_60_fu_8432_p2 = ($signed(sext_ln151_58_fu_8423_p1) + $signed(sext_ln151_59_fu_8426_p1));

assign add_ln691_61_fu_8442_p2 = ($signed(sext_ln691_42_fu_8438_p1) + $signed(tmp_64_fu_8389_p4));

assign add_ln691_62_fu_8448_p2 = ($signed(sext_ln151_54_fu_8411_p1) + $signed(sext_ln151_56_fu_8417_p1));

assign add_ln691_63_fu_8454_p2 = ($signed(add_ln691_62_fu_8448_p2) + $signed(sext_ln151_57_fu_8420_p1));

assign add_ln691_64_fu_15484_p2 = ($signed(sext_ln691_43_fu_15481_p1) + $signed(add_ln691_61_reg_19640));

assign add_ln691_65_fu_8460_p2 = ($signed(sext_ln151_50_fu_8399_p1) + $signed(sext_ln691_40_fu_8386_p1));

assign add_ln691_66_fu_8466_p2 = ($signed(add_ln691_65_fu_8460_p2) + $signed(sext_ln151_55_fu_8414_p1));

assign add_ln691_67_fu_8476_p2 = ($signed(sext_ln151_51_fu_8402_p1) + $signed(sext_ln151_53_fu_8408_p1));

assign add_ln691_68_fu_8486_p2 = ($signed(sext_ln151_52_fu_8405_p1) + $signed(sext_ln691_41_fu_8429_p1));

assign add_ln691_69_fu_8496_p2 = ($signed(sext_ln691_46_fu_8492_p1) + $signed(sext_ln691_45_fu_8482_p1));

assign add_ln691_6_fu_7856_p2 = ($signed(add_ln691_5_fu_7850_p2) + $signed(sext_ln151_5_fu_7804_p1));

assign add_ln691_70_fu_8502_p2 = ($signed(add_ln691_69_fu_8496_p2) + $signed(sext_ln691_44_fu_8472_p1));

assign add_ln691_71_fu_15492_p2 = ($signed(sext_ln691_47_fu_15489_p1) + $signed(add_ln691_64_fu_15484_p2));

assign add_ln691_72_fu_8554_p2 = ($signed(sext_ln151_68_fu_8545_p1) + $signed(sext_ln151_69_fu_8548_p1));

assign add_ln691_73_fu_8564_p2 = ($signed(sext_ln691_50_fu_8560_p1) + $signed(tmp_77_fu_8511_p4));

assign add_ln691_74_fu_8570_p2 = ($signed(sext_ln151_64_fu_8533_p1) + $signed(sext_ln151_66_fu_8539_p1));

assign add_ln691_75_fu_8576_p2 = ($signed(add_ln691_74_fu_8570_p2) + $signed(sext_ln151_67_fu_8542_p1));

assign add_ln691_76_fu_15501_p2 = ($signed(sext_ln691_51_fu_15498_p1) + $signed(add_ln691_73_reg_19655));

assign add_ln691_77_fu_8582_p2 = ($signed(sext_ln151_60_fu_8521_p1) + $signed(sext_ln691_48_fu_8508_p1));

assign add_ln691_78_fu_8588_p2 = ($signed(add_ln691_77_fu_8582_p2) + $signed(sext_ln151_65_fu_8536_p1));

assign add_ln691_79_fu_8598_p2 = ($signed(sext_ln151_61_fu_8524_p1) + $signed(sext_ln151_63_fu_8530_p1));

assign add_ln691_7_fu_7866_p2 = ($signed(sext_ln151_1_fu_7792_p1) + $signed(sext_ln151_3_fu_7798_p1));

assign add_ln691_80_fu_8608_p2 = ($signed(sext_ln151_62_fu_8527_p1) + $signed(sext_ln691_49_fu_8551_p1));

assign add_ln691_81_fu_8618_p2 = ($signed(sext_ln691_54_fu_8614_p1) + $signed(sext_ln691_53_fu_8604_p1));

assign add_ln691_82_fu_8624_p2 = ($signed(add_ln691_81_fu_8618_p2) + $signed(sext_ln691_52_fu_8594_p1));

assign add_ln691_83_fu_15509_p2 = ($signed(sext_ln691_55_fu_15506_p1) + $signed(add_ln691_76_fu_15501_p2));

assign add_ln691_84_fu_8676_p2 = ($signed(sext_ln151_78_fu_8667_p1) + $signed(sext_ln151_79_fu_8670_p1));

assign add_ln691_85_fu_8686_p2 = ($signed(sext_ln691_58_fu_8682_p1) + $signed(tmp_90_fu_8633_p4));

assign add_ln691_86_fu_8692_p2 = ($signed(sext_ln151_74_fu_8655_p1) + $signed(sext_ln151_76_fu_8661_p1));

assign add_ln691_87_fu_8698_p2 = ($signed(add_ln691_86_fu_8692_p2) + $signed(sext_ln151_77_fu_8664_p1));

assign add_ln691_88_fu_15518_p2 = ($signed(sext_ln691_59_fu_15515_p1) + $signed(add_ln691_85_reg_19670));

assign add_ln691_89_fu_8704_p2 = ($signed(sext_ln151_70_fu_8643_p1) + $signed(sext_ln691_56_fu_8630_p1));

assign add_ln691_8_fu_7876_p2 = ($signed(sext_ln151_2_fu_7795_p1) + $signed(sext_ln691_1_fu_7819_p1));

assign add_ln691_90_fu_8710_p2 = ($signed(add_ln691_89_fu_8704_p2) + $signed(sext_ln151_75_fu_8658_p1));

assign add_ln691_91_fu_8720_p2 = ($signed(sext_ln151_71_fu_8646_p1) + $signed(sext_ln151_73_fu_8652_p1));

assign add_ln691_92_fu_8730_p2 = ($signed(sext_ln151_72_fu_8649_p1) + $signed(sext_ln691_57_fu_8673_p1));

assign add_ln691_93_fu_8740_p2 = ($signed(sext_ln691_62_fu_8736_p1) + $signed(sext_ln691_61_fu_8726_p1));

assign add_ln691_94_fu_8746_p2 = ($signed(add_ln691_93_fu_8740_p2) + $signed(sext_ln691_60_fu_8716_p1));

assign add_ln691_95_fu_15526_p2 = ($signed(sext_ln691_63_fu_15523_p1) + $signed(add_ln691_88_fu_15518_p2));

assign add_ln691_96_fu_8798_p2 = ($signed(sext_ln151_88_fu_8789_p1) + $signed(sext_ln151_89_fu_8792_p1));

assign add_ln691_97_fu_8808_p2 = ($signed(sext_ln691_66_fu_8804_p1) + $signed(tmp_103_fu_8755_p4));

assign add_ln691_98_fu_8814_p2 = ($signed(sext_ln151_84_fu_8777_p1) + $signed(sext_ln151_86_fu_8783_p1));

assign add_ln691_99_fu_8820_p2 = ($signed(add_ln691_98_fu_8814_p2) + $signed(sext_ln151_87_fu_8786_p1));

assign add_ln691_9_fu_7886_p2 = ($signed(sext_ln691_6_fu_7882_p1) + $signed(sext_ln691_5_fu_7872_p1));

assign add_ln691_fu_7822_p2 = ($signed(sext_ln151_8_fu_7813_p1) + $signed(sext_ln151_9_fu_7816_p1));

assign and_ln120_fu_1607_p2 = (xor_ln120_fu_1595_p2 & icmp_ln122_fu_1601_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln161_reg_16605_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_full_n == 1'b0)) | ((icmp_ln120_reg_16532 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln161_reg_16605_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_full_n == 1'b0)) | ((icmp_ln120_reg_16532 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln161_reg_16605_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (mac_sm_full_n == 1'b0)) | ((icmp_ln120_reg_16532 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cache_window_sm_empty_n == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((icmp_ln120_reg_16532 == 1'd0) & (cache_window_sm_empty_n == 1'b0));
end

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = ((icmp_ln161_reg_16605_pp0_iter1_reg == 1'd1) & (mac_sm_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign icmp_ln120_fu_1575_p2 = ((ap_phi_mux_indvar_flatten20_phi_fu_1528_p4 == 16'd50176) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_1581_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_1540_p4 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_1601_p2 = ((ap_phi_mux_cit_phi_fu_1563_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_1697_p2 = ((select_ln121_reg_16562 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_1702_p2 = ((select_ln121_reg_16562 == 5'd15) ? 1'b1 : 1'b0);

assign mac_sm_din = tmp_335_fu_16317_p96;

assign mlp_inst_m1_weight_arr_V_address0 = zext_ln215_1_fu_1692_p1;

assign mul_ln1345_100_fu_4020_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_101_fu_4040_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_102_fu_4060_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_103_fu_4080_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_104_fu_4100_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_105_fu_4120_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_106_fu_4140_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_107_fu_4160_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_108_fu_4180_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_109_fu_4200_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_10_fu_2216_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_110_fu_4220_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_111_fu_4240_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_112_fu_4260_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_113_fu_4280_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_114_fu_4300_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_115_fu_4320_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_116_fu_4340_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_117_fu_4360_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_118_fu_4380_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_119_fu_4400_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_11_fu_2240_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_120_fu_4420_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_121_fu_4440_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_122_fu_4460_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_123_fu_4480_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_124_fu_4500_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_125_fu_4520_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_126_fu_4540_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_127_fu_4560_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_128_fu_4580_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_129_fu_4600_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_12_fu_2260_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_130_fu_4620_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_131_fu_4640_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_132_fu_4660_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_133_fu_4680_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_134_fu_4700_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_135_fu_4720_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_136_fu_4740_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_137_fu_4760_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_138_fu_4780_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_139_fu_4800_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_13_fu_2280_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_140_fu_4820_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_141_fu_4840_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_142_fu_4860_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_143_fu_4880_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_144_fu_4900_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_145_fu_4920_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_146_fu_4940_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_147_fu_4960_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_148_fu_4980_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_149_fu_5000_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_14_fu_2300_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_150_fu_5020_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_151_fu_5040_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_152_fu_5060_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_153_fu_5080_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_154_fu_5100_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_155_fu_5120_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_156_fu_5140_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_157_fu_5160_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_158_fu_5180_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_159_fu_5200_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_15_fu_2320_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_160_fu_5220_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_161_fu_5240_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_162_fu_5260_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_163_fu_5280_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_164_fu_5300_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_165_fu_5320_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_166_fu_5340_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_167_fu_5360_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_168_fu_5380_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_169_fu_5400_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_16_fu_2340_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_170_fu_5420_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_171_fu_5440_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_172_fu_5460_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_173_fu_5480_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_174_fu_5500_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_175_fu_5520_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_176_fu_5540_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_177_fu_5560_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_178_fu_5580_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_179_fu_5600_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_17_fu_2360_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_180_fu_5620_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_181_fu_5640_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_182_fu_5660_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_183_fu_5680_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_184_fu_5700_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_185_fu_5720_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_186_fu_5740_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_187_fu_5760_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_188_fu_5780_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_189_fu_5800_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_18_fu_2380_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_190_fu_5820_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_191_fu_5840_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_192_fu_5860_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_193_fu_5880_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_194_fu_5900_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_195_fu_5920_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_196_fu_5940_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_197_fu_5960_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_198_fu_5980_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_199_fu_6000_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_19_fu_2400_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_1_fu_2000_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_200_fu_6020_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_201_fu_6040_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_202_fu_6060_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_203_fu_6080_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_204_fu_6100_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_205_fu_6120_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_206_fu_6140_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_207_fu_6160_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_208_fu_6180_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_209_fu_6200_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_20_fu_2420_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_210_fu_6220_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_211_fu_6240_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_212_fu_6260_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_213_fu_6280_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_214_fu_6300_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_215_fu_6320_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_216_fu_6340_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_217_fu_6360_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_218_fu_6380_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_219_fu_6400_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_21_fu_2440_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_220_fu_6420_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_221_fu_6440_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_222_fu_6460_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_223_fu_6480_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_224_fu_6500_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_225_fu_6520_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_226_fu_6540_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_227_fu_6560_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_228_fu_6580_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_229_fu_6600_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_22_fu_2460_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_230_fu_6620_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_231_fu_6640_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_232_fu_6660_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_233_fu_6680_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_234_fu_6700_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_235_fu_6720_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_236_fu_6740_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_237_fu_6760_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_238_fu_6780_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_239_fu_6800_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_23_fu_2480_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_240_fu_6820_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_241_fu_6840_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_242_fu_6860_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_243_fu_6880_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_244_fu_6900_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_245_fu_6920_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_246_fu_6940_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_247_fu_6960_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_248_fu_6980_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_249_fu_7000_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_24_fu_2500_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_250_fu_7020_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_251_fu_7040_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_252_fu_7060_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_253_fu_7080_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_254_fu_7100_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_255_fu_7120_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_256_fu_7140_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_257_fu_7160_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_258_fu_7180_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_259_fu_7200_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_25_fu_2520_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_260_fu_7220_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_261_fu_7240_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_262_fu_7260_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_263_fu_7280_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_264_fu_7300_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_265_fu_7320_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_266_fu_7340_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_267_fu_7360_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_268_fu_7380_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_269_fu_7400_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_26_fu_2540_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_270_fu_7420_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_271_fu_7440_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_272_fu_7460_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_273_fu_7480_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_274_fu_7500_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_275_fu_7520_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_276_fu_7540_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_277_fu_7560_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_278_fu_7580_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_279_fu_7600_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_27_fu_2560_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_280_fu_7620_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_281_fu_7640_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_282_fu_7660_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_283_fu_7680_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_284_fu_7700_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_285_fu_7720_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_286_fu_7740_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_287_fu_7760_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_288_fu_10707_p0 = sext_ln1345_1_reg_16685;

assign mul_ln1345_288_fu_10707_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_289_fu_10729_p0 = sext_ln1345_3_reg_16695;

assign mul_ln1345_289_fu_10729_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_28_fu_2580_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_290_fu_10741_p0 = sext_ln1345_5_reg_16705;

assign mul_ln1345_290_fu_10741_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_291_fu_10753_p0 = sext_ln1345_7_reg_16715;

assign mul_ln1345_291_fu_10753_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_292_fu_10765_p0 = sext_ln1345_9_reg_16725;

assign mul_ln1345_292_fu_10765_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_293_fu_10777_p0 = sext_ln1345_11_reg_16735;

assign mul_ln1345_293_fu_10777_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_294_fu_10789_p0 = sext_ln1345_13_reg_16745;

assign mul_ln1345_294_fu_10789_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_295_fu_10801_p0 = sext_ln1345_15_reg_16755;

assign mul_ln1345_295_fu_10801_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_296_fu_10813_p0 = sext_ln1345_17_reg_16765;

assign mul_ln1345_296_fu_10813_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_297_fu_10825_p0 = sext_ln1345_19_reg_16775;

assign mul_ln1345_297_fu_10825_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_298_fu_10837_p0 = sext_ln1345_21_reg_16785;

assign mul_ln1345_298_fu_10837_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_299_fu_10849_p0 = sext_ln1345_23_reg_16795;

assign mul_ln1345_299_fu_10849_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_29_fu_2600_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_2_fu_2024_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_300_fu_10934_p0 = sext_ln1345_24_reg_16805;

assign mul_ln1345_300_fu_10934_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_301_fu_10953_p0 = sext_ln1345_25_reg_16815;

assign mul_ln1345_301_fu_10953_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_302_fu_10962_p0 = sext_ln1345_26_reg_16825;

assign mul_ln1345_302_fu_10962_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_303_fu_10971_p0 = sext_ln1345_27_reg_16835;

assign mul_ln1345_303_fu_10971_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_304_fu_10980_p0 = sext_ln1345_28_reg_16845;

assign mul_ln1345_304_fu_10980_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_305_fu_10989_p0 = sext_ln1345_29_reg_16855;

assign mul_ln1345_305_fu_10989_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_306_fu_10998_p0 = sext_ln1345_30_reg_16865;

assign mul_ln1345_306_fu_10998_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_307_fu_11007_p0 = sext_ln1345_31_reg_16875;

assign mul_ln1345_307_fu_11007_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_308_fu_11016_p0 = sext_ln1345_32_reg_16885;

assign mul_ln1345_308_fu_11016_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_309_fu_11025_p0 = sext_ln1345_33_reg_16895;

assign mul_ln1345_309_fu_11025_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_30_fu_2620_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_310_fu_11034_p0 = sext_ln1345_34_reg_16905;

assign mul_ln1345_310_fu_11034_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_311_fu_11043_p0 = sext_ln1345_35_reg_16915;

assign mul_ln1345_311_fu_11043_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_312_fu_11128_p0 = sext_ln1345_36_reg_16925;

assign mul_ln1345_312_fu_11128_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_313_fu_11147_p0 = sext_ln1345_37_reg_16935;

assign mul_ln1345_313_fu_11147_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_314_fu_11156_p0 = sext_ln1345_38_reg_16945;

assign mul_ln1345_314_fu_11156_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_315_fu_11165_p0 = sext_ln1345_39_reg_16955;

assign mul_ln1345_315_fu_11165_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_316_fu_11174_p0 = sext_ln1345_40_reg_16965;

assign mul_ln1345_316_fu_11174_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_317_fu_11183_p0 = sext_ln1345_41_reg_16975;

assign mul_ln1345_317_fu_11183_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_318_fu_11192_p0 = sext_ln1345_42_reg_16985;

assign mul_ln1345_318_fu_11192_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_319_fu_11201_p0 = sext_ln1345_43_reg_16995;

assign mul_ln1345_319_fu_11201_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_31_fu_2640_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_320_fu_11210_p0 = sext_ln1345_44_reg_17005;

assign mul_ln1345_320_fu_11210_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_321_fu_11219_p0 = sext_ln1345_45_reg_17015;

assign mul_ln1345_321_fu_11219_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_322_fu_11228_p0 = sext_ln1345_46_reg_17025;

assign mul_ln1345_322_fu_11228_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_323_fu_11237_p0 = sext_ln1345_47_reg_17035;

assign mul_ln1345_323_fu_11237_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_324_fu_11322_p0 = sext_ln1345_48_reg_17045;

assign mul_ln1345_324_fu_11322_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_325_fu_11341_p0 = sext_ln1345_49_reg_17055;

assign mul_ln1345_325_fu_11341_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_326_fu_11350_p0 = sext_ln1345_50_reg_17065;

assign mul_ln1345_326_fu_11350_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_327_fu_11359_p0 = sext_ln1345_51_reg_17075;

assign mul_ln1345_327_fu_11359_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_328_fu_11368_p0 = sext_ln1345_52_reg_17085;

assign mul_ln1345_328_fu_11368_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_329_fu_11377_p0 = sext_ln1345_53_reg_17095;

assign mul_ln1345_329_fu_11377_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_32_fu_2660_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_330_fu_11386_p0 = sext_ln1345_54_reg_17105;

assign mul_ln1345_330_fu_11386_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_331_fu_11395_p0 = sext_ln1345_55_reg_17115;

assign mul_ln1345_331_fu_11395_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_332_fu_11404_p0 = sext_ln1345_56_reg_17125;

assign mul_ln1345_332_fu_11404_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_333_fu_11413_p0 = sext_ln1345_57_reg_17135;

assign mul_ln1345_333_fu_11413_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_334_fu_11422_p0 = sext_ln1345_58_reg_17145;

assign mul_ln1345_334_fu_11422_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_335_fu_11431_p0 = sext_ln1345_59_reg_17155;

assign mul_ln1345_335_fu_11431_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_336_fu_11516_p0 = sext_ln1345_60_reg_17165;

assign mul_ln1345_336_fu_11516_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_337_fu_11535_p0 = sext_ln1345_61_reg_17175;

assign mul_ln1345_337_fu_11535_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_338_fu_11544_p0 = sext_ln1345_62_reg_17185;

assign mul_ln1345_338_fu_11544_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_339_fu_11553_p0 = sext_ln1345_63_reg_17195;

assign mul_ln1345_339_fu_11553_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_33_fu_2680_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_340_fu_11562_p0 = sext_ln1345_64_reg_17205;

assign mul_ln1345_340_fu_11562_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_341_fu_11571_p0 = sext_ln1345_65_reg_17215;

assign mul_ln1345_341_fu_11571_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_342_fu_11580_p0 = sext_ln1345_66_reg_17225;

assign mul_ln1345_342_fu_11580_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_343_fu_11589_p0 = sext_ln1345_67_reg_17235;

assign mul_ln1345_343_fu_11589_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_344_fu_11598_p0 = sext_ln1345_68_reg_17245;

assign mul_ln1345_344_fu_11598_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_345_fu_11607_p0 = sext_ln1345_69_reg_17255;

assign mul_ln1345_345_fu_11607_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_346_fu_11616_p0 = sext_ln1345_70_reg_17265;

assign mul_ln1345_346_fu_11616_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_347_fu_11625_p0 = sext_ln1345_71_reg_17275;

assign mul_ln1345_347_fu_11625_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_348_fu_11710_p0 = sext_ln1345_72_reg_17285;

assign mul_ln1345_348_fu_11710_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_349_fu_11729_p0 = sext_ln1345_73_reg_17295;

assign mul_ln1345_349_fu_11729_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_34_fu_2700_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_350_fu_11738_p0 = sext_ln1345_74_reg_17305;

assign mul_ln1345_350_fu_11738_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_351_fu_11747_p0 = sext_ln1345_75_reg_17315;

assign mul_ln1345_351_fu_11747_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_352_fu_11756_p0 = sext_ln1345_76_reg_17325;

assign mul_ln1345_352_fu_11756_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_353_fu_11765_p0 = sext_ln1345_77_reg_17335;

assign mul_ln1345_353_fu_11765_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_354_fu_11774_p0 = sext_ln1345_78_reg_17345;

assign mul_ln1345_354_fu_11774_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_355_fu_11783_p0 = sext_ln1345_79_reg_17355;

assign mul_ln1345_355_fu_11783_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_356_fu_11792_p0 = sext_ln1345_80_reg_17365;

assign mul_ln1345_356_fu_11792_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_357_fu_11801_p0 = sext_ln1345_81_reg_17375;

assign mul_ln1345_357_fu_11801_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_358_fu_11810_p0 = sext_ln1345_82_reg_17385;

assign mul_ln1345_358_fu_11810_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_359_fu_11819_p0 = sext_ln1345_83_reg_17395;

assign mul_ln1345_359_fu_11819_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_35_fu_2720_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_360_fu_11904_p0 = sext_ln1345_84_reg_17405;

assign mul_ln1345_360_fu_11904_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_361_fu_11923_p0 = sext_ln1345_85_reg_17415;

assign mul_ln1345_361_fu_11923_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_362_fu_11932_p0 = sext_ln1345_86_reg_17425;

assign mul_ln1345_362_fu_11932_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_363_fu_11941_p0 = sext_ln1345_87_reg_17435;

assign mul_ln1345_363_fu_11941_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_364_fu_11950_p0 = sext_ln1345_88_reg_17445;

assign mul_ln1345_364_fu_11950_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_365_fu_11959_p0 = sext_ln1345_89_reg_17455;

assign mul_ln1345_365_fu_11959_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_366_fu_11968_p0 = sext_ln1345_90_reg_17465;

assign mul_ln1345_366_fu_11968_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_367_fu_11977_p0 = sext_ln1345_91_reg_17475;

assign mul_ln1345_367_fu_11977_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_368_fu_11986_p0 = sext_ln1345_92_reg_17485;

assign mul_ln1345_368_fu_11986_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_369_fu_11995_p0 = sext_ln1345_93_reg_17495;

assign mul_ln1345_369_fu_11995_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_36_fu_2740_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_370_fu_12004_p0 = sext_ln1345_94_reg_17505;

assign mul_ln1345_370_fu_12004_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_371_fu_12013_p0 = sext_ln1345_95_reg_17515;

assign mul_ln1345_371_fu_12013_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_372_fu_12098_p0 = sext_ln1345_96_reg_17525;

assign mul_ln1345_372_fu_12098_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_373_fu_12117_p0 = sext_ln1345_97_reg_17535;

assign mul_ln1345_373_fu_12117_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_374_fu_12126_p0 = sext_ln1345_98_reg_17545;

assign mul_ln1345_374_fu_12126_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_375_fu_12135_p0 = sext_ln1345_99_reg_17555;

assign mul_ln1345_375_fu_12135_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_376_fu_12144_p0 = sext_ln1345_100_reg_17565;

assign mul_ln1345_376_fu_12144_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_377_fu_12153_p0 = sext_ln1345_101_reg_17575;

assign mul_ln1345_377_fu_12153_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_378_fu_12162_p0 = sext_ln1345_102_reg_17585;

assign mul_ln1345_378_fu_12162_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_379_fu_12171_p0 = sext_ln1345_103_reg_17595;

assign mul_ln1345_379_fu_12171_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_37_fu_2760_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_380_fu_12180_p0 = sext_ln1345_104_reg_17605;

assign mul_ln1345_380_fu_12180_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_381_fu_12189_p0 = sext_ln1345_105_reg_17615;

assign mul_ln1345_381_fu_12189_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_382_fu_12198_p0 = sext_ln1345_106_reg_17625;

assign mul_ln1345_382_fu_12198_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_383_fu_12207_p0 = sext_ln1345_107_reg_17635;

assign mul_ln1345_383_fu_12207_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_384_fu_12292_p0 = sext_ln1345_108_reg_17645;

assign mul_ln1345_384_fu_12292_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_385_fu_12311_p0 = sext_ln1345_109_reg_17655;

assign mul_ln1345_385_fu_12311_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_386_fu_12320_p0 = sext_ln1345_110_reg_17665;

assign mul_ln1345_386_fu_12320_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_387_fu_12329_p0 = sext_ln1345_111_reg_17675;

assign mul_ln1345_387_fu_12329_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_388_fu_12338_p0 = sext_ln1345_112_reg_17685;

assign mul_ln1345_388_fu_12338_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_389_fu_12347_p0 = sext_ln1345_113_reg_17695;

assign mul_ln1345_389_fu_12347_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_38_fu_2780_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_390_fu_12356_p0 = sext_ln1345_114_reg_17705;

assign mul_ln1345_390_fu_12356_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_391_fu_12365_p0 = sext_ln1345_115_reg_17715;

assign mul_ln1345_391_fu_12365_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_392_fu_12374_p0 = sext_ln1345_116_reg_17725;

assign mul_ln1345_392_fu_12374_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_393_fu_12383_p0 = sext_ln1345_117_reg_17735;

assign mul_ln1345_393_fu_12383_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_394_fu_12392_p0 = sext_ln1345_118_reg_17745;

assign mul_ln1345_394_fu_12392_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_395_fu_12401_p0 = sext_ln1345_119_reg_17755;

assign mul_ln1345_395_fu_12401_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_396_fu_12486_p0 = sext_ln1345_120_reg_17765;

assign mul_ln1345_396_fu_12486_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_397_fu_12505_p0 = sext_ln1345_121_reg_17775;

assign mul_ln1345_397_fu_12505_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_398_fu_12514_p0 = sext_ln1345_122_reg_17785;

assign mul_ln1345_398_fu_12514_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_399_fu_12523_p0 = sext_ln1345_123_reg_17795;

assign mul_ln1345_399_fu_12523_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_39_fu_2800_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_3_fu_2048_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_400_fu_12532_p0 = sext_ln1345_124_reg_17805;

assign mul_ln1345_400_fu_12532_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_401_fu_12541_p0 = sext_ln1345_125_reg_17815;

assign mul_ln1345_401_fu_12541_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_402_fu_12550_p0 = sext_ln1345_126_reg_17825;

assign mul_ln1345_402_fu_12550_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_403_fu_12559_p0 = sext_ln1345_127_reg_17835;

assign mul_ln1345_403_fu_12559_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_404_fu_12568_p0 = sext_ln1345_128_reg_17845;

assign mul_ln1345_404_fu_12568_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_405_fu_12577_p0 = sext_ln1345_129_reg_17855;

assign mul_ln1345_405_fu_12577_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_406_fu_12586_p0 = sext_ln1345_130_reg_17865;

assign mul_ln1345_406_fu_12586_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_407_fu_12595_p0 = sext_ln1345_131_reg_17875;

assign mul_ln1345_407_fu_12595_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_408_fu_12680_p0 = sext_ln1345_132_reg_17885;

assign mul_ln1345_408_fu_12680_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_409_fu_12699_p0 = sext_ln1345_133_reg_17895;

assign mul_ln1345_409_fu_12699_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_40_fu_2820_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_410_fu_12708_p0 = sext_ln1345_134_reg_17905;

assign mul_ln1345_410_fu_12708_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_411_fu_12717_p0 = sext_ln1345_135_reg_17915;

assign mul_ln1345_411_fu_12717_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_412_fu_12726_p0 = sext_ln1345_136_reg_17925;

assign mul_ln1345_412_fu_12726_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_413_fu_12735_p0 = sext_ln1345_137_reg_17935;

assign mul_ln1345_413_fu_12735_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_414_fu_12744_p0 = sext_ln1345_138_reg_17945;

assign mul_ln1345_414_fu_12744_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_415_fu_12753_p0 = sext_ln1345_139_reg_17955;

assign mul_ln1345_415_fu_12753_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_416_fu_12762_p0 = sext_ln1345_140_reg_17965;

assign mul_ln1345_416_fu_12762_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_417_fu_12771_p0 = sext_ln1345_141_reg_17975;

assign mul_ln1345_417_fu_12771_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_418_fu_12780_p0 = sext_ln1345_142_reg_17985;

assign mul_ln1345_418_fu_12780_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_419_fu_12789_p0 = sext_ln1345_143_reg_17995;

assign mul_ln1345_419_fu_12789_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_41_fu_2840_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_420_fu_12874_p0 = sext_ln1345_144_reg_18005;

assign mul_ln1345_420_fu_12874_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_421_fu_12893_p0 = sext_ln1345_145_reg_18015;

assign mul_ln1345_421_fu_12893_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_422_fu_12902_p0 = sext_ln1345_146_reg_18025;

assign mul_ln1345_422_fu_12902_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_423_fu_12911_p0 = sext_ln1345_147_reg_18035;

assign mul_ln1345_423_fu_12911_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_424_fu_12920_p0 = sext_ln1345_148_reg_18045;

assign mul_ln1345_424_fu_12920_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_425_fu_12929_p0 = sext_ln1345_149_reg_18055;

assign mul_ln1345_425_fu_12929_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_426_fu_12938_p0 = sext_ln1345_150_reg_18065;

assign mul_ln1345_426_fu_12938_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_427_fu_12947_p0 = sext_ln1345_151_reg_18075;

assign mul_ln1345_427_fu_12947_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_428_fu_12956_p0 = sext_ln1345_152_reg_18085;

assign mul_ln1345_428_fu_12956_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_429_fu_12965_p0 = sext_ln1345_153_reg_18095;

assign mul_ln1345_429_fu_12965_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_42_fu_2860_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_430_fu_12974_p0 = sext_ln1345_154_reg_18105;

assign mul_ln1345_430_fu_12974_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_431_fu_12983_p0 = sext_ln1345_155_reg_18115;

assign mul_ln1345_431_fu_12983_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_432_fu_13068_p0 = sext_ln1345_156_reg_18125;

assign mul_ln1345_432_fu_13068_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_433_fu_13087_p0 = sext_ln1345_157_reg_18135;

assign mul_ln1345_433_fu_13087_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_434_fu_13096_p0 = sext_ln1345_158_reg_18145;

assign mul_ln1345_434_fu_13096_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_435_fu_13105_p0 = sext_ln1345_159_reg_18155;

assign mul_ln1345_435_fu_13105_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_436_fu_13114_p0 = sext_ln1345_160_reg_18165;

assign mul_ln1345_436_fu_13114_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_437_fu_13123_p0 = sext_ln1345_161_reg_18175;

assign mul_ln1345_437_fu_13123_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_438_fu_13132_p0 = sext_ln1345_162_reg_18185;

assign mul_ln1345_438_fu_13132_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_439_fu_13141_p0 = sext_ln1345_163_reg_18195;

assign mul_ln1345_439_fu_13141_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_43_fu_2880_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_440_fu_13150_p0 = sext_ln1345_164_reg_18205;

assign mul_ln1345_440_fu_13150_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_441_fu_13159_p0 = sext_ln1345_165_reg_18215;

assign mul_ln1345_441_fu_13159_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_442_fu_13168_p0 = sext_ln1345_166_reg_18225;

assign mul_ln1345_442_fu_13168_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_443_fu_13177_p0 = sext_ln1345_167_reg_18235;

assign mul_ln1345_443_fu_13177_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_444_fu_13262_p0 = sext_ln1345_168_reg_18245;

assign mul_ln1345_444_fu_13262_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_445_fu_13281_p0 = sext_ln1345_169_reg_18255;

assign mul_ln1345_445_fu_13281_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_446_fu_13290_p0 = sext_ln1345_170_reg_18265;

assign mul_ln1345_446_fu_13290_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_447_fu_13299_p0 = sext_ln1345_171_reg_18275;

assign mul_ln1345_447_fu_13299_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_448_fu_13308_p0 = sext_ln1345_172_reg_18285;

assign mul_ln1345_448_fu_13308_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_449_fu_13317_p0 = sext_ln1345_173_reg_18295;

assign mul_ln1345_449_fu_13317_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_44_fu_2900_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_450_fu_13326_p0 = sext_ln1345_174_reg_18305;

assign mul_ln1345_450_fu_13326_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_451_fu_13335_p0 = sext_ln1345_175_reg_18315;

assign mul_ln1345_451_fu_13335_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_452_fu_13344_p0 = sext_ln1345_176_reg_18325;

assign mul_ln1345_452_fu_13344_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_453_fu_13353_p0 = sext_ln1345_177_reg_18335;

assign mul_ln1345_453_fu_13353_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_454_fu_13362_p0 = sext_ln1345_178_reg_18345;

assign mul_ln1345_454_fu_13362_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_455_fu_13371_p0 = sext_ln1345_179_reg_18355;

assign mul_ln1345_455_fu_13371_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_456_fu_13456_p0 = sext_ln1345_180_reg_18365;

assign mul_ln1345_456_fu_13456_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_457_fu_13475_p0 = sext_ln1345_181_reg_18375;

assign mul_ln1345_457_fu_13475_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_458_fu_13484_p0 = sext_ln1345_182_reg_18385;

assign mul_ln1345_458_fu_13484_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_459_fu_13493_p0 = sext_ln1345_183_reg_18395;

assign mul_ln1345_459_fu_13493_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_45_fu_2920_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_460_fu_13502_p0 = sext_ln1345_184_reg_18405;

assign mul_ln1345_460_fu_13502_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_461_fu_13511_p0 = sext_ln1345_185_reg_18415;

assign mul_ln1345_461_fu_13511_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_462_fu_13520_p0 = sext_ln1345_186_reg_18425;

assign mul_ln1345_462_fu_13520_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_463_fu_13529_p0 = sext_ln1345_187_reg_18435;

assign mul_ln1345_463_fu_13529_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_464_fu_13538_p0 = sext_ln1345_188_reg_18445;

assign mul_ln1345_464_fu_13538_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_465_fu_13547_p0 = sext_ln1345_189_reg_18455;

assign mul_ln1345_465_fu_13547_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_466_fu_13556_p0 = sext_ln1345_190_reg_18465;

assign mul_ln1345_466_fu_13556_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_467_fu_13565_p0 = sext_ln1345_191_reg_18475;

assign mul_ln1345_467_fu_13565_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_468_fu_13650_p0 = sext_ln1345_192_reg_18485;

assign mul_ln1345_468_fu_13650_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_469_fu_13669_p0 = sext_ln1345_193_reg_18495;

assign mul_ln1345_469_fu_13669_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_46_fu_2940_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_470_fu_13678_p0 = sext_ln1345_194_reg_18505;

assign mul_ln1345_470_fu_13678_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_471_fu_13687_p0 = sext_ln1345_195_reg_18515;

assign mul_ln1345_471_fu_13687_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_472_fu_13696_p0 = sext_ln1345_196_reg_18525;

assign mul_ln1345_472_fu_13696_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_473_fu_13705_p0 = sext_ln1345_197_reg_18535;

assign mul_ln1345_473_fu_13705_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_474_fu_13714_p0 = sext_ln1345_198_reg_18545;

assign mul_ln1345_474_fu_13714_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_475_fu_13723_p0 = sext_ln1345_199_reg_18555;

assign mul_ln1345_475_fu_13723_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_476_fu_13732_p0 = sext_ln1345_200_reg_18565;

assign mul_ln1345_476_fu_13732_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_477_fu_13741_p0 = sext_ln1345_201_reg_18575;

assign mul_ln1345_477_fu_13741_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_478_fu_13750_p0 = sext_ln1345_202_reg_18585;

assign mul_ln1345_478_fu_13750_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_479_fu_13759_p0 = sext_ln1345_203_reg_18595;

assign mul_ln1345_479_fu_13759_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_47_fu_2960_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_480_fu_13844_p0 = sext_ln1345_204_reg_18605;

assign mul_ln1345_480_fu_13844_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_481_fu_13863_p0 = sext_ln1345_205_reg_18615;

assign mul_ln1345_481_fu_13863_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_482_fu_13872_p0 = sext_ln1345_206_reg_18625;

assign mul_ln1345_482_fu_13872_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_483_fu_13881_p0 = sext_ln1345_207_reg_18635;

assign mul_ln1345_483_fu_13881_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_484_fu_13890_p0 = sext_ln1345_208_reg_18645;

assign mul_ln1345_484_fu_13890_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_485_fu_13899_p0 = sext_ln1345_209_reg_18655;

assign mul_ln1345_485_fu_13899_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_486_fu_13908_p0 = sext_ln1345_210_reg_18665;

assign mul_ln1345_486_fu_13908_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_487_fu_13917_p0 = sext_ln1345_211_reg_18675;

assign mul_ln1345_487_fu_13917_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_488_fu_13926_p0 = sext_ln1345_212_reg_18685;

assign mul_ln1345_488_fu_13926_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_489_fu_13935_p0 = sext_ln1345_213_reg_18695;

assign mul_ln1345_489_fu_13935_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_48_fu_2980_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_490_fu_13944_p0 = sext_ln1345_214_reg_18705;

assign mul_ln1345_490_fu_13944_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_491_fu_13953_p0 = sext_ln1345_215_reg_18715;

assign mul_ln1345_491_fu_13953_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_492_fu_14038_p0 = sext_ln1345_216_reg_18725;

assign mul_ln1345_492_fu_14038_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_493_fu_14057_p0 = sext_ln1345_217_reg_18735;

assign mul_ln1345_493_fu_14057_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_494_fu_14066_p0 = sext_ln1345_218_reg_18745;

assign mul_ln1345_494_fu_14066_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_495_fu_14075_p0 = sext_ln1345_219_reg_18755;

assign mul_ln1345_495_fu_14075_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_496_fu_14084_p0 = sext_ln1345_220_reg_18765;

assign mul_ln1345_496_fu_14084_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_497_fu_14093_p0 = sext_ln1345_221_reg_18775;

assign mul_ln1345_497_fu_14093_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_498_fu_14102_p0 = sext_ln1345_222_reg_18785;

assign mul_ln1345_498_fu_14102_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_499_fu_14111_p0 = sext_ln1345_223_reg_18795;

assign mul_ln1345_499_fu_14111_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_49_fu_3000_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_4_fu_2072_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_500_fu_14120_p0 = sext_ln1345_224_reg_18805;

assign mul_ln1345_500_fu_14120_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_501_fu_14129_p0 = sext_ln1345_225_reg_18815;

assign mul_ln1345_501_fu_14129_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_502_fu_14138_p0 = sext_ln1345_226_reg_18825;

assign mul_ln1345_502_fu_14138_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_503_fu_14147_p0 = sext_ln1345_227_reg_18835;

assign mul_ln1345_503_fu_14147_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_504_fu_14232_p0 = sext_ln1345_228_reg_18845;

assign mul_ln1345_504_fu_14232_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_505_fu_14251_p0 = sext_ln1345_229_reg_18855;

assign mul_ln1345_505_fu_14251_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_506_fu_14260_p0 = sext_ln1345_230_reg_18865;

assign mul_ln1345_506_fu_14260_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_507_fu_14269_p0 = sext_ln1345_231_reg_18875;

assign mul_ln1345_507_fu_14269_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_508_fu_14278_p0 = sext_ln1345_232_reg_18885;

assign mul_ln1345_508_fu_14278_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_509_fu_14287_p0 = sext_ln1345_233_reg_18895;

assign mul_ln1345_509_fu_14287_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_50_fu_3020_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_510_fu_14296_p0 = sext_ln1345_234_reg_18905;

assign mul_ln1345_510_fu_14296_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_511_fu_14305_p0 = sext_ln1345_235_reg_18915;

assign mul_ln1345_511_fu_14305_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_512_fu_14314_p0 = sext_ln1345_236_reg_18925;

assign mul_ln1345_512_fu_14314_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_513_fu_14323_p0 = sext_ln1345_237_reg_18935;

assign mul_ln1345_513_fu_14323_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_514_fu_14332_p0 = sext_ln1345_238_reg_18945;

assign mul_ln1345_514_fu_14332_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_515_fu_14341_p0 = sext_ln1345_239_reg_18955;

assign mul_ln1345_515_fu_14341_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_516_fu_14426_p0 = sext_ln1345_240_reg_18965;

assign mul_ln1345_516_fu_14426_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_517_fu_14445_p0 = sext_ln1345_241_reg_18975;

assign mul_ln1345_517_fu_14445_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_518_fu_14454_p0 = sext_ln1345_242_reg_18985;

assign mul_ln1345_518_fu_14454_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_519_fu_14463_p0 = sext_ln1345_243_reg_18995;

assign mul_ln1345_519_fu_14463_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_51_fu_3040_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_520_fu_14472_p0 = sext_ln1345_244_reg_19005;

assign mul_ln1345_520_fu_14472_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_521_fu_14481_p0 = sext_ln1345_245_reg_19015;

assign mul_ln1345_521_fu_14481_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_522_fu_14490_p0 = sext_ln1345_246_reg_19025;

assign mul_ln1345_522_fu_14490_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_523_fu_14499_p0 = sext_ln1345_247_reg_19035;

assign mul_ln1345_523_fu_14499_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_524_fu_14508_p0 = sext_ln1345_248_reg_19045;

assign mul_ln1345_524_fu_14508_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_525_fu_14517_p0 = sext_ln1345_249_reg_19055;

assign mul_ln1345_525_fu_14517_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_526_fu_14526_p0 = sext_ln1345_250_reg_19065;

assign mul_ln1345_526_fu_14526_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_527_fu_14535_p0 = sext_ln1345_251_reg_19075;

assign mul_ln1345_527_fu_14535_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_528_fu_14620_p0 = sext_ln1345_252_reg_19085;

assign mul_ln1345_528_fu_14620_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_529_fu_14639_p0 = sext_ln1345_253_reg_19095;

assign mul_ln1345_529_fu_14639_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_52_fu_3060_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_530_fu_14648_p0 = sext_ln1345_254_reg_19105;

assign mul_ln1345_530_fu_14648_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_531_fu_14657_p0 = sext_ln1345_255_reg_19115;

assign mul_ln1345_531_fu_14657_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_532_fu_14666_p0 = sext_ln1345_256_reg_19125;

assign mul_ln1345_532_fu_14666_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_533_fu_14675_p0 = sext_ln1345_257_reg_19135;

assign mul_ln1345_533_fu_14675_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_534_fu_14684_p0 = sext_ln1345_258_reg_19145;

assign mul_ln1345_534_fu_14684_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_535_fu_14693_p0 = sext_ln1345_259_reg_19155;

assign mul_ln1345_535_fu_14693_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_536_fu_14702_p0 = sext_ln1345_260_reg_19165;

assign mul_ln1345_536_fu_14702_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_537_fu_14711_p0 = sext_ln1345_261_reg_19175;

assign mul_ln1345_537_fu_14711_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_538_fu_14720_p0 = sext_ln1345_262_reg_19185;

assign mul_ln1345_538_fu_14720_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_539_fu_14729_p0 = sext_ln1345_263_reg_19195;

assign mul_ln1345_539_fu_14729_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_53_fu_3080_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_540_fu_14814_p0 = sext_ln1345_264_reg_19205;

assign mul_ln1345_540_fu_14814_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_541_fu_14833_p0 = sext_ln1345_265_reg_19215;

assign mul_ln1345_541_fu_14833_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_542_fu_14842_p0 = sext_ln1345_266_reg_19225;

assign mul_ln1345_542_fu_14842_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_543_fu_14851_p0 = sext_ln1345_267_reg_19235;

assign mul_ln1345_543_fu_14851_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_544_fu_14860_p0 = sext_ln1345_268_reg_19245;

assign mul_ln1345_544_fu_14860_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_545_fu_14869_p0 = sext_ln1345_269_reg_19255;

assign mul_ln1345_545_fu_14869_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_546_fu_14878_p0 = sext_ln1345_270_reg_19265;

assign mul_ln1345_546_fu_14878_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_547_fu_14887_p0 = sext_ln1345_271_reg_19275;

assign mul_ln1345_547_fu_14887_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_548_fu_14896_p0 = sext_ln1345_272_reg_19285;

assign mul_ln1345_548_fu_14896_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_549_fu_14905_p0 = sext_ln1345_273_reg_19295;

assign mul_ln1345_549_fu_14905_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_54_fu_3100_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_550_fu_14914_p0 = sext_ln1345_274_reg_19305;

assign mul_ln1345_550_fu_14914_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_551_fu_14923_p0 = sext_ln1345_275_reg_19315;

assign mul_ln1345_551_fu_14923_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_552_fu_15008_p0 = sext_ln1345_276_reg_19325;

assign mul_ln1345_552_fu_15008_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_553_fu_15027_p0 = sext_ln1345_277_reg_19335;

assign mul_ln1345_553_fu_15027_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_554_fu_15036_p0 = sext_ln1345_278_reg_19345;

assign mul_ln1345_554_fu_15036_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_555_fu_15045_p0 = sext_ln1345_279_reg_19355;

assign mul_ln1345_555_fu_15045_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_556_fu_15054_p0 = sext_ln1345_280_reg_19365;

assign mul_ln1345_556_fu_15054_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_557_fu_15063_p0 = sext_ln1345_281_reg_19375;

assign mul_ln1345_557_fu_15063_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_558_fu_15072_p0 = sext_ln1345_282_reg_19385;

assign mul_ln1345_558_fu_15072_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_559_fu_15081_p0 = sext_ln1345_283_reg_19395;

assign mul_ln1345_559_fu_15081_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_55_fu_3120_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_560_fu_15090_p0 = sext_ln1345_284_reg_19405;

assign mul_ln1345_560_fu_15090_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_561_fu_15099_p0 = sext_ln1345_285_reg_19415;

assign mul_ln1345_561_fu_15099_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_562_fu_15108_p0 = sext_ln1345_286_reg_19425;

assign mul_ln1345_562_fu_15108_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_563_fu_15117_p0 = sext_ln1345_287_reg_19435;

assign mul_ln1345_563_fu_15117_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_564_fu_15202_p0 = sext_ln1345_288_reg_19445;

assign mul_ln1345_564_fu_15202_p1 = sext_ln1345_300_fu_10704_p1;

assign mul_ln1345_565_fu_15221_p0 = sext_ln1345_289_reg_19455;

assign mul_ln1345_565_fu_15221_p1 = sext_ln1345_301_fu_10726_p1;

assign mul_ln1345_566_fu_15230_p0 = sext_ln1345_290_reg_19465;

assign mul_ln1345_566_fu_15230_p1 = sext_ln1345_302_fu_10738_p1;

assign mul_ln1345_567_fu_15239_p0 = sext_ln1345_291_reg_19475;

assign mul_ln1345_567_fu_15239_p1 = sext_ln1345_303_fu_10750_p1;

assign mul_ln1345_568_fu_15248_p0 = sext_ln1345_292_reg_19485;

assign mul_ln1345_568_fu_15248_p1 = sext_ln1345_304_fu_10762_p1;

assign mul_ln1345_569_fu_15257_p0 = sext_ln1345_293_reg_19495;

assign mul_ln1345_569_fu_15257_p1 = sext_ln1345_305_fu_10774_p1;

assign mul_ln1345_56_fu_3140_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_570_fu_15266_p0 = sext_ln1345_294_reg_19505;

assign mul_ln1345_570_fu_15266_p1 = sext_ln1345_306_fu_10786_p1;

assign mul_ln1345_571_fu_15275_p0 = sext_ln1345_295_reg_19515;

assign mul_ln1345_571_fu_15275_p1 = sext_ln1345_307_fu_10798_p1;

assign mul_ln1345_572_fu_15284_p0 = sext_ln1345_296_reg_19525;

assign mul_ln1345_572_fu_15284_p1 = sext_ln1345_308_fu_10810_p1;

assign mul_ln1345_573_fu_15293_p0 = sext_ln1345_297_reg_19535;

assign mul_ln1345_573_fu_15293_p1 = sext_ln1345_309_fu_10822_p1;

assign mul_ln1345_574_fu_15302_p0 = sext_ln1345_298_reg_19545;

assign mul_ln1345_574_fu_15302_p1 = sext_ln1345_310_fu_10834_p1;

assign mul_ln1345_575_fu_15311_p0 = sext_ln1345_299_reg_19555;

assign mul_ln1345_575_fu_15311_p1 = sext_ln1345_311_fu_10846_p1;

assign mul_ln1345_57_fu_3160_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_58_fu_3180_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_59_fu_3200_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_5_fu_2096_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_60_fu_3220_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_61_fu_3240_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_62_fu_3260_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_63_fu_3280_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_64_fu_3300_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_65_fu_3320_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_66_fu_3340_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_67_fu_3360_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_68_fu_3380_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_69_fu_3400_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_6_fu_2120_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_70_fu_3420_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_71_fu_3440_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_72_fu_3460_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_73_fu_3480_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_74_fu_3500_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_75_fu_3520_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_76_fu_3540_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_77_fu_3560_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_78_fu_3580_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_79_fu_3600_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_7_fu_2144_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_80_fu_3620_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_81_fu_3640_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_82_fu_3660_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_83_fu_3680_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_84_fu_3700_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_85_fu_3720_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_86_fu_3740_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_87_fu_3760_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_88_fu_3780_p1 = sext_ln1345_8_fu_2064_p1;

assign mul_ln1345_89_fu_3800_p1 = sext_ln1345_10_fu_2088_p1;

assign mul_ln1345_8_fu_2168_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_90_fu_3820_p1 = sext_ln1345_12_fu_2112_p1;

assign mul_ln1345_91_fu_3840_p1 = sext_ln1345_14_fu_2136_p1;

assign mul_ln1345_92_fu_3860_p1 = sext_ln1345_16_fu_2160_p1;

assign mul_ln1345_93_fu_3880_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_94_fu_3900_p1 = sext_ln1345_20_fu_2208_p1;

assign mul_ln1345_95_fu_3920_p1 = sext_ln1345_22_fu_2232_p1;

assign mul_ln1345_96_fu_3940_p1 = sext_ln1345_fu_1968_p1;

assign mul_ln1345_97_fu_3960_p1 = sext_ln1345_2_fu_1992_p1;

assign mul_ln1345_98_fu_3980_p1 = sext_ln1345_4_fu_2016_p1;

assign mul_ln1345_99_fu_4000_p1 = sext_ln1345_6_fu_2040_p1;

assign mul_ln1345_9_fu_2192_p1 = sext_ln1345_18_fu_2184_p1;

assign mul_ln1345_fu_1976_p1 = sext_ln1345_fu_1968_p1;

assign or_ln121_fu_1619_p2 = (icmp_ln121_fu_1581_p2 | and_ln120_fu_1607_p2);

assign select_ln120_1_fu_1718_p3 = ((icmp_ln121_reg_16536[0:0] == 1'b1) ? mlp_inst_m1_bias_arr_V_load_1_reg_16522 : mlp_inst_m1_bias_arr_V_load_reg_16580);

assign select_ln120_2_fu_1656_p3 = ((icmp_ln121_reg_16536[0:0] == 1'b1) ? 5'd0 : trunc_ln215_1_fu_1652_p1);

assign select_ln120_fu_1587_p3 = ((icmp_ln121_fu_1581_p2[0:0] == 1'b1) ? 6'd0 : ap_phi_mux_cot_phi_fu_1551_p4);

assign select_ln121_1_fu_1663_p3 = ((and_ln120_reg_16548[0:0] == 1'b1) ? trunc_ln215_fu_1649_p1 : select_ln120_2_fu_1656_p3);

assign select_ln121_2_fu_1723_p3 = ((and_ln120_reg_16548[0:0] == 1'b1) ? mlp_inst_m1_bias_arr_V_q0 : select_ln120_1_fu_1718_p3);

assign select_ln121_3_fu_1678_p3 = ((and_ln120_reg_16548[0:0] == 1'b1) ? add_ln121_reg_16555 : select_ln120_reg_16543);

assign select_ln121_4_fu_1712_p3 = ((icmp_ln121_reg_16536[0:0] == 1'b1) ? 11'd1 : add_ln121_1_reg_16570);

assign select_ln121_fu_1625_p3 = ((or_ln121_fu_1619_p2[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_cit_phi_fu_1563_p4);

assign select_ln126_fu_7775_p3 = ((icmp_ln126_reg_16600[0:0] == 1'b1) ? vec_o_data_M_elems_V_fu_7769_p3 : vec_o_data_M_elems_V_2_fu_1472);

assign sext_ln1345_100_fu_3776_p1 = tmp_94_fu_3766_p4;

assign sext_ln1345_101_fu_3796_p1 = tmp_95_fu_3786_p4;

assign sext_ln1345_102_fu_3816_p1 = tmp_96_fu_3806_p4;

assign sext_ln1345_103_fu_3836_p1 = tmp_97_fu_3826_p4;

assign sext_ln1345_104_fu_3856_p1 = tmp_98_fu_3846_p4;

assign sext_ln1345_105_fu_3876_p1 = tmp_99_fu_3866_p4;

assign sext_ln1345_106_fu_3896_p1 = tmp_100_fu_3886_p4;

assign sext_ln1345_107_fu_3916_p1 = tmp_101_fu_3906_p4;

assign sext_ln1345_108_fu_3936_p1 = tmp_102_fu_3926_p4;

assign sext_ln1345_109_fu_3956_p1 = tmp_104_fu_3946_p4;

assign sext_ln1345_10_fu_2088_p1 = $signed(trunc_ln145_5_fu_1774_p4);

assign sext_ln1345_110_fu_3976_p1 = tmp_105_fu_3966_p4;

assign sext_ln1345_111_fu_3996_p1 = tmp_106_fu_3986_p4;

assign sext_ln1345_112_fu_4016_p1 = tmp_107_fu_4006_p4;

assign sext_ln1345_113_fu_4036_p1 = tmp_108_fu_4026_p4;

assign sext_ln1345_114_fu_4056_p1 = tmp_109_fu_4046_p4;

assign sext_ln1345_115_fu_4076_p1 = tmp_110_fu_4066_p4;

assign sext_ln1345_116_fu_4096_p1 = tmp_111_fu_4086_p4;

assign sext_ln1345_117_fu_4116_p1 = tmp_112_fu_4106_p4;

assign sext_ln1345_118_fu_4136_p1 = tmp_113_fu_4126_p4;

assign sext_ln1345_119_fu_4156_p1 = tmp_114_fu_4146_p4;

assign sext_ln1345_11_fu_2092_p1 = tmp_6_fu_2078_p4;

assign sext_ln1345_120_fu_4176_p1 = tmp_115_fu_4166_p4;

assign sext_ln1345_121_fu_4196_p1 = tmp_117_fu_4186_p4;

assign sext_ln1345_122_fu_4216_p1 = tmp_118_fu_4206_p4;

assign sext_ln1345_123_fu_4236_p1 = tmp_119_fu_4226_p4;

assign sext_ln1345_124_fu_4256_p1 = tmp_120_fu_4246_p4;

assign sext_ln1345_125_fu_4276_p1 = tmp_121_fu_4266_p4;

assign sext_ln1345_126_fu_4296_p1 = tmp_122_fu_4286_p4;

assign sext_ln1345_127_fu_4316_p1 = tmp_123_fu_4306_p4;

assign sext_ln1345_128_fu_4336_p1 = tmp_124_fu_4326_p4;

assign sext_ln1345_129_fu_4356_p1 = tmp_125_fu_4346_p4;

assign sext_ln1345_12_fu_2112_p1 = $signed(trunc_ln145_6_fu_1784_p4);

assign sext_ln1345_130_fu_4376_p1 = tmp_126_fu_4366_p4;

assign sext_ln1345_131_fu_4396_p1 = tmp_127_fu_4386_p4;

assign sext_ln1345_132_fu_4416_p1 = tmp_128_fu_4406_p4;

assign sext_ln1345_133_fu_4436_p1 = tmp_130_fu_4426_p4;

assign sext_ln1345_134_fu_4456_p1 = tmp_131_fu_4446_p4;

assign sext_ln1345_135_fu_4476_p1 = tmp_132_fu_4466_p4;

assign sext_ln1345_136_fu_4496_p1 = tmp_133_fu_4486_p4;

assign sext_ln1345_137_fu_4516_p1 = tmp_134_fu_4506_p4;

assign sext_ln1345_138_fu_4536_p1 = tmp_135_fu_4526_p4;

assign sext_ln1345_139_fu_4556_p1 = tmp_136_fu_4546_p4;

assign sext_ln1345_13_fu_2116_p1 = tmp_7_fu_2102_p4;

assign sext_ln1345_140_fu_4576_p1 = tmp_137_fu_4566_p4;

assign sext_ln1345_141_fu_4596_p1 = tmp_138_fu_4586_p4;

assign sext_ln1345_142_fu_4616_p1 = tmp_139_fu_4606_p4;

assign sext_ln1345_143_fu_4636_p1 = tmp_140_fu_4626_p4;

assign sext_ln1345_144_fu_4656_p1 = tmp_141_fu_4646_p4;

assign sext_ln1345_145_fu_4676_p1 = tmp_143_fu_4666_p4;

assign sext_ln1345_146_fu_4696_p1 = tmp_144_fu_4686_p4;

assign sext_ln1345_147_fu_4716_p1 = tmp_145_fu_4706_p4;

assign sext_ln1345_148_fu_4736_p1 = tmp_146_fu_4726_p4;

assign sext_ln1345_149_fu_4756_p1 = tmp_147_fu_4746_p4;

assign sext_ln1345_14_fu_2136_p1 = $signed(trunc_ln145_7_fu_1794_p4);

assign sext_ln1345_150_fu_4776_p1 = tmp_148_fu_4766_p4;

assign sext_ln1345_151_fu_4796_p1 = tmp_149_fu_4786_p4;

assign sext_ln1345_152_fu_4816_p1 = tmp_150_fu_4806_p4;

assign sext_ln1345_153_fu_4836_p1 = tmp_151_fu_4826_p4;

assign sext_ln1345_154_fu_4856_p1 = tmp_152_fu_4846_p4;

assign sext_ln1345_155_fu_4876_p1 = tmp_153_fu_4866_p4;

assign sext_ln1345_156_fu_4896_p1 = tmp_154_fu_4886_p4;

assign sext_ln1345_157_fu_4916_p1 = tmp_156_fu_4906_p4;

assign sext_ln1345_158_fu_4936_p1 = tmp_157_fu_4926_p4;

assign sext_ln1345_159_fu_4956_p1 = tmp_158_fu_4946_p4;

assign sext_ln1345_15_fu_2140_p1 = tmp_8_fu_2126_p4;

assign sext_ln1345_160_fu_4976_p1 = tmp_159_fu_4966_p4;

assign sext_ln1345_161_fu_4996_p1 = tmp_160_fu_4986_p4;

assign sext_ln1345_162_fu_5016_p1 = tmp_161_fu_5006_p4;

assign sext_ln1345_163_fu_5036_p1 = tmp_162_fu_5026_p4;

assign sext_ln1345_164_fu_5056_p1 = tmp_163_fu_5046_p4;

assign sext_ln1345_165_fu_5076_p1 = tmp_164_fu_5066_p4;

assign sext_ln1345_166_fu_5096_p1 = tmp_165_fu_5086_p4;

assign sext_ln1345_167_fu_5116_p1 = tmp_166_fu_5106_p4;

assign sext_ln1345_168_fu_5136_p1 = tmp_167_fu_5126_p4;

assign sext_ln1345_169_fu_5156_p1 = tmp_169_fu_5146_p4;

assign sext_ln1345_16_fu_2160_p1 = $signed(trunc_ln145_8_fu_1804_p4);

assign sext_ln1345_170_fu_5176_p1 = tmp_170_fu_5166_p4;

assign sext_ln1345_171_fu_5196_p1 = tmp_171_fu_5186_p4;

assign sext_ln1345_172_fu_5216_p1 = tmp_172_fu_5206_p4;

assign sext_ln1345_173_fu_5236_p1 = tmp_173_fu_5226_p4;

assign sext_ln1345_174_fu_5256_p1 = tmp_174_fu_5246_p4;

assign sext_ln1345_175_fu_5276_p1 = tmp_175_fu_5266_p4;

assign sext_ln1345_176_fu_5296_p1 = tmp_176_fu_5286_p4;

assign sext_ln1345_177_fu_5316_p1 = tmp_177_fu_5306_p4;

assign sext_ln1345_178_fu_5336_p1 = tmp_178_fu_5326_p4;

assign sext_ln1345_179_fu_5356_p1 = tmp_179_fu_5346_p4;

assign sext_ln1345_17_fu_2164_p1 = tmp_9_fu_2150_p4;

assign sext_ln1345_180_fu_5376_p1 = tmp_180_fu_5366_p4;

assign sext_ln1345_181_fu_5396_p1 = tmp_182_fu_5386_p4;

assign sext_ln1345_182_fu_5416_p1 = tmp_183_fu_5406_p4;

assign sext_ln1345_183_fu_5436_p1 = tmp_184_fu_5426_p4;

assign sext_ln1345_184_fu_5456_p1 = tmp_185_fu_5446_p4;

assign sext_ln1345_185_fu_5476_p1 = tmp_186_fu_5466_p4;

assign sext_ln1345_186_fu_5496_p1 = tmp_187_fu_5486_p4;

assign sext_ln1345_187_fu_5516_p1 = tmp_188_fu_5506_p4;

assign sext_ln1345_188_fu_5536_p1 = tmp_189_fu_5526_p4;

assign sext_ln1345_189_fu_5556_p1 = tmp_190_fu_5546_p4;

assign sext_ln1345_18_fu_2184_p1 = $signed(trunc_ln145_9_fu_1814_p4);

assign sext_ln1345_190_fu_5576_p1 = tmp_191_fu_5566_p4;

assign sext_ln1345_191_fu_5596_p1 = tmp_192_fu_5586_p4;

assign sext_ln1345_192_fu_5616_p1 = tmp_193_fu_5606_p4;

assign sext_ln1345_193_fu_5636_p1 = tmp_195_fu_5626_p4;

assign sext_ln1345_194_fu_5656_p1 = tmp_196_fu_5646_p4;

assign sext_ln1345_195_fu_5676_p1 = tmp_197_fu_5666_p4;

assign sext_ln1345_196_fu_5696_p1 = tmp_198_fu_5686_p4;

assign sext_ln1345_197_fu_5716_p1 = tmp_199_fu_5706_p4;

assign sext_ln1345_198_fu_5736_p1 = tmp_200_fu_5726_p4;

assign sext_ln1345_199_fu_5756_p1 = tmp_201_fu_5746_p4;

assign sext_ln1345_19_fu_2188_p1 = tmp_s_fu_2174_p4;

assign sext_ln1345_1_fu_1972_p1 = trunc_ln215_2_fu_1964_p1;

assign sext_ln1345_200_fu_5776_p1 = tmp_202_fu_5766_p4;

assign sext_ln1345_201_fu_5796_p1 = tmp_203_fu_5786_p4;

assign sext_ln1345_202_fu_5816_p1 = tmp_204_fu_5806_p4;

assign sext_ln1345_203_fu_5836_p1 = tmp_205_fu_5826_p4;

assign sext_ln1345_204_fu_5856_p1 = tmp_206_fu_5846_p4;

assign sext_ln1345_205_fu_5876_p1 = tmp_208_fu_5866_p4;

assign sext_ln1345_206_fu_5896_p1 = tmp_209_fu_5886_p4;

assign sext_ln1345_207_fu_5916_p1 = tmp_210_fu_5906_p4;

assign sext_ln1345_208_fu_5936_p1 = tmp_211_fu_5926_p4;

assign sext_ln1345_209_fu_5956_p1 = tmp_212_fu_5946_p4;

assign sext_ln1345_20_fu_2208_p1 = $signed(trunc_ln145_1_fu_1824_p4);

assign sext_ln1345_210_fu_5976_p1 = tmp_213_fu_5966_p4;

assign sext_ln1345_211_fu_5996_p1 = tmp_214_fu_5986_p4;

assign sext_ln1345_212_fu_6016_p1 = tmp_215_fu_6006_p4;

assign sext_ln1345_213_fu_6036_p1 = tmp_216_fu_6026_p4;

assign sext_ln1345_214_fu_6056_p1 = tmp_217_fu_6046_p4;

assign sext_ln1345_215_fu_6076_p1 = tmp_218_fu_6066_p4;

assign sext_ln1345_216_fu_6096_p1 = tmp_219_fu_6086_p4;

assign sext_ln1345_217_fu_6116_p1 = tmp_221_fu_6106_p4;

assign sext_ln1345_218_fu_6136_p1 = tmp_222_fu_6126_p4;

assign sext_ln1345_219_fu_6156_p1 = tmp_223_fu_6146_p4;

assign sext_ln1345_21_fu_2212_p1 = tmp_1_fu_2198_p4;

assign sext_ln1345_220_fu_6176_p1 = tmp_224_fu_6166_p4;

assign sext_ln1345_221_fu_6196_p1 = tmp_225_fu_6186_p4;

assign sext_ln1345_222_fu_6216_p1 = tmp_226_fu_6206_p4;

assign sext_ln1345_223_fu_6236_p1 = tmp_227_fu_6226_p4;

assign sext_ln1345_224_fu_6256_p1 = tmp_228_fu_6246_p4;

assign sext_ln1345_225_fu_6276_p1 = tmp_229_fu_6266_p4;

assign sext_ln1345_226_fu_6296_p1 = tmp_230_fu_6286_p4;

assign sext_ln1345_227_fu_6316_p1 = tmp_231_fu_6306_p4;

assign sext_ln1345_228_fu_6336_p1 = tmp_232_fu_6326_p4;

assign sext_ln1345_229_fu_6356_p1 = tmp_234_fu_6346_p4;

assign sext_ln1345_22_fu_2232_p1 = $signed(trunc_ln145_10_fu_1834_p4);

assign sext_ln1345_230_fu_6376_p1 = tmp_235_fu_6366_p4;

assign sext_ln1345_231_fu_6396_p1 = tmp_236_fu_6386_p4;

assign sext_ln1345_232_fu_6416_p1 = tmp_237_fu_6406_p4;

assign sext_ln1345_233_fu_6436_p1 = tmp_238_fu_6426_p4;

assign sext_ln1345_234_fu_6456_p1 = tmp_239_fu_6446_p4;

assign sext_ln1345_235_fu_6476_p1 = tmp_240_fu_6466_p4;

assign sext_ln1345_236_fu_6496_p1 = tmp_241_fu_6486_p4;

assign sext_ln1345_237_fu_6516_p1 = tmp_242_fu_6506_p4;

assign sext_ln1345_238_fu_6536_p1 = tmp_243_fu_6526_p4;

assign sext_ln1345_239_fu_6556_p1 = tmp_244_fu_6546_p4;

assign sext_ln1345_23_fu_2236_p1 = tmp_10_fu_2222_p4;

assign sext_ln1345_240_fu_6576_p1 = tmp_245_fu_6566_p4;

assign sext_ln1345_241_fu_6596_p1 = tmp_247_fu_6586_p4;

assign sext_ln1345_242_fu_6616_p1 = tmp_248_fu_6606_p4;

assign sext_ln1345_243_fu_6636_p1 = tmp_249_fu_6626_p4;

assign sext_ln1345_244_fu_6656_p1 = tmp_250_fu_6646_p4;

assign sext_ln1345_245_fu_6676_p1 = tmp_251_fu_6666_p4;

assign sext_ln1345_246_fu_6696_p1 = tmp_252_fu_6686_p4;

assign sext_ln1345_247_fu_6716_p1 = tmp_253_fu_6706_p4;

assign sext_ln1345_248_fu_6736_p1 = tmp_254_fu_6726_p4;

assign sext_ln1345_249_fu_6756_p1 = tmp_255_fu_6746_p4;

assign sext_ln1345_24_fu_2256_p1 = tmp_11_fu_2246_p4;

assign sext_ln1345_250_fu_6776_p1 = tmp_256_fu_6766_p4;

assign sext_ln1345_251_fu_6796_p1 = tmp_257_fu_6786_p4;

assign sext_ln1345_252_fu_6816_p1 = tmp_258_fu_6806_p4;

assign sext_ln1345_253_fu_6836_p1 = tmp_260_fu_6826_p4;

assign sext_ln1345_254_fu_6856_p1 = tmp_261_fu_6846_p4;

assign sext_ln1345_255_fu_6876_p1 = tmp_262_fu_6866_p4;

assign sext_ln1345_256_fu_6896_p1 = tmp_263_fu_6886_p4;

assign sext_ln1345_257_fu_6916_p1 = tmp_264_fu_6906_p4;

assign sext_ln1345_258_fu_6936_p1 = tmp_265_fu_6926_p4;

assign sext_ln1345_259_fu_6956_p1 = tmp_266_fu_6946_p4;

assign sext_ln1345_25_fu_2276_p1 = tmp_13_fu_2266_p4;

assign sext_ln1345_260_fu_6976_p1 = tmp_267_fu_6966_p4;

assign sext_ln1345_261_fu_6996_p1 = tmp_268_fu_6986_p4;

assign sext_ln1345_262_fu_7016_p1 = tmp_269_fu_7006_p4;

assign sext_ln1345_263_fu_7036_p1 = tmp_270_fu_7026_p4;

assign sext_ln1345_264_fu_7056_p1 = tmp_271_fu_7046_p4;

assign sext_ln1345_265_fu_7076_p1 = tmp_273_fu_7066_p4;

assign sext_ln1345_266_fu_7096_p1 = tmp_274_fu_7086_p4;

assign sext_ln1345_267_fu_7116_p1 = tmp_275_fu_7106_p4;

assign sext_ln1345_268_fu_7136_p1 = tmp_276_fu_7126_p4;

assign sext_ln1345_269_fu_7156_p1 = tmp_277_fu_7146_p4;

assign sext_ln1345_26_fu_2296_p1 = tmp_14_fu_2286_p4;

assign sext_ln1345_270_fu_7176_p1 = tmp_278_fu_7166_p4;

assign sext_ln1345_271_fu_7196_p1 = tmp_279_fu_7186_p4;

assign sext_ln1345_272_fu_7216_p1 = tmp_280_fu_7206_p4;

assign sext_ln1345_273_fu_7236_p1 = tmp_281_fu_7226_p4;

assign sext_ln1345_274_fu_7256_p1 = tmp_282_fu_7246_p4;

assign sext_ln1345_275_fu_7276_p1 = tmp_283_fu_7266_p4;

assign sext_ln1345_276_fu_7296_p1 = tmp_284_fu_7286_p4;

assign sext_ln1345_277_fu_7316_p1 = tmp_286_fu_7306_p4;

assign sext_ln1345_278_fu_7336_p1 = tmp_287_fu_7326_p4;

assign sext_ln1345_279_fu_7356_p1 = tmp_288_fu_7346_p4;

assign sext_ln1345_27_fu_2316_p1 = tmp_15_fu_2306_p4;

assign sext_ln1345_280_fu_7376_p1 = tmp_289_fu_7366_p4;

assign sext_ln1345_281_fu_7396_p1 = tmp_290_fu_7386_p4;

assign sext_ln1345_282_fu_7416_p1 = tmp_291_fu_7406_p4;

assign sext_ln1345_283_fu_7436_p1 = tmp_292_fu_7426_p4;

assign sext_ln1345_284_fu_7456_p1 = tmp_293_fu_7446_p4;

assign sext_ln1345_285_fu_7476_p1 = tmp_294_fu_7466_p4;

assign sext_ln1345_286_fu_7496_p1 = tmp_295_fu_7486_p4;

assign sext_ln1345_287_fu_7516_p1 = tmp_296_fu_7506_p4;

assign sext_ln1345_288_fu_7536_p1 = tmp_297_fu_7526_p4;

assign sext_ln1345_289_fu_7556_p1 = tmp_299_fu_7546_p4;

assign sext_ln1345_28_fu_2336_p1 = tmp_16_fu_2326_p4;

assign sext_ln1345_290_fu_7576_p1 = tmp_300_fu_7566_p4;

assign sext_ln1345_291_fu_7596_p1 = tmp_301_fu_7586_p4;

assign sext_ln1345_292_fu_7616_p1 = tmp_302_fu_7606_p4;

assign sext_ln1345_293_fu_7636_p1 = tmp_303_fu_7626_p4;

assign sext_ln1345_294_fu_7656_p1 = tmp_304_fu_7646_p4;

assign sext_ln1345_295_fu_7676_p1 = tmp_305_fu_7666_p4;

assign sext_ln1345_296_fu_7696_p1 = tmp_306_fu_7686_p4;

assign sext_ln1345_297_fu_7716_p1 = tmp_307_fu_7706_p4;

assign sext_ln1345_298_fu_7736_p1 = tmp_308_fu_7726_p4;

assign sext_ln1345_299_fu_7756_p1 = tmp_309_fu_7746_p4;

assign sext_ln1345_29_fu_2356_p1 = tmp_17_fu_2346_p4;

assign sext_ln1345_2_fu_1992_p1 = $signed(trunc_ln145_s_fu_1734_p4);

assign sext_ln1345_300_fu_10704_p1 = $signed(trunc_ln145_11_reg_16625);

assign sext_ln1345_301_fu_10726_p1 = $signed(trunc_ln145_12_reg_16630);

assign sext_ln1345_302_fu_10738_p1 = $signed(trunc_ln145_13_reg_16635);

assign sext_ln1345_303_fu_10750_p1 = $signed(trunc_ln145_14_reg_16640);

assign sext_ln1345_304_fu_10762_p1 = $signed(trunc_ln145_15_reg_16645);

assign sext_ln1345_305_fu_10774_p1 = $signed(trunc_ln145_16_reg_16650);

assign sext_ln1345_306_fu_10786_p1 = $signed(trunc_ln145_17_reg_16655);

assign sext_ln1345_307_fu_10798_p1 = $signed(trunc_ln145_18_reg_16660);

assign sext_ln1345_308_fu_10810_p1 = $signed(trunc_ln145_19_reg_16665);

assign sext_ln1345_309_fu_10822_p1 = $signed(trunc_ln145_20_reg_16670);

assign sext_ln1345_30_fu_2376_p1 = tmp_18_fu_2366_p4;

assign sext_ln1345_310_fu_10834_p1 = $signed(trunc_ln145_21_reg_16675);

assign sext_ln1345_311_fu_10846_p1 = $signed(trunc_ln145_22_reg_16680);

assign sext_ln1345_31_fu_2396_p1 = tmp_19_fu_2386_p4;

assign sext_ln1345_32_fu_2416_p1 = tmp_20_fu_2406_p4;

assign sext_ln1345_33_fu_2436_p1 = tmp_21_fu_2426_p4;

assign sext_ln1345_34_fu_2456_p1 = tmp_22_fu_2446_p4;

assign sext_ln1345_35_fu_2476_p1 = tmp_23_fu_2466_p4;

assign sext_ln1345_36_fu_2496_p1 = tmp_24_fu_2486_p4;

assign sext_ln1345_37_fu_2516_p1 = tmp_26_fu_2506_p4;

assign sext_ln1345_38_fu_2536_p1 = tmp_27_fu_2526_p4;

assign sext_ln1345_39_fu_2556_p1 = tmp_28_fu_2546_p4;

assign sext_ln1345_3_fu_1996_p1 = tmp_2_fu_1982_p4;

assign sext_ln1345_40_fu_2576_p1 = tmp_29_fu_2566_p4;

assign sext_ln1345_41_fu_2596_p1 = tmp_30_fu_2586_p4;

assign sext_ln1345_42_fu_2616_p1 = tmp_31_fu_2606_p4;

assign sext_ln1345_43_fu_2636_p1 = tmp_32_fu_2626_p4;

assign sext_ln1345_44_fu_2656_p1 = tmp_33_fu_2646_p4;

assign sext_ln1345_45_fu_2676_p1 = tmp_34_fu_2666_p4;

assign sext_ln1345_46_fu_2696_p1 = tmp_35_fu_2686_p4;

assign sext_ln1345_47_fu_2716_p1 = tmp_36_fu_2706_p4;

assign sext_ln1345_48_fu_2736_p1 = tmp_37_fu_2726_p4;

assign sext_ln1345_49_fu_2756_p1 = tmp_39_fu_2746_p4;

assign sext_ln1345_4_fu_2016_p1 = $signed(trunc_ln145_2_fu_1744_p4);

assign sext_ln1345_50_fu_2776_p1 = tmp_40_fu_2766_p4;

assign sext_ln1345_51_fu_2796_p1 = tmp_41_fu_2786_p4;

assign sext_ln1345_52_fu_2816_p1 = tmp_42_fu_2806_p4;

assign sext_ln1345_53_fu_2836_p1 = tmp_43_fu_2826_p4;

assign sext_ln1345_54_fu_2856_p1 = tmp_44_fu_2846_p4;

assign sext_ln1345_55_fu_2876_p1 = tmp_45_fu_2866_p4;

assign sext_ln1345_56_fu_2896_p1 = tmp_46_fu_2886_p4;

assign sext_ln1345_57_fu_2916_p1 = tmp_47_fu_2906_p4;

assign sext_ln1345_58_fu_2936_p1 = tmp_48_fu_2926_p4;

assign sext_ln1345_59_fu_2956_p1 = tmp_49_fu_2946_p4;

assign sext_ln1345_5_fu_2020_p1 = tmp_3_fu_2006_p4;

assign sext_ln1345_60_fu_2976_p1 = tmp_50_fu_2966_p4;

assign sext_ln1345_61_fu_2996_p1 = tmp_52_fu_2986_p4;

assign sext_ln1345_62_fu_3016_p1 = tmp_53_fu_3006_p4;

assign sext_ln1345_63_fu_3036_p1 = tmp_54_fu_3026_p4;

assign sext_ln1345_64_fu_3056_p1 = tmp_55_fu_3046_p4;

assign sext_ln1345_65_fu_3076_p1 = tmp_56_fu_3066_p4;

assign sext_ln1345_66_fu_3096_p1 = tmp_57_fu_3086_p4;

assign sext_ln1345_67_fu_3116_p1 = tmp_58_fu_3106_p4;

assign sext_ln1345_68_fu_3136_p1 = tmp_59_fu_3126_p4;

assign sext_ln1345_69_fu_3156_p1 = tmp_60_fu_3146_p4;

assign sext_ln1345_6_fu_2040_p1 = $signed(trunc_ln145_3_fu_1754_p4);

assign sext_ln1345_70_fu_3176_p1 = tmp_61_fu_3166_p4;

assign sext_ln1345_71_fu_3196_p1 = tmp_62_fu_3186_p4;

assign sext_ln1345_72_fu_3216_p1 = tmp_63_fu_3206_p4;

assign sext_ln1345_73_fu_3236_p1 = tmp_65_fu_3226_p4;

assign sext_ln1345_74_fu_3256_p1 = tmp_66_fu_3246_p4;

assign sext_ln1345_75_fu_3276_p1 = tmp_67_fu_3266_p4;

assign sext_ln1345_76_fu_3296_p1 = tmp_68_fu_3286_p4;

assign sext_ln1345_77_fu_3316_p1 = tmp_69_fu_3306_p4;

assign sext_ln1345_78_fu_3336_p1 = tmp_70_fu_3326_p4;

assign sext_ln1345_79_fu_3356_p1 = tmp_71_fu_3346_p4;

assign sext_ln1345_7_fu_2044_p1 = tmp_4_fu_2030_p4;

assign sext_ln1345_80_fu_3376_p1 = tmp_72_fu_3366_p4;

assign sext_ln1345_81_fu_3396_p1 = tmp_73_fu_3386_p4;

assign sext_ln1345_82_fu_3416_p1 = tmp_74_fu_3406_p4;

assign sext_ln1345_83_fu_3436_p1 = tmp_75_fu_3426_p4;

assign sext_ln1345_84_fu_3456_p1 = tmp_76_fu_3446_p4;

assign sext_ln1345_85_fu_3476_p1 = tmp_78_fu_3466_p4;

assign sext_ln1345_86_fu_3496_p1 = tmp_79_fu_3486_p4;

assign sext_ln1345_87_fu_3516_p1 = tmp_80_fu_3506_p4;

assign sext_ln1345_88_fu_3536_p1 = tmp_81_fu_3526_p4;

assign sext_ln1345_89_fu_3556_p1 = tmp_82_fu_3546_p4;

assign sext_ln1345_8_fu_2064_p1 = $signed(trunc_ln145_4_fu_1764_p4);

assign sext_ln1345_90_fu_3576_p1 = tmp_83_fu_3566_p4;

assign sext_ln1345_91_fu_3596_p1 = tmp_84_fu_3586_p4;

assign sext_ln1345_92_fu_3616_p1 = tmp_85_fu_3606_p4;

assign sext_ln1345_93_fu_3636_p1 = tmp_86_fu_3626_p4;

assign sext_ln1345_94_fu_3656_p1 = tmp_87_fu_3646_p4;

assign sext_ln1345_95_fu_3676_p1 = tmp_88_fu_3666_p4;

assign sext_ln1345_96_fu_3696_p1 = tmp_89_fu_3686_p4;

assign sext_ln1345_97_fu_3716_p1 = tmp_91_fu_3706_p4;

assign sext_ln1345_98_fu_3736_p1 = tmp_92_fu_3726_p4;

assign sext_ln1345_99_fu_3756_p1 = tmp_93_fu_3746_p4;

assign sext_ln1345_9_fu_2068_p1 = tmp_5_fu_2054_p4;

assign sext_ln1345_fu_1968_p1 = $signed(trunc_ln145_fu_1730_p1);

assign sext_ln151_100_fu_9009_p1 = mul_ln1345_121_reg_17900;

assign sext_ln151_101_fu_9012_p1 = mul_ln1345_122_reg_17910;

assign sext_ln151_102_fu_9015_p1 = mul_ln1345_123_reg_17920;

assign sext_ln151_103_fu_9018_p1 = mul_ln1345_124_reg_17930;

assign sext_ln151_104_fu_9021_p1 = mul_ln1345_125_reg_17940;

assign sext_ln151_105_fu_9024_p1 = mul_ln1345_126_reg_17950;

assign sext_ln151_106_fu_9027_p1 = mul_ln1345_127_reg_17960;

assign sext_ln151_107_fu_9030_p1 = mul_ln1345_128_reg_17970;

assign sext_ln151_108_fu_9033_p1 = mul_ln1345_129_reg_17980;

assign sext_ln151_109_fu_9036_p1 = mul_ln1345_130_reg_17990;

assign sext_ln151_10_fu_7911_p1 = mul_ln1345_13_reg_16820;

assign sext_ln151_110_fu_9131_p1 = mul_ln1345_133_reg_18020;

assign sext_ln151_111_fu_9134_p1 = mul_ln1345_134_reg_18030;

assign sext_ln151_112_fu_9137_p1 = mul_ln1345_135_reg_18040;

assign sext_ln151_113_fu_9140_p1 = mul_ln1345_136_reg_18050;

assign sext_ln151_114_fu_9143_p1 = mul_ln1345_137_reg_18060;

assign sext_ln151_115_fu_9146_p1 = mul_ln1345_138_reg_18070;

assign sext_ln151_116_fu_9149_p1 = mul_ln1345_139_reg_18080;

assign sext_ln151_117_fu_9152_p1 = mul_ln1345_140_reg_18090;

assign sext_ln151_118_fu_9155_p1 = mul_ln1345_141_reg_18100;

assign sext_ln151_119_fu_9158_p1 = mul_ln1345_142_reg_18110;

assign sext_ln151_11_fu_7914_p1 = mul_ln1345_14_reg_16830;

assign sext_ln151_120_fu_9253_p1 = mul_ln1345_145_reg_18140;

assign sext_ln151_121_fu_9256_p1 = mul_ln1345_146_reg_18150;

assign sext_ln151_122_fu_9259_p1 = mul_ln1345_147_reg_18160;

assign sext_ln151_123_fu_9262_p1 = mul_ln1345_148_reg_18170;

assign sext_ln151_124_fu_9265_p1 = mul_ln1345_149_reg_18180;

assign sext_ln151_125_fu_9268_p1 = mul_ln1345_150_reg_18190;

assign sext_ln151_126_fu_9271_p1 = mul_ln1345_151_reg_18200;

assign sext_ln151_127_fu_9274_p1 = mul_ln1345_152_reg_18210;

assign sext_ln151_128_fu_9277_p1 = mul_ln1345_153_reg_18220;

assign sext_ln151_129_fu_9280_p1 = mul_ln1345_154_reg_18230;

assign sext_ln151_12_fu_7917_p1 = mul_ln1345_15_reg_16840;

assign sext_ln151_130_fu_9375_p1 = mul_ln1345_157_reg_18260;

assign sext_ln151_131_fu_9378_p1 = mul_ln1345_158_reg_18270;

assign sext_ln151_132_fu_9381_p1 = mul_ln1345_159_reg_18280;

assign sext_ln151_133_fu_9384_p1 = mul_ln1345_160_reg_18290;

assign sext_ln151_134_fu_9387_p1 = mul_ln1345_161_reg_18300;

assign sext_ln151_135_fu_9390_p1 = mul_ln1345_162_reg_18310;

assign sext_ln151_136_fu_9393_p1 = mul_ln1345_163_reg_18320;

assign sext_ln151_137_fu_9396_p1 = mul_ln1345_164_reg_18330;

assign sext_ln151_138_fu_9399_p1 = mul_ln1345_165_reg_18340;

assign sext_ln151_139_fu_9402_p1 = mul_ln1345_166_reg_18350;

assign sext_ln151_13_fu_7920_p1 = mul_ln1345_16_reg_16850;

assign sext_ln151_140_fu_9497_p1 = mul_ln1345_169_reg_18380;

assign sext_ln151_141_fu_9500_p1 = mul_ln1345_170_reg_18390;

assign sext_ln151_142_fu_9503_p1 = mul_ln1345_171_reg_18400;

assign sext_ln151_143_fu_9506_p1 = mul_ln1345_172_reg_18410;

assign sext_ln151_144_fu_9509_p1 = mul_ln1345_173_reg_18420;

assign sext_ln151_145_fu_9512_p1 = mul_ln1345_174_reg_18430;

assign sext_ln151_146_fu_9515_p1 = mul_ln1345_175_reg_18440;

assign sext_ln151_147_fu_9518_p1 = mul_ln1345_176_reg_18450;

assign sext_ln151_148_fu_9521_p1 = mul_ln1345_177_reg_18460;

assign sext_ln151_149_fu_9524_p1 = mul_ln1345_178_reg_18470;

assign sext_ln151_14_fu_7923_p1 = mul_ln1345_17_reg_16860;

assign sext_ln151_150_fu_9619_p1 = mul_ln1345_181_reg_18500;

assign sext_ln151_151_fu_9622_p1 = mul_ln1345_182_reg_18510;

assign sext_ln151_152_fu_9625_p1 = mul_ln1345_183_reg_18520;

assign sext_ln151_153_fu_9628_p1 = mul_ln1345_184_reg_18530;

assign sext_ln151_154_fu_9631_p1 = mul_ln1345_185_reg_18540;

assign sext_ln151_155_fu_9634_p1 = mul_ln1345_186_reg_18550;

assign sext_ln151_156_fu_9637_p1 = mul_ln1345_187_reg_18560;

assign sext_ln151_157_fu_9640_p1 = mul_ln1345_188_reg_18570;

assign sext_ln151_158_fu_9643_p1 = mul_ln1345_189_reg_18580;

assign sext_ln151_159_fu_9646_p1 = mul_ln1345_190_reg_18590;

assign sext_ln151_15_fu_7926_p1 = mul_ln1345_18_reg_16870;

assign sext_ln151_160_fu_9741_p1 = mul_ln1345_193_reg_18620;

assign sext_ln151_161_fu_9744_p1 = mul_ln1345_194_reg_18630;

assign sext_ln151_162_fu_9747_p1 = mul_ln1345_195_reg_18640;

assign sext_ln151_163_fu_9750_p1 = mul_ln1345_196_reg_18650;

assign sext_ln151_164_fu_9753_p1 = mul_ln1345_197_reg_18660;

assign sext_ln151_165_fu_9756_p1 = mul_ln1345_198_reg_18670;

assign sext_ln151_166_fu_9759_p1 = mul_ln1345_199_reg_18680;

assign sext_ln151_167_fu_9762_p1 = mul_ln1345_200_reg_18690;

assign sext_ln151_168_fu_9765_p1 = mul_ln1345_201_reg_18700;

assign sext_ln151_169_fu_9768_p1 = mul_ln1345_202_reg_18710;

assign sext_ln151_16_fu_7929_p1 = mul_ln1345_19_reg_16880;

assign sext_ln151_170_fu_9863_p1 = mul_ln1345_205_reg_18740;

assign sext_ln151_171_fu_9866_p1 = mul_ln1345_206_reg_18750;

assign sext_ln151_172_fu_9869_p1 = mul_ln1345_207_reg_18760;

assign sext_ln151_173_fu_9872_p1 = mul_ln1345_208_reg_18770;

assign sext_ln151_174_fu_9875_p1 = mul_ln1345_209_reg_18780;

assign sext_ln151_175_fu_9878_p1 = mul_ln1345_210_reg_18790;

assign sext_ln151_176_fu_9881_p1 = mul_ln1345_211_reg_18800;

assign sext_ln151_177_fu_9884_p1 = mul_ln1345_212_reg_18810;

assign sext_ln151_178_fu_9887_p1 = mul_ln1345_213_reg_18820;

assign sext_ln151_179_fu_9890_p1 = mul_ln1345_214_reg_18830;

assign sext_ln151_17_fu_7932_p1 = mul_ln1345_20_reg_16890;

assign sext_ln151_180_fu_9985_p1 = mul_ln1345_217_reg_18860;

assign sext_ln151_181_fu_9988_p1 = mul_ln1345_218_reg_18870;

assign sext_ln151_182_fu_9991_p1 = mul_ln1345_219_reg_18880;

assign sext_ln151_183_fu_9994_p1 = mul_ln1345_220_reg_18890;

assign sext_ln151_184_fu_9997_p1 = mul_ln1345_221_reg_18900;

assign sext_ln151_185_fu_10000_p1 = mul_ln1345_222_reg_18910;

assign sext_ln151_186_fu_10003_p1 = mul_ln1345_223_reg_18920;

assign sext_ln151_187_fu_10006_p1 = mul_ln1345_224_reg_18930;

assign sext_ln151_188_fu_10009_p1 = mul_ln1345_225_reg_18940;

assign sext_ln151_189_fu_10012_p1 = mul_ln1345_226_reg_18950;

assign sext_ln151_18_fu_7935_p1 = mul_ln1345_21_reg_16900;

assign sext_ln151_190_fu_10107_p1 = mul_ln1345_229_reg_18980;

assign sext_ln151_191_fu_10110_p1 = mul_ln1345_230_reg_18990;

assign sext_ln151_192_fu_10113_p1 = mul_ln1345_231_reg_19000;

assign sext_ln151_193_fu_10116_p1 = mul_ln1345_232_reg_19010;

assign sext_ln151_194_fu_10119_p1 = mul_ln1345_233_reg_19020;

assign sext_ln151_195_fu_10122_p1 = mul_ln1345_234_reg_19030;

assign sext_ln151_196_fu_10125_p1 = mul_ln1345_235_reg_19040;

assign sext_ln151_197_fu_10128_p1 = mul_ln1345_236_reg_19050;

assign sext_ln151_198_fu_10131_p1 = mul_ln1345_237_reg_19060;

assign sext_ln151_199_fu_10134_p1 = mul_ln1345_238_reg_19070;

assign sext_ln151_19_fu_7938_p1 = mul_ln1345_22_reg_16910;

assign sext_ln151_1_fu_7792_p1 = mul_ln1345_2_reg_16710;

assign sext_ln151_200_fu_10229_p1 = mul_ln1345_241_reg_19100;

assign sext_ln151_201_fu_10232_p1 = mul_ln1345_242_reg_19110;

assign sext_ln151_202_fu_10235_p1 = mul_ln1345_243_reg_19120;

assign sext_ln151_203_fu_10238_p1 = mul_ln1345_244_reg_19130;

assign sext_ln151_204_fu_10241_p1 = mul_ln1345_245_reg_19140;

assign sext_ln151_205_fu_10244_p1 = mul_ln1345_246_reg_19150;

assign sext_ln151_206_fu_10247_p1 = mul_ln1345_247_reg_19160;

assign sext_ln151_207_fu_10250_p1 = mul_ln1345_248_reg_19170;

assign sext_ln151_208_fu_10253_p1 = mul_ln1345_249_reg_19180;

assign sext_ln151_209_fu_10256_p1 = mul_ln1345_250_reg_19190;

assign sext_ln151_20_fu_8033_p1 = mul_ln1345_25_reg_16940;

assign sext_ln151_210_fu_10351_p1 = mul_ln1345_253_reg_19220;

assign sext_ln151_211_fu_10354_p1 = mul_ln1345_254_reg_19230;

assign sext_ln151_212_fu_10357_p1 = mul_ln1345_255_reg_19240;

assign sext_ln151_213_fu_10360_p1 = mul_ln1345_256_reg_19250;

assign sext_ln151_214_fu_10363_p1 = mul_ln1345_257_reg_19260;

assign sext_ln151_215_fu_10366_p1 = mul_ln1345_258_reg_19270;

assign sext_ln151_216_fu_10369_p1 = mul_ln1345_259_reg_19280;

assign sext_ln151_217_fu_10372_p1 = mul_ln1345_260_reg_19290;

assign sext_ln151_218_fu_10375_p1 = mul_ln1345_261_reg_19300;

assign sext_ln151_219_fu_10378_p1 = mul_ln1345_262_reg_19310;

assign sext_ln151_21_fu_8036_p1 = mul_ln1345_26_reg_16950;

assign sext_ln151_220_fu_10473_p1 = mul_ln1345_265_reg_19340;

assign sext_ln151_221_fu_10476_p1 = mul_ln1345_266_reg_19350;

assign sext_ln151_222_fu_10479_p1 = mul_ln1345_267_reg_19360;

assign sext_ln151_223_fu_10482_p1 = mul_ln1345_268_reg_19370;

assign sext_ln151_224_fu_10485_p1 = mul_ln1345_269_reg_19380;

assign sext_ln151_225_fu_10488_p1 = mul_ln1345_270_reg_19390;

assign sext_ln151_226_fu_10491_p1 = mul_ln1345_271_reg_19400;

assign sext_ln151_227_fu_10494_p1 = mul_ln1345_272_reg_19410;

assign sext_ln151_228_fu_10497_p1 = mul_ln1345_273_reg_19420;

assign sext_ln151_229_fu_10500_p1 = mul_ln1345_274_reg_19430;

assign sext_ln151_22_fu_8039_p1 = mul_ln1345_27_reg_16960;

assign sext_ln151_230_fu_10595_p1 = mul_ln1345_277_reg_19460;

assign sext_ln151_231_fu_10598_p1 = mul_ln1345_278_reg_19470;

assign sext_ln151_232_fu_10601_p1 = mul_ln1345_279_reg_19480;

assign sext_ln151_233_fu_10604_p1 = mul_ln1345_280_reg_19490;

assign sext_ln151_234_fu_10607_p1 = mul_ln1345_281_reg_19500;

assign sext_ln151_235_fu_10610_p1 = mul_ln1345_282_reg_19510;

assign sext_ln151_236_fu_10613_p1 = mul_ln1345_283_reg_19520;

assign sext_ln151_237_fu_10616_p1 = mul_ln1345_284_reg_19530;

assign sext_ln151_238_fu_10619_p1 = mul_ln1345_285_reg_19540;

assign sext_ln151_239_fu_10622_p1 = mul_ln1345_286_reg_19550;

assign sext_ln151_23_fu_8042_p1 = mul_ln1345_28_reg_16970;

assign sext_ln151_240_fu_10734_p1 = mul_ln1345_289_fu_10729_p2;

assign sext_ln151_241_fu_10746_p1 = mul_ln1345_290_fu_10741_p2;

assign sext_ln151_242_fu_10758_p1 = mul_ln1345_291_fu_10753_p2;

assign sext_ln151_243_fu_10770_p1 = mul_ln1345_292_fu_10765_p2;

assign sext_ln151_244_fu_10782_p1 = mul_ln1345_293_fu_10777_p2;

assign sext_ln151_245_fu_10794_p1 = mul_ln1345_294_fu_10789_p2;

assign sext_ln151_246_fu_10806_p1 = mul_ln1345_295_fu_10801_p2;

assign sext_ln151_247_fu_10818_p1 = mul_ln1345_296_fu_10813_p2;

assign sext_ln151_248_fu_10830_p1 = mul_ln1345_297_fu_10825_p2;

assign sext_ln151_249_fu_10842_p1 = mul_ln1345_298_fu_10837_p2;

assign sext_ln151_24_fu_8045_p1 = mul_ln1345_29_reg_16980;

assign sext_ln151_250_fu_10958_p1 = mul_ln1345_301_fu_10953_p2;

assign sext_ln151_251_fu_10967_p1 = mul_ln1345_302_fu_10962_p2;

assign sext_ln151_252_fu_10976_p1 = mul_ln1345_303_fu_10971_p2;

assign sext_ln151_253_fu_10985_p1 = mul_ln1345_304_fu_10980_p2;

assign sext_ln151_254_fu_10994_p1 = mul_ln1345_305_fu_10989_p2;

assign sext_ln151_255_fu_11003_p1 = mul_ln1345_306_fu_10998_p2;

assign sext_ln151_256_fu_11012_p1 = mul_ln1345_307_fu_11007_p2;

assign sext_ln151_257_fu_11021_p1 = mul_ln1345_308_fu_11016_p2;

assign sext_ln151_258_fu_11030_p1 = mul_ln1345_309_fu_11025_p2;

assign sext_ln151_259_fu_11039_p1 = mul_ln1345_310_fu_11034_p2;

assign sext_ln151_25_fu_8048_p1 = mul_ln1345_30_reg_16990;

assign sext_ln151_260_fu_11152_p1 = mul_ln1345_313_fu_11147_p2;

assign sext_ln151_261_fu_11161_p1 = mul_ln1345_314_fu_11156_p2;

assign sext_ln151_262_fu_11170_p1 = mul_ln1345_315_fu_11165_p2;

assign sext_ln151_263_fu_11179_p1 = mul_ln1345_316_fu_11174_p2;

assign sext_ln151_264_fu_11188_p1 = mul_ln1345_317_fu_11183_p2;

assign sext_ln151_265_fu_11197_p1 = mul_ln1345_318_fu_11192_p2;

assign sext_ln151_266_fu_11206_p1 = mul_ln1345_319_fu_11201_p2;

assign sext_ln151_267_fu_11215_p1 = mul_ln1345_320_fu_11210_p2;

assign sext_ln151_268_fu_11224_p1 = mul_ln1345_321_fu_11219_p2;

assign sext_ln151_269_fu_11233_p1 = mul_ln1345_322_fu_11228_p2;

assign sext_ln151_26_fu_8051_p1 = mul_ln1345_31_reg_17000;

assign sext_ln151_270_fu_11346_p1 = mul_ln1345_325_fu_11341_p2;

assign sext_ln151_271_fu_11355_p1 = mul_ln1345_326_fu_11350_p2;

assign sext_ln151_272_fu_11364_p1 = mul_ln1345_327_fu_11359_p2;

assign sext_ln151_273_fu_11373_p1 = mul_ln1345_328_fu_11368_p2;

assign sext_ln151_274_fu_11382_p1 = mul_ln1345_329_fu_11377_p2;

assign sext_ln151_275_fu_11391_p1 = mul_ln1345_330_fu_11386_p2;

assign sext_ln151_276_fu_11400_p1 = mul_ln1345_331_fu_11395_p2;

assign sext_ln151_277_fu_11409_p1 = mul_ln1345_332_fu_11404_p2;

assign sext_ln151_278_fu_11418_p1 = mul_ln1345_333_fu_11413_p2;

assign sext_ln151_279_fu_11427_p1 = mul_ln1345_334_fu_11422_p2;

assign sext_ln151_27_fu_8054_p1 = mul_ln1345_32_reg_17010;

assign sext_ln151_280_fu_11540_p1 = mul_ln1345_337_fu_11535_p2;

assign sext_ln151_281_fu_11549_p1 = mul_ln1345_338_fu_11544_p2;

assign sext_ln151_282_fu_11558_p1 = mul_ln1345_339_fu_11553_p2;

assign sext_ln151_283_fu_11567_p1 = mul_ln1345_340_fu_11562_p2;

assign sext_ln151_284_fu_11576_p1 = mul_ln1345_341_fu_11571_p2;

assign sext_ln151_285_fu_11585_p1 = mul_ln1345_342_fu_11580_p2;

assign sext_ln151_286_fu_11594_p1 = mul_ln1345_343_fu_11589_p2;

assign sext_ln151_287_fu_11603_p1 = mul_ln1345_344_fu_11598_p2;

assign sext_ln151_288_fu_11612_p1 = mul_ln1345_345_fu_11607_p2;

assign sext_ln151_289_fu_11621_p1 = mul_ln1345_346_fu_11616_p2;

assign sext_ln151_28_fu_8057_p1 = mul_ln1345_33_reg_17020;

assign sext_ln151_290_fu_11734_p1 = mul_ln1345_349_fu_11729_p2;

assign sext_ln151_291_fu_11743_p1 = mul_ln1345_350_fu_11738_p2;

assign sext_ln151_292_fu_11752_p1 = mul_ln1345_351_fu_11747_p2;

assign sext_ln151_293_fu_11761_p1 = mul_ln1345_352_fu_11756_p2;

assign sext_ln151_294_fu_11770_p1 = mul_ln1345_353_fu_11765_p2;

assign sext_ln151_295_fu_11779_p1 = mul_ln1345_354_fu_11774_p2;

assign sext_ln151_296_fu_11788_p1 = mul_ln1345_355_fu_11783_p2;

assign sext_ln151_297_fu_11797_p1 = mul_ln1345_356_fu_11792_p2;

assign sext_ln151_298_fu_11806_p1 = mul_ln1345_357_fu_11801_p2;

assign sext_ln151_299_fu_11815_p1 = mul_ln1345_358_fu_11810_p2;

assign sext_ln151_29_fu_8060_p1 = mul_ln1345_34_reg_17030;

assign sext_ln151_2_fu_7795_p1 = mul_ln1345_3_reg_16720;

assign sext_ln151_300_fu_11928_p1 = mul_ln1345_361_fu_11923_p2;

assign sext_ln151_301_fu_11937_p1 = mul_ln1345_362_fu_11932_p2;

assign sext_ln151_302_fu_11946_p1 = mul_ln1345_363_fu_11941_p2;

assign sext_ln151_303_fu_11955_p1 = mul_ln1345_364_fu_11950_p2;

assign sext_ln151_304_fu_11964_p1 = mul_ln1345_365_fu_11959_p2;

assign sext_ln151_305_fu_11973_p1 = mul_ln1345_366_fu_11968_p2;

assign sext_ln151_306_fu_11982_p1 = mul_ln1345_367_fu_11977_p2;

assign sext_ln151_307_fu_11991_p1 = mul_ln1345_368_fu_11986_p2;

assign sext_ln151_308_fu_12000_p1 = mul_ln1345_369_fu_11995_p2;

assign sext_ln151_309_fu_12009_p1 = mul_ln1345_370_fu_12004_p2;

assign sext_ln151_30_fu_8155_p1 = mul_ln1345_37_reg_17060;

assign sext_ln151_310_fu_12122_p1 = mul_ln1345_373_fu_12117_p2;

assign sext_ln151_311_fu_12131_p1 = mul_ln1345_374_fu_12126_p2;

assign sext_ln151_312_fu_12140_p1 = mul_ln1345_375_fu_12135_p2;

assign sext_ln151_313_fu_12149_p1 = mul_ln1345_376_fu_12144_p2;

assign sext_ln151_314_fu_12158_p1 = mul_ln1345_377_fu_12153_p2;

assign sext_ln151_315_fu_12167_p1 = mul_ln1345_378_fu_12162_p2;

assign sext_ln151_316_fu_12176_p1 = mul_ln1345_379_fu_12171_p2;

assign sext_ln151_317_fu_12185_p1 = mul_ln1345_380_fu_12180_p2;

assign sext_ln151_318_fu_12194_p1 = mul_ln1345_381_fu_12189_p2;

assign sext_ln151_319_fu_12203_p1 = mul_ln1345_382_fu_12198_p2;

assign sext_ln151_31_fu_8158_p1 = mul_ln1345_38_reg_17070;

assign sext_ln151_320_fu_12316_p1 = mul_ln1345_385_fu_12311_p2;

assign sext_ln151_321_fu_12325_p1 = mul_ln1345_386_fu_12320_p2;

assign sext_ln151_322_fu_12334_p1 = mul_ln1345_387_fu_12329_p2;

assign sext_ln151_323_fu_12343_p1 = mul_ln1345_388_fu_12338_p2;

assign sext_ln151_324_fu_12352_p1 = mul_ln1345_389_fu_12347_p2;

assign sext_ln151_325_fu_12361_p1 = mul_ln1345_390_fu_12356_p2;

assign sext_ln151_326_fu_12370_p1 = mul_ln1345_391_fu_12365_p2;

assign sext_ln151_327_fu_12379_p1 = mul_ln1345_392_fu_12374_p2;

assign sext_ln151_328_fu_12388_p1 = mul_ln1345_393_fu_12383_p2;

assign sext_ln151_329_fu_12397_p1 = mul_ln1345_394_fu_12392_p2;

assign sext_ln151_32_fu_8161_p1 = mul_ln1345_39_reg_17080;

assign sext_ln151_330_fu_12510_p1 = mul_ln1345_397_fu_12505_p2;

assign sext_ln151_331_fu_12519_p1 = mul_ln1345_398_fu_12514_p2;

assign sext_ln151_332_fu_12528_p1 = mul_ln1345_399_fu_12523_p2;

assign sext_ln151_333_fu_12537_p1 = mul_ln1345_400_fu_12532_p2;

assign sext_ln151_334_fu_12546_p1 = mul_ln1345_401_fu_12541_p2;

assign sext_ln151_335_fu_12555_p1 = mul_ln1345_402_fu_12550_p2;

assign sext_ln151_336_fu_12564_p1 = mul_ln1345_403_fu_12559_p2;

assign sext_ln151_337_fu_12573_p1 = mul_ln1345_404_fu_12568_p2;

assign sext_ln151_338_fu_12582_p1 = mul_ln1345_405_fu_12577_p2;

assign sext_ln151_339_fu_12591_p1 = mul_ln1345_406_fu_12586_p2;

assign sext_ln151_33_fu_8164_p1 = mul_ln1345_40_reg_17090;

assign sext_ln151_340_fu_12704_p1 = mul_ln1345_409_fu_12699_p2;

assign sext_ln151_341_fu_12713_p1 = mul_ln1345_410_fu_12708_p2;

assign sext_ln151_342_fu_12722_p1 = mul_ln1345_411_fu_12717_p2;

assign sext_ln151_343_fu_12731_p1 = mul_ln1345_412_fu_12726_p2;

assign sext_ln151_344_fu_12740_p1 = mul_ln1345_413_fu_12735_p2;

assign sext_ln151_345_fu_12749_p1 = mul_ln1345_414_fu_12744_p2;

assign sext_ln151_346_fu_12758_p1 = mul_ln1345_415_fu_12753_p2;

assign sext_ln151_347_fu_12767_p1 = mul_ln1345_416_fu_12762_p2;

assign sext_ln151_348_fu_12776_p1 = mul_ln1345_417_fu_12771_p2;

assign sext_ln151_349_fu_12785_p1 = mul_ln1345_418_fu_12780_p2;

assign sext_ln151_34_fu_8167_p1 = mul_ln1345_41_reg_17100;

assign sext_ln151_350_fu_12898_p1 = mul_ln1345_421_fu_12893_p2;

assign sext_ln151_351_fu_12907_p1 = mul_ln1345_422_fu_12902_p2;

assign sext_ln151_352_fu_12916_p1 = mul_ln1345_423_fu_12911_p2;

assign sext_ln151_353_fu_12925_p1 = mul_ln1345_424_fu_12920_p2;

assign sext_ln151_354_fu_12934_p1 = mul_ln1345_425_fu_12929_p2;

assign sext_ln151_355_fu_12943_p1 = mul_ln1345_426_fu_12938_p2;

assign sext_ln151_356_fu_12952_p1 = mul_ln1345_427_fu_12947_p2;

assign sext_ln151_357_fu_12961_p1 = mul_ln1345_428_fu_12956_p2;

assign sext_ln151_358_fu_12970_p1 = mul_ln1345_429_fu_12965_p2;

assign sext_ln151_359_fu_12979_p1 = mul_ln1345_430_fu_12974_p2;

assign sext_ln151_35_fu_8170_p1 = mul_ln1345_42_reg_17110;

assign sext_ln151_360_fu_13092_p1 = mul_ln1345_433_fu_13087_p2;

assign sext_ln151_361_fu_13101_p1 = mul_ln1345_434_fu_13096_p2;

assign sext_ln151_362_fu_13110_p1 = mul_ln1345_435_fu_13105_p2;

assign sext_ln151_363_fu_13119_p1 = mul_ln1345_436_fu_13114_p2;

assign sext_ln151_364_fu_13128_p1 = mul_ln1345_437_fu_13123_p2;

assign sext_ln151_365_fu_13137_p1 = mul_ln1345_438_fu_13132_p2;

assign sext_ln151_366_fu_13146_p1 = mul_ln1345_439_fu_13141_p2;

assign sext_ln151_367_fu_13155_p1 = mul_ln1345_440_fu_13150_p2;

assign sext_ln151_368_fu_13164_p1 = mul_ln1345_441_fu_13159_p2;

assign sext_ln151_369_fu_13173_p1 = mul_ln1345_442_fu_13168_p2;

assign sext_ln151_36_fu_8173_p1 = mul_ln1345_43_reg_17120;

assign sext_ln151_370_fu_13286_p1 = mul_ln1345_445_fu_13281_p2;

assign sext_ln151_371_fu_13295_p1 = mul_ln1345_446_fu_13290_p2;

assign sext_ln151_372_fu_13304_p1 = mul_ln1345_447_fu_13299_p2;

assign sext_ln151_373_fu_13313_p1 = mul_ln1345_448_fu_13308_p2;

assign sext_ln151_374_fu_13322_p1 = mul_ln1345_449_fu_13317_p2;

assign sext_ln151_375_fu_13331_p1 = mul_ln1345_450_fu_13326_p2;

assign sext_ln151_376_fu_13340_p1 = mul_ln1345_451_fu_13335_p2;

assign sext_ln151_377_fu_13349_p1 = mul_ln1345_452_fu_13344_p2;

assign sext_ln151_378_fu_13358_p1 = mul_ln1345_453_fu_13353_p2;

assign sext_ln151_379_fu_13367_p1 = mul_ln1345_454_fu_13362_p2;

assign sext_ln151_37_fu_8176_p1 = mul_ln1345_44_reg_17130;

assign sext_ln151_380_fu_13480_p1 = mul_ln1345_457_fu_13475_p2;

assign sext_ln151_381_fu_13489_p1 = mul_ln1345_458_fu_13484_p2;

assign sext_ln151_382_fu_13498_p1 = mul_ln1345_459_fu_13493_p2;

assign sext_ln151_383_fu_13507_p1 = mul_ln1345_460_fu_13502_p2;

assign sext_ln151_384_fu_13516_p1 = mul_ln1345_461_fu_13511_p2;

assign sext_ln151_385_fu_13525_p1 = mul_ln1345_462_fu_13520_p2;

assign sext_ln151_386_fu_13534_p1 = mul_ln1345_463_fu_13529_p2;

assign sext_ln151_387_fu_13543_p1 = mul_ln1345_464_fu_13538_p2;

assign sext_ln151_388_fu_13552_p1 = mul_ln1345_465_fu_13547_p2;

assign sext_ln151_389_fu_13561_p1 = mul_ln1345_466_fu_13556_p2;

assign sext_ln151_38_fu_8179_p1 = mul_ln1345_45_reg_17140;

assign sext_ln151_390_fu_13674_p1 = mul_ln1345_469_fu_13669_p2;

assign sext_ln151_391_fu_13683_p1 = mul_ln1345_470_fu_13678_p2;

assign sext_ln151_392_fu_13692_p1 = mul_ln1345_471_fu_13687_p2;

assign sext_ln151_393_fu_13701_p1 = mul_ln1345_472_fu_13696_p2;

assign sext_ln151_394_fu_13710_p1 = mul_ln1345_473_fu_13705_p2;

assign sext_ln151_395_fu_13719_p1 = mul_ln1345_474_fu_13714_p2;

assign sext_ln151_396_fu_13728_p1 = mul_ln1345_475_fu_13723_p2;

assign sext_ln151_397_fu_13737_p1 = mul_ln1345_476_fu_13732_p2;

assign sext_ln151_398_fu_13746_p1 = mul_ln1345_477_fu_13741_p2;

assign sext_ln151_399_fu_13755_p1 = mul_ln1345_478_fu_13750_p2;

assign sext_ln151_39_fu_8182_p1 = mul_ln1345_46_reg_17150;

assign sext_ln151_3_fu_7798_p1 = mul_ln1345_4_reg_16730;

assign sext_ln151_400_fu_13868_p1 = mul_ln1345_481_fu_13863_p2;

assign sext_ln151_401_fu_13877_p1 = mul_ln1345_482_fu_13872_p2;

assign sext_ln151_402_fu_13886_p1 = mul_ln1345_483_fu_13881_p2;

assign sext_ln151_403_fu_13895_p1 = mul_ln1345_484_fu_13890_p2;

assign sext_ln151_404_fu_13904_p1 = mul_ln1345_485_fu_13899_p2;

assign sext_ln151_405_fu_13913_p1 = mul_ln1345_486_fu_13908_p2;

assign sext_ln151_406_fu_13922_p1 = mul_ln1345_487_fu_13917_p2;

assign sext_ln151_407_fu_13931_p1 = mul_ln1345_488_fu_13926_p2;

assign sext_ln151_408_fu_13940_p1 = mul_ln1345_489_fu_13935_p2;

assign sext_ln151_409_fu_13949_p1 = mul_ln1345_490_fu_13944_p2;

assign sext_ln151_40_fu_8277_p1 = mul_ln1345_49_reg_17180;

assign sext_ln151_410_fu_14062_p1 = mul_ln1345_493_fu_14057_p2;

assign sext_ln151_411_fu_14071_p1 = mul_ln1345_494_fu_14066_p2;

assign sext_ln151_412_fu_14080_p1 = mul_ln1345_495_fu_14075_p2;

assign sext_ln151_413_fu_14089_p1 = mul_ln1345_496_fu_14084_p2;

assign sext_ln151_414_fu_14098_p1 = mul_ln1345_497_fu_14093_p2;

assign sext_ln151_415_fu_14107_p1 = mul_ln1345_498_fu_14102_p2;

assign sext_ln151_416_fu_14116_p1 = mul_ln1345_499_fu_14111_p2;

assign sext_ln151_417_fu_14125_p1 = mul_ln1345_500_fu_14120_p2;

assign sext_ln151_418_fu_14134_p1 = mul_ln1345_501_fu_14129_p2;

assign sext_ln151_419_fu_14143_p1 = mul_ln1345_502_fu_14138_p2;

assign sext_ln151_41_fu_8280_p1 = mul_ln1345_50_reg_17190;

assign sext_ln151_420_fu_14256_p1 = mul_ln1345_505_fu_14251_p2;

assign sext_ln151_421_fu_14265_p1 = mul_ln1345_506_fu_14260_p2;

assign sext_ln151_422_fu_14274_p1 = mul_ln1345_507_fu_14269_p2;

assign sext_ln151_423_fu_14283_p1 = mul_ln1345_508_fu_14278_p2;

assign sext_ln151_424_fu_14292_p1 = mul_ln1345_509_fu_14287_p2;

assign sext_ln151_425_fu_14301_p1 = mul_ln1345_510_fu_14296_p2;

assign sext_ln151_426_fu_14310_p1 = mul_ln1345_511_fu_14305_p2;

assign sext_ln151_427_fu_14319_p1 = mul_ln1345_512_fu_14314_p2;

assign sext_ln151_428_fu_14328_p1 = mul_ln1345_513_fu_14323_p2;

assign sext_ln151_429_fu_14337_p1 = mul_ln1345_514_fu_14332_p2;

assign sext_ln151_42_fu_8283_p1 = mul_ln1345_51_reg_17200;

assign sext_ln151_430_fu_14450_p1 = mul_ln1345_517_fu_14445_p2;

assign sext_ln151_431_fu_14459_p1 = mul_ln1345_518_fu_14454_p2;

assign sext_ln151_432_fu_14468_p1 = mul_ln1345_519_fu_14463_p2;

assign sext_ln151_433_fu_14477_p1 = mul_ln1345_520_fu_14472_p2;

assign sext_ln151_434_fu_14486_p1 = mul_ln1345_521_fu_14481_p2;

assign sext_ln151_435_fu_14495_p1 = mul_ln1345_522_fu_14490_p2;

assign sext_ln151_436_fu_14504_p1 = mul_ln1345_523_fu_14499_p2;

assign sext_ln151_437_fu_14513_p1 = mul_ln1345_524_fu_14508_p2;

assign sext_ln151_438_fu_14522_p1 = mul_ln1345_525_fu_14517_p2;

assign sext_ln151_439_fu_14531_p1 = mul_ln1345_526_fu_14526_p2;

assign sext_ln151_43_fu_8286_p1 = mul_ln1345_52_reg_17210;

assign sext_ln151_440_fu_14644_p1 = mul_ln1345_529_fu_14639_p2;

assign sext_ln151_441_fu_14653_p1 = mul_ln1345_530_fu_14648_p2;

assign sext_ln151_442_fu_14662_p1 = mul_ln1345_531_fu_14657_p2;

assign sext_ln151_443_fu_14671_p1 = mul_ln1345_532_fu_14666_p2;

assign sext_ln151_444_fu_14680_p1 = mul_ln1345_533_fu_14675_p2;

assign sext_ln151_445_fu_14689_p1 = mul_ln1345_534_fu_14684_p2;

assign sext_ln151_446_fu_14698_p1 = mul_ln1345_535_fu_14693_p2;

assign sext_ln151_447_fu_14707_p1 = mul_ln1345_536_fu_14702_p2;

assign sext_ln151_448_fu_14716_p1 = mul_ln1345_537_fu_14711_p2;

assign sext_ln151_449_fu_14725_p1 = mul_ln1345_538_fu_14720_p2;

assign sext_ln151_44_fu_8289_p1 = mul_ln1345_53_reg_17220;

assign sext_ln151_450_fu_14838_p1 = mul_ln1345_541_fu_14833_p2;

assign sext_ln151_451_fu_14847_p1 = mul_ln1345_542_fu_14842_p2;

assign sext_ln151_452_fu_14856_p1 = mul_ln1345_543_fu_14851_p2;

assign sext_ln151_453_fu_14865_p1 = mul_ln1345_544_fu_14860_p2;

assign sext_ln151_454_fu_14874_p1 = mul_ln1345_545_fu_14869_p2;

assign sext_ln151_455_fu_14883_p1 = mul_ln1345_546_fu_14878_p2;

assign sext_ln151_456_fu_14892_p1 = mul_ln1345_547_fu_14887_p2;

assign sext_ln151_457_fu_14901_p1 = mul_ln1345_548_fu_14896_p2;

assign sext_ln151_458_fu_14910_p1 = mul_ln1345_549_fu_14905_p2;

assign sext_ln151_459_fu_14919_p1 = mul_ln1345_550_fu_14914_p2;

assign sext_ln151_45_fu_8292_p1 = mul_ln1345_54_reg_17230;

assign sext_ln151_460_fu_15032_p1 = mul_ln1345_553_fu_15027_p2;

assign sext_ln151_461_fu_15041_p1 = mul_ln1345_554_fu_15036_p2;

assign sext_ln151_462_fu_15050_p1 = mul_ln1345_555_fu_15045_p2;

assign sext_ln151_463_fu_15059_p1 = mul_ln1345_556_fu_15054_p2;

assign sext_ln151_464_fu_15068_p1 = mul_ln1345_557_fu_15063_p2;

assign sext_ln151_465_fu_15077_p1 = mul_ln1345_558_fu_15072_p2;

assign sext_ln151_466_fu_15086_p1 = mul_ln1345_559_fu_15081_p2;

assign sext_ln151_467_fu_15095_p1 = mul_ln1345_560_fu_15090_p2;

assign sext_ln151_468_fu_15104_p1 = mul_ln1345_561_fu_15099_p2;

assign sext_ln151_469_fu_15113_p1 = mul_ln1345_562_fu_15108_p2;

assign sext_ln151_46_fu_8295_p1 = mul_ln1345_55_reg_17240;

assign sext_ln151_470_fu_15226_p1 = mul_ln1345_565_fu_15221_p2;

assign sext_ln151_471_fu_15235_p1 = mul_ln1345_566_fu_15230_p2;

assign sext_ln151_472_fu_15244_p1 = mul_ln1345_567_fu_15239_p2;

assign sext_ln151_473_fu_15253_p1 = mul_ln1345_568_fu_15248_p2;

assign sext_ln151_474_fu_15262_p1 = mul_ln1345_569_fu_15257_p2;

assign sext_ln151_475_fu_15271_p1 = mul_ln1345_570_fu_15266_p2;

assign sext_ln151_476_fu_15280_p1 = mul_ln1345_571_fu_15275_p2;

assign sext_ln151_477_fu_15289_p1 = mul_ln1345_572_fu_15284_p2;

assign sext_ln151_478_fu_15298_p1 = mul_ln1345_573_fu_15293_p2;

assign sext_ln151_479_fu_15307_p1 = mul_ln1345_574_fu_15302_p2;

assign sext_ln151_47_fu_8298_p1 = mul_ln1345_56_reg_17250;

assign sext_ln151_48_fu_8301_p1 = mul_ln1345_57_reg_17260;

assign sext_ln151_49_fu_8304_p1 = mul_ln1345_58_reg_17270;

assign sext_ln151_4_fu_7801_p1 = mul_ln1345_5_reg_16740;

assign sext_ln151_50_fu_8399_p1 = mul_ln1345_61_reg_17300;

assign sext_ln151_51_fu_8402_p1 = mul_ln1345_62_reg_17310;

assign sext_ln151_52_fu_8405_p1 = mul_ln1345_63_reg_17320;

assign sext_ln151_53_fu_8408_p1 = mul_ln1345_64_reg_17330;

assign sext_ln151_54_fu_8411_p1 = mul_ln1345_65_reg_17340;

assign sext_ln151_55_fu_8414_p1 = mul_ln1345_66_reg_17350;

assign sext_ln151_56_fu_8417_p1 = mul_ln1345_67_reg_17360;

assign sext_ln151_57_fu_8420_p1 = mul_ln1345_68_reg_17370;

assign sext_ln151_58_fu_8423_p1 = mul_ln1345_69_reg_17380;

assign sext_ln151_59_fu_8426_p1 = mul_ln1345_70_reg_17390;

assign sext_ln151_5_fu_7804_p1 = mul_ln1345_6_reg_16750;

assign sext_ln151_60_fu_8521_p1 = mul_ln1345_73_reg_17420;

assign sext_ln151_61_fu_8524_p1 = mul_ln1345_74_reg_17430;

assign sext_ln151_62_fu_8527_p1 = mul_ln1345_75_reg_17440;

assign sext_ln151_63_fu_8530_p1 = mul_ln1345_76_reg_17450;

assign sext_ln151_64_fu_8533_p1 = mul_ln1345_77_reg_17460;

assign sext_ln151_65_fu_8536_p1 = mul_ln1345_78_reg_17470;

assign sext_ln151_66_fu_8539_p1 = mul_ln1345_79_reg_17480;

assign sext_ln151_67_fu_8542_p1 = mul_ln1345_80_reg_17490;

assign sext_ln151_68_fu_8545_p1 = mul_ln1345_81_reg_17500;

assign sext_ln151_69_fu_8548_p1 = mul_ln1345_82_reg_17510;

assign sext_ln151_6_fu_7807_p1 = mul_ln1345_7_reg_16760;

assign sext_ln151_70_fu_8643_p1 = mul_ln1345_85_reg_17540;

assign sext_ln151_71_fu_8646_p1 = mul_ln1345_86_reg_17550;

assign sext_ln151_72_fu_8649_p1 = mul_ln1345_87_reg_17560;

assign sext_ln151_73_fu_8652_p1 = mul_ln1345_88_reg_17570;

assign sext_ln151_74_fu_8655_p1 = mul_ln1345_89_reg_17580;

assign sext_ln151_75_fu_8658_p1 = mul_ln1345_90_reg_17590;

assign sext_ln151_76_fu_8661_p1 = mul_ln1345_91_reg_17600;

assign sext_ln151_77_fu_8664_p1 = mul_ln1345_92_reg_17610;

assign sext_ln151_78_fu_8667_p1 = mul_ln1345_93_reg_17620;

assign sext_ln151_79_fu_8670_p1 = mul_ln1345_94_reg_17630;

assign sext_ln151_7_fu_7810_p1 = mul_ln1345_8_reg_16770;

assign sext_ln151_80_fu_8765_p1 = mul_ln1345_97_reg_17660;

assign sext_ln151_81_fu_8768_p1 = mul_ln1345_98_reg_17670;

assign sext_ln151_82_fu_8771_p1 = mul_ln1345_99_reg_17680;

assign sext_ln151_83_fu_8774_p1 = mul_ln1345_100_reg_17690;

assign sext_ln151_84_fu_8777_p1 = mul_ln1345_101_reg_17700;

assign sext_ln151_85_fu_8780_p1 = mul_ln1345_102_reg_17710;

assign sext_ln151_86_fu_8783_p1 = mul_ln1345_103_reg_17720;

assign sext_ln151_87_fu_8786_p1 = mul_ln1345_104_reg_17730;

assign sext_ln151_88_fu_8789_p1 = mul_ln1345_105_reg_17740;

assign sext_ln151_89_fu_8792_p1 = mul_ln1345_106_reg_17750;

assign sext_ln151_8_fu_7813_p1 = mul_ln1345_9_reg_16780;

assign sext_ln151_90_fu_8887_p1 = mul_ln1345_109_reg_17780;

assign sext_ln151_91_fu_8890_p1 = mul_ln1345_110_reg_17790;

assign sext_ln151_92_fu_8893_p1 = mul_ln1345_111_reg_17800;

assign sext_ln151_93_fu_8896_p1 = mul_ln1345_112_reg_17810;

assign sext_ln151_94_fu_8899_p1 = mul_ln1345_113_reg_17820;

assign sext_ln151_95_fu_8902_p1 = mul_ln1345_114_reg_17830;

assign sext_ln151_96_fu_8905_p1 = mul_ln1345_115_reg_17840;

assign sext_ln151_97_fu_8908_p1 = mul_ln1345_116_reg_17850;

assign sext_ln151_98_fu_8911_p1 = mul_ln1345_117_reg_17860;

assign sext_ln151_99_fu_8914_p1 = mul_ln1345_118_reg_17870;

assign sext_ln151_9_fu_7816_p1 = mul_ln1345_10_reg_16790;

assign sext_ln151_fu_7789_p1 = mul_ln1345_1_reg_16700;

assign sext_ln691_100_fu_9326_p1 = $signed(add_ln691_150_fu_9320_p2);

assign sext_ln691_101_fu_9336_p1 = $signed(add_ln691_151_fu_9330_p2);

assign sext_ln691_102_fu_9346_p1 = $signed(add_ln691_152_fu_9340_p2);

assign sext_ln691_103_fu_15608_p1 = $signed(add_ln691_154_reg_19755);

assign sext_ln691_104_fu_9362_p1 = mul_ln1345_156_reg_18250;

assign sext_ln691_105_fu_9405_p1 = mul_ln1345_167_reg_18360;

assign sext_ln691_106_fu_9414_p1 = $signed(add_ln691_156_fu_9408_p2);

assign sext_ln691_107_fu_15617_p1 = $signed(add_ln691_159_reg_19765);

assign sext_ln691_108_fu_9448_p1 = $signed(add_ln691_162_fu_9442_p2);

assign sext_ln691_109_fu_9458_p1 = $signed(add_ln691_163_fu_9452_p2);

assign sext_ln691_10_fu_7950_p1 = $signed(add_ln691_12_fu_7944_p2);

assign sext_ln691_110_fu_9468_p1 = $signed(add_ln691_164_fu_9462_p2);

assign sext_ln691_111_fu_15625_p1 = $signed(add_ln691_166_reg_19770);

assign sext_ln691_112_fu_9484_p1 = mul_ln1345_168_reg_18370;

assign sext_ln691_113_fu_9527_p1 = mul_ln1345_179_reg_18480;

assign sext_ln691_114_fu_9536_p1 = $signed(add_ln691_168_fu_9530_p2);

assign sext_ln691_115_fu_15634_p1 = $signed(add_ln691_171_reg_19780);

assign sext_ln691_116_fu_9570_p1 = $signed(add_ln691_174_fu_9564_p2);

assign sext_ln691_117_fu_9580_p1 = $signed(add_ln691_175_fu_9574_p2);

assign sext_ln691_118_fu_9590_p1 = $signed(add_ln691_176_fu_9584_p2);

assign sext_ln691_119_fu_15642_p1 = $signed(add_ln691_178_reg_19785);

assign sext_ln691_11_fu_15413_p1 = $signed(add_ln691_15_reg_19585);

assign sext_ln691_120_fu_9606_p1 = mul_ln1345_180_reg_18490;

assign sext_ln691_121_fu_9649_p1 = mul_ln1345_191_reg_18600;

assign sext_ln691_122_fu_9658_p1 = $signed(add_ln691_180_fu_9652_p2);

assign sext_ln691_123_fu_15651_p1 = $signed(add_ln691_183_reg_19795);

assign sext_ln691_124_fu_9692_p1 = $signed(add_ln691_186_fu_9686_p2);

assign sext_ln691_125_fu_9702_p1 = $signed(add_ln691_187_fu_9696_p2);

assign sext_ln691_126_fu_9712_p1 = $signed(add_ln691_188_fu_9706_p2);

assign sext_ln691_127_fu_15659_p1 = $signed(add_ln691_190_reg_19800);

assign sext_ln691_128_fu_9728_p1 = mul_ln1345_192_reg_18610;

assign sext_ln691_129_fu_9771_p1 = mul_ln1345_203_reg_18720;

assign sext_ln691_12_fu_7984_p1 = $signed(add_ln691_18_fu_7978_p2);

assign sext_ln691_130_fu_9780_p1 = $signed(add_ln691_192_fu_9774_p2);

assign sext_ln691_131_fu_15668_p1 = $signed(add_ln691_195_reg_19810);

assign sext_ln691_132_fu_9814_p1 = $signed(add_ln691_198_fu_9808_p2);

assign sext_ln691_133_fu_9824_p1 = $signed(add_ln691_199_fu_9818_p2);

assign sext_ln691_134_fu_9834_p1 = $signed(add_ln691_200_fu_9828_p2);

assign sext_ln691_135_fu_15676_p1 = $signed(add_ln691_202_reg_19815);

assign sext_ln691_136_fu_9850_p1 = mul_ln1345_204_reg_18730;

assign sext_ln691_137_fu_9893_p1 = mul_ln1345_215_reg_18840;

assign sext_ln691_138_fu_9902_p1 = $signed(add_ln691_204_fu_9896_p2);

assign sext_ln691_139_fu_15685_p1 = $signed(add_ln691_207_reg_19825);

assign sext_ln691_13_fu_7994_p1 = $signed(add_ln691_19_fu_7988_p2);

assign sext_ln691_140_fu_9936_p1 = $signed(add_ln691_210_fu_9930_p2);

assign sext_ln691_141_fu_9946_p1 = $signed(add_ln691_211_fu_9940_p2);

assign sext_ln691_142_fu_9956_p1 = $signed(add_ln691_212_fu_9950_p2);

assign sext_ln691_143_fu_15693_p1 = $signed(add_ln691_214_reg_19830);

assign sext_ln691_144_fu_9972_p1 = mul_ln1345_216_reg_18850;

assign sext_ln691_145_fu_10015_p1 = mul_ln1345_227_reg_18960;

assign sext_ln691_146_fu_10024_p1 = $signed(add_ln691_216_fu_10018_p2);

assign sext_ln691_147_fu_15702_p1 = $signed(add_ln691_219_reg_19840);

assign sext_ln691_148_fu_10058_p1 = $signed(add_ln691_222_fu_10052_p2);

assign sext_ln691_149_fu_10068_p1 = $signed(add_ln691_223_fu_10062_p2);

assign sext_ln691_14_fu_8004_p1 = $signed(add_ln691_20_fu_7998_p2);

assign sext_ln691_150_fu_10078_p1 = $signed(add_ln691_224_fu_10072_p2);

assign sext_ln691_151_fu_15710_p1 = $signed(add_ln691_226_reg_19845);

assign sext_ln691_152_fu_10094_p1 = mul_ln1345_228_reg_18970;

assign sext_ln691_153_fu_10137_p1 = mul_ln1345_239_reg_19080;

assign sext_ln691_154_fu_10146_p1 = $signed(add_ln691_228_fu_10140_p2);

assign sext_ln691_155_fu_15719_p1 = $signed(add_ln691_231_reg_19855);

assign sext_ln691_156_fu_10180_p1 = $signed(add_ln691_234_fu_10174_p2);

assign sext_ln691_157_fu_10190_p1 = $signed(add_ln691_235_fu_10184_p2);

assign sext_ln691_158_fu_10200_p1 = $signed(add_ln691_236_fu_10194_p2);

assign sext_ln691_159_fu_15727_p1 = $signed(add_ln691_238_reg_19860);

assign sext_ln691_15_fu_15421_p1 = $signed(add_ln691_22_reg_19590);

assign sext_ln691_160_fu_10216_p1 = mul_ln1345_240_reg_19090;

assign sext_ln691_161_fu_10259_p1 = mul_ln1345_251_reg_19200;

assign sext_ln691_162_fu_10268_p1 = $signed(add_ln691_240_fu_10262_p2);

assign sext_ln691_163_fu_15736_p1 = $signed(add_ln691_243_reg_19870);

assign sext_ln691_164_fu_10302_p1 = $signed(add_ln691_246_fu_10296_p2);

assign sext_ln691_165_fu_10312_p1 = $signed(add_ln691_247_fu_10306_p2);

assign sext_ln691_166_fu_10322_p1 = $signed(add_ln691_248_fu_10316_p2);

assign sext_ln691_167_fu_15744_p1 = $signed(add_ln691_250_reg_19875);

assign sext_ln691_168_fu_10338_p1 = mul_ln1345_252_reg_19210;

assign sext_ln691_169_fu_10381_p1 = mul_ln1345_263_reg_19320;

assign sext_ln691_16_fu_8020_p1 = mul_ln1345_24_reg_16930;

assign sext_ln691_170_fu_10390_p1 = $signed(add_ln691_252_fu_10384_p2);

assign sext_ln691_171_fu_15753_p1 = $signed(add_ln691_255_reg_19885);

assign sext_ln691_172_fu_10424_p1 = $signed(add_ln691_258_fu_10418_p2);

assign sext_ln691_173_fu_10434_p1 = $signed(add_ln691_259_fu_10428_p2);

assign sext_ln691_174_fu_10444_p1 = $signed(add_ln691_260_fu_10438_p2);

assign sext_ln691_175_fu_15761_p1 = $signed(add_ln691_262_reg_19890);

assign sext_ln691_176_fu_10460_p1 = mul_ln1345_264_reg_19330;

assign sext_ln691_177_fu_10503_p1 = mul_ln1345_275_reg_19440;

assign sext_ln691_178_fu_10512_p1 = $signed(add_ln691_264_fu_10506_p2);

assign sext_ln691_179_fu_15770_p1 = $signed(add_ln691_267_reg_19900);

assign sext_ln691_17_fu_8063_p1 = mul_ln1345_35_reg_17040;

assign sext_ln691_180_fu_10546_p1 = $signed(add_ln691_270_fu_10540_p2);

assign sext_ln691_181_fu_10556_p1 = $signed(add_ln691_271_fu_10550_p2);

assign sext_ln691_182_fu_10566_p1 = $signed(add_ln691_272_fu_10560_p2);

assign sext_ln691_183_fu_15778_p1 = $signed(add_ln691_274_reg_19905);

assign sext_ln691_184_fu_10582_p1 = mul_ln1345_276_reg_19450;

assign sext_ln691_185_fu_10625_p1 = mul_ln1345_287_reg_19560;

assign sext_ln691_186_fu_10634_p1 = $signed(add_ln691_276_fu_10628_p2);

assign sext_ln691_187_fu_15787_p1 = $signed(add_ln691_279_reg_19915);

assign sext_ln691_188_fu_10668_p1 = $signed(add_ln691_282_fu_10662_p2);

assign sext_ln691_189_fu_10678_p1 = $signed(add_ln691_283_fu_10672_p2);

assign sext_ln691_18_fu_8072_p1 = $signed(add_ln691_24_fu_8066_p2);

assign sext_ln691_190_fu_10688_p1 = $signed(add_ln691_284_fu_10682_p2);

assign sext_ln691_191_fu_15795_p1 = $signed(add_ln691_286_reg_19920);

assign sext_ln691_192_fu_10712_p1 = mul_ln1345_288_fu_10707_p2;

assign sext_ln691_193_fu_10854_p1 = mul_ln1345_299_fu_10849_p2;

assign sext_ln691_194_fu_10864_p1 = $signed(add_ln691_288_fu_10858_p2);

assign sext_ln691_195_fu_15804_p1 = $signed(add_ln691_291_reg_19930);

assign sext_ln691_196_fu_10898_p1 = $signed(add_ln691_294_fu_10892_p2);

assign sext_ln691_197_fu_10908_p1 = $signed(add_ln691_295_fu_10902_p2);

assign sext_ln691_198_fu_10918_p1 = $signed(add_ln691_296_fu_10912_p2);

assign sext_ln691_199_fu_15812_p1 = $signed(add_ln691_298_reg_19935);

assign sext_ln691_19_fu_15430_p1 = $signed(add_ln691_27_reg_19600);

assign sext_ln691_1_fu_7819_p1 = mul_ln1345_11_reg_16800;

assign sext_ln691_200_fu_10939_p1 = mul_ln1345_300_fu_10934_p2;

assign sext_ln691_201_fu_11048_p1 = mul_ln1345_311_fu_11043_p2;

assign sext_ln691_202_fu_11058_p1 = $signed(add_ln691_300_fu_11052_p2);

assign sext_ln691_203_fu_15821_p1 = $signed(add_ln691_303_reg_19945);

assign sext_ln691_204_fu_11092_p1 = $signed(add_ln691_306_fu_11086_p2);

assign sext_ln691_205_fu_11102_p1 = $signed(add_ln691_307_fu_11096_p2);

assign sext_ln691_206_fu_11112_p1 = $signed(add_ln691_308_fu_11106_p2);

assign sext_ln691_207_fu_15829_p1 = $signed(add_ln691_310_reg_19950);

assign sext_ln691_208_fu_11133_p1 = mul_ln1345_312_fu_11128_p2;

assign sext_ln691_209_fu_11242_p1 = mul_ln1345_323_fu_11237_p2;

assign sext_ln691_20_fu_8106_p1 = $signed(add_ln691_30_fu_8100_p2);

assign sext_ln691_210_fu_11252_p1 = $signed(add_ln691_312_fu_11246_p2);

assign sext_ln691_211_fu_15838_p1 = $signed(add_ln691_315_reg_19960);

assign sext_ln691_212_fu_11286_p1 = $signed(add_ln691_318_fu_11280_p2);

assign sext_ln691_213_fu_11296_p1 = $signed(add_ln691_319_fu_11290_p2);

assign sext_ln691_214_fu_11306_p1 = $signed(add_ln691_320_fu_11300_p2);

assign sext_ln691_215_fu_15846_p1 = $signed(add_ln691_322_reg_19965);

assign sext_ln691_216_fu_11327_p1 = mul_ln1345_324_fu_11322_p2;

assign sext_ln691_217_fu_11436_p1 = mul_ln1345_335_fu_11431_p2;

assign sext_ln691_218_fu_11446_p1 = $signed(add_ln691_324_fu_11440_p2);

assign sext_ln691_219_fu_15855_p1 = $signed(add_ln691_327_reg_19975);

assign sext_ln691_21_fu_8116_p1 = $signed(add_ln691_31_fu_8110_p2);

assign sext_ln691_220_fu_11480_p1 = $signed(add_ln691_330_fu_11474_p2);

assign sext_ln691_221_fu_11490_p1 = $signed(add_ln691_331_fu_11484_p2);

assign sext_ln691_222_fu_11500_p1 = $signed(add_ln691_332_fu_11494_p2);

assign sext_ln691_223_fu_15863_p1 = $signed(add_ln691_334_reg_19980);

assign sext_ln691_224_fu_11521_p1 = mul_ln1345_336_fu_11516_p2;

assign sext_ln691_225_fu_11630_p1 = mul_ln1345_347_fu_11625_p2;

assign sext_ln691_226_fu_11640_p1 = $signed(add_ln691_336_fu_11634_p2);

assign sext_ln691_227_fu_15872_p1 = $signed(add_ln691_339_reg_19990);

assign sext_ln691_228_fu_11674_p1 = $signed(add_ln691_342_fu_11668_p2);

assign sext_ln691_229_fu_11684_p1 = $signed(add_ln691_343_fu_11678_p2);

assign sext_ln691_22_fu_8126_p1 = $signed(add_ln691_32_fu_8120_p2);

assign sext_ln691_230_fu_11694_p1 = $signed(add_ln691_344_fu_11688_p2);

assign sext_ln691_231_fu_15880_p1 = $signed(add_ln691_346_reg_19995);

assign sext_ln691_232_fu_11715_p1 = mul_ln1345_348_fu_11710_p2;

assign sext_ln691_233_fu_11824_p1 = mul_ln1345_359_fu_11819_p2;

assign sext_ln691_234_fu_11834_p1 = $signed(add_ln691_348_fu_11828_p2);

assign sext_ln691_235_fu_15889_p1 = $signed(add_ln691_351_reg_20005);

assign sext_ln691_236_fu_11868_p1 = $signed(add_ln691_354_fu_11862_p2);

assign sext_ln691_237_fu_11878_p1 = $signed(add_ln691_355_fu_11872_p2);

assign sext_ln691_238_fu_11888_p1 = $signed(add_ln691_356_fu_11882_p2);

assign sext_ln691_239_fu_15897_p1 = $signed(add_ln691_358_reg_20010);

assign sext_ln691_23_fu_15438_p1 = $signed(add_ln691_34_reg_19605);

assign sext_ln691_240_fu_11909_p1 = mul_ln1345_360_fu_11904_p2;

assign sext_ln691_241_fu_12018_p1 = mul_ln1345_371_fu_12013_p2;

assign sext_ln691_242_fu_12028_p1 = $signed(add_ln691_360_fu_12022_p2);

assign sext_ln691_243_fu_15906_p1 = $signed(add_ln691_363_reg_20020);

assign sext_ln691_244_fu_12062_p1 = $signed(add_ln691_366_fu_12056_p2);

assign sext_ln691_245_fu_12072_p1 = $signed(add_ln691_367_fu_12066_p2);

assign sext_ln691_246_fu_12082_p1 = $signed(add_ln691_368_fu_12076_p2);

assign sext_ln691_247_fu_15914_p1 = $signed(add_ln691_370_reg_20025);

assign sext_ln691_248_fu_12103_p1 = mul_ln1345_372_fu_12098_p2;

assign sext_ln691_249_fu_12212_p1 = mul_ln1345_383_fu_12207_p2;

assign sext_ln691_24_fu_8142_p1 = mul_ln1345_36_reg_17050;

assign sext_ln691_250_fu_12222_p1 = $signed(add_ln691_372_fu_12216_p2);

assign sext_ln691_251_fu_15923_p1 = $signed(add_ln691_375_reg_20035);

assign sext_ln691_252_fu_12256_p1 = $signed(add_ln691_378_fu_12250_p2);

assign sext_ln691_253_fu_12266_p1 = $signed(add_ln691_379_fu_12260_p2);

assign sext_ln691_254_fu_12276_p1 = $signed(add_ln691_380_fu_12270_p2);

assign sext_ln691_255_fu_15931_p1 = $signed(add_ln691_382_reg_20040);

assign sext_ln691_256_fu_12297_p1 = mul_ln1345_384_fu_12292_p2;

assign sext_ln691_257_fu_12406_p1 = mul_ln1345_395_fu_12401_p2;

assign sext_ln691_258_fu_12416_p1 = $signed(add_ln691_384_fu_12410_p2);

assign sext_ln691_259_fu_15940_p1 = $signed(add_ln691_387_reg_20050);

assign sext_ln691_25_fu_8185_p1 = mul_ln1345_47_reg_17160;

assign sext_ln691_260_fu_12450_p1 = $signed(add_ln691_390_fu_12444_p2);

assign sext_ln691_261_fu_12460_p1 = $signed(add_ln691_391_fu_12454_p2);

assign sext_ln691_262_fu_12470_p1 = $signed(add_ln691_392_fu_12464_p2);

assign sext_ln691_263_fu_15948_p1 = $signed(add_ln691_394_reg_20055);

assign sext_ln691_264_fu_12491_p1 = mul_ln1345_396_fu_12486_p2;

assign sext_ln691_265_fu_12600_p1 = mul_ln1345_407_fu_12595_p2;

assign sext_ln691_266_fu_12610_p1 = $signed(add_ln691_396_fu_12604_p2);

assign sext_ln691_267_fu_15957_p1 = $signed(add_ln691_399_reg_20065);

assign sext_ln691_268_fu_12644_p1 = $signed(add_ln691_402_fu_12638_p2);

assign sext_ln691_269_fu_12654_p1 = $signed(add_ln691_403_fu_12648_p2);

assign sext_ln691_26_fu_8194_p1 = $signed(add_ln691_36_fu_8188_p2);

assign sext_ln691_270_fu_12664_p1 = $signed(add_ln691_404_fu_12658_p2);

assign sext_ln691_271_fu_15965_p1 = $signed(add_ln691_406_reg_20070);

assign sext_ln691_272_fu_12685_p1 = mul_ln1345_408_fu_12680_p2;

assign sext_ln691_273_fu_12794_p1 = mul_ln1345_419_fu_12789_p2;

assign sext_ln691_274_fu_12804_p1 = $signed(add_ln691_408_fu_12798_p2);

assign sext_ln691_275_fu_15974_p1 = $signed(add_ln691_411_reg_20080);

assign sext_ln691_276_fu_12838_p1 = $signed(add_ln691_414_fu_12832_p2);

assign sext_ln691_277_fu_12848_p1 = $signed(add_ln691_415_fu_12842_p2);

assign sext_ln691_278_fu_12858_p1 = $signed(add_ln691_416_fu_12852_p2);

assign sext_ln691_279_fu_15982_p1 = $signed(add_ln691_418_reg_20085);

assign sext_ln691_27_fu_15447_p1 = $signed(add_ln691_39_reg_19615);

assign sext_ln691_280_fu_12879_p1 = mul_ln1345_420_fu_12874_p2;

assign sext_ln691_281_fu_12988_p1 = mul_ln1345_431_fu_12983_p2;

assign sext_ln691_282_fu_12998_p1 = $signed(add_ln691_420_fu_12992_p2);

assign sext_ln691_283_fu_15991_p1 = $signed(add_ln691_423_reg_20095);

assign sext_ln691_284_fu_13032_p1 = $signed(add_ln691_426_fu_13026_p2);

assign sext_ln691_285_fu_13042_p1 = $signed(add_ln691_427_fu_13036_p2);

assign sext_ln691_286_fu_13052_p1 = $signed(add_ln691_428_fu_13046_p2);

assign sext_ln691_287_fu_15999_p1 = $signed(add_ln691_430_reg_20100);

assign sext_ln691_288_fu_13073_p1 = mul_ln1345_432_fu_13068_p2;

assign sext_ln691_289_fu_13182_p1 = mul_ln1345_443_fu_13177_p2;

assign sext_ln691_28_fu_8228_p1 = $signed(add_ln691_42_fu_8222_p2);

assign sext_ln691_290_fu_13192_p1 = $signed(add_ln691_432_fu_13186_p2);

assign sext_ln691_291_fu_16008_p1 = $signed(add_ln691_435_reg_20110);

assign sext_ln691_292_fu_13226_p1 = $signed(add_ln691_438_fu_13220_p2);

assign sext_ln691_293_fu_13236_p1 = $signed(add_ln691_439_fu_13230_p2);

assign sext_ln691_294_fu_13246_p1 = $signed(add_ln691_440_fu_13240_p2);

assign sext_ln691_295_fu_16016_p1 = $signed(add_ln691_442_reg_20115);

assign sext_ln691_296_fu_13267_p1 = mul_ln1345_444_fu_13262_p2;

assign sext_ln691_297_fu_13376_p1 = mul_ln1345_455_fu_13371_p2;

assign sext_ln691_298_fu_13386_p1 = $signed(add_ln691_444_fu_13380_p2);

assign sext_ln691_299_fu_16025_p1 = $signed(add_ln691_447_reg_20125);

assign sext_ln691_29_fu_8238_p1 = $signed(add_ln691_43_fu_8232_p2);

assign sext_ln691_2_fu_7828_p1 = $signed(add_ln691_fu_7822_p2);

assign sext_ln691_300_fu_13420_p1 = $signed(add_ln691_450_fu_13414_p2);

assign sext_ln691_301_fu_13430_p1 = $signed(add_ln691_451_fu_13424_p2);

assign sext_ln691_302_fu_13440_p1 = $signed(add_ln691_452_fu_13434_p2);

assign sext_ln691_303_fu_16033_p1 = $signed(add_ln691_454_reg_20130);

assign sext_ln691_304_fu_13461_p1 = mul_ln1345_456_fu_13456_p2;

assign sext_ln691_305_fu_13570_p1 = mul_ln1345_467_fu_13565_p2;

assign sext_ln691_306_fu_13580_p1 = $signed(add_ln691_456_fu_13574_p2);

assign sext_ln691_307_fu_16042_p1 = $signed(add_ln691_459_reg_20140);

assign sext_ln691_308_fu_13614_p1 = $signed(add_ln691_462_fu_13608_p2);

assign sext_ln691_309_fu_13624_p1 = $signed(add_ln691_463_fu_13618_p2);

assign sext_ln691_30_fu_8248_p1 = $signed(add_ln691_44_fu_8242_p2);

assign sext_ln691_310_fu_13634_p1 = $signed(add_ln691_464_fu_13628_p2);

assign sext_ln691_311_fu_16050_p1 = $signed(add_ln691_466_reg_20145);

assign sext_ln691_312_fu_13655_p1 = mul_ln1345_468_fu_13650_p2;

assign sext_ln691_313_fu_13764_p1 = mul_ln1345_479_fu_13759_p2;

assign sext_ln691_314_fu_13774_p1 = $signed(add_ln691_468_fu_13768_p2);

assign sext_ln691_315_fu_16059_p1 = $signed(add_ln691_471_reg_20155);

assign sext_ln691_316_fu_13808_p1 = $signed(add_ln691_474_fu_13802_p2);

assign sext_ln691_317_fu_13818_p1 = $signed(add_ln691_475_fu_13812_p2);

assign sext_ln691_318_fu_13828_p1 = $signed(add_ln691_476_fu_13822_p2);

assign sext_ln691_319_fu_16067_p1 = $signed(add_ln691_478_reg_20160);

assign sext_ln691_31_fu_15455_p1 = $signed(add_ln691_46_reg_19620);

assign sext_ln691_320_fu_13849_p1 = mul_ln1345_480_fu_13844_p2;

assign sext_ln691_321_fu_13958_p1 = mul_ln1345_491_fu_13953_p2;

assign sext_ln691_322_fu_13968_p1 = $signed(add_ln691_480_fu_13962_p2);

assign sext_ln691_323_fu_16076_p1 = $signed(add_ln691_483_reg_20170);

assign sext_ln691_324_fu_14002_p1 = $signed(add_ln691_486_fu_13996_p2);

assign sext_ln691_325_fu_14012_p1 = $signed(add_ln691_487_fu_14006_p2);

assign sext_ln691_326_fu_14022_p1 = $signed(add_ln691_488_fu_14016_p2);

assign sext_ln691_327_fu_16084_p1 = $signed(add_ln691_490_reg_20175);

assign sext_ln691_328_fu_14043_p1 = mul_ln1345_492_fu_14038_p2;

assign sext_ln691_329_fu_14152_p1 = mul_ln1345_503_fu_14147_p2;

assign sext_ln691_32_fu_8264_p1 = mul_ln1345_48_reg_17170;

assign sext_ln691_330_fu_14162_p1 = $signed(add_ln691_492_fu_14156_p2);

assign sext_ln691_331_fu_16093_p1 = $signed(add_ln691_495_reg_20185);

assign sext_ln691_332_fu_14196_p1 = $signed(add_ln691_498_fu_14190_p2);

assign sext_ln691_333_fu_14206_p1 = $signed(add_ln691_499_fu_14200_p2);

assign sext_ln691_334_fu_14216_p1 = $signed(add_ln691_500_fu_14210_p2);

assign sext_ln691_335_fu_16101_p1 = $signed(add_ln691_502_reg_20190);

assign sext_ln691_336_fu_14237_p1 = mul_ln1345_504_fu_14232_p2;

assign sext_ln691_337_fu_14346_p1 = mul_ln1345_515_fu_14341_p2;

assign sext_ln691_338_fu_14356_p1 = $signed(add_ln691_504_fu_14350_p2);

assign sext_ln691_339_fu_16110_p1 = $signed(add_ln691_507_reg_20200);

assign sext_ln691_33_fu_8307_p1 = mul_ln1345_59_reg_17280;

assign sext_ln691_340_fu_14390_p1 = $signed(add_ln691_510_fu_14384_p2);

assign sext_ln691_341_fu_14400_p1 = $signed(add_ln691_511_fu_14394_p2);

assign sext_ln691_342_fu_14410_p1 = $signed(add_ln691_512_fu_14404_p2);

assign sext_ln691_343_fu_16118_p1 = $signed(add_ln691_514_reg_20205);

assign sext_ln691_344_fu_14431_p1 = mul_ln1345_516_fu_14426_p2;

assign sext_ln691_345_fu_14540_p1 = mul_ln1345_527_fu_14535_p2;

assign sext_ln691_346_fu_14550_p1 = $signed(add_ln691_516_fu_14544_p2);

assign sext_ln691_347_fu_16127_p1 = $signed(add_ln691_519_reg_20215);

assign sext_ln691_348_fu_14584_p1 = $signed(add_ln691_522_fu_14578_p2);

assign sext_ln691_349_fu_14594_p1 = $signed(add_ln691_523_fu_14588_p2);

assign sext_ln691_34_fu_8316_p1 = $signed(add_ln691_48_fu_8310_p2);

assign sext_ln691_350_fu_14604_p1 = $signed(add_ln691_524_fu_14598_p2);

assign sext_ln691_351_fu_16135_p1 = $signed(add_ln691_526_reg_20220);

assign sext_ln691_352_fu_14625_p1 = mul_ln1345_528_fu_14620_p2;

assign sext_ln691_353_fu_14734_p1 = mul_ln1345_539_fu_14729_p2;

assign sext_ln691_354_fu_14744_p1 = $signed(add_ln691_528_fu_14738_p2);

assign sext_ln691_355_fu_16144_p1 = $signed(add_ln691_531_reg_20230);

assign sext_ln691_356_fu_14778_p1 = $signed(add_ln691_534_fu_14772_p2);

assign sext_ln691_357_fu_14788_p1 = $signed(add_ln691_535_fu_14782_p2);

assign sext_ln691_358_fu_14798_p1 = $signed(add_ln691_536_fu_14792_p2);

assign sext_ln691_359_fu_16152_p1 = $signed(add_ln691_538_reg_20235);

assign sext_ln691_35_fu_15464_p1 = $signed(add_ln691_51_reg_19630);

assign sext_ln691_360_fu_14819_p1 = mul_ln1345_540_fu_14814_p2;

assign sext_ln691_361_fu_14928_p1 = mul_ln1345_551_fu_14923_p2;

assign sext_ln691_362_fu_14938_p1 = $signed(add_ln691_540_fu_14932_p2);

assign sext_ln691_363_fu_16161_p1 = $signed(add_ln691_543_reg_20245);

assign sext_ln691_364_fu_14972_p1 = $signed(add_ln691_546_fu_14966_p2);

assign sext_ln691_365_fu_14982_p1 = $signed(add_ln691_547_fu_14976_p2);

assign sext_ln691_366_fu_14992_p1 = $signed(add_ln691_548_fu_14986_p2);

assign sext_ln691_367_fu_16169_p1 = $signed(add_ln691_550_reg_20250);

assign sext_ln691_368_fu_15013_p1 = mul_ln1345_552_fu_15008_p2;

assign sext_ln691_369_fu_15122_p1 = mul_ln1345_563_fu_15117_p2;

assign sext_ln691_36_fu_8350_p1 = $signed(add_ln691_54_fu_8344_p2);

assign sext_ln691_370_fu_15132_p1 = $signed(add_ln691_552_fu_15126_p2);

assign sext_ln691_371_fu_16178_p1 = $signed(add_ln691_555_reg_20260);

assign sext_ln691_372_fu_15166_p1 = $signed(add_ln691_558_fu_15160_p2);

assign sext_ln691_373_fu_15176_p1 = $signed(add_ln691_559_fu_15170_p2);

assign sext_ln691_374_fu_15186_p1 = $signed(add_ln691_560_fu_15180_p2);

assign sext_ln691_375_fu_16186_p1 = $signed(add_ln691_562_reg_20265);

assign sext_ln691_376_fu_15207_p1 = mul_ln1345_564_fu_15202_p2;

assign sext_ln691_377_fu_15316_p1 = mul_ln1345_575_fu_15311_p2;

assign sext_ln691_378_fu_15326_p1 = $signed(add_ln691_564_fu_15320_p2);

assign sext_ln691_379_fu_16195_p1 = $signed(add_ln691_567_reg_20275);

assign sext_ln691_37_fu_8360_p1 = $signed(add_ln691_55_fu_8354_p2);

assign sext_ln691_380_fu_15360_p1 = $signed(add_ln691_570_fu_15354_p2);

assign sext_ln691_381_fu_15370_p1 = $signed(add_ln691_571_fu_15364_p2);

assign sext_ln691_382_fu_15380_p1 = $signed(add_ln691_572_fu_15374_p2);

assign sext_ln691_383_fu_16203_p1 = $signed(add_ln691_574_reg_20280);

assign sext_ln691_38_fu_8370_p1 = $signed(add_ln691_56_fu_8364_p2);

assign sext_ln691_39_fu_15472_p1 = $signed(add_ln691_58_reg_19635);

assign sext_ln691_3_fu_15396_p1 = $signed(add_ln691_3_reg_19570);

assign sext_ln691_40_fu_8386_p1 = mul_ln1345_60_reg_17290;

assign sext_ln691_41_fu_8429_p1 = mul_ln1345_71_reg_17400;

assign sext_ln691_42_fu_8438_p1 = $signed(add_ln691_60_fu_8432_p2);

assign sext_ln691_43_fu_15481_p1 = $signed(add_ln691_63_reg_19645);

assign sext_ln691_44_fu_8472_p1 = $signed(add_ln691_66_fu_8466_p2);

assign sext_ln691_45_fu_8482_p1 = $signed(add_ln691_67_fu_8476_p2);

assign sext_ln691_46_fu_8492_p1 = $signed(add_ln691_68_fu_8486_p2);

assign sext_ln691_47_fu_15489_p1 = $signed(add_ln691_70_reg_19650);

assign sext_ln691_48_fu_8508_p1 = mul_ln1345_72_reg_17410;

assign sext_ln691_49_fu_8551_p1 = mul_ln1345_83_reg_17520;

assign sext_ln691_4_fu_7862_p1 = $signed(add_ln691_6_fu_7856_p2);

assign sext_ln691_50_fu_8560_p1 = $signed(add_ln691_72_fu_8554_p2);

assign sext_ln691_51_fu_15498_p1 = $signed(add_ln691_75_reg_19660);

assign sext_ln691_52_fu_8594_p1 = $signed(add_ln691_78_fu_8588_p2);

assign sext_ln691_53_fu_8604_p1 = $signed(add_ln691_79_fu_8598_p2);

assign sext_ln691_54_fu_8614_p1 = $signed(add_ln691_80_fu_8608_p2);

assign sext_ln691_55_fu_15506_p1 = $signed(add_ln691_82_reg_19665);

assign sext_ln691_56_fu_8630_p1 = mul_ln1345_84_reg_17530;

assign sext_ln691_57_fu_8673_p1 = mul_ln1345_95_reg_17640;

assign sext_ln691_58_fu_8682_p1 = $signed(add_ln691_84_fu_8676_p2);

assign sext_ln691_59_fu_15515_p1 = $signed(add_ln691_87_reg_19675);

assign sext_ln691_5_fu_7872_p1 = $signed(add_ln691_7_fu_7866_p2);

assign sext_ln691_60_fu_8716_p1 = $signed(add_ln691_90_fu_8710_p2);

assign sext_ln691_61_fu_8726_p1 = $signed(add_ln691_91_fu_8720_p2);

assign sext_ln691_62_fu_8736_p1 = $signed(add_ln691_92_fu_8730_p2);

assign sext_ln691_63_fu_15523_p1 = $signed(add_ln691_94_reg_19680);

assign sext_ln691_64_fu_8752_p1 = mul_ln1345_96_reg_17650;

assign sext_ln691_65_fu_8795_p1 = mul_ln1345_107_reg_17760;

assign sext_ln691_66_fu_8804_p1 = $signed(add_ln691_96_fu_8798_p2);

assign sext_ln691_67_fu_15532_p1 = $signed(add_ln691_99_reg_19690);

assign sext_ln691_68_fu_8838_p1 = $signed(add_ln691_102_fu_8832_p2);

assign sext_ln691_69_fu_8848_p1 = $signed(add_ln691_103_fu_8842_p2);

assign sext_ln691_6_fu_7882_p1 = $signed(add_ln691_8_fu_7876_p2);

assign sext_ln691_70_fu_8858_p1 = $signed(add_ln691_104_fu_8852_p2);

assign sext_ln691_71_fu_15540_p1 = $signed(add_ln691_106_reg_19695);

assign sext_ln691_72_fu_8874_p1 = mul_ln1345_108_reg_17770;

assign sext_ln691_73_fu_8917_p1 = mul_ln1345_119_reg_17880;

assign sext_ln691_74_fu_8926_p1 = $signed(add_ln691_108_fu_8920_p2);

assign sext_ln691_75_fu_15549_p1 = $signed(add_ln691_111_reg_19705);

assign sext_ln691_76_fu_8960_p1 = $signed(add_ln691_114_fu_8954_p2);

assign sext_ln691_77_fu_8970_p1 = $signed(add_ln691_115_fu_8964_p2);

assign sext_ln691_78_fu_8980_p1 = $signed(add_ln691_116_fu_8974_p2);

assign sext_ln691_79_fu_15557_p1 = $signed(add_ln691_118_reg_19710);

assign sext_ln691_7_fu_15404_p1 = $signed(add_ln691_10_reg_19575);

assign sext_ln691_80_fu_8996_p1 = mul_ln1345_120_reg_17890;

assign sext_ln691_81_fu_9039_p1 = mul_ln1345_131_reg_18000;

assign sext_ln691_82_fu_9048_p1 = $signed(add_ln691_120_fu_9042_p2);

assign sext_ln691_83_fu_15566_p1 = $signed(add_ln691_123_reg_19720);

assign sext_ln691_84_fu_9082_p1 = $signed(add_ln691_126_fu_9076_p2);

assign sext_ln691_85_fu_9092_p1 = $signed(add_ln691_127_fu_9086_p2);

assign sext_ln691_86_fu_9102_p1 = $signed(add_ln691_128_fu_9096_p2);

assign sext_ln691_87_fu_15574_p1 = $signed(add_ln691_130_reg_19725);

assign sext_ln691_88_fu_9118_p1 = mul_ln1345_132_reg_18010;

assign sext_ln691_89_fu_9161_p1 = mul_ln1345_143_reg_18120;

assign sext_ln691_8_fu_7898_p1 = mul_ln1345_12_reg_16810;

assign sext_ln691_90_fu_9170_p1 = $signed(add_ln691_132_fu_9164_p2);

assign sext_ln691_91_fu_15583_p1 = $signed(add_ln691_135_reg_19735);

assign sext_ln691_92_fu_9204_p1 = $signed(add_ln691_138_fu_9198_p2);

assign sext_ln691_93_fu_9214_p1 = $signed(add_ln691_139_fu_9208_p2);

assign sext_ln691_94_fu_9224_p1 = $signed(add_ln691_140_fu_9218_p2);

assign sext_ln691_95_fu_15591_p1 = $signed(add_ln691_142_reg_19740);

assign sext_ln691_96_fu_9240_p1 = mul_ln1345_144_reg_18130;

assign sext_ln691_97_fu_9283_p1 = mul_ln1345_155_reg_18240;

assign sext_ln691_98_fu_9292_p1 = $signed(add_ln691_144_fu_9286_p2);

assign sext_ln691_99_fu_15600_p1 = $signed(add_ln691_147_reg_19750);

assign sext_ln691_9_fu_7941_p1 = mul_ln1345_23_reg_16920;

assign sext_ln691_fu_7782_p1 = mul_ln1345_reg_16690;

assign start_out = real_start;

assign tmp_100_fu_3886_p4 = {{mlp_inst_m1_weight_arr_V_q0[743:741]}};

assign tmp_101_fu_3906_p4 = {{mlp_inst_m1_weight_arr_V_q0[815:813]}};

assign tmp_102_fu_3926_p4 = {{mlp_inst_m1_weight_arr_V_q0[26:24]}};

assign tmp_103_fu_8755_p4 = {{select_ln126_fu_7775_p3[98:88]}};

assign tmp_104_fu_3946_p4 = {{mlp_inst_m1_weight_arr_V_q0[98:96]}};

assign tmp_105_fu_3966_p4 = {{mlp_inst_m1_weight_arr_V_q0[170:168]}};

assign tmp_106_fu_3986_p4 = {{mlp_inst_m1_weight_arr_V_q0[242:240]}};

assign tmp_107_fu_4006_p4 = {{mlp_inst_m1_weight_arr_V_q0[314:312]}};

assign tmp_108_fu_4026_p4 = {{mlp_inst_m1_weight_arr_V_q0[386:384]}};

assign tmp_109_fu_4046_p4 = {{mlp_inst_m1_weight_arr_V_q0[458:456]}};

assign tmp_10_fu_2222_p4 = {{mlp_inst_m1_weight_arr_V_q0[794:792]}};

assign tmp_110_fu_4066_p4 = {{mlp_inst_m1_weight_arr_V_q0[530:528]}};

assign tmp_111_fu_4086_p4 = {{mlp_inst_m1_weight_arr_V_q0[602:600]}};

assign tmp_112_fu_4106_p4 = {{mlp_inst_m1_weight_arr_V_q0[674:672]}};

assign tmp_113_fu_4126_p4 = {{mlp_inst_m1_weight_arr_V_q0[746:744]}};

assign tmp_114_fu_4146_p4 = {{mlp_inst_m1_weight_arr_V_q0[818:816]}};

assign tmp_115_fu_4166_p4 = {{mlp_inst_m1_weight_arr_V_q0[29:27]}};

assign tmp_116_fu_8877_p4 = {{select_ln126_fu_7775_p3[109:99]}};

assign tmp_117_fu_4186_p4 = {{mlp_inst_m1_weight_arr_V_q0[101:99]}};

assign tmp_118_fu_4206_p4 = {{mlp_inst_m1_weight_arr_V_q0[173:171]}};

assign tmp_119_fu_4226_p4 = {{mlp_inst_m1_weight_arr_V_q0[245:243]}};

assign tmp_11_fu_2246_p4 = {{mlp_inst_m1_weight_arr_V_q0[5:3]}};

assign tmp_120_fu_4246_p4 = {{mlp_inst_m1_weight_arr_V_q0[317:315]}};

assign tmp_121_fu_4266_p4 = {{mlp_inst_m1_weight_arr_V_q0[389:387]}};

assign tmp_122_fu_4286_p4 = {{mlp_inst_m1_weight_arr_V_q0[461:459]}};

assign tmp_123_fu_4306_p4 = {{mlp_inst_m1_weight_arr_V_q0[533:531]}};

assign tmp_124_fu_4326_p4 = {{mlp_inst_m1_weight_arr_V_q0[605:603]}};

assign tmp_125_fu_4346_p4 = {{mlp_inst_m1_weight_arr_V_q0[677:675]}};

assign tmp_126_fu_4366_p4 = {{mlp_inst_m1_weight_arr_V_q0[749:747]}};

assign tmp_127_fu_4386_p4 = {{mlp_inst_m1_weight_arr_V_q0[821:819]}};

assign tmp_128_fu_4406_p4 = {{mlp_inst_m1_weight_arr_V_q0[32:30]}};

assign tmp_129_fu_8999_p4 = {{select_ln126_fu_7775_p3[120:110]}};

assign tmp_12_fu_7901_p4 = {{select_ln126_fu_7775_p3[21:11]}};

assign tmp_130_fu_4426_p4 = {{mlp_inst_m1_weight_arr_V_q0[104:102]}};

assign tmp_131_fu_4446_p4 = {{mlp_inst_m1_weight_arr_V_q0[176:174]}};

assign tmp_132_fu_4466_p4 = {{mlp_inst_m1_weight_arr_V_q0[248:246]}};

assign tmp_133_fu_4486_p4 = {{mlp_inst_m1_weight_arr_V_q0[320:318]}};

assign tmp_134_fu_4506_p4 = {{mlp_inst_m1_weight_arr_V_q0[392:390]}};

assign tmp_135_fu_4526_p4 = {{mlp_inst_m1_weight_arr_V_q0[464:462]}};

assign tmp_136_fu_4546_p4 = {{mlp_inst_m1_weight_arr_V_q0[536:534]}};

assign tmp_137_fu_4566_p4 = {{mlp_inst_m1_weight_arr_V_q0[608:606]}};

assign tmp_138_fu_4586_p4 = {{mlp_inst_m1_weight_arr_V_q0[680:678]}};

assign tmp_139_fu_4606_p4 = {{mlp_inst_m1_weight_arr_V_q0[752:750]}};

assign tmp_13_fu_2266_p4 = {{mlp_inst_m1_weight_arr_V_q0[77:75]}};

assign tmp_140_fu_4626_p4 = {{mlp_inst_m1_weight_arr_V_q0[824:822]}};

assign tmp_141_fu_4646_p4 = {{mlp_inst_m1_weight_arr_V_q0[35:33]}};

assign tmp_142_fu_9121_p4 = {{select_ln126_fu_7775_p3[131:121]}};

assign tmp_143_fu_4666_p4 = {{mlp_inst_m1_weight_arr_V_q0[107:105]}};

assign tmp_144_fu_4686_p4 = {{mlp_inst_m1_weight_arr_V_q0[179:177]}};

assign tmp_145_fu_4706_p4 = {{mlp_inst_m1_weight_arr_V_q0[251:249]}};

assign tmp_146_fu_4726_p4 = {{mlp_inst_m1_weight_arr_V_q0[323:321]}};

assign tmp_147_fu_4746_p4 = {{mlp_inst_m1_weight_arr_V_q0[395:393]}};

assign tmp_148_fu_4766_p4 = {{mlp_inst_m1_weight_arr_V_q0[467:465]}};

assign tmp_149_fu_4786_p4 = {{mlp_inst_m1_weight_arr_V_q0[539:537]}};

assign tmp_14_fu_2286_p4 = {{mlp_inst_m1_weight_arr_V_q0[149:147]}};

assign tmp_150_fu_4806_p4 = {{mlp_inst_m1_weight_arr_V_q0[611:609]}};

assign tmp_151_fu_4826_p4 = {{mlp_inst_m1_weight_arr_V_q0[683:681]}};

assign tmp_152_fu_4846_p4 = {{mlp_inst_m1_weight_arr_V_q0[755:753]}};

assign tmp_153_fu_4866_p4 = {{mlp_inst_m1_weight_arr_V_q0[827:825]}};

assign tmp_154_fu_4886_p4 = {{mlp_inst_m1_weight_arr_V_q0[38:36]}};

assign tmp_155_fu_9243_p4 = {{select_ln126_fu_7775_p3[142:132]}};

assign tmp_156_fu_4906_p4 = {{mlp_inst_m1_weight_arr_V_q0[110:108]}};

assign tmp_157_fu_4926_p4 = {{mlp_inst_m1_weight_arr_V_q0[182:180]}};

assign tmp_158_fu_4946_p4 = {{mlp_inst_m1_weight_arr_V_q0[254:252]}};

assign tmp_159_fu_4966_p4 = {{mlp_inst_m1_weight_arr_V_q0[326:324]}};

assign tmp_15_fu_2306_p4 = {{mlp_inst_m1_weight_arr_V_q0[221:219]}};

assign tmp_160_fu_4986_p4 = {{mlp_inst_m1_weight_arr_V_q0[398:396]}};

assign tmp_161_fu_5006_p4 = {{mlp_inst_m1_weight_arr_V_q0[470:468]}};

assign tmp_162_fu_5026_p4 = {{mlp_inst_m1_weight_arr_V_q0[542:540]}};

assign tmp_163_fu_5046_p4 = {{mlp_inst_m1_weight_arr_V_q0[614:612]}};

assign tmp_164_fu_5066_p4 = {{mlp_inst_m1_weight_arr_V_q0[686:684]}};

assign tmp_165_fu_5086_p4 = {{mlp_inst_m1_weight_arr_V_q0[758:756]}};

assign tmp_166_fu_5106_p4 = {{mlp_inst_m1_weight_arr_V_q0[830:828]}};

assign tmp_167_fu_5126_p4 = {{mlp_inst_m1_weight_arr_V_q0[41:39]}};

assign tmp_168_fu_9365_p4 = {{select_ln126_fu_7775_p3[153:143]}};

assign tmp_169_fu_5146_p4 = {{mlp_inst_m1_weight_arr_V_q0[113:111]}};

assign tmp_16_fu_2326_p4 = {{mlp_inst_m1_weight_arr_V_q0[293:291]}};

assign tmp_170_fu_5166_p4 = {{mlp_inst_m1_weight_arr_V_q0[185:183]}};

assign tmp_171_fu_5186_p4 = {{mlp_inst_m1_weight_arr_V_q0[257:255]}};

assign tmp_172_fu_5206_p4 = {{mlp_inst_m1_weight_arr_V_q0[329:327]}};

assign tmp_173_fu_5226_p4 = {{mlp_inst_m1_weight_arr_V_q0[401:399]}};

assign tmp_174_fu_5246_p4 = {{mlp_inst_m1_weight_arr_V_q0[473:471]}};

assign tmp_175_fu_5266_p4 = {{mlp_inst_m1_weight_arr_V_q0[545:543]}};

assign tmp_176_fu_5286_p4 = {{mlp_inst_m1_weight_arr_V_q0[617:615]}};

assign tmp_177_fu_5306_p4 = {{mlp_inst_m1_weight_arr_V_q0[689:687]}};

assign tmp_178_fu_5326_p4 = {{mlp_inst_m1_weight_arr_V_q0[761:759]}};

assign tmp_179_fu_5346_p4 = {{mlp_inst_m1_weight_arr_V_q0[833:831]}};

assign tmp_17_fu_2346_p4 = {{mlp_inst_m1_weight_arr_V_q0[365:363]}};

assign tmp_180_fu_5366_p4 = {{mlp_inst_m1_weight_arr_V_q0[44:42]}};

assign tmp_181_fu_9487_p4 = {{select_ln126_fu_7775_p3[164:154]}};

assign tmp_182_fu_5386_p4 = {{mlp_inst_m1_weight_arr_V_q0[116:114]}};

assign tmp_183_fu_5406_p4 = {{mlp_inst_m1_weight_arr_V_q0[188:186]}};

assign tmp_184_fu_5426_p4 = {{mlp_inst_m1_weight_arr_V_q0[260:258]}};

assign tmp_185_fu_5446_p4 = {{mlp_inst_m1_weight_arr_V_q0[332:330]}};

assign tmp_186_fu_5466_p4 = {{mlp_inst_m1_weight_arr_V_q0[404:402]}};

assign tmp_187_fu_5486_p4 = {{mlp_inst_m1_weight_arr_V_q0[476:474]}};

assign tmp_188_fu_5506_p4 = {{mlp_inst_m1_weight_arr_V_q0[548:546]}};

assign tmp_189_fu_5526_p4 = {{mlp_inst_m1_weight_arr_V_q0[620:618]}};

assign tmp_18_fu_2366_p4 = {{mlp_inst_m1_weight_arr_V_q0[437:435]}};

assign tmp_190_fu_5546_p4 = {{mlp_inst_m1_weight_arr_V_q0[692:690]}};

assign tmp_191_fu_5566_p4 = {{mlp_inst_m1_weight_arr_V_q0[764:762]}};

assign tmp_192_fu_5586_p4 = {{mlp_inst_m1_weight_arr_V_q0[836:834]}};

assign tmp_193_fu_5606_p4 = {{mlp_inst_m1_weight_arr_V_q0[47:45]}};

assign tmp_194_fu_9609_p4 = {{select_ln126_fu_7775_p3[175:165]}};

assign tmp_195_fu_5626_p4 = {{mlp_inst_m1_weight_arr_V_q0[119:117]}};

assign tmp_196_fu_5646_p4 = {{mlp_inst_m1_weight_arr_V_q0[191:189]}};

assign tmp_197_fu_5666_p4 = {{mlp_inst_m1_weight_arr_V_q0[263:261]}};

assign tmp_198_fu_5686_p4 = {{mlp_inst_m1_weight_arr_V_q0[335:333]}};

assign tmp_199_fu_5706_p4 = {{mlp_inst_m1_weight_arr_V_q0[407:405]}};

assign tmp_19_fu_2386_p4 = {{mlp_inst_m1_weight_arr_V_q0[509:507]}};

assign tmp_1_fu_2198_p4 = {{mlp_inst_m1_weight_arr_V_q0[722:720]}};

assign tmp_200_fu_5726_p4 = {{mlp_inst_m1_weight_arr_V_q0[479:477]}};

assign tmp_201_fu_5746_p4 = {{mlp_inst_m1_weight_arr_V_q0[551:549]}};

assign tmp_202_fu_5766_p4 = {{mlp_inst_m1_weight_arr_V_q0[623:621]}};

assign tmp_203_fu_5786_p4 = {{mlp_inst_m1_weight_arr_V_q0[695:693]}};

assign tmp_204_fu_5806_p4 = {{mlp_inst_m1_weight_arr_V_q0[767:765]}};

assign tmp_205_fu_5826_p4 = {{mlp_inst_m1_weight_arr_V_q0[839:837]}};

assign tmp_206_fu_5846_p4 = {{mlp_inst_m1_weight_arr_V_q0[50:48]}};

assign tmp_207_fu_9731_p4 = {{select_ln126_fu_7775_p3[186:176]}};

assign tmp_208_fu_5866_p4 = {{mlp_inst_m1_weight_arr_V_q0[122:120]}};

assign tmp_209_fu_5886_p4 = {{mlp_inst_m1_weight_arr_V_q0[194:192]}};

assign tmp_20_fu_2406_p4 = {{mlp_inst_m1_weight_arr_V_q0[581:579]}};

assign tmp_210_fu_5906_p4 = {{mlp_inst_m1_weight_arr_V_q0[266:264]}};

assign tmp_211_fu_5926_p4 = {{mlp_inst_m1_weight_arr_V_q0[338:336]}};

assign tmp_212_fu_5946_p4 = {{mlp_inst_m1_weight_arr_V_q0[410:408]}};

assign tmp_213_fu_5966_p4 = {{mlp_inst_m1_weight_arr_V_q0[482:480]}};

assign tmp_214_fu_5986_p4 = {{mlp_inst_m1_weight_arr_V_q0[554:552]}};

assign tmp_215_fu_6006_p4 = {{mlp_inst_m1_weight_arr_V_q0[626:624]}};

assign tmp_216_fu_6026_p4 = {{mlp_inst_m1_weight_arr_V_q0[698:696]}};

assign tmp_217_fu_6046_p4 = {{mlp_inst_m1_weight_arr_V_q0[770:768]}};

assign tmp_218_fu_6066_p4 = {{mlp_inst_m1_weight_arr_V_q0[842:840]}};

assign tmp_219_fu_6086_p4 = {{mlp_inst_m1_weight_arr_V_q0[53:51]}};

assign tmp_21_fu_2426_p4 = {{mlp_inst_m1_weight_arr_V_q0[653:651]}};

assign tmp_220_fu_9853_p4 = {{select_ln126_fu_7775_p3[197:187]}};

assign tmp_221_fu_6106_p4 = {{mlp_inst_m1_weight_arr_V_q0[125:123]}};

assign tmp_222_fu_6126_p4 = {{mlp_inst_m1_weight_arr_V_q0[197:195]}};

assign tmp_223_fu_6146_p4 = {{mlp_inst_m1_weight_arr_V_q0[269:267]}};

assign tmp_224_fu_6166_p4 = {{mlp_inst_m1_weight_arr_V_q0[341:339]}};

assign tmp_225_fu_6186_p4 = {{mlp_inst_m1_weight_arr_V_q0[413:411]}};

assign tmp_226_fu_6206_p4 = {{mlp_inst_m1_weight_arr_V_q0[485:483]}};

assign tmp_227_fu_6226_p4 = {{mlp_inst_m1_weight_arr_V_q0[557:555]}};

assign tmp_228_fu_6246_p4 = {{mlp_inst_m1_weight_arr_V_q0[629:627]}};

assign tmp_229_fu_6266_p4 = {{mlp_inst_m1_weight_arr_V_q0[701:699]}};

assign tmp_22_fu_2446_p4 = {{mlp_inst_m1_weight_arr_V_q0[725:723]}};

assign tmp_230_fu_6286_p4 = {{mlp_inst_m1_weight_arr_V_q0[773:771]}};

assign tmp_231_fu_6306_p4 = {{mlp_inst_m1_weight_arr_V_q0[845:843]}};

assign tmp_232_fu_6326_p4 = {{mlp_inst_m1_weight_arr_V_q0[56:54]}};

assign tmp_233_fu_9975_p4 = {{select_ln126_fu_7775_p3[208:198]}};

assign tmp_234_fu_6346_p4 = {{mlp_inst_m1_weight_arr_V_q0[128:126]}};

assign tmp_235_fu_6366_p4 = {{mlp_inst_m1_weight_arr_V_q0[200:198]}};

assign tmp_236_fu_6386_p4 = {{mlp_inst_m1_weight_arr_V_q0[272:270]}};

assign tmp_237_fu_6406_p4 = {{mlp_inst_m1_weight_arr_V_q0[344:342]}};

assign tmp_238_fu_6426_p4 = {{mlp_inst_m1_weight_arr_V_q0[416:414]}};

assign tmp_239_fu_6446_p4 = {{mlp_inst_m1_weight_arr_V_q0[488:486]}};

assign tmp_23_fu_2466_p4 = {{mlp_inst_m1_weight_arr_V_q0[797:795]}};

assign tmp_240_fu_6466_p4 = {{mlp_inst_m1_weight_arr_V_q0[560:558]}};

assign tmp_241_fu_6486_p4 = {{mlp_inst_m1_weight_arr_V_q0[632:630]}};

assign tmp_242_fu_6506_p4 = {{mlp_inst_m1_weight_arr_V_q0[704:702]}};

assign tmp_243_fu_6526_p4 = {{mlp_inst_m1_weight_arr_V_q0[776:774]}};

assign tmp_244_fu_6546_p4 = {{mlp_inst_m1_weight_arr_V_q0[848:846]}};

assign tmp_245_fu_6566_p4 = {{mlp_inst_m1_weight_arr_V_q0[59:57]}};

assign tmp_246_fu_10097_p4 = {{select_ln126_fu_7775_p3[219:209]}};

assign tmp_247_fu_6586_p4 = {{mlp_inst_m1_weight_arr_V_q0[131:129]}};

assign tmp_248_fu_6606_p4 = {{mlp_inst_m1_weight_arr_V_q0[203:201]}};

assign tmp_249_fu_6626_p4 = {{mlp_inst_m1_weight_arr_V_q0[275:273]}};

assign tmp_24_fu_2486_p4 = {{mlp_inst_m1_weight_arr_V_q0[8:6]}};

assign tmp_250_fu_6646_p4 = {{mlp_inst_m1_weight_arr_V_q0[347:345]}};

assign tmp_251_fu_6666_p4 = {{mlp_inst_m1_weight_arr_V_q0[419:417]}};

assign tmp_252_fu_6686_p4 = {{mlp_inst_m1_weight_arr_V_q0[491:489]}};

assign tmp_253_fu_6706_p4 = {{mlp_inst_m1_weight_arr_V_q0[563:561]}};

assign tmp_254_fu_6726_p4 = {{mlp_inst_m1_weight_arr_V_q0[635:633]}};

assign tmp_255_fu_6746_p4 = {{mlp_inst_m1_weight_arr_V_q0[707:705]}};

assign tmp_256_fu_6766_p4 = {{mlp_inst_m1_weight_arr_V_q0[779:777]}};

assign tmp_257_fu_6786_p4 = {{mlp_inst_m1_weight_arr_V_q0[851:849]}};

assign tmp_258_fu_6806_p4 = {{mlp_inst_m1_weight_arr_V_q0[62:60]}};

assign tmp_259_fu_10219_p4 = {{select_ln126_fu_7775_p3[230:220]}};

assign tmp_25_fu_8023_p4 = {{select_ln126_fu_7775_p3[32:22]}};

assign tmp_260_fu_6826_p4 = {{mlp_inst_m1_weight_arr_V_q0[134:132]}};

assign tmp_261_fu_6846_p4 = {{mlp_inst_m1_weight_arr_V_q0[206:204]}};

assign tmp_262_fu_6866_p4 = {{mlp_inst_m1_weight_arr_V_q0[278:276]}};

assign tmp_263_fu_6886_p4 = {{mlp_inst_m1_weight_arr_V_q0[350:348]}};

assign tmp_264_fu_6906_p4 = {{mlp_inst_m1_weight_arr_V_q0[422:420]}};

assign tmp_265_fu_6926_p4 = {{mlp_inst_m1_weight_arr_V_q0[494:492]}};

assign tmp_266_fu_6946_p4 = {{mlp_inst_m1_weight_arr_V_q0[566:564]}};

assign tmp_267_fu_6966_p4 = {{mlp_inst_m1_weight_arr_V_q0[638:636]}};

assign tmp_268_fu_6986_p4 = {{mlp_inst_m1_weight_arr_V_q0[710:708]}};

assign tmp_269_fu_7006_p4 = {{mlp_inst_m1_weight_arr_V_q0[782:780]}};

assign tmp_26_fu_2506_p4 = {{mlp_inst_m1_weight_arr_V_q0[80:78]}};

assign tmp_270_fu_7026_p4 = {{mlp_inst_m1_weight_arr_V_q0[854:852]}};

assign tmp_271_fu_7046_p4 = {{mlp_inst_m1_weight_arr_V_q0[65:63]}};

assign tmp_272_fu_10341_p4 = {{select_ln126_fu_7775_p3[241:231]}};

assign tmp_273_fu_7066_p4 = {{mlp_inst_m1_weight_arr_V_q0[137:135]}};

assign tmp_274_fu_7086_p4 = {{mlp_inst_m1_weight_arr_V_q0[209:207]}};

assign tmp_275_fu_7106_p4 = {{mlp_inst_m1_weight_arr_V_q0[281:279]}};

assign tmp_276_fu_7126_p4 = {{mlp_inst_m1_weight_arr_V_q0[353:351]}};

assign tmp_277_fu_7146_p4 = {{mlp_inst_m1_weight_arr_V_q0[425:423]}};

assign tmp_278_fu_7166_p4 = {{mlp_inst_m1_weight_arr_V_q0[497:495]}};

assign tmp_279_fu_7186_p4 = {{mlp_inst_m1_weight_arr_V_q0[569:567]}};

assign tmp_27_fu_2526_p4 = {{mlp_inst_m1_weight_arr_V_q0[152:150]}};

assign tmp_280_fu_7206_p4 = {{mlp_inst_m1_weight_arr_V_q0[641:639]}};

assign tmp_281_fu_7226_p4 = {{mlp_inst_m1_weight_arr_V_q0[713:711]}};

assign tmp_282_fu_7246_p4 = {{mlp_inst_m1_weight_arr_V_q0[785:783]}};

assign tmp_283_fu_7266_p4 = {{mlp_inst_m1_weight_arr_V_q0[857:855]}};

assign tmp_284_fu_7286_p4 = {{mlp_inst_m1_weight_arr_V_q0[68:66]}};

assign tmp_285_fu_10463_p4 = {{select_ln126_fu_7775_p3[252:242]}};

assign tmp_286_fu_7306_p4 = {{mlp_inst_m1_weight_arr_V_q0[140:138]}};

assign tmp_287_fu_7326_p4 = {{mlp_inst_m1_weight_arr_V_q0[212:210]}};

assign tmp_288_fu_7346_p4 = {{mlp_inst_m1_weight_arr_V_q0[284:282]}};

assign tmp_289_fu_7366_p4 = {{mlp_inst_m1_weight_arr_V_q0[356:354]}};

assign tmp_28_fu_2546_p4 = {{mlp_inst_m1_weight_arr_V_q0[224:222]}};

assign tmp_290_fu_7386_p4 = {{mlp_inst_m1_weight_arr_V_q0[428:426]}};

assign tmp_291_fu_7406_p4 = {{mlp_inst_m1_weight_arr_V_q0[500:498]}};

assign tmp_292_fu_7426_p4 = {{mlp_inst_m1_weight_arr_V_q0[572:570]}};

assign tmp_293_fu_7446_p4 = {{mlp_inst_m1_weight_arr_V_q0[644:642]}};

assign tmp_294_fu_7466_p4 = {{mlp_inst_m1_weight_arr_V_q0[716:714]}};

assign tmp_295_fu_7486_p4 = {{mlp_inst_m1_weight_arr_V_q0[788:786]}};

assign tmp_296_fu_7506_p4 = {{mlp_inst_m1_weight_arr_V_q0[860:858]}};

assign tmp_297_fu_7526_p4 = {{mlp_inst_m1_weight_arr_V_q0[71:69]}};

assign tmp_298_fu_10585_p4 = {{select_ln126_fu_7775_p3[263:253]}};

assign tmp_299_fu_7546_p4 = {{mlp_inst_m1_weight_arr_V_q0[143:141]}};

assign tmp_29_fu_2566_p4 = {{mlp_inst_m1_weight_arr_V_q0[296:294]}};

assign tmp_2_fu_1982_p4 = {{mlp_inst_m1_weight_arr_V_q0[74:72]}};

assign tmp_300_fu_7566_p4 = {{mlp_inst_m1_weight_arr_V_q0[215:213]}};

assign tmp_301_fu_7586_p4 = {{mlp_inst_m1_weight_arr_V_q0[287:285]}};

assign tmp_302_fu_7606_p4 = {{mlp_inst_m1_weight_arr_V_q0[359:357]}};

assign tmp_303_fu_7626_p4 = {{mlp_inst_m1_weight_arr_V_q0[431:429]}};

assign tmp_304_fu_7646_p4 = {{mlp_inst_m1_weight_arr_V_q0[503:501]}};

assign tmp_305_fu_7666_p4 = {{mlp_inst_m1_weight_arr_V_q0[575:573]}};

assign tmp_306_fu_7686_p4 = {{mlp_inst_m1_weight_arr_V_q0[647:645]}};

assign tmp_307_fu_7706_p4 = {{mlp_inst_m1_weight_arr_V_q0[719:717]}};

assign tmp_308_fu_7726_p4 = {{mlp_inst_m1_weight_arr_V_q0[791:789]}};

assign tmp_309_fu_7746_p4 = {{mlp_inst_m1_weight_arr_V_q0[863:861]}};

assign tmp_30_fu_2586_p4 = {{mlp_inst_m1_weight_arr_V_q0[368:366]}};

assign tmp_310_fu_10716_p4 = {{select_ln126_fu_7775_p3[274:264]}};

assign tmp_311_fu_10943_p4 = {{select_ln126_fu_7775_p3[285:275]}};

assign tmp_312_fu_11137_p4 = {{select_ln126_fu_7775_p3[296:286]}};

assign tmp_313_fu_11331_p4 = {{select_ln126_fu_7775_p3[307:297]}};

assign tmp_314_fu_11525_p4 = {{select_ln126_fu_7775_p3[318:308]}};

assign tmp_315_fu_11719_p4 = {{select_ln126_fu_7775_p3[329:319]}};

assign tmp_316_fu_11913_p4 = {{select_ln126_fu_7775_p3[340:330]}};

assign tmp_317_fu_12107_p4 = {{select_ln126_fu_7775_p3[351:341]}};

assign tmp_318_fu_12301_p4 = {{select_ln126_fu_7775_p3[362:352]}};

assign tmp_319_fu_12495_p4 = {{select_ln126_fu_7775_p3[373:363]}};

assign tmp_31_fu_2606_p4 = {{mlp_inst_m1_weight_arr_V_q0[440:438]}};

assign tmp_320_fu_12689_p4 = {{select_ln126_fu_7775_p3[384:374]}};

assign tmp_321_fu_12883_p4 = {{select_ln126_fu_7775_p3[395:385]}};

assign tmp_322_fu_13077_p4 = {{select_ln126_fu_7775_p3[406:396]}};

assign tmp_323_fu_13271_p4 = {{select_ln126_fu_7775_p3[417:407]}};

assign tmp_324_fu_13465_p4 = {{select_ln126_fu_7775_p3[428:418]}};

assign tmp_325_fu_13659_p4 = {{select_ln126_fu_7775_p3[439:429]}};

assign tmp_326_fu_13853_p4 = {{select_ln126_fu_7775_p3[450:440]}};

assign tmp_327_fu_14047_p4 = {{select_ln126_fu_7775_p3[461:451]}};

assign tmp_328_fu_14241_p4 = {{select_ln126_fu_7775_p3[472:462]}};

assign tmp_329_fu_14435_p4 = {{select_ln126_fu_7775_p3[483:473]}};

assign tmp_32_fu_2626_p4 = {{mlp_inst_m1_weight_arr_V_q0[512:510]}};

assign tmp_330_fu_14629_p4 = {{select_ln126_fu_7775_p3[494:484]}};

assign tmp_331_fu_14823_p4 = {{select_ln126_fu_7775_p3[505:495]}};

assign tmp_332_fu_15017_p4 = {{select_ln126_fu_7775_p3[516:506]}};

assign tmp_333_fu_15211_p4 = {{select_ln126_fu_7775_p3[527:517]}};

assign tmp_334_fu_16212_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{add_ln691_575_fu_16206_p2}, {add_ln691_563_fu_16189_p2}}, {add_ln691_551_fu_16172_p2}}, {add_ln691_539_fu_16155_p2}}, {add_ln691_527_fu_16138_p2}}, {add_ln691_515_fu_16121_p2}}, {add_ln691_503_fu_16104_p2}}, {add_ln691_491_fu_16087_p2}}, {add_ln691_479_fu_16070_p2}}, {add_ln691_467_fu_16053_p2}}, {add_ln691_455_fu_16036_p2}}, {add_ln691_443_fu_16019_p2}}, {add_ln691_431_fu_16002_p2}}, {add_ln691_419_fu_15985_p2}}, {add_ln691_407_fu_15968_p2}}, {add_ln691_395_fu_15951_p2}}, {add_ln691_383_fu_15934_p2}}, {add_ln691_371_fu_15917_p2}}, {add_ln691_359_fu_15900_p2}}, {add_ln691_347_fu_15883_p2}}, {add_ln691_335_fu_15866_p2}}, {add_ln691_323_fu_15849_p2}}, {add_ln691_311_fu_15832_p2}}, {add_ln691_299_fu_15815_p2}}, {add_ln691_287_fu_15798_p2}}, {add_ln691_275_fu_15781_p2}}, {add_ln691_263_fu_15764_p2}}, {add_ln691_251_fu_15747_p2}}, {add_ln691_239_fu_15730_p2}}, {add_ln691_227_fu_15713_p2}}, {add_ln691_215_fu_15696_p2}}, {add_ln691_203_fu_15679_p2}}, {add_ln691_191_fu_15662_p2}}, {add_ln691_179_fu_15645_p2}}, {add_ln691_167_fu_15628_p2}}, {add_ln691_155_fu_15611_p2}}, {add_ln691_143_fu_15594_p2}}, {add_ln691_131_fu_15577_p2}}, {add_ln691_119_fu_15560_p2}}, {add_ln691_107_fu_15543_p2}}, {add_ln691_95_fu_15526_p2}}, {add_ln691_83_fu_15509_p2}}, {add_ln691_71_fu_15492_p2}}, {add_ln691_59_fu_15475_p2}}, {add_ln691_47_fu_15458_p2}}, {add_ln691_35_fu_15441_p2}}, {add_ln691_23_fu_15424_p2}}, {add_ln691_11_fu_15407_p2}};

assign tmp_335_fu_16317_p96 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{add_ln691_575_fu_16206_p2}, {5'd0}}, {add_ln691_563_fu_16189_p2}}, {5'd0}}, {add_ln691_551_fu_16172_p2}}, {5'd0}}, {add_ln691_539_fu_16155_p2}}, {5'd0}}, {add_ln691_527_fu_16138_p2}}, {5'd0}}, {add_ln691_515_fu_16121_p2}}, {5'd0}}, {add_ln691_503_fu_16104_p2}}, {5'd0}}, {add_ln691_491_fu_16087_p2}}, {5'd0}}, {add_ln691_479_fu_16070_p2}}, {5'd0}}, {add_ln691_467_fu_16053_p2}}, {5'd0}}, {add_ln691_455_fu_16036_p2}}, {5'd0}}, {add_ln691_443_fu_16019_p2}}, {5'd0}}, {add_ln691_431_fu_16002_p2}}, {5'd0}}, {add_ln691_419_fu_15985_p2}}, {5'd0}}, {add_ln691_407_fu_15968_p2}}, {5'd0}}, {add_ln691_395_fu_15951_p2}}, {5'd0}}, {add_ln691_383_fu_15934_p2}}, {5'd0}}, {add_ln691_371_fu_15917_p2}}, {5'd0}}, {add_ln691_359_fu_15900_p2}}, {5'd0}}, {add_ln691_347_fu_15883_p2}}, {5'd0}}, {add_ln691_335_fu_15866_p2}}, {5'd0}}, {add_ln691_323_fu_15849_p2}}, {5'd0}}, {add_ln691_311_fu_15832_p2}}, {5'd0}}, {add_ln691_299_fu_15815_p2}}, {5'd0}}, {add_ln691_287_fu_15798_p2}}, {5'd0}}, {add_ln691_275_fu_15781_p2}}, {5'd0}}, {add_ln691_263_fu_15764_p2}}, {5'd0}}, {add_ln691_251_fu_15747_p2}}, {5'd0}}, {add_ln691_239_fu_15730_p2}}, {5'd0}}, {add_ln691_227_fu_15713_p2}}, {5'd0}}, {add_ln691_215_fu_15696_p2}}, {5'd0}}, {add_ln691_203_fu_15679_p2}}, {5'd0}}, {add_ln691_191_fu_15662_p2}}, {5'd0}}, {add_ln691_179_fu_15645_p2}}, {5'd0}}, {add_ln691_167_fu_15628_p2}}, {5'd0}}, {add_ln691_155_fu_15611_p2}}, {5'd0}}, {add_ln691_143_fu_15594_p2}}, {5'd0}}, {add_ln691_131_fu_15577_p2}}, {5'd0}}, {add_ln691_119_fu_15560_p2}}, {5'd0}}, {add_ln691_107_fu_15543_p2}}, {5'd0}}, {add_ln691_95_fu_15526_p2}}, {5'd0}}, {add_ln691_83_fu_15509_p2}}, {5'd0}}, {add_ln691_71_fu_15492_p2}}, {5'd0}}, {add_ln691_59_fu_15475_p2}}, {5'd0}}, {add_ln691_47_fu_15458_p2}}, {5'd0}}, {add_ln691_35_fu_15441_p2}}, {5'd0}}, {add_ln691_23_fu_15424_p2}}, {5'd0}}, {add_ln691_11_fu_15407_p2}};

assign tmp_33_fu_2646_p4 = {{mlp_inst_m1_weight_arr_V_q0[584:582]}};

assign tmp_34_fu_2666_p4 = {{mlp_inst_m1_weight_arr_V_q0[656:654]}};

assign tmp_35_fu_2686_p4 = {{mlp_inst_m1_weight_arr_V_q0[728:726]}};

assign tmp_36_fu_2706_p4 = {{mlp_inst_m1_weight_arr_V_q0[800:798]}};

assign tmp_37_fu_2726_p4 = {{mlp_inst_m1_weight_arr_V_q0[11:9]}};

assign tmp_38_fu_8145_p4 = {{select_ln126_fu_7775_p3[43:33]}};

assign tmp_39_fu_2746_p4 = {{mlp_inst_m1_weight_arr_V_q0[83:81]}};

assign tmp_3_fu_2006_p4 = {{mlp_inst_m1_weight_arr_V_q0[146:144]}};

assign tmp_40_fu_2766_p4 = {{mlp_inst_m1_weight_arr_V_q0[155:153]}};

assign tmp_41_fu_2786_p4 = {{mlp_inst_m1_weight_arr_V_q0[227:225]}};

assign tmp_42_fu_2806_p4 = {{mlp_inst_m1_weight_arr_V_q0[299:297]}};

assign tmp_43_fu_2826_p4 = {{mlp_inst_m1_weight_arr_V_q0[371:369]}};

assign tmp_44_fu_2846_p4 = {{mlp_inst_m1_weight_arr_V_q0[443:441]}};

assign tmp_45_fu_2866_p4 = {{mlp_inst_m1_weight_arr_V_q0[515:513]}};

assign tmp_46_fu_2886_p4 = {{mlp_inst_m1_weight_arr_V_q0[587:585]}};

assign tmp_47_fu_2906_p4 = {{mlp_inst_m1_weight_arr_V_q0[659:657]}};

assign tmp_48_fu_2926_p4 = {{mlp_inst_m1_weight_arr_V_q0[731:729]}};

assign tmp_49_fu_2946_p4 = {{mlp_inst_m1_weight_arr_V_q0[803:801]}};

assign tmp_4_fu_2030_p4 = {{mlp_inst_m1_weight_arr_V_q0[218:216]}};

assign tmp_50_fu_2966_p4 = {{mlp_inst_m1_weight_arr_V_q0[14:12]}};

assign tmp_51_fu_8267_p4 = {{select_ln126_fu_7775_p3[54:44]}};

assign tmp_52_fu_2986_p4 = {{mlp_inst_m1_weight_arr_V_q0[86:84]}};

assign tmp_53_fu_3006_p4 = {{mlp_inst_m1_weight_arr_V_q0[158:156]}};

assign tmp_54_fu_3026_p4 = {{mlp_inst_m1_weight_arr_V_q0[230:228]}};

assign tmp_55_fu_3046_p4 = {{mlp_inst_m1_weight_arr_V_q0[302:300]}};

assign tmp_56_fu_3066_p4 = {{mlp_inst_m1_weight_arr_V_q0[374:372]}};

assign tmp_57_fu_3086_p4 = {{mlp_inst_m1_weight_arr_V_q0[446:444]}};

assign tmp_58_fu_3106_p4 = {{mlp_inst_m1_weight_arr_V_q0[518:516]}};

assign tmp_59_fu_3126_p4 = {{mlp_inst_m1_weight_arr_V_q0[590:588]}};

assign tmp_5_fu_2054_p4 = {{mlp_inst_m1_weight_arr_V_q0[290:288]}};

assign tmp_60_fu_3146_p4 = {{mlp_inst_m1_weight_arr_V_q0[662:660]}};

assign tmp_61_fu_3166_p4 = {{mlp_inst_m1_weight_arr_V_q0[734:732]}};

assign tmp_62_fu_3186_p4 = {{mlp_inst_m1_weight_arr_V_q0[806:804]}};

assign tmp_63_fu_3206_p4 = {{mlp_inst_m1_weight_arr_V_q0[17:15]}};

assign tmp_64_fu_8389_p4 = {{select_ln126_fu_7775_p3[65:55]}};

assign tmp_65_fu_3226_p4 = {{mlp_inst_m1_weight_arr_V_q0[89:87]}};

assign tmp_66_fu_3246_p4 = {{mlp_inst_m1_weight_arr_V_q0[161:159]}};

assign tmp_67_fu_3266_p4 = {{mlp_inst_m1_weight_arr_V_q0[233:231]}};

assign tmp_68_fu_3286_p4 = {{mlp_inst_m1_weight_arr_V_q0[305:303]}};

assign tmp_69_fu_3306_p4 = {{mlp_inst_m1_weight_arr_V_q0[377:375]}};

assign tmp_6_fu_2078_p4 = {{mlp_inst_m1_weight_arr_V_q0[362:360]}};

assign tmp_70_fu_3326_p4 = {{mlp_inst_m1_weight_arr_V_q0[449:447]}};

assign tmp_71_fu_3346_p4 = {{mlp_inst_m1_weight_arr_V_q0[521:519]}};

assign tmp_72_fu_3366_p4 = {{mlp_inst_m1_weight_arr_V_q0[593:591]}};

assign tmp_73_fu_3386_p4 = {{mlp_inst_m1_weight_arr_V_q0[665:663]}};

assign tmp_74_fu_3406_p4 = {{mlp_inst_m1_weight_arr_V_q0[737:735]}};

assign tmp_75_fu_3426_p4 = {{mlp_inst_m1_weight_arr_V_q0[809:807]}};

assign tmp_76_fu_3446_p4 = {{mlp_inst_m1_weight_arr_V_q0[20:18]}};

assign tmp_77_fu_8511_p4 = {{select_ln126_fu_7775_p3[76:66]}};

assign tmp_78_fu_3466_p4 = {{mlp_inst_m1_weight_arr_V_q0[92:90]}};

assign tmp_79_fu_3486_p4 = {{mlp_inst_m1_weight_arr_V_q0[164:162]}};

assign tmp_7_fu_2102_p4 = {{mlp_inst_m1_weight_arr_V_q0[434:432]}};

assign tmp_80_fu_3506_p4 = {{mlp_inst_m1_weight_arr_V_q0[236:234]}};

assign tmp_81_fu_3526_p4 = {{mlp_inst_m1_weight_arr_V_q0[308:306]}};

assign tmp_82_fu_3546_p4 = {{mlp_inst_m1_weight_arr_V_q0[380:378]}};

assign tmp_83_fu_3566_p4 = {{mlp_inst_m1_weight_arr_V_q0[452:450]}};

assign tmp_84_fu_3586_p4 = {{mlp_inst_m1_weight_arr_V_q0[524:522]}};

assign tmp_85_fu_3606_p4 = {{mlp_inst_m1_weight_arr_V_q0[596:594]}};

assign tmp_86_fu_3626_p4 = {{mlp_inst_m1_weight_arr_V_q0[668:666]}};

assign tmp_87_fu_3646_p4 = {{mlp_inst_m1_weight_arr_V_q0[740:738]}};

assign tmp_88_fu_3666_p4 = {{mlp_inst_m1_weight_arr_V_q0[812:810]}};

assign tmp_89_fu_3686_p4 = {{mlp_inst_m1_weight_arr_V_q0[23:21]}};

assign tmp_8_fu_2126_p4 = {{mlp_inst_m1_weight_arr_V_q0[506:504]}};

assign tmp_90_fu_8633_p4 = {{select_ln126_fu_7775_p3[87:77]}};

assign tmp_91_fu_3706_p4 = {{mlp_inst_m1_weight_arr_V_q0[95:93]}};

assign tmp_92_fu_3726_p4 = {{mlp_inst_m1_weight_arr_V_q0[167:165]}};

assign tmp_93_fu_3746_p4 = {{mlp_inst_m1_weight_arr_V_q0[239:237]}};

assign tmp_94_fu_3766_p4 = {{mlp_inst_m1_weight_arr_V_q0[311:309]}};

assign tmp_95_fu_3786_p4 = {{mlp_inst_m1_weight_arr_V_q0[383:381]}};

assign tmp_96_fu_3806_p4 = {{mlp_inst_m1_weight_arr_V_q0[455:453]}};

assign tmp_97_fu_3826_p4 = {{mlp_inst_m1_weight_arr_V_q0[527:525]}};

assign tmp_98_fu_3846_p4 = {{mlp_inst_m1_weight_arr_V_q0[599:597]}};

assign tmp_99_fu_3866_p4 = {{mlp_inst_m1_weight_arr_V_q0[671:669]}};

assign tmp_9_fu_2150_p4 = {{mlp_inst_m1_weight_arr_V_q0[578:576]}};

assign tmp_cast_fu_1670_p3 = {{select_ln121_1_fu_1663_p3}, {4'd0}};

assign tmp_s_fu_2174_p4 = {{mlp_inst_m1_weight_arr_V_q0[650:648]}};

assign trunc_ln145_10_fu_1834_p4 = {{cache_window_sm_dout[90:88]}};

assign trunc_ln145_1_fu_1824_p4 = {{cache_window_sm_dout[82:80]}};

assign trunc_ln145_2_fu_1744_p4 = {{cache_window_sm_dout[18:16]}};

assign trunc_ln145_3_fu_1754_p4 = {{cache_window_sm_dout[26:24]}};

assign trunc_ln145_4_fu_1764_p4 = {{cache_window_sm_dout[34:32]}};

assign trunc_ln145_5_fu_1774_p4 = {{cache_window_sm_dout[42:40]}};

assign trunc_ln145_6_fu_1784_p4 = {{cache_window_sm_dout[50:48]}};

assign trunc_ln145_7_fu_1794_p4 = {{cache_window_sm_dout[58:56]}};

assign trunc_ln145_8_fu_1804_p4 = {{cache_window_sm_dout[66:64]}};

assign trunc_ln145_9_fu_1814_p4 = {{cache_window_sm_dout[74:72]}};

assign trunc_ln145_fu_1730_p1 = cache_window_sm_dout[2:0];

assign trunc_ln145_s_fu_1734_p4 = {{cache_window_sm_dout[10:8]}};

assign trunc_ln215_1_fu_1652_p1 = cot_reg_1547[4:0];

assign trunc_ln215_2_fu_1964_p1 = mlp_inst_m1_weight_arr_V_q0[2:0];

assign trunc_ln215_fu_1649_p1 = add_ln121_reg_16555[4:0];

assign trunc_ln691_fu_7785_p1 = select_ln126_fu_7775_p3[10:0];

assign vec_o_data_M_elems_V_fu_7769_p3 = {{select_ln121_2_reg_16619}, {select_ln121_2_reg_16619}};

assign xor_ln120_fu_1595_p2 = (icmp_ln121_fu_1581_p2 ^ 1'd1);

assign zext_ln121_1_fu_1645_p1 = add_ln121_reg_16555;

assign zext_ln121_fu_1570_p1 = ap_phi_mux_cot_phi_fu_1551_p4;

assign zext_ln215_1_fu_1692_p1 = add_ln215_fu_1686_p2;

assign zext_ln215_fu_1683_p1 = select_ln121_reg_16562;

endmodule //MLP0_matmul_step2_mac_1
// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) module MLP0_matmul_step2_mac_1_mlp_inst_m1_bias_arr_V_rom (
addr0, ce0, q0, clk);

parameter DWIDTH = 264;
parameter AWIDTH = 5;
parameter MEM_SIZE = 32;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_matmul_step2_mac_1_mlp_inst_m1_bias_arr_V_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_matmul_step2_mac_1_mlp_inst_m1_bias_arr_V(
    reset,
    clk,
    address0,
    ce0,
    q0);

parameter DataWidth = 32'd264;
parameter AddressRange = 32'd32;
parameter AddressWidth = 32'd5;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;



MLP0_matmul_step2_mac_1_mlp_inst_m1_bias_arr_V_rom MLP0_matmul_step2_mac_1_mlp_inst_m1_bias_arr_V_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "block" *) module MLP0_matmul_step2_mac_1_mlp_inst_m1_weight_arr_V_rom (
addr0, ce0, q0, clk);

parameter DWIDTH = 864;
parameter AWIDTH = 9;
parameter MEM_SIZE = 512;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "block" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_matmul_step2_mac_1_mlp_inst_m1_weight_arr_V_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_matmul_step2_mac_1_mlp_inst_m1_weight_arr_V(
    reset,
    clk,
    address0,
    ce0,
    q0);

parameter DataWidth = 32'd864;
parameter AddressRange = 32'd512;
parameter AddressWidth = 32'd9;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;



MLP0_matmul_step2_mac_1_mlp_inst_m1_weight_arr_V_rom MLP0_matmul_step2_mac_1_mlp_inst_m1_weight_arr_V_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "distributed" *) module MLP0_matmul_step2_mac_mlp_inst_m2_bias_arr_V_rom (
addr0, ce0, q0, clk);

parameter DWIDTH = 156;
parameter AWIDTH = 4;
parameter MEM_SIZE = 16;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "distributed" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_matmul_step2_mac_mlp_inst_m2_bias_arr_V_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_matmul_step2_mac_mlp_inst_m2_bias_arr_V(
    reset,
    clk,
    address0,
    ce0,
    q0);

parameter DataWidth = 32'd156;
parameter AddressRange = 32'd16;
parameter AddressWidth = 32'd4;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;



MLP0_matmul_step2_mac_mlp_inst_m2_bias_arr_V_rom MLP0_matmul_step2_mac_mlp_inst_m2_bias_arr_V_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================
`timescale 1 ns / 1 ps
(* rom_style = "block" *) module MLP0_matmul_step2_mac_mlp_inst_m2_weight_arr_V_rom (
addr0, ce0, q0, clk);

parameter DWIDTH = 864;
parameter AWIDTH = 9;
parameter MEM_SIZE = 512;

input[AWIDTH-1:0] addr0;
input ce0;
output reg[DWIDTH-1:0] q0;
input clk;

(* ram_style = "block" *)reg [DWIDTH-1:0] ram[0:MEM_SIZE-1];

initial begin
    $readmemh("/mnt/f/master_MLsys/USTC_spring/EDA/Project/HG-PIPE/SPINAL/src/main/verilog/MLP0/MLP0_matmul_step2_mac_mlp_inst_m2_weight_arr_V_rom.dat", ram);
end



always @(posedge clk)  
begin 
    if (ce0) 
    begin
        q0 <= ram[addr0];
    end
end



endmodule

`timescale 1 ns / 1 ps
module MLP0_matmul_step2_mac_mlp_inst_m2_weight_arr_V(
    reset,
    clk,
    address0,
    ce0,
    q0);

parameter DataWidth = 32'd864;
parameter AddressRange = 32'd512;
parameter AddressWidth = 32'd9;
input reset;
input clk;
input[AddressWidth - 1:0] address0;
input ce0;
output[DataWidth - 1:0] q0;



MLP0_matmul_step2_mac_mlp_inst_m2_weight_arr_V_rom MLP0_matmul_step2_mac_mlp_inst_m2_weight_arr_V_rom_U(
    .clk( clk ),
    .addr0( address0 ),
    .ce0( ce0 ),
    .q0( q0 ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_mul_32s_27s_39_7_1_Multiplier_0(clk, ce, a, b, p);
input clk;
input ce;
input[32 - 1 : 0] a; 
input[27 - 1 : 0] b; 
output[39 - 1 : 0] p;

reg signed [32 - 1 : 0] a_reg0;
reg signed [27 - 1 : 0] b_reg0;
wire signed [39 - 1 : 0] tmp_product;
reg signed [39 - 1 : 0] buff0;
reg signed [39 - 1 : 0] buff1;
reg signed [39 - 1 : 0] buff2;
reg signed [39 - 1 : 0] buff3;
reg signed [39 - 1 : 0] buff4;

assign p = buff4;
assign tmp_product = a_reg0 * b_reg0;
always @ (posedge clk) begin
    if (ce) begin
        a_reg0 <= a;
        b_reg0 <= b;
        buff0 <= tmp_product;
        buff1 <= buff0;
        buff2 <= buff1;
        buff3 <= buff2;
        buff4 <= buff3;
    end
end
endmodule
`timescale 1 ns / 1 ps
module MLP0_mul_32s_27s_39_7_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
output[dout_WIDTH - 1:0] dout;



MLP0_mul_32s_27s_39_7_1_Multiplier_0 MLP0_mul_32s_27s_39_7_1_Multiplier_0_U(
    .clk( clk ),
    .ce( ce ),
    .a( din0 ),
    .b( din1 ),
    .p( dout ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

(* use_dsp = "no" *) module MLP0_mul_3ns_3s_6_1_1_Mul_LUT_2(a, b, p);
input[3 - 1 : 0] a; 
input[3 - 1 : 0] b; 
output[6 - 1 : 0] p;

assign p = $signed({1'b0, a}) * $signed(b);
endmodule
`timescale 1 ns / 1 ps
module MLP0_mul_3ns_3s_6_1_1(
    din0,
    din1,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
output[dout_WIDTH - 1:0] dout;



MLP0_mul_3ns_3s_6_1_1_Mul_LUT_2 MLP0_mul_3ns_3s_6_1_1_Mul_LUT_2_U(
    .a( din0 ),
    .b( din1 ),
    .p( dout ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

(* use_dsp = "no" *) module MLP0_mul_3s_3ns_6_1_1_Mul_LUT_1(a, b, p);
input[3 - 1 : 0] a; 
input[3 - 1 : 0] b; 
output[6 - 1 : 0] p;

assign p = $signed(a) * $signed({1'b0, b});
endmodule
`timescale 1 ns / 1 ps
module MLP0_mul_3s_3ns_6_1_1(
    din0,
    din1,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
output[dout_WIDTH - 1:0] dout;



MLP0_mul_3s_3ns_6_1_1_Mul_LUT_1 MLP0_mul_3s_3ns_6_1_1_Mul_LUT_1_U(
    .a( din0 ),
    .b( din1 ),
    .p( dout ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

(* use_dsp = "no" *) module MLP0_mul_3s_3s_6_1_1_Mul_LUT_0(a, b, p);
input[3 - 1 : 0] a; 
input[3 - 1 : 0] b; 
output[6 - 1 : 0] p;

assign p = $signed(a) * $signed(b);
endmodule
`timescale 1 ns / 1 ps
module MLP0_mul_3s_3s_6_1_1(
    din0,
    din1,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
output[dout_WIDTH - 1:0] dout;



MLP0_mul_3s_3s_6_1_1_Mul_LUT_0 MLP0_mul_3s_3s_6_1_1_Mul_LUT_0_U(
    .a( din0 ),
    .b( din1 ),
    .p( dout ));

endmodule


`timescale 1 ns / 1 ps

  module MLP0_mul_mul_15s_12ns_27_4_1_DSP48_1(clk, rst, ce, a, b, p);
input clk;
input rst;
input ce;
input signed [15 - 1 : 0] a;
input [12 - 1 : 0] b;
output signed [27 - 1 : 0] p;

reg signed [27 - 1 : 0] p_reg; 

reg signed [15 - 1 : 0] a_reg; 
reg [12 - 1 : 0] b_reg; 

reg signed [27 - 1 : 0] p_reg_tmp; 

always @ (posedge clk) begin
    if (ce) begin
        a_reg <= a;
        b_reg <= b;
        p_reg_tmp <= $signed (a_reg) * $signed ({1'b0, b_reg});
        p_reg <= p_reg_tmp;
    end
end

assign p = p_reg;

endmodule
`timescale 1 ns / 1 ps
module MLP0_mul_mul_15s_12ns_27_4_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
output[dout_WIDTH - 1:0] dout;



MLP0_mul_mul_15s_12ns_27_4_1_DSP48_1 MLP0_mul_mul_15s_12ns_27_4_1_DSP48_1_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .a( din0 ),
    .b( din1 ),
    .p( dout ));

endmodule


`timescale 1 ns / 1 ps

  module MLP0_mul_mul_15s_15s_30_4_1_DSP48_2(clk, rst, ce, a, b, p);
input clk;
input rst;
input ce;
input signed [15 - 1 : 0] a;
input signed [15 - 1 : 0] b;
output signed [30 - 1 : 0] p;

reg signed [30 - 1 : 0] p_reg; 

reg signed [15 - 1 : 0] a_reg; 
reg signed [15 - 1 : 0] b_reg; 

reg signed [30 - 1 : 0] p_reg_tmp; 

always @ (posedge clk) begin
    if (ce) begin
        a_reg <= a;
        b_reg <= b;
        p_reg_tmp <= $signed (a_reg) * $signed (b_reg);
        p_reg <= p_reg_tmp;
    end
end

assign p = p_reg;

endmodule
`timescale 1 ns / 1 ps
module MLP0_mul_mul_15s_15s_30_4_1(
    clk,
    reset,
    ce,
    din0,
    din1,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
output[dout_WIDTH - 1:0] dout;



MLP0_mul_mul_15s_15s_30_4_1_DSP48_2 MLP0_mul_mul_15s_15s_30_4_1_DSP48_2_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .a( din0 ),
    .b( din1 ),
    .p( dout ));

endmodule

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_adapt_2_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_adapt_2_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_adapt_2_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_adapt_2_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_adapt_3_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_adapt_3_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_adapt_3_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_adapt_3_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_adapt_4_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_adapt_4_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_adapt_4_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_adapt_4_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_adapt_5_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_adapt_5_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_adapt_5_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_adapt_5_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_gelu_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_gelu_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_gelu_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_gelu_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_layernorm_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_layernorm_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_layernorm_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_layernorm_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_matmul_1_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_matmul_1_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_matmul_1_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_matmul_1_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_do_matmul_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_do_matmul_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_do_matmul_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_do_matmul_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_matmul_step1_cache_window_1_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_matmul_step1_cache_window_1_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_matmul_step1_cache_window_1_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_matmul_step1_cache_window_1_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_matmul_step1_cache_window_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_matmul_step1_cache_window_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_matmul_step1_cache_window_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_matmul_step1_cache_window_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_matmul_step2_mac_1_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_matmul_step2_mac_1_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_matmul_step2_mac_1_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_matmul_step2_mac_1_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_matmul_step2_mac_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd1;
parameter DEPTH = 2'd2;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_matmul_step2_mac_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd1;
parameter DEPTH       = 2'd2;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 2'd1;
            if (mOutPtr == 2'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 2'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 2'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_matmul_step2_mac_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_matmul_step2_mac_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

module MLP0_start_for_stream_merge_U0_shiftReg (
    clk,
    data,
    ce,
    a,
    q);

parameter DATA_WIDTH = 32'd1;
parameter ADDR_WIDTH = 32'd2;
parameter DEPTH = 3'd4;

input clk;
input [DATA_WIDTH-1:0] data;
input ce;
input [ADDR_WIDTH-1:0] a;
output [DATA_WIDTH-1:0] q;

reg[DATA_WIDTH-1:0] SRL_SIG [0:DEPTH-1];
integer i;

always @ (posedge clk)
    begin
        if (ce)
        begin
            for (i=0;i<DEPTH-1;i=i+1)
                SRL_SIG[i+1] <= SRL_SIG[i];
            SRL_SIG[0] <= data;
        end
    end

assign q = SRL_SIG[a];

endmodule

module MLP0_start_for_stream_merge_U0 (
    clk,
    reset,
    if_empty_n,
    if_read_ce,
    if_read,
    if_dout,
    if_full_n,
    if_write_ce,
    if_write,
    if_din);

parameter MEM_STYLE   = "shiftreg";
parameter DATA_WIDTH  = 32'd1;
parameter ADDR_WIDTH  = 32'd2;
parameter DEPTH       = 3'd4;

input clk;
input reset;
output if_empty_n;
input if_read_ce;
input if_read;
output[DATA_WIDTH - 1:0] if_dout;
output if_full_n;
input if_write_ce;
input if_write;
input[DATA_WIDTH - 1:0] if_din;

wire[ADDR_WIDTH - 1:0] shiftReg_addr ;
wire[DATA_WIDTH - 1:0] shiftReg_data, shiftReg_q;
wire                     shiftReg_ce;
reg[ADDR_WIDTH:0] mOutPtr = ~{(ADDR_WIDTH+1){1'b0}};
reg internal_empty_n = 0;
reg internal_full_n = 1;

assign if_full_n = internal_full_n;
assign if_empty_n = internal_empty_n;
assign shiftReg_data = if_din;
assign if_dout = shiftReg_q;

always @ (posedge clk) begin
    if (reset == 1'b1)
    begin
        mOutPtr <= ~{ADDR_WIDTH+1{1'b0}};
        internal_empty_n <= 1'b0;
        internal_full_n <= 1'b1;
    end
    else begin
        if (((if_read & if_read_ce) == 1 & internal_empty_n == 1) && 
            ((if_write & if_write_ce) == 0 | internal_full_n == 0))
        begin
            mOutPtr <= mOutPtr - 3'd1;
            if (mOutPtr == 3'd0)
                internal_empty_n <= 1'b0;
            internal_full_n <= 1'b1;
        end 
        else if (((if_read & if_read_ce) == 0 | internal_empty_n == 0) && 
            ((if_write & if_write_ce) == 1 & internal_full_n == 1))
        begin
            mOutPtr <= mOutPtr + 3'd1;
            internal_empty_n <= 1'b1;
            if (mOutPtr == DEPTH - 3'd2)
                internal_full_n <= 1'b0;
        end 
    end
end

assign shiftReg_addr = mOutPtr[ADDR_WIDTH] == 1'b0 ? mOutPtr[ADDR_WIDTH-1:0]:{ADDR_WIDTH{1'b0}};
assign shiftReg_ce = (if_write & if_write_ce) & internal_full_n;

MLP0_start_for_stream_merge_U0_shiftReg 
#(
    .DATA_WIDTH(DATA_WIDTH),
    .ADDR_WIDTH(ADDR_WIDTH),
    .DEPTH(DEPTH))
U_MLP0_start_for_stream_merge_U0_ram (
    .clk(clk),
    .data(shiftReg_data),
    .ce(shiftReg_ce),
    .a(shiftReg_addr),
    .q(shiftReg_q));

endmodule  

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_stream_copy (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        i_stream_V_TDATA,
        i_stream_V_TVALID,
        i_stream_V_TREADY,
        main_sm_din,
        main_sm_full_n,
        main_sm_write,
        resi_i_sm_din,
        resi_i_sm_full_n,
        resi_i_sm_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] i_stream_V_TDATA;
input   i_stream_V_TVALID;
output   i_stream_V_TREADY;
output  [31:0] main_sm_din;
input   main_sm_full_n;
output   main_sm_write;
output  [31:0] resi_i_sm_din;
input   resi_i_sm_full_n;
output   resi_i_sm_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg i_stream_V_TREADY;
reg main_sm_write;
reg resi_i_sm_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    i_stream_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln186_fu_79_p2;
reg    main_sm_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] icmp_ln186_reg_90;
reg    resi_i_sm_blk_n;
reg   [14:0] indvar_flatten_reg_62;
wire   [14:0] add_ln186_fu_73_p2;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] tmp_reg_94;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage0_01001;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 start_once_reg = 1'b0;
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln186_fu_79_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_62 <= add_ln186_fu_73_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_62 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln186_reg_90 <= icmp_ln186_fu_79_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln186_fu_79_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_94 <= i_stream_V_TDATA;
    end
end

always @ (*) begin
    if ((icmp_ln186_fu_79_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln186_fu_79_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_stream_V_TDATA_blk_n = i_stream_V_TVALID;
    end else begin
        i_stream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln186_fu_79_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_stream_V_TREADY = 1'b1;
    end else begin
        i_stream_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln186_reg_90 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        main_sm_blk_n = main_sm_full_n;
    end else begin
        main_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln186_reg_90 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        main_sm_write = 1'b1;
    end else begin
        main_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((icmp_ln186_reg_90 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_blk_n = resi_i_sm_full_n;
    end else begin
        resi_i_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln186_reg_90 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_i_sm_write = 1'b1;
    end else begin
        resi_i_sm_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln186_fu_79_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln186_fu_79_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln186_fu_73_p2 = (indvar_flatten_reg_62 + 15'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln186_reg_90 == 1'd0) & (resi_i_sm_full_n == 1'b0)) | ((icmp_ln186_reg_90 == 1'd0) & (main_sm_full_n == 1'b0)))) | ((icmp_ln186_fu_79_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (i_stream_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln186_reg_90 == 1'd0) & (resi_i_sm_full_n == 1'b0)) | ((icmp_ln186_reg_90 == 1'd0) & (main_sm_full_n == 1'b0)))) | ((icmp_ln186_fu_79_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (i_stream_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln186_reg_90 == 1'd0) & (resi_i_sm_full_n == 1'b0)) | ((icmp_ln186_reg_90 == 1'd0) & (main_sm_full_n == 1'b0)))) | ((icmp_ln186_fu_79_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (i_stream_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln186_fu_79_p2 == 1'd0) & (i_stream_V_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln186_reg_90 == 1'd0) & (resi_i_sm_full_n == 1'b0)) | ((icmp_ln186_reg_90 == 1'd0) & (main_sm_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign icmp_ln186_fu_79_p2 = ((indvar_flatten_reg_62 == 15'd18816) ? 1'b1 : 1'b0);

assign main_sm_din = tmp_reg_94;

assign resi_i_sm_din = tmp_reg_94;

assign start_out = real_start;

endmodule //MLP0_stream_copy
// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module MLP0_stream_merge (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        resi_o_sm_dout,
        resi_o_sm_empty_n,
        resi_o_sm_read,
        m2_sm_dout,
        m2_sm_empty_n,
        m2_sm_read,
        o_stream_V_TDATA,
        o_stream_V_TVALID,
        o_stream_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] resi_o_sm_dout;
input   resi_o_sm_empty_n;
output   resi_o_sm_read;
input  [31:0] m2_sm_dout;
input   m2_sm_empty_n;
output   m2_sm_read;
output  [31:0] o_stream_V_TDATA;
output   o_stream_V_TVALID;
input   o_stream_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg resi_o_sm_read;
reg m2_sm_read;
reg o_stream_V_TVALID;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    resi_o_sm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln203_reg_206;
reg    m2_sm_blk_n;
reg    o_stream_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] icmp_ln203_reg_206_pp0_iter5_reg;
reg   [14:0] indvar_flatten_reg_85;
wire   [14:0] add_ln203_fu_96_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_state8_pp0_stage0_iter6;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln203_fu_102_p2;
reg   [0:0] icmp_ln203_reg_206_pp0_iter1_reg;
reg   [0:0] icmp_ln203_reg_206_pp0_iter2_reg;
reg   [0:0] icmp_ln203_reg_206_pp0_iter3_reg;
reg   [0:0] icmp_ln203_reg_206_pp0_iter4_reg;
wire   [14:0] lhs_fu_108_p1;
reg  signed [14:0] lhs_reg_210;
reg  signed [14:0] lhs_1_reg_215;
wire   [12:0] trunc_ln145_2_fu_122_p1;
reg   [12:0] trunc_ln145_2_reg_220;
reg   [12:0] trunc_ln145_2_reg_220_pp0_iter2_reg;
reg   [12:0] trunc_ln145_2_reg_220_pp0_iter3_reg;
reg   [12:0] trunc_ln145_2_reg_220_pp0_iter4_reg;
reg   [12:0] trunc_ln145_2_reg_220_pp0_iter5_reg;
reg   [12:0] trunc_ln145_1_reg_225;
reg   [12:0] trunc_ln145_1_reg_225_pp0_iter2_reg;
reg   [12:0] trunc_ln145_1_reg_225_pp0_iter3_reg;
reg   [12:0] trunc_ln145_1_reg_225_pp0_iter4_reg;
reg   [12:0] trunc_ln145_1_reg_225_pp0_iter5_reg;
reg   [12:0] trunc_ln_reg_240;
reg   [12:0] trunc_ln1497_1_reg_245;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_block_pp0_stage0_01001;
wire  signed [33:0] grp_fu_183_p3;
wire  signed [33:0] grp_fu_192_p3;
wire   [12:0] add_ln69_1_fu_164_p2;
wire   [12:0] add_ln69_fu_160_p2;
wire   [28:0] tmp_fu_168_p4;
wire   [20:0] grp_fu_183_p1;
wire   [21:0] grp_fu_183_p2;
wire   [20:0] grp_fu_192_p1;
wire   [21:0] grp_fu_192_p2;
reg    grp_fu_183_ce;
reg    grp_fu_192_ce;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
//#0 ap_done_reg = 1'b0;
//#0 ap_CS_fsm = 3'd1;
//#0 ap_enable_reg_pp0_iter1 = 1'b0;
//#0 ap_enable_reg_pp0_iter6 = 1'b0;
//#0 ap_enable_reg_pp0_iter0 = 1'b0;
//#0 ap_enable_reg_pp0_iter2 = 1'b0;
//#0 ap_enable_reg_pp0_iter3 = 1'b0;
//#0 ap_enable_reg_pp0_iter4 = 1'b0;
//#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

MLP0_mac_muladd_15s_21ns_22ns_34_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 34 ))
mac_muladd_15s_21ns_22ns_34_4_1_U1222(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(lhs_reg_210),
    .din1(grp_fu_183_p1),
    .din2(grp_fu_183_p2),
    .ce(grp_fu_183_ce),
    .dout(grp_fu_183_p3)
);

MLP0_mac_muladd_15s_21ns_22ns_34_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 34 ))
mac_muladd_15s_21ns_22ns_34_4_1_U1223(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(lhs_1_reg_215),
    .din1(grp_fu_192_p1),
    .din2(grp_fu_192_p2),
    .ce(grp_fu_192_ce),
    .dout(grp_fu_192_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln203_fu_102_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_85 <= add_ln203_fu_96_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_85 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln203_reg_206 <= icmp_ln203_fu_102_p2;
        icmp_ln203_reg_206_pp0_iter1_reg <= icmp_ln203_reg_206;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln203_reg_206_pp0_iter2_reg <= icmp_ln203_reg_206_pp0_iter1_reg;
        icmp_ln203_reg_206_pp0_iter3_reg <= icmp_ln203_reg_206_pp0_iter2_reg;
        icmp_ln203_reg_206_pp0_iter4_reg <= icmp_ln203_reg_206_pp0_iter3_reg;
        icmp_ln203_reg_206_pp0_iter5_reg <= icmp_ln203_reg_206_pp0_iter4_reg;
        trunc_ln145_1_reg_225_pp0_iter2_reg <= trunc_ln145_1_reg_225;
        trunc_ln145_1_reg_225_pp0_iter3_reg <= trunc_ln145_1_reg_225_pp0_iter2_reg;
        trunc_ln145_1_reg_225_pp0_iter4_reg <= trunc_ln145_1_reg_225_pp0_iter3_reg;
        trunc_ln145_1_reg_225_pp0_iter5_reg <= trunc_ln145_1_reg_225_pp0_iter4_reg;
        trunc_ln145_2_reg_220_pp0_iter2_reg <= trunc_ln145_2_reg_220;
        trunc_ln145_2_reg_220_pp0_iter3_reg <= trunc_ln145_2_reg_220_pp0_iter2_reg;
        trunc_ln145_2_reg_220_pp0_iter4_reg <= trunc_ln145_2_reg_220_pp0_iter3_reg;
        trunc_ln145_2_reg_220_pp0_iter5_reg <= trunc_ln145_2_reg_220_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln203_reg_206 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lhs_1_reg_215 <= {{resi_o_sm_dout[30:16]}};
        lhs_reg_210 <= lhs_fu_108_p1;
        trunc_ln145_1_reg_225 <= {{m2_sm_dout[28:16]}};
        trunc_ln145_2_reg_220 <= trunc_ln145_2_fu_122_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln203_reg_206_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln1497_1_reg_245 <= {{grp_fu_192_p3[33:21]}};
        trunc_ln_reg_240 <= {{grp_fu_183_p3[33:21]}};
    end
end

always @ (*) begin
    if ((icmp_ln203_fu_102_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_183_ce = 1'b1;
    end else begin
        grp_fu_183_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_192_ce = 1'b1;
    end else begin
        grp_fu_192_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_206 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m2_sm_blk_n = m2_sm_empty_n;
    end else begin
        m2_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_206 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m2_sm_read = 1'b1;
    end else begin
        m2_sm_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_206_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        o_stream_V_TDATA_blk_n = o_stream_V_TREADY;
    end else begin
        o_stream_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_206_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        o_stream_V_TVALID = 1'b1;
    end else begin
        o_stream_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_206 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_o_sm_blk_n = resi_o_sm_empty_n;
    end else begin
        resi_o_sm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_206 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        resi_o_sm_read = 1'b1;
    end else begin
        resi_o_sm_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln203_fu_102_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b0)) | ((icmp_ln203_fu_102_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln203_fu_96_p2 = (indvar_flatten_reg_85 + 15'd1);

assign add_ln69_1_fu_164_p2 = (trunc_ln1497_1_reg_245 + trunc_ln145_1_reg_225_pp0_iter5_reg);

assign add_ln69_fu_160_p2 = (trunc_ln_reg_240 + trunc_ln145_2_reg_220_pp0_iter5_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln203_reg_206_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (o_stream_V_TREADY == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln203_reg_206 == 1'd0) & (m2_sm_empty_n == 1'b0)) | ((icmp_ln203_reg_206 == 1'd0) & (resi_o_sm_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter6 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln203_reg_206_pp0_iter5_reg == 1'd0) & (o_stream_V_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln203_reg_206 == 1'd0) & (m2_sm_empty_n == 1'b0)) | ((icmp_ln203_reg_206 == 1'd0) & (resi_o_sm_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter6 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln203_reg_206_pp0_iter5_reg == 1'd0) & (o_stream_V_TREADY == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln203_reg_206 == 1'd0) & (m2_sm_empty_n == 1'b0)) | ((icmp_ln203_reg_206 == 1'd0) & (resi_o_sm_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln203_reg_206 == 1'd0) & (m2_sm_empty_n == 1'b0)) | ((icmp_ln203_reg_206 == 1'd0) & (resi_o_sm_empty_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((icmp_ln203_reg_206_pp0_iter5_reg == 1'd0) & (o_stream_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage0_iter6 = ((icmp_ln203_reg_206_pp0_iter5_reg == 1'd0) & (o_stream_V_TREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_183_p1 = 34'd887548;

assign grp_fu_183_p2 = 34'd1048576;

assign grp_fu_192_p1 = 34'd887548;

assign grp_fu_192_p2 = 34'd1048576;

assign icmp_ln203_fu_102_p2 = ((indvar_flatten_reg_85 == 15'd18816) ? 1'b1 : 1'b0);

assign lhs_fu_108_p1 = resi_o_sm_dout[14:0];

assign o_stream_V_TDATA = tmp_fu_168_p4;

assign tmp_fu_168_p4 = {{{add_ln69_1_fu_164_p2}, {3'd0}}, {add_ln69_fu_160_p2}};

assign trunc_ln145_2_fu_122_p1 = m2_sm_dout[12:0];

endmodule //MLP0_stream_merge
